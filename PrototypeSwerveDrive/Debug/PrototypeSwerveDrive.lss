
PrototypeSwerveDrive.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         000000c0  00800200  0000f65c  0000f6f0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000f65c  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000018  008002c0  008002c0  0000f7b0  2**0
                  ALLOC
  3 .stab         00002460  00000000  00000000  0000f7b0  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      000008a6  00000000  00000000  00011c10  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_aranges 00000020  00000000  00000000  000124b6  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_pubnames 000002b1  00000000  00000000  000124d6  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_info   000013a1  00000000  00000000  00012787  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 000003b4  00000000  00000000  00013b28  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   00003d4c  00000000  00000000  00013edc  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_frame  00000240  00000000  00000000  00017c28  2**2
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_str    0000070e  00000000  00000000  00017e68  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_loc    00002e16  00000000  00000000  00018576  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_pubtypes 00000071  00000000  00000000  0001b38c  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 72 00 	jmp	0xe4	; 0xe4 <__ctors_end>
       4:	0c 94 75 0a 	jmp	0x14ea	; 0x14ea <__vector_1>
       8:	0c 94 a0 0a 	jmp	0x1540	; 0x1540 <__vector_2>
       c:	0c 94 cb 0a 	jmp	0x1596	; 0x1596 <__vector_3>
      10:	0c 94 f6 0a 	jmp	0x15ec	; 0x15ec <__vector_4>
      14:	0c 94 21 0b 	jmp	0x1642	; 0x1642 <__vector_5>
      18:	0c 94 4c 0b 	jmp	0x1698	; 0x1698 <__vector_6>
      1c:	0c 94 77 0b 	jmp	0x16ee	; 0x16ee <__vector_7>
      20:	0c 94 a2 0b 	jmp	0x1744	; 0x1744 <__vector_8>
      24:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      28:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      2c:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      30:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      34:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      38:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      3c:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      40:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      44:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      48:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      4c:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      50:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      54:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      58:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      5c:	0c 94 31 08 	jmp	0x1062	; 0x1062 <__vector_23>
      60:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      64:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      68:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      6c:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      70:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      74:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      78:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      7c:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      80:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      84:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      88:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      8c:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      90:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      94:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      98:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      9c:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      a0:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      a4:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      a8:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      ac:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      b0:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      b4:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      b8:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      bc:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      c0:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      c4:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      c8:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      cc:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      d0:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      d4:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      d8:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      dc:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      e0:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>

000000e4 <__ctors_end>:
      e4:	11 24       	eor	r1, r1
      e6:	1f be       	out	0x3f, r1	; 63
      e8:	cf ef       	ldi	r28, 0xFF	; 255
      ea:	d1 e2       	ldi	r29, 0x21	; 33
      ec:	de bf       	out	0x3e, r29	; 62
      ee:	cd bf       	out	0x3d, r28	; 61
      f0:	00 e0       	ldi	r16, 0x00	; 0
      f2:	0c bf       	out	0x3c, r16	; 60

000000f4 <__do_copy_data>:
      f4:	12 e0       	ldi	r17, 0x02	; 2
      f6:	a0 e0       	ldi	r26, 0x00	; 0
      f8:	b2 e0       	ldi	r27, 0x02	; 2
      fa:	ec e5       	ldi	r30, 0x5C	; 92
      fc:	f6 ef       	ldi	r31, 0xF6	; 246
      fe:	00 e0       	ldi	r16, 0x00	; 0
     100:	0b bf       	out	0x3b, r16	; 59
     102:	02 c0       	rjmp	.+4      	; 0x108 <__do_copy_data+0x14>
     104:	07 90       	elpm	r0, Z+
     106:	0d 92       	st	X+, r0
     108:	a0 3c       	cpi	r26, 0xC0	; 192
     10a:	b1 07       	cpc	r27, r17
     10c:	d9 f7       	brne	.-10     	; 0x104 <__do_copy_data+0x10>

0000010e <__do_clear_bss>:
     10e:	12 e0       	ldi	r17, 0x02	; 2
     110:	a0 ec       	ldi	r26, 0xC0	; 192
     112:	b2 e0       	ldi	r27, 0x02	; 2
     114:	01 c0       	rjmp	.+2      	; 0x118 <.do_clear_bss_start>

00000116 <.do_clear_bss_loop>:
     116:	1d 92       	st	X+, r1

00000118 <.do_clear_bss_start>:
     118:	a8 3d       	cpi	r26, 0xD8	; 216
     11a:	b1 07       	cpc	r27, r17
     11c:	e1 f7       	brne	.-8      	; 0x116 <.do_clear_bss_loop>
     11e:	0e 94 e5 78 	call	0xf1ca	; 0xf1ca <main>
     122:	0c 94 2c 7b 	jmp	0xf658	; 0xf658 <_exit>

00000126 <__bad_interrupt>:
     126:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000012a <_Z7pinModehh>:
//Functions:

void pinMode(uint8_t pInno,uint8_t mOde)
{
	int l;
  	if(mOde==0)
     12a:	66 23       	and	r22, r22
     12c:	09 f0       	breq	.+2      	; 0x130 <_Z7pinModehh+0x6>
     12e:	b8 c0       	rjmp	.+368    	; 0x2a0 <_Z7pinModehh+0x176>
    { 
    	switch(d[pInno]){
     130:	90 e0       	ldi	r25, 0x00	; 0
     132:	fc 01       	movw	r30, r24
     134:	e8 58       	subi	r30, 0x88	; 136
     136:	fd 4f       	sbci	r31, 0xFD	; 253
     138:	20 81       	ld	r18, Z
     13a:	25 36       	cpi	r18, 0x65	; 101
     13c:	09 f4       	brne	.+2      	; 0x140 <_Z7pinModehh+0x16>
     13e:	50 c0       	rjmp	.+160    	; 0x1e0 <_Z7pinModehh+0xb6>
     140:	26 36       	cpi	r18, 0x66	; 102
     142:	40 f4       	brcc	.+16     	; 0x154 <_Z7pinModehh+0x2a>
     144:	23 36       	cpi	r18, 0x63	; 99
     146:	41 f1       	breq	.+80     	; 0x198 <_Z7pinModehh+0x6e>
     148:	24 36       	cpi	r18, 0x64	; 100
     14a:	c0 f5       	brcc	.+112    	; 0x1bc <_Z7pinModehh+0x92>
     14c:	22 36       	cpi	r18, 0x62	; 98
     14e:	09 f0       	breq	.+2      	; 0x152 <_Z7pinModehh+0x28>
     150:	5e c1       	rjmp	.+700    	; 0x40e <_Z7pinModehh+0x2e4>
     152:	10 c0       	rjmp	.+32     	; 0x174 <_Z7pinModehh+0x4a>
     154:	28 36       	cpi	r18, 0x68	; 104
     156:	09 f4       	brne	.+2      	; 0x15a <_Z7pinModehh+0x30>
     158:	67 c0       	rjmp	.+206    	; 0x228 <_Z7pinModehh+0xfe>
     15a:	29 36       	cpi	r18, 0x69	; 105
     15c:	20 f4       	brcc	.+8      	; 0x166 <_Z7pinModehh+0x3c>
     15e:	27 36       	cpi	r18, 0x67	; 103
     160:	09 f0       	breq	.+2      	; 0x164 <_Z7pinModehh+0x3a>
     162:	55 c1       	rjmp	.+682    	; 0x40e <_Z7pinModehh+0x2e4>
     164:	4f c0       	rjmp	.+158    	; 0x204 <_Z7pinModehh+0xda>
     166:	2a 36       	cpi	r18, 0x6A	; 106
     168:	09 f4       	brne	.+2      	; 0x16c <_Z7pinModehh+0x42>
     16a:	72 c0       	rjmp	.+228    	; 0x250 <_Z7pinModehh+0x126>
     16c:	2c 36       	cpi	r18, 0x6C	; 108
     16e:	09 f0       	breq	.+2      	; 0x172 <_Z7pinModehh+0x48>
     170:	4e c1       	rjmp	.+668    	; 0x40e <_Z7pinModehh+0x2e4>
     172:	82 c0       	rjmp	.+260    	; 0x278 <_Z7pinModehh+0x14e>
 
          	case'b':
                  DDRB&=~(1<<c[pInno]);
     174:	24 b1       	in	r18, 0x04	; 4
     176:	fc 01       	movw	r30, r24
     178:	ee 0f       	add	r30, r30
     17a:	ff 1f       	adc	r31, r31
     17c:	e0 50       	subi	r30, 0x00	; 0
     17e:	fe 4f       	sbci	r31, 0xFE	; 254
     180:	81 e0       	ldi	r24, 0x01	; 1
     182:	90 e0       	ldi	r25, 0x00	; 0
     184:	00 80       	ld	r0, Z
     186:	02 c0       	rjmp	.+4      	; 0x18c <_Z7pinModehh+0x62>
     188:	88 0f       	add	r24, r24
     18a:	99 1f       	adc	r25, r25
     18c:	0a 94       	dec	r0
     18e:	e2 f7       	brpl	.-8      	; 0x188 <_Z7pinModehh+0x5e>
     190:	80 95       	com	r24
     192:	82 23       	and	r24, r18
     194:	84 b9       	out	0x04, r24	; 4
		           break;
     196:	08 95       	ret
          	case'c':
                 DDRC&=~(1<<c[pInno]);
     198:	27 b1       	in	r18, 0x07	; 7
     19a:	fc 01       	movw	r30, r24
     19c:	ee 0f       	add	r30, r30
     19e:	ff 1f       	adc	r31, r31
     1a0:	e0 50       	subi	r30, 0x00	; 0
     1a2:	fe 4f       	sbci	r31, 0xFE	; 254
     1a4:	81 e0       	ldi	r24, 0x01	; 1
     1a6:	90 e0       	ldi	r25, 0x00	; 0
     1a8:	00 80       	ld	r0, Z
     1aa:	02 c0       	rjmp	.+4      	; 0x1b0 <_Z7pinModehh+0x86>
     1ac:	88 0f       	add	r24, r24
     1ae:	99 1f       	adc	r25, r25
     1b0:	0a 94       	dec	r0
     1b2:	e2 f7       	brpl	.-8      	; 0x1ac <_Z7pinModehh+0x82>
     1b4:	80 95       	com	r24
     1b6:	82 23       	and	r24, r18
     1b8:	87 b9       	out	0x07, r24	; 7
		          break;
     1ba:	08 95       	ret
          	case'd':
                 DDRD&=~(1<<c[pInno]);
     1bc:	2a b1       	in	r18, 0x0a	; 10
     1be:	fc 01       	movw	r30, r24
     1c0:	ee 0f       	add	r30, r30
     1c2:	ff 1f       	adc	r31, r31
     1c4:	e0 50       	subi	r30, 0x00	; 0
     1c6:	fe 4f       	sbci	r31, 0xFE	; 254
     1c8:	81 e0       	ldi	r24, 0x01	; 1
     1ca:	90 e0       	ldi	r25, 0x00	; 0
     1cc:	00 80       	ld	r0, Z
     1ce:	02 c0       	rjmp	.+4      	; 0x1d4 <_Z7pinModehh+0xaa>
     1d0:	88 0f       	add	r24, r24
     1d2:	99 1f       	adc	r25, r25
     1d4:	0a 94       	dec	r0
     1d6:	e2 f7       	brpl	.-8      	; 0x1d0 <_Z7pinModehh+0xa6>
     1d8:	80 95       	com	r24
     1da:	82 23       	and	r24, r18
     1dc:	8a b9       	out	0x0a, r24	; 10
		          break;
     1de:	08 95       	ret
	      	case'e':
                  DDRE&=~(1<<c[pInno]);
     1e0:	2d b1       	in	r18, 0x0d	; 13
     1e2:	fc 01       	movw	r30, r24
     1e4:	ee 0f       	add	r30, r30
     1e6:	ff 1f       	adc	r31, r31
     1e8:	e0 50       	subi	r30, 0x00	; 0
     1ea:	fe 4f       	sbci	r31, 0xFE	; 254
     1ec:	81 e0       	ldi	r24, 0x01	; 1
     1ee:	90 e0       	ldi	r25, 0x00	; 0
     1f0:	00 80       	ld	r0, Z
     1f2:	02 c0       	rjmp	.+4      	; 0x1f8 <_Z7pinModehh+0xce>
     1f4:	88 0f       	add	r24, r24
     1f6:	99 1f       	adc	r25, r25
     1f8:	0a 94       	dec	r0
     1fa:	e2 f7       	brpl	.-8      	; 0x1f4 <_Z7pinModehh+0xca>
     1fc:	80 95       	com	r24
     1fe:	82 23       	and	r24, r18
     200:	8d b9       	out	0x0d, r24	; 13
		           break;
     202:	08 95       	ret
		    case'g':
                  DDRG&=~(1<<c[pInno]);
     204:	23 b3       	in	r18, 0x13	; 19
     206:	fc 01       	movw	r30, r24
     208:	ee 0f       	add	r30, r30
     20a:	ff 1f       	adc	r31, r31
     20c:	e0 50       	subi	r30, 0x00	; 0
     20e:	fe 4f       	sbci	r31, 0xFE	; 254
     210:	81 e0       	ldi	r24, 0x01	; 1
     212:	90 e0       	ldi	r25, 0x00	; 0
     214:	00 80       	ld	r0, Z
     216:	02 c0       	rjmp	.+4      	; 0x21c <_Z7pinModehh+0xf2>
     218:	88 0f       	add	r24, r24
     21a:	99 1f       	adc	r25, r25
     21c:	0a 94       	dec	r0
     21e:	e2 f7       	brpl	.-8      	; 0x218 <_Z7pinModehh+0xee>
     220:	80 95       	com	r24
     222:	82 23       	and	r24, r18
     224:	83 bb       	out	0x13, r24	; 19
		           break;
     226:	08 95       	ret
			case'h':
                  DDRH&=~(1<<c[pInno]);
     228:	e1 e0       	ldi	r30, 0x01	; 1
     22a:	f1 e0       	ldi	r31, 0x01	; 1
     22c:	20 81       	ld	r18, Z
     22e:	dc 01       	movw	r26, r24
     230:	aa 0f       	add	r26, r26
     232:	bb 1f       	adc	r27, r27
     234:	a0 50       	subi	r26, 0x00	; 0
     236:	be 4f       	sbci	r27, 0xFE	; 254
     238:	81 e0       	ldi	r24, 0x01	; 1
     23a:	90 e0       	ldi	r25, 0x00	; 0
     23c:	0c 90       	ld	r0, X
     23e:	02 c0       	rjmp	.+4      	; 0x244 <_Z7pinModehh+0x11a>
     240:	88 0f       	add	r24, r24
     242:	99 1f       	adc	r25, r25
     244:	0a 94       	dec	r0
     246:	e2 f7       	brpl	.-8      	; 0x240 <_Z7pinModehh+0x116>
     248:	80 95       	com	r24
     24a:	82 23       	and	r24, r18
     24c:	80 83       	st	Z, r24
				  break;
     24e:	08 95       	ret
		    case'j':
                  DDRJ&=~(1<<c[pInno]);
     250:	e4 e0       	ldi	r30, 0x04	; 4
     252:	f1 e0       	ldi	r31, 0x01	; 1
     254:	20 81       	ld	r18, Z
     256:	dc 01       	movw	r26, r24
     258:	aa 0f       	add	r26, r26
     25a:	bb 1f       	adc	r27, r27
     25c:	a0 50       	subi	r26, 0x00	; 0
     25e:	be 4f       	sbci	r27, 0xFE	; 254
     260:	81 e0       	ldi	r24, 0x01	; 1
     262:	90 e0       	ldi	r25, 0x00	; 0
     264:	0c 90       	ld	r0, X
     266:	02 c0       	rjmp	.+4      	; 0x26c <_Z7pinModehh+0x142>
     268:	88 0f       	add	r24, r24
     26a:	99 1f       	adc	r25, r25
     26c:	0a 94       	dec	r0
     26e:	e2 f7       	brpl	.-8      	; 0x268 <_Z7pinModehh+0x13e>
     270:	80 95       	com	r24
     272:	82 23       	and	r24, r18
     274:	80 83       	st	Z, r24
		          break;
     276:	08 95       	ret
			case'l':
                  DDRL&=~(1<<c[pInno]);
     278:	ea e0       	ldi	r30, 0x0A	; 10
     27a:	f1 e0       	ldi	r31, 0x01	; 1
     27c:	20 81       	ld	r18, Z
     27e:	dc 01       	movw	r26, r24
     280:	aa 0f       	add	r26, r26
     282:	bb 1f       	adc	r27, r27
     284:	a0 50       	subi	r26, 0x00	; 0
     286:	be 4f       	sbci	r27, 0xFE	; 254
     288:	81 e0       	ldi	r24, 0x01	; 1
     28a:	90 e0       	ldi	r25, 0x00	; 0
     28c:	0c 90       	ld	r0, X
     28e:	02 c0       	rjmp	.+4      	; 0x294 <_Z7pinModehh+0x16a>
     290:	88 0f       	add	r24, r24
     292:	99 1f       	adc	r25, r25
     294:	0a 94       	dec	r0
     296:	e2 f7       	brpl	.-8      	; 0x290 <_Z7pinModehh+0x166>
     298:	80 95       	com	r24
     29a:	82 23       	and	r24, r18
     29c:	80 83       	st	Z, r24
		          break;	        		   		   	  	  		 		 			 
     29e:	08 95       	ret
     	}  
	}
	else{          
			switch(d[pInno])
     2a0:	90 e0       	ldi	r25, 0x00	; 0
     2a2:	fc 01       	movw	r30, r24
     2a4:	e8 58       	subi	r30, 0x88	; 136
     2a6:	fd 4f       	sbci	r31, 0xFD	; 253
     2a8:	20 81       	ld	r18, Z
     2aa:	25 36       	cpi	r18, 0x65	; 101
     2ac:	09 f4       	brne	.+2      	; 0x2b0 <_Z7pinModehh+0x186>
     2ae:	50 c0       	rjmp	.+160    	; 0x350 <_Z7pinModehh+0x226>
     2b0:	26 36       	cpi	r18, 0x66	; 102
     2b2:	40 f4       	brcc	.+16     	; 0x2c4 <_Z7pinModehh+0x19a>
     2b4:	23 36       	cpi	r18, 0x63	; 99
     2b6:	41 f1       	breq	.+80     	; 0x308 <_Z7pinModehh+0x1de>
     2b8:	24 36       	cpi	r18, 0x64	; 100
     2ba:	c0 f5       	brcc	.+112    	; 0x32c <_Z7pinModehh+0x202>
     2bc:	22 36       	cpi	r18, 0x62	; 98
     2be:	09 f0       	breq	.+2      	; 0x2c2 <_Z7pinModehh+0x198>
     2c0:	a6 c0       	rjmp	.+332    	; 0x40e <_Z7pinModehh+0x2e4>
     2c2:	10 c0       	rjmp	.+32     	; 0x2e4 <_Z7pinModehh+0x1ba>
     2c4:	28 36       	cpi	r18, 0x68	; 104
     2c6:	09 f4       	brne	.+2      	; 0x2ca <_Z7pinModehh+0x1a0>
     2c8:	67 c0       	rjmp	.+206    	; 0x398 <_Z7pinModehh+0x26e>
     2ca:	29 36       	cpi	r18, 0x69	; 105
     2cc:	20 f4       	brcc	.+8      	; 0x2d6 <_Z7pinModehh+0x1ac>
     2ce:	27 36       	cpi	r18, 0x67	; 103
     2d0:	09 f0       	breq	.+2      	; 0x2d4 <_Z7pinModehh+0x1aa>
     2d2:	9d c0       	rjmp	.+314    	; 0x40e <_Z7pinModehh+0x2e4>
     2d4:	4f c0       	rjmp	.+158    	; 0x374 <_Z7pinModehh+0x24a>
     2d6:	2a 36       	cpi	r18, 0x6A	; 106
     2d8:	09 f4       	brne	.+2      	; 0x2dc <_Z7pinModehh+0x1b2>
     2da:	72 c0       	rjmp	.+228    	; 0x3c0 <_Z7pinModehh+0x296>
     2dc:	2c 36       	cpi	r18, 0x6C	; 108
     2de:	09 f0       	breq	.+2      	; 0x2e2 <_Z7pinModehh+0x1b8>
     2e0:	96 c0       	rjmp	.+300    	; 0x40e <_Z7pinModehh+0x2e4>
     2e2:	82 c0       	rjmp	.+260    	; 0x3e8 <_Z7pinModehh+0x2be>
         	{
	 
	        	case'b':
	            	DDRB|=(1<<c[pInno]);
     2e4:	44 b1       	in	r20, 0x04	; 4
     2e6:	fc 01       	movw	r30, r24
     2e8:	ee 0f       	add	r30, r30
     2ea:	ff 1f       	adc	r31, r31
     2ec:	e0 50       	subi	r30, 0x00	; 0
     2ee:	fe 4f       	sbci	r31, 0xFE	; 254
     2f0:	21 e0       	ldi	r18, 0x01	; 1
     2f2:	30 e0       	ldi	r19, 0x00	; 0
     2f4:	c9 01       	movw	r24, r18
     2f6:	00 80       	ld	r0, Z
     2f8:	02 c0       	rjmp	.+4      	; 0x2fe <_Z7pinModehh+0x1d4>
     2fa:	88 0f       	add	r24, r24
     2fc:	99 1f       	adc	r25, r25
     2fe:	0a 94       	dec	r0
     300:	e2 f7       	brpl	.-8      	; 0x2fa <_Z7pinModehh+0x1d0>
     302:	84 2b       	or	r24, r20
     304:	84 b9       	out	0x04, r24	; 4
			    	break;
     306:	08 95       	ret
	          	case'c':
	                DDRC|=(1<<c[pInno]);
     308:	47 b1       	in	r20, 0x07	; 7
     30a:	fc 01       	movw	r30, r24
     30c:	ee 0f       	add	r30, r30
     30e:	ff 1f       	adc	r31, r31
     310:	e0 50       	subi	r30, 0x00	; 0
     312:	fe 4f       	sbci	r31, 0xFE	; 254
     314:	21 e0       	ldi	r18, 0x01	; 1
     316:	30 e0       	ldi	r19, 0x00	; 0
     318:	c9 01       	movw	r24, r18
     31a:	00 80       	ld	r0, Z
     31c:	02 c0       	rjmp	.+4      	; 0x322 <_Z7pinModehh+0x1f8>
     31e:	88 0f       	add	r24, r24
     320:	99 1f       	adc	r25, r25
     322:	0a 94       	dec	r0
     324:	e2 f7       	brpl	.-8      	; 0x31e <_Z7pinModehh+0x1f4>
     326:	84 2b       	or	r24, r20
     328:	87 b9       	out	0x07, r24	; 7
			        break;
     32a:	08 95       	ret
	          	case'd':
	                DDRD|=(1<<c[pInno]);
     32c:	4a b1       	in	r20, 0x0a	; 10
     32e:	fc 01       	movw	r30, r24
     330:	ee 0f       	add	r30, r30
     332:	ff 1f       	adc	r31, r31
     334:	e0 50       	subi	r30, 0x00	; 0
     336:	fe 4f       	sbci	r31, 0xFE	; 254
     338:	21 e0       	ldi	r18, 0x01	; 1
     33a:	30 e0       	ldi	r19, 0x00	; 0
     33c:	c9 01       	movw	r24, r18
     33e:	00 80       	ld	r0, Z
     340:	02 c0       	rjmp	.+4      	; 0x346 <_Z7pinModehh+0x21c>
     342:	88 0f       	add	r24, r24
     344:	99 1f       	adc	r25, r25
     346:	0a 94       	dec	r0
     348:	e2 f7       	brpl	.-8      	; 0x342 <_Z7pinModehh+0x218>
     34a:	84 2b       	or	r24, r20
     34c:	8a b9       	out	0x0a, r24	; 10
			        break;
     34e:	08 95       	ret
		      	case'e':
	                DDRE|=(1<<c[pInno]);
     350:	4d b1       	in	r20, 0x0d	; 13
     352:	fc 01       	movw	r30, r24
     354:	ee 0f       	add	r30, r30
     356:	ff 1f       	adc	r31, r31
     358:	e0 50       	subi	r30, 0x00	; 0
     35a:	fe 4f       	sbci	r31, 0xFE	; 254
     35c:	21 e0       	ldi	r18, 0x01	; 1
     35e:	30 e0       	ldi	r19, 0x00	; 0
     360:	c9 01       	movw	r24, r18
     362:	00 80       	ld	r0, Z
     364:	02 c0       	rjmp	.+4      	; 0x36a <_Z7pinModehh+0x240>
     366:	88 0f       	add	r24, r24
     368:	99 1f       	adc	r25, r25
     36a:	0a 94       	dec	r0
     36c:	e2 f7       	brpl	.-8      	; 0x366 <_Z7pinModehh+0x23c>
     36e:	84 2b       	or	r24, r20
     370:	8d b9       	out	0x0d, r24	; 13
			        break;
     372:	08 95       	ret
			    case'g':
	                DDRG|=(1<<c[pInno]);
     374:	43 b3       	in	r20, 0x13	; 19
     376:	fc 01       	movw	r30, r24
     378:	ee 0f       	add	r30, r30
     37a:	ff 1f       	adc	r31, r31
     37c:	e0 50       	subi	r30, 0x00	; 0
     37e:	fe 4f       	sbci	r31, 0xFE	; 254
     380:	21 e0       	ldi	r18, 0x01	; 1
     382:	30 e0       	ldi	r19, 0x00	; 0
     384:	c9 01       	movw	r24, r18
     386:	00 80       	ld	r0, Z
     388:	02 c0       	rjmp	.+4      	; 0x38e <_Z7pinModehh+0x264>
     38a:	88 0f       	add	r24, r24
     38c:	99 1f       	adc	r25, r25
     38e:	0a 94       	dec	r0
     390:	e2 f7       	brpl	.-8      	; 0x38a <_Z7pinModehh+0x260>
     392:	84 2b       	or	r24, r20
     394:	83 bb       	out	0x13, r24	; 19
			        break;
     396:	08 95       	ret
			 	case'h':
	                DDRH|=(1<<c[pInno]);
     398:	e1 e0       	ldi	r30, 0x01	; 1
     39a:	f1 e0       	ldi	r31, 0x01	; 1
     39c:	40 81       	ld	r20, Z
     39e:	dc 01       	movw	r26, r24
     3a0:	aa 0f       	add	r26, r26
     3a2:	bb 1f       	adc	r27, r27
     3a4:	a0 50       	subi	r26, 0x00	; 0
     3a6:	be 4f       	sbci	r27, 0xFE	; 254
     3a8:	21 e0       	ldi	r18, 0x01	; 1
     3aa:	30 e0       	ldi	r19, 0x00	; 0
     3ac:	c9 01       	movw	r24, r18
     3ae:	0c 90       	ld	r0, X
     3b0:	02 c0       	rjmp	.+4      	; 0x3b6 <_Z7pinModehh+0x28c>
     3b2:	88 0f       	add	r24, r24
     3b4:	99 1f       	adc	r25, r25
     3b6:	0a 94       	dec	r0
     3b8:	e2 f7       	brpl	.-8      	; 0x3b2 <_Z7pinModehh+0x288>
     3ba:	84 2b       	or	r24, r20
     3bc:	80 83       	st	Z, r24
			        break;
     3be:	08 95       	ret
			    case'j':
	                DDRJ|=(1<<c[pInno]);
     3c0:	e4 e0       	ldi	r30, 0x04	; 4
     3c2:	f1 e0       	ldi	r31, 0x01	; 1
     3c4:	40 81       	ld	r20, Z
     3c6:	dc 01       	movw	r26, r24
     3c8:	aa 0f       	add	r26, r26
     3ca:	bb 1f       	adc	r27, r27
     3cc:	a0 50       	subi	r26, 0x00	; 0
     3ce:	be 4f       	sbci	r27, 0xFE	; 254
     3d0:	21 e0       	ldi	r18, 0x01	; 1
     3d2:	30 e0       	ldi	r19, 0x00	; 0
     3d4:	c9 01       	movw	r24, r18
     3d6:	0c 90       	ld	r0, X
     3d8:	02 c0       	rjmp	.+4      	; 0x3de <_Z7pinModehh+0x2b4>
     3da:	88 0f       	add	r24, r24
     3dc:	99 1f       	adc	r25, r25
     3de:	0a 94       	dec	r0
     3e0:	e2 f7       	brpl	.-8      	; 0x3da <_Z7pinModehh+0x2b0>
     3e2:	84 2b       	or	r24, r20
     3e4:	80 83       	st	Z, r24
			        break;
     3e6:	08 95       	ret
				case'l':
	                DDRL|=(1<<c[pInno]);
     3e8:	ea e0       	ldi	r30, 0x0A	; 10
     3ea:	f1 e0       	ldi	r31, 0x01	; 1
     3ec:	40 81       	ld	r20, Z
     3ee:	dc 01       	movw	r26, r24
     3f0:	aa 0f       	add	r26, r26
     3f2:	bb 1f       	adc	r27, r27
     3f4:	a0 50       	subi	r26, 0x00	; 0
     3f6:	be 4f       	sbci	r27, 0xFE	; 254
     3f8:	21 e0       	ldi	r18, 0x01	; 1
     3fa:	30 e0       	ldi	r19, 0x00	; 0
     3fc:	c9 01       	movw	r24, r18
     3fe:	0c 90       	ld	r0, X
     400:	02 c0       	rjmp	.+4      	; 0x406 <_Z7pinModehh+0x2dc>
     402:	88 0f       	add	r24, r24
     404:	99 1f       	adc	r25, r25
     406:	0a 94       	dec	r0
     408:	e2 f7       	brpl	.-8      	; 0x402 <_Z7pinModehh+0x2d8>
     40a:	84 2b       	or	r24, r20
     40c:	80 83       	st	Z, r24
     40e:	08 95       	ret

00000410 <_Z12digitalWritehh>:
	}
}

void digitalWrite (uint8_t pInno ,uint8_t mOde)		 
{
   if(mOde==0)
     410:	66 23       	and	r22, r22
     412:	09 f0       	breq	.+2      	; 0x416 <_Z12digitalWritehh+0x6>
     414:	b8 c0       	rjmp	.+368    	; 0x586 <_Z12digitalWritehh+0x176>
        { switch(d[pInno])
     416:	90 e0       	ldi	r25, 0x00	; 0
     418:	fc 01       	movw	r30, r24
     41a:	e8 58       	subi	r30, 0x88	; 136
     41c:	fd 4f       	sbci	r31, 0xFD	; 253
     41e:	20 81       	ld	r18, Z
     420:	25 36       	cpi	r18, 0x65	; 101
     422:	09 f4       	brne	.+2      	; 0x426 <_Z12digitalWritehh+0x16>
     424:	50 c0       	rjmp	.+160    	; 0x4c6 <_Z12digitalWritehh+0xb6>
     426:	26 36       	cpi	r18, 0x66	; 102
     428:	40 f4       	brcc	.+16     	; 0x43a <_Z12digitalWritehh+0x2a>
     42a:	23 36       	cpi	r18, 0x63	; 99
     42c:	41 f1       	breq	.+80     	; 0x47e <_Z12digitalWritehh+0x6e>
     42e:	24 36       	cpi	r18, 0x64	; 100
     430:	c0 f5       	brcc	.+112    	; 0x4a2 <_Z12digitalWritehh+0x92>
     432:	22 36       	cpi	r18, 0x62	; 98
     434:	09 f0       	breq	.+2      	; 0x438 <_Z12digitalWritehh+0x28>
     436:	5e c1       	rjmp	.+700    	; 0x6f4 <_Z12digitalWritehh+0x2e4>
     438:	10 c0       	rjmp	.+32     	; 0x45a <_Z12digitalWritehh+0x4a>
     43a:	28 36       	cpi	r18, 0x68	; 104
     43c:	09 f4       	brne	.+2      	; 0x440 <_Z12digitalWritehh+0x30>
     43e:	67 c0       	rjmp	.+206    	; 0x50e <_Z12digitalWritehh+0xfe>
     440:	29 36       	cpi	r18, 0x69	; 105
     442:	20 f4       	brcc	.+8      	; 0x44c <_Z12digitalWritehh+0x3c>
     444:	27 36       	cpi	r18, 0x67	; 103
     446:	09 f0       	breq	.+2      	; 0x44a <_Z12digitalWritehh+0x3a>
     448:	55 c1       	rjmp	.+682    	; 0x6f4 <_Z12digitalWritehh+0x2e4>
     44a:	4f c0       	rjmp	.+158    	; 0x4ea <_Z12digitalWritehh+0xda>
     44c:	2a 36       	cpi	r18, 0x6A	; 106
     44e:	09 f4       	brne	.+2      	; 0x452 <_Z12digitalWritehh+0x42>
     450:	72 c0       	rjmp	.+228    	; 0x536 <_Z12digitalWritehh+0x126>
     452:	2c 36       	cpi	r18, 0x6C	; 108
     454:	09 f0       	breq	.+2      	; 0x458 <_Z12digitalWritehh+0x48>
     456:	4e c1       	rjmp	.+668    	; 0x6f4 <_Z12digitalWritehh+0x2e4>
     458:	82 c0       	rjmp	.+260    	; 0x55e <_Z12digitalWritehh+0x14e>
         {
	 
	          case'b':
	                  PORTB&=~(1<<c[pInno]);
     45a:	25 b1       	in	r18, 0x05	; 5
     45c:	fc 01       	movw	r30, r24
     45e:	ee 0f       	add	r30, r30
     460:	ff 1f       	adc	r31, r31
     462:	e0 50       	subi	r30, 0x00	; 0
     464:	fe 4f       	sbci	r31, 0xFE	; 254
     466:	81 e0       	ldi	r24, 0x01	; 1
     468:	90 e0       	ldi	r25, 0x00	; 0
     46a:	00 80       	ld	r0, Z
     46c:	02 c0       	rjmp	.+4      	; 0x472 <_Z12digitalWritehh+0x62>
     46e:	88 0f       	add	r24, r24
     470:	99 1f       	adc	r25, r25
     472:	0a 94       	dec	r0
     474:	e2 f7       	brpl	.-8      	; 0x46e <_Z12digitalWritehh+0x5e>
     476:	80 95       	com	r24
     478:	82 23       	and	r24, r18
     47a:	85 b9       	out	0x05, r24	; 5
			           break;
     47c:	08 95       	ret
	          case'c':
	                 PORTB&=~(1<<c[pInno]);
     47e:	25 b1       	in	r18, 0x05	; 5
     480:	fc 01       	movw	r30, r24
     482:	ee 0f       	add	r30, r30
     484:	ff 1f       	adc	r31, r31
     486:	e0 50       	subi	r30, 0x00	; 0
     488:	fe 4f       	sbci	r31, 0xFE	; 254
     48a:	81 e0       	ldi	r24, 0x01	; 1
     48c:	90 e0       	ldi	r25, 0x00	; 0
     48e:	00 80       	ld	r0, Z
     490:	02 c0       	rjmp	.+4      	; 0x496 <_Z12digitalWritehh+0x86>
     492:	88 0f       	add	r24, r24
     494:	99 1f       	adc	r25, r25
     496:	0a 94       	dec	r0
     498:	e2 f7       	brpl	.-8      	; 0x492 <_Z12digitalWritehh+0x82>
     49a:	80 95       	com	r24
     49c:	82 23       	and	r24, r18
     49e:	85 b9       	out	0x05, r24	; 5
			          break;
     4a0:	08 95       	ret
	          case'd':
	                 PORTD&=~(1<<c[pInno]);
     4a2:	2b b1       	in	r18, 0x0b	; 11
     4a4:	fc 01       	movw	r30, r24
     4a6:	ee 0f       	add	r30, r30
     4a8:	ff 1f       	adc	r31, r31
     4aa:	e0 50       	subi	r30, 0x00	; 0
     4ac:	fe 4f       	sbci	r31, 0xFE	; 254
     4ae:	81 e0       	ldi	r24, 0x01	; 1
     4b0:	90 e0       	ldi	r25, 0x00	; 0
     4b2:	00 80       	ld	r0, Z
     4b4:	02 c0       	rjmp	.+4      	; 0x4ba <_Z12digitalWritehh+0xaa>
     4b6:	88 0f       	add	r24, r24
     4b8:	99 1f       	adc	r25, r25
     4ba:	0a 94       	dec	r0
     4bc:	e2 f7       	brpl	.-8      	; 0x4b6 <_Z12digitalWritehh+0xa6>
     4be:	80 95       	com	r24
     4c0:	82 23       	and	r24, r18
     4c2:	8b b9       	out	0x0b, r24	; 11
			          break;
     4c4:	08 95       	ret
				
		      case'e':
	                  PORTE&=~(1<<c[pInno]);
     4c6:	2e b1       	in	r18, 0x0e	; 14
     4c8:	fc 01       	movw	r30, r24
     4ca:	ee 0f       	add	r30, r30
     4cc:	ff 1f       	adc	r31, r31
     4ce:	e0 50       	subi	r30, 0x00	; 0
     4d0:	fe 4f       	sbci	r31, 0xFE	; 254
     4d2:	81 e0       	ldi	r24, 0x01	; 1
     4d4:	90 e0       	ldi	r25, 0x00	; 0
     4d6:	00 80       	ld	r0, Z
     4d8:	02 c0       	rjmp	.+4      	; 0x4de <_Z12digitalWritehh+0xce>
     4da:	88 0f       	add	r24, r24
     4dc:	99 1f       	adc	r25, r25
     4de:	0a 94       	dec	r0
     4e0:	e2 f7       	brpl	.-8      	; 0x4da <_Z12digitalWritehh+0xca>
     4e2:	80 95       	com	r24
     4e4:	82 23       	and	r24, r18
     4e6:	8e b9       	out	0x0e, r24	; 14
			           break;
     4e8:	08 95       	ret

			     case'g':
	                  PORTG&=~(1<<c[pInno]);
     4ea:	24 b3       	in	r18, 0x14	; 20
     4ec:	fc 01       	movw	r30, r24
     4ee:	ee 0f       	add	r30, r30
     4f0:	ff 1f       	adc	r31, r31
     4f2:	e0 50       	subi	r30, 0x00	; 0
     4f4:	fe 4f       	sbci	r31, 0xFE	; 254
     4f6:	81 e0       	ldi	r24, 0x01	; 1
     4f8:	90 e0       	ldi	r25, 0x00	; 0
     4fa:	00 80       	ld	r0, Z
     4fc:	02 c0       	rjmp	.+4      	; 0x502 <_Z12digitalWritehh+0xf2>
     4fe:	88 0f       	add	r24, r24
     500:	99 1f       	adc	r25, r25
     502:	0a 94       	dec	r0
     504:	e2 f7       	brpl	.-8      	; 0x4fe <_Z12digitalWritehh+0xee>
     506:	80 95       	com	r24
     508:	82 23       	and	r24, r18
     50a:	84 bb       	out	0x14, r24	; 20
			           break;
     50c:	08 95       	ret
			 case'h':
	                  PORTH&=~(1<<c[pInno]);
     50e:	e2 e0       	ldi	r30, 0x02	; 2
     510:	f1 e0       	ldi	r31, 0x01	; 1
     512:	20 81       	ld	r18, Z
     514:	dc 01       	movw	r26, r24
     516:	aa 0f       	add	r26, r26
     518:	bb 1f       	adc	r27, r27
     51a:	a0 50       	subi	r26, 0x00	; 0
     51c:	be 4f       	sbci	r27, 0xFE	; 254
     51e:	81 e0       	ldi	r24, 0x01	; 1
     520:	90 e0       	ldi	r25, 0x00	; 0
     522:	0c 90       	ld	r0, X
     524:	02 c0       	rjmp	.+4      	; 0x52a <_Z12digitalWritehh+0x11a>
     526:	88 0f       	add	r24, r24
     528:	99 1f       	adc	r25, r25
     52a:	0a 94       	dec	r0
     52c:	e2 f7       	brpl	.-8      	; 0x526 <_Z12digitalWritehh+0x116>
     52e:	80 95       	com	r24
     530:	82 23       	and	r24, r18
     532:	80 83       	st	Z, r24
			           break;
     534:	08 95       	ret
		     
			     case'j':
	                  PORTJ&=~(1<<c[pInno]);
     536:	e5 e0       	ldi	r30, 0x05	; 5
     538:	f1 e0       	ldi	r31, 0x01	; 1
     53a:	20 81       	ld	r18, Z
     53c:	dc 01       	movw	r26, r24
     53e:	aa 0f       	add	r26, r26
     540:	bb 1f       	adc	r27, r27
     542:	a0 50       	subi	r26, 0x00	; 0
     544:	be 4f       	sbci	r27, 0xFE	; 254
     546:	81 e0       	ldi	r24, 0x01	; 1
     548:	90 e0       	ldi	r25, 0x00	; 0
     54a:	0c 90       	ld	r0, X
     54c:	02 c0       	rjmp	.+4      	; 0x552 <_Z12digitalWritehh+0x142>
     54e:	88 0f       	add	r24, r24
     550:	99 1f       	adc	r25, r25
     552:	0a 94       	dec	r0
     554:	e2 f7       	brpl	.-8      	; 0x54e <_Z12digitalWritehh+0x13e>
     556:	80 95       	com	r24
     558:	82 23       	and	r24, r18
     55a:	80 83       	st	Z, r24
			           break;
     55c:	08 95       	ret
				     case'l':
	                  PORTL&=~(1<<c[pInno]);
     55e:	eb e0       	ldi	r30, 0x0B	; 11
     560:	f1 e0       	ldi	r31, 0x01	; 1
     562:	20 81       	ld	r18, Z
     564:	dc 01       	movw	r26, r24
     566:	aa 0f       	add	r26, r26
     568:	bb 1f       	adc	r27, r27
     56a:	a0 50       	subi	r26, 0x00	; 0
     56c:	be 4f       	sbci	r27, 0xFE	; 254
     56e:	81 e0       	ldi	r24, 0x01	; 1
     570:	90 e0       	ldi	r25, 0x00	; 0
     572:	0c 90       	ld	r0, X
     574:	02 c0       	rjmp	.+4      	; 0x57a <_Z12digitalWritehh+0x16a>
     576:	88 0f       	add	r24, r24
     578:	99 1f       	adc	r25, r25
     57a:	0a 94       	dec	r0
     57c:	e2 f7       	brpl	.-8      	; 0x576 <_Z12digitalWritehh+0x166>
     57e:	80 95       	com	r24
     580:	82 23       	and	r24, r18
     582:	80 83       	st	Z, r24
			           break;	        		   		   	  	  		 		 			 
     584:	08 95       	ret
	     }  }
	else{          switch(d[pInno])
     586:	90 e0       	ldi	r25, 0x00	; 0
     588:	fc 01       	movw	r30, r24
     58a:	e8 58       	subi	r30, 0x88	; 136
     58c:	fd 4f       	sbci	r31, 0xFD	; 253
     58e:	20 81       	ld	r18, Z
     590:	25 36       	cpi	r18, 0x65	; 101
     592:	09 f4       	brne	.+2      	; 0x596 <_Z12digitalWritehh+0x186>
     594:	50 c0       	rjmp	.+160    	; 0x636 <_Z12digitalWritehh+0x226>
     596:	26 36       	cpi	r18, 0x66	; 102
     598:	40 f4       	brcc	.+16     	; 0x5aa <_Z12digitalWritehh+0x19a>
     59a:	23 36       	cpi	r18, 0x63	; 99
     59c:	41 f1       	breq	.+80     	; 0x5ee <_Z12digitalWritehh+0x1de>
     59e:	24 36       	cpi	r18, 0x64	; 100
     5a0:	c0 f5       	brcc	.+112    	; 0x612 <_Z12digitalWritehh+0x202>
     5a2:	22 36       	cpi	r18, 0x62	; 98
     5a4:	09 f0       	breq	.+2      	; 0x5a8 <_Z12digitalWritehh+0x198>
     5a6:	a6 c0       	rjmp	.+332    	; 0x6f4 <_Z12digitalWritehh+0x2e4>
     5a8:	10 c0       	rjmp	.+32     	; 0x5ca <_Z12digitalWritehh+0x1ba>
     5aa:	28 36       	cpi	r18, 0x68	; 104
     5ac:	09 f4       	brne	.+2      	; 0x5b0 <_Z12digitalWritehh+0x1a0>
     5ae:	67 c0       	rjmp	.+206    	; 0x67e <_Z12digitalWritehh+0x26e>
     5b0:	29 36       	cpi	r18, 0x69	; 105
     5b2:	20 f4       	brcc	.+8      	; 0x5bc <_Z12digitalWritehh+0x1ac>
     5b4:	27 36       	cpi	r18, 0x67	; 103
     5b6:	09 f0       	breq	.+2      	; 0x5ba <_Z12digitalWritehh+0x1aa>
     5b8:	9d c0       	rjmp	.+314    	; 0x6f4 <_Z12digitalWritehh+0x2e4>
     5ba:	4f c0       	rjmp	.+158    	; 0x65a <_Z12digitalWritehh+0x24a>
     5bc:	2a 36       	cpi	r18, 0x6A	; 106
     5be:	09 f4       	brne	.+2      	; 0x5c2 <_Z12digitalWritehh+0x1b2>
     5c0:	72 c0       	rjmp	.+228    	; 0x6a6 <_Z12digitalWritehh+0x296>
     5c2:	2c 36       	cpi	r18, 0x6C	; 108
     5c4:	09 f0       	breq	.+2      	; 0x5c8 <_Z12digitalWritehh+0x1b8>
     5c6:	96 c0       	rjmp	.+300    	; 0x6f4 <_Z12digitalWritehh+0x2e4>
     5c8:	82 c0       	rjmp	.+260    	; 0x6ce <_Z12digitalWritehh+0x2be>
         {
	 
	          case'b':
	                 PORTB|=(1<<c[pInno]);
     5ca:	45 b1       	in	r20, 0x05	; 5
     5cc:	fc 01       	movw	r30, r24
     5ce:	ee 0f       	add	r30, r30
     5d0:	ff 1f       	adc	r31, r31
     5d2:	e0 50       	subi	r30, 0x00	; 0
     5d4:	fe 4f       	sbci	r31, 0xFE	; 254
     5d6:	21 e0       	ldi	r18, 0x01	; 1
     5d8:	30 e0       	ldi	r19, 0x00	; 0
     5da:	c9 01       	movw	r24, r18
     5dc:	00 80       	ld	r0, Z
     5de:	02 c0       	rjmp	.+4      	; 0x5e4 <_Z12digitalWritehh+0x1d4>
     5e0:	88 0f       	add	r24, r24
     5e2:	99 1f       	adc	r25, r25
     5e4:	0a 94       	dec	r0
     5e6:	e2 f7       	brpl	.-8      	; 0x5e0 <_Z12digitalWritehh+0x1d0>
     5e8:	84 2b       	or	r24, r20
     5ea:	85 b9       	out	0x05, r24	; 5
			           break;
     5ec:	08 95       	ret
	          case'c':
	                 PORTC|=(1<<c[pInno]);
     5ee:	48 b1       	in	r20, 0x08	; 8
     5f0:	fc 01       	movw	r30, r24
     5f2:	ee 0f       	add	r30, r30
     5f4:	ff 1f       	adc	r31, r31
     5f6:	e0 50       	subi	r30, 0x00	; 0
     5f8:	fe 4f       	sbci	r31, 0xFE	; 254
     5fa:	21 e0       	ldi	r18, 0x01	; 1
     5fc:	30 e0       	ldi	r19, 0x00	; 0
     5fe:	c9 01       	movw	r24, r18
     600:	00 80       	ld	r0, Z
     602:	02 c0       	rjmp	.+4      	; 0x608 <_Z12digitalWritehh+0x1f8>
     604:	88 0f       	add	r24, r24
     606:	99 1f       	adc	r25, r25
     608:	0a 94       	dec	r0
     60a:	e2 f7       	brpl	.-8      	; 0x604 <_Z12digitalWritehh+0x1f4>
     60c:	84 2b       	or	r24, r20
     60e:	88 b9       	out	0x08, r24	; 8
			          break;
     610:	08 95       	ret
	          case'd':
	                 PORTD|=(1<<c[pInno]);
     612:	4b b1       	in	r20, 0x0b	; 11
     614:	fc 01       	movw	r30, r24
     616:	ee 0f       	add	r30, r30
     618:	ff 1f       	adc	r31, r31
     61a:	e0 50       	subi	r30, 0x00	; 0
     61c:	fe 4f       	sbci	r31, 0xFE	; 254
     61e:	21 e0       	ldi	r18, 0x01	; 1
     620:	30 e0       	ldi	r19, 0x00	; 0
     622:	c9 01       	movw	r24, r18
     624:	00 80       	ld	r0, Z
     626:	02 c0       	rjmp	.+4      	; 0x62c <_Z12digitalWritehh+0x21c>
     628:	88 0f       	add	r24, r24
     62a:	99 1f       	adc	r25, r25
     62c:	0a 94       	dec	r0
     62e:	e2 f7       	brpl	.-8      	; 0x628 <_Z12digitalWritehh+0x218>
     630:	84 2b       	or	r24, r20
     632:	8b b9       	out	0x0b, r24	; 11
			          break;
     634:	08 95       	ret
				    
		      case'e':
	                  PORTE|=(1<<c[pInno]);
     636:	4e b1       	in	r20, 0x0e	; 14
     638:	fc 01       	movw	r30, r24
     63a:	ee 0f       	add	r30, r30
     63c:	ff 1f       	adc	r31, r31
     63e:	e0 50       	subi	r30, 0x00	; 0
     640:	fe 4f       	sbci	r31, 0xFE	; 254
     642:	21 e0       	ldi	r18, 0x01	; 1
     644:	30 e0       	ldi	r19, 0x00	; 0
     646:	c9 01       	movw	r24, r18
     648:	00 80       	ld	r0, Z
     64a:	02 c0       	rjmp	.+4      	; 0x650 <_Z12digitalWritehh+0x240>
     64c:	88 0f       	add	r24, r24
     64e:	99 1f       	adc	r25, r25
     650:	0a 94       	dec	r0
     652:	e2 f7       	brpl	.-8      	; 0x64c <_Z12digitalWritehh+0x23c>
     654:	84 2b       	or	r24, r20
     656:	8e b9       	out	0x0e, r24	; 14
			           break;
     658:	08 95       	ret

			     case'g':
	                  PORTG|=(1<<c[pInno]);
     65a:	44 b3       	in	r20, 0x14	; 20
     65c:	fc 01       	movw	r30, r24
     65e:	ee 0f       	add	r30, r30
     660:	ff 1f       	adc	r31, r31
     662:	e0 50       	subi	r30, 0x00	; 0
     664:	fe 4f       	sbci	r31, 0xFE	; 254
     666:	21 e0       	ldi	r18, 0x01	; 1
     668:	30 e0       	ldi	r19, 0x00	; 0
     66a:	c9 01       	movw	r24, r18
     66c:	00 80       	ld	r0, Z
     66e:	02 c0       	rjmp	.+4      	; 0x674 <_Z12digitalWritehh+0x264>
     670:	88 0f       	add	r24, r24
     672:	99 1f       	adc	r25, r25
     674:	0a 94       	dec	r0
     676:	e2 f7       	brpl	.-8      	; 0x670 <_Z12digitalWritehh+0x260>
     678:	84 2b       	or	r24, r20
     67a:	84 bb       	out	0x14, r24	; 20
			           break;
     67c:	08 95       	ret
			 case'h':
	                  PORTH|=(1<<c[pInno]);
     67e:	e2 e0       	ldi	r30, 0x02	; 2
     680:	f1 e0       	ldi	r31, 0x01	; 1
     682:	40 81       	ld	r20, Z
     684:	dc 01       	movw	r26, r24
     686:	aa 0f       	add	r26, r26
     688:	bb 1f       	adc	r27, r27
     68a:	a0 50       	subi	r26, 0x00	; 0
     68c:	be 4f       	sbci	r27, 0xFE	; 254
     68e:	21 e0       	ldi	r18, 0x01	; 1
     690:	30 e0       	ldi	r19, 0x00	; 0
     692:	c9 01       	movw	r24, r18
     694:	0c 90       	ld	r0, X
     696:	02 c0       	rjmp	.+4      	; 0x69c <_Z12digitalWritehh+0x28c>
     698:	88 0f       	add	r24, r24
     69a:	99 1f       	adc	r25, r25
     69c:	0a 94       	dec	r0
     69e:	e2 f7       	brpl	.-8      	; 0x698 <_Z12digitalWritehh+0x288>
     6a0:	84 2b       	or	r24, r20
     6a2:	80 83       	st	Z, r24
			           break;
     6a4:	08 95       	ret
		     /*case'i':
	                  PORTI|=(1<<c[pInno]);
			           break;*/
			     case'j':
	                  PORTJ|=(1<<c[pInno]);
     6a6:	e5 e0       	ldi	r30, 0x05	; 5
     6a8:	f1 e0       	ldi	r31, 0x01	; 1
     6aa:	40 81       	ld	r20, Z
     6ac:	dc 01       	movw	r26, r24
     6ae:	aa 0f       	add	r26, r26
     6b0:	bb 1f       	adc	r27, r27
     6b2:	a0 50       	subi	r26, 0x00	; 0
     6b4:	be 4f       	sbci	r27, 0xFE	; 254
     6b6:	21 e0       	ldi	r18, 0x01	; 1
     6b8:	30 e0       	ldi	r19, 0x00	; 0
     6ba:	c9 01       	movw	r24, r18
     6bc:	0c 90       	ld	r0, X
     6be:	02 c0       	rjmp	.+4      	; 0x6c4 <_Z12digitalWritehh+0x2b4>
     6c0:	88 0f       	add	r24, r24
     6c2:	99 1f       	adc	r25, r25
     6c4:	0a 94       	dec	r0
     6c6:	e2 f7       	brpl	.-8      	; 0x6c0 <_Z12digitalWritehh+0x2b0>
     6c8:	84 2b       	or	r24, r20
     6ca:	80 83       	st	Z, r24
			           break;
     6cc:	08 95       	ret
				     case'l':
	                  PORTL|=(1<<c[pInno]);
     6ce:	eb e0       	ldi	r30, 0x0B	; 11
     6d0:	f1 e0       	ldi	r31, 0x01	; 1
     6d2:	40 81       	ld	r20, Z
     6d4:	dc 01       	movw	r26, r24
     6d6:	aa 0f       	add	r26, r26
     6d8:	bb 1f       	adc	r27, r27
     6da:	a0 50       	subi	r26, 0x00	; 0
     6dc:	be 4f       	sbci	r27, 0xFE	; 254
     6de:	21 e0       	ldi	r18, 0x01	; 1
     6e0:	30 e0       	ldi	r19, 0x00	; 0
     6e2:	c9 01       	movw	r24, r18
     6e4:	0c 90       	ld	r0, X
     6e6:	02 c0       	rjmp	.+4      	; 0x6ec <_Z12digitalWritehh+0x2dc>
     6e8:	88 0f       	add	r24, r24
     6ea:	99 1f       	adc	r25, r25
     6ec:	0a 94       	dec	r0
     6ee:	e2 f7       	brpl	.-8      	; 0x6e8 <_Z12digitalWritehh+0x2d8>
     6f0:	84 2b       	or	r24, r20
     6f2:	80 83       	st	Z, r24
     6f4:	08 95       	ret

000006f6 <_Z11digitalReadi>:

uint8_t digitalRead(int pInno)
{  
	uint8_t z;				//not a good practice
	uint8_t x;				//not a good practice
   switch(d[pInno])
     6f6:	fc 01       	movw	r30, r24
     6f8:	e8 58       	subi	r30, 0x88	; 136
     6fa:	fd 4f       	sbci	r31, 0xFD	; 253
     6fc:	80 81       	ld	r24, Z
     6fe:	85 36       	cpi	r24, 0x65	; 101
     700:	d9 f0       	breq	.+54     	; 0x738 <_Z11digitalReadi+0x42>
     702:	86 36       	cpi	r24, 0x66	; 102
     704:	38 f4       	brcc	.+14     	; 0x714 <_Z11digitalReadi+0x1e>
     706:	83 36       	cpi	r24, 0x63	; 99
     708:	99 f0       	breq	.+38     	; 0x730 <_Z11digitalReadi+0x3a>
     70a:	84 36       	cpi	r24, 0x64	; 100
     70c:	98 f4       	brcc	.+38     	; 0x734 <_Z11digitalReadi+0x3e>
     70e:	82 36       	cpi	r24, 0x62	; 98
     710:	f9 f4       	brne	.+62     	; 0x750 <_Z11digitalReadi+0x5a>
     712:	0c c0       	rjmp	.+24     	; 0x72c <_Z11digitalReadi+0x36>
     714:	88 36       	cpi	r24, 0x68	; 104
     716:	a1 f0       	breq	.+40     	; 0x740 <_Z11digitalReadi+0x4a>
     718:	89 36       	cpi	r24, 0x69	; 105
     71a:	18 f4       	brcc	.+6      	; 0x722 <_Z11digitalReadi+0x2c>
     71c:	87 36       	cpi	r24, 0x67	; 103
     71e:	c1 f4       	brne	.+48     	; 0x750 <_Z11digitalReadi+0x5a>
     720:	0d c0       	rjmp	.+26     	; 0x73c <_Z11digitalReadi+0x46>
     722:	8a 36       	cpi	r24, 0x6A	; 106
     724:	81 f0       	breq	.+32     	; 0x746 <_Z11digitalReadi+0x50>
     726:	8c 36       	cpi	r24, 0x6C	; 108
     728:	99 f4       	brne	.+38     	; 0x750 <_Z11digitalReadi+0x5a>
     72a:	10 c0       	rjmp	.+32     	; 0x74c <_Z11digitalReadi+0x56>
         {
	 
	          case'b':
	                  z=PINB&(1<<c[pInno]);
     72c:	83 b1       	in	r24, 0x03	; 3
			           break;
     72e:	08 95       	ret
	          case'c':
	                  z=PINC&(1<<c[pInno]);
     730:	86 b1       	in	r24, 0x06	; 6
			          break;
     732:	08 95       	ret
	          case'd':
	                  z=PIND&(1<<c[pInno]);
     734:	89 b1       	in	r24, 0x09	; 9
			          break;
     736:	08 95       	ret
				
		      case'e':
	                   z=PINE&(1<<c[pInno]);
     738:	8c b1       	in	r24, 0x0c	; 12
			           break;
     73a:	08 95       	ret

			     case'g':
	                   z=PING&(1<<c[pInno]);
     73c:	82 b3       	in	r24, 0x12	; 18
			           break;
     73e:	08 95       	ret
			 case'h':
	                  z=PINH&(1<<c[pInno]);
     740:	80 91 00 01 	lds	r24, 0x0100
			           break;
     744:	08 95       	ret
		     
			     case'j':
	                   z=PINJ&(1<<c[pInno]);
     746:	80 91 03 01 	lds	r24, 0x0103
			           break;
     74a:	08 95       	ret
				     case'l':
	                   z=PINL&(1<<c[pInno]);
     74c:	80 91 09 01 	lds	r24, 0x0109
			           break;
					   return z;	        		   		   	  	  		 		 			 
	     }  
}
     750:	08 95       	ret

00000752 <_Z20microsecondsToInchesm>:
{
  // According to Parallax's datasheet for the PING))), there are 73.746
  // microseconds per inch (i.e. sound travels at 1130 feet per second).
  // This gives the distance travelled by the ping, outbound and return,
  // so we divide by 2 to get the distance of the obstacle.
  return (mIcroseconds*0.00669/ 2);
     752:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
     756:	2a ec       	ldi	r18, 0xCA	; 202
     758:	37 e3       	ldi	r19, 0x37	; 55
     75a:	4b ed       	ldi	r20, 0xDB	; 219
     75c:	5b e3       	ldi	r21, 0x3B	; 59
     75e:	0e 94 a2 7a 	call	0xf544	; 0xf544 <__mulsf3>
     762:	20 e0       	ldi	r18, 0x00	; 0
     764:	30 e0       	ldi	r19, 0x00	; 0
     766:	40 e0       	ldi	r20, 0x00	; 0
     768:	5f e3       	ldi	r21, 0x3F	; 63
     76a:	0e 94 a2 7a 	call	0xf544	; 0xf544 <__mulsf3>
     76e:	0e 94 c0 79 	call	0xf380	; 0xf380 <__fixunssfsi>
}
     772:	08 95       	ret

00000774 <_Z25microsecondsToCentimetersm>:
long unsigned int microsecondsToCentimeters(long unsigned int microseconds) 
{
  // The speed of sound is 340 m/s or 29 microseconds per centimeter.
  // The ping travels out and back, so to find the distance of the object we
  // take half of the distance travelled.
  return (microseconds*0.17/ 2);
     774:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
     778:	2b e7       	ldi	r18, 0x7B	; 123
     77a:	34 e1       	ldi	r19, 0x14	; 20
     77c:	4e e2       	ldi	r20, 0x2E	; 46
     77e:	5e e3       	ldi	r21, 0x3E	; 62
     780:	0e 94 a2 7a 	call	0xf544	; 0xf544 <__mulsf3>
     784:	20 e0       	ldi	r18, 0x00	; 0
     786:	30 e0       	ldi	r19, 0x00	; 0
     788:	40 e0       	ldi	r20, 0x00	; 0
     78a:	5f e3       	ldi	r21, 0x3F	; 63
     78c:	0e 94 a2 7a 	call	0xf544	; 0xf544 <__mulsf3>
     790:	0e 94 c0 79 	call	0xf380	; 0xf380 <__fixunssfsi>
}
     794:	08 95       	ret

00000796 <_Z7pulseInhh>:

unsigned long pulseIn(volatile uint8_t pInno, uint8_t vAlue)
{ 
     796:	8f 92       	push	r8
     798:	9f 92       	push	r9
     79a:	af 92       	push	r10
     79c:	bf 92       	push	r11
     79e:	cf 92       	push	r12
     7a0:	df 92       	push	r13
     7a2:	ef 92       	push	r14
     7a4:	ff 92       	push	r15
     7a6:	0f 93       	push	r16
     7a8:	1f 93       	push	r17
     7aa:	df 93       	push	r29
     7ac:	cf 93       	push	r28
     7ae:	0f 92       	push	r0
     7b0:	cd b7       	in	r28, 0x3d	; 61
     7b2:	de b7       	in	r29, 0x3e	; 62
     7b4:	89 83       	std	Y+1, r24	; 0x01
	char x;
  TCCR2A = (1 << WGM21) | (1 << COM2A1) | (1 << FOC2A) | (0 << COM2A0) | (0 << WGM20); //initializing in CTC mode
     7b6:	e0 eb       	ldi	r30, 0xB0	; 176
     7b8:	f0 e0       	ldi	r31, 0x00	; 0
     7ba:	82 e8       	ldi	r24, 0x82	; 130
     7bc:	80 83       	st	Z, r24
  TCCR2A = (1 << CS20);
     7be:	81 e0       	ldi	r24, 0x01	; 1
     7c0:	80 83       	st	Z, r24
  unsigned long mAxloops = 500000;
  unsigned long wIdth = 0;
  // wait for any previous pulse to end
  switch(d[pInno]){
     7c2:	89 81       	ldd	r24, Y+1	; 0x01
     7c4:	e8 e7       	ldi	r30, 0x78	; 120
     7c6:	f2 e0       	ldi	r31, 0x02	; 2
     7c8:	e8 0f       	add	r30, r24
     7ca:	f1 1d       	adc	r31, r1
     7cc:	80 81       	ld	r24, Z
     7ce:	85 36       	cpi	r24, 0x65	; 101
     7d0:	09 f4       	brne	.+2      	; 0x7d4 <_Z7pulseInhh+0x3e>
     7d2:	6e c1       	rjmp	.+732    	; 0xab0 <_Z7pulseInhh+0x31a>
     7d4:	86 36       	cpi	r24, 0x66	; 102
     7d6:	50 f4       	brcc	.+20     	; 0x7ec <_Z7pulseInhh+0x56>
     7d8:	83 36       	cpi	r24, 0x63	; 99
     7da:	09 f4       	brne	.+2      	; 0x7de <_Z7pulseInhh+0x48>
     7dc:	87 c0       	rjmp	.+270    	; 0x8ec <_Z7pulseInhh+0x156>
     7de:	84 36       	cpi	r24, 0x64	; 100
     7e0:	08 f0       	brcs	.+2      	; 0x7e4 <_Z7pulseInhh+0x4e>
     7e2:	f5 c0       	rjmp	.+490    	; 0x9ce <_Z7pulseInhh+0x238>
     7e4:	82 36       	cpi	r24, 0x62	; 98
     7e6:	09 f0       	breq	.+2      	; 0x7ea <_Z7pulseInhh+0x54>
     7e8:	4f c3       	rjmp	.+1694   	; 0xe88 <_Z7pulseInhh+0x6f2>
     7ea:	0f c0       	rjmp	.+30     	; 0x80a <_Z7pulseInhh+0x74>
     7ec:	8a 36       	cpi	r24, 0x6A	; 106
     7ee:	09 f4       	brne	.+2      	; 0x7f2 <_Z7pulseInhh+0x5c>
     7f0:	50 c2       	rjmp	.+1184   	; 0xc92 <_Z7pulseInhh+0x4fc>
     7f2:	8c 36       	cpi	r24, 0x6C	; 108
     7f4:	09 f4       	brne	.+2      	; 0x7f8 <_Z7pulseInhh+0x62>
     7f6:	cd c2       	rjmp	.+1434   	; 0xd92 <_Z7pulseInhh+0x5fc>
     7f8:	88 36       	cpi	r24, 0x68	; 104
     7fa:	09 f0       	breq	.+2      	; 0x7fe <_Z7pulseInhh+0x68>
     7fc:	45 c3       	rjmp	.+1674   	; 0xe88 <_Z7pulseInhh+0x6f2>
     7fe:	c9 c1       	rjmp	.+914    	; 0xb92 <_Z7pulseInhh+0x3fc>
            case'b':
	               { while (((PINB) && ((c[pInno]))) == vAlue)
	              {
		          if (--mAxloops == 0)
     800:	01 97       	sbiw	r24, 0x01	; 1
     802:	a1 09       	sbc	r26, r1
     804:	b1 09       	sbc	r27, r1
     806:	51 f4       	brne	.+20     	; 0x81c <_Z7pulseInhh+0x86>
     808:	40 c3       	rjmp	.+1664   	; 0xe8a <_Z7pulseInhh+0x6f4>
  TCCR2A = (1 << WGM21) | (1 << COM2A1) | (1 << FOC2A) | (0 << COM2A0) | (0 << WGM20); //initializing in CTC mode
  TCCR2A = (1 << CS20);
  unsigned long mAxloops = 500000;
  unsigned long wIdth = 0;
  // wait for any previous pulse to end
  switch(d[pInno]){
     80a:	80 e2       	ldi	r24, 0x20	; 32
     80c:	91 ea       	ldi	r25, 0xA1	; 161
     80e:	a7 e0       	ldi	r26, 0x07	; 7
     810:	b0 e0       	ldi	r27, 0x00	; 0
            case'b':
	               { while (((PINB) && ((c[pInno]))) == vAlue)
     812:	00 e0       	ldi	r16, 0x00	; 0
     814:	40 e0       	ldi	r20, 0x00	; 0
     816:	52 e0       	ldi	r21, 0x02	; 2
  // The ping travels out and back, so to find the distance of the object we
  // take half of the distance travelled.
  return (microseconds*0.17/ 2);
}

unsigned long pulseIn(volatile uint8_t pInno, uint8_t vAlue)
     818:	11 e0       	ldi	r17, 0x01	; 1
  unsigned long mAxloops = 500000;
  unsigned long wIdth = 0;
  // wait for any previous pulse to end
  switch(d[pInno]){
            case'b':
	               { while (((PINB) && ((c[pInno]))) == vAlue)
     81a:	70 e0       	ldi	r23, 0x00	; 0
     81c:	23 b1       	in	r18, 0x03	; 3
     81e:	22 23       	and	r18, r18
     820:	71 f0       	breq	.+28     	; 0x83e <_Z7pulseInhh+0xa8>
     822:	e9 81       	ldd	r30, Y+1	; 0x01
     824:	f0 e0       	ldi	r31, 0x00	; 0
     826:	ee 0f       	add	r30, r30
     828:	ff 1f       	adc	r31, r31
     82a:	e4 0f       	add	r30, r20
     82c:	f5 1f       	adc	r31, r21
  // The ping travels out and back, so to find the distance of the object we
  // take half of the distance travelled.
  return (microseconds*0.17/ 2);
}

unsigned long pulseIn(volatile uint8_t pInno, uint8_t vAlue)
     82e:	21 2f       	mov	r18, r17
     830:	01 90       	ld	r0, Z+
     832:	f0 81       	ld	r31, Z
     834:	e0 2d       	mov	r30, r0
     836:	30 97       	sbiw	r30, 0x00	; 0
     838:	19 f4       	brne	.+6      	; 0x840 <_Z7pulseInhh+0xaa>
     83a:	20 2f       	mov	r18, r16
     83c:	01 c0       	rjmp	.+2      	; 0x840 <_Z7pulseInhh+0xaa>
  unsigned long mAxloops = 500000;
  unsigned long wIdth = 0;
  // wait for any previous pulse to end
  switch(d[pInno]){
            case'b':
	               { while (((PINB) && ((c[pInno]))) == vAlue)
     83e:	20 2f       	mov	r18, r16
     840:	4b 01       	movw	r8, r22
     842:	30 e0       	ldi	r19, 0x00	; 0
     844:	26 17       	cp	r18, r22
     846:	37 07       	cpc	r19, r23
     848:	d9 f2       	breq	.-74     	; 0x800 <_Z7pulseInhh+0x6a>
     84a:	05 c0       	rjmp	.+10     	; 0x856 <_Z7pulseInhh+0xc0>
		            return 0;
	                }
             // wait for the pulse to start  
              while (((PINB) && (c[pInno])) != vAlue)
	              {
		     if (--mAxloops == 0) 
     84c:	01 97       	sbiw	r24, 0x01	; 1
     84e:	a1 09       	sbc	r26, r1
     850:	b1 09       	sbc	r27, r1
     852:	29 f4       	brne	.+10     	; 0x85e <_Z7pulseInhh+0xc8>
     854:	1e c3       	rjmp	.+1596   	; 0xe92 <_Z7pulseInhh+0x6fc>
	              {
		          if (--mAxloops == 0)
		            return 0;
	                }
             // wait for the pulse to start  
              while (((PINB) && (c[pInno])) != vAlue)
     856:	60 e0       	ldi	r22, 0x00	; 0
     858:	72 e0       	ldi	r23, 0x02	; 2
  // The ping travels out and back, so to find the distance of the object we
  // take half of the distance travelled.
  return (microseconds*0.17/ 2);
}

unsigned long pulseIn(volatile uint8_t pInno, uint8_t vAlue)
     85a:	01 e0       	ldi	r16, 0x01	; 1
     85c:	10 e0       	ldi	r17, 0x00	; 0
	              {
		          if (--mAxloops == 0)
		            return 0;
	                }
             // wait for the pulse to start  
              while (((PINB) && (c[pInno])) != vAlue)
     85e:	23 b1       	in	r18, 0x03	; 3
     860:	22 23       	and	r18, r18
     862:	79 f0       	breq	.+30     	; 0x882 <_Z7pulseInhh+0xec>
     864:	49 81       	ldd	r20, Y+1	; 0x01
     866:	50 e0       	ldi	r21, 0x00	; 0
     868:	44 0f       	add	r20, r20
     86a:	55 1f       	adc	r21, r21
     86c:	46 0f       	add	r20, r22
     86e:	57 1f       	adc	r21, r23
  // The ping travels out and back, so to find the distance of the object we
  // take half of the distance travelled.
  return (microseconds*0.17/ 2);
}

unsigned long pulseIn(volatile uint8_t pInno, uint8_t vAlue)
     870:	20 2f       	mov	r18, r16
     872:	fa 01       	movw	r30, r20
     874:	40 81       	ld	r20, Z
     876:	51 81       	ldd	r21, Z+1	; 0x01
     878:	41 15       	cp	r20, r1
     87a:	51 05       	cpc	r21, r1
     87c:	19 f4       	brne	.+6      	; 0x884 <_Z7pulseInhh+0xee>
     87e:	21 2f       	mov	r18, r17
     880:	01 c0       	rjmp	.+2      	; 0x884 <_Z7pulseInhh+0xee>
	              {
		          if (--mAxloops == 0)
		            return 0;
	                }
             // wait for the pulse to start  
              while (((PINB) && (c[pInno])) != vAlue)
     882:	21 2f       	mov	r18, r17
     884:	30 e0       	ldi	r19, 0x00	; 0
     886:	82 16       	cp	r8, r18
     888:	93 06       	cpc	r9, r19
     88a:	01 f7       	brne	.-64     	; 0x84c <_Z7pulseInhh+0xb6>
     88c:	20 e0       	ldi	r18, 0x00	; 0
     88e:	30 e0       	ldi	r19, 0x00	; 0
     890:	a9 01       	movw	r20, r18
	              {
		     if (--mAxloops == 0) 
		          return 0;
	           }
            // wait for the pulse to stop
             while (((PINB) && (c[pInno])) == vAlue)
     892:	cc 24       	eor	r12, r12
     894:	00 e0       	ldi	r16, 0x00	; 0
     896:	12 e0       	ldi	r17, 0x02	; 2
  // The ping travels out and back, so to find the distance of the object we
  // take half of the distance travelled.
  return (microseconds*0.17/ 2);
}

unsigned long pulseIn(volatile uint8_t pInno, uint8_t vAlue)
     898:	bb 24       	eor	r11, r11
     89a:	b3 94       	inc	r11
     89c:	0a c0       	rjmp	.+20     	; 0x8b2 <_Z7pulseInhh+0x11c>
		          return 0;
	           }
            // wait for the pulse to stop
             while (((PINB) && (c[pInno])) == vAlue)
	                   {
	               	if (++wIdth == mAxloops)
     89e:	2f 5f       	subi	r18, 0xFF	; 255
     8a0:	3f 4f       	sbci	r19, 0xFF	; 255
     8a2:	4f 4f       	sbci	r20, 0xFF	; 255
     8a4:	5f 4f       	sbci	r21, 0xFF	; 255
     8a6:	82 17       	cp	r24, r18
     8a8:	93 07       	cpc	r25, r19
     8aa:	a4 07       	cpc	r26, r20
     8ac:	b5 07       	cpc	r27, r21
     8ae:	09 f4       	brne	.+2      	; 0x8b2 <_Z7pulseInhh+0x11c>
     8b0:	f4 c2       	rjmp	.+1512   	; 0xe9a <_Z7pulseInhh+0x704>
	              {
		     if (--mAxloops == 0) 
		          return 0;
	           }
            // wait for the pulse to stop
             while (((PINB) && (c[pInno])) == vAlue)
     8b2:	63 b1       	in	r22, 0x03	; 3
     8b4:	66 23       	and	r22, r22
     8b6:	79 f0       	breq	.+30     	; 0x8d6 <_Z7pulseInhh+0x140>
     8b8:	e9 80       	ldd	r14, Y+1	; 0x01
     8ba:	ff 24       	eor	r15, r15
     8bc:	ee 0c       	add	r14, r14
     8be:	ff 1c       	adc	r15, r15
     8c0:	e0 0e       	add	r14, r16
     8c2:	f1 1e       	adc	r15, r17
  // The ping travels out and back, so to find the distance of the object we
  // take half of the distance travelled.
  return (microseconds*0.17/ 2);
}

unsigned long pulseIn(volatile uint8_t pInno, uint8_t vAlue)
     8c4:	6b 2d       	mov	r22, r11
     8c6:	f7 01       	movw	r30, r14
     8c8:	e0 80       	ld	r14, Z
     8ca:	f1 80       	ldd	r15, Z+1	; 0x01
     8cc:	e1 14       	cp	r14, r1
     8ce:	f1 04       	cpc	r15, r1
     8d0:	19 f4       	brne	.+6      	; 0x8d8 <_Z7pulseInhh+0x142>
     8d2:	6c 2d       	mov	r22, r12
     8d4:	01 c0       	rjmp	.+2      	; 0x8d8 <_Z7pulseInhh+0x142>
	              {
		     if (--mAxloops == 0) 
		          return 0;
	           }
            // wait for the pulse to stop
             while (((PINB) && (c[pInno])) == vAlue)
     8d6:	6c 2d       	mov	r22, r12
     8d8:	70 e0       	ldi	r23, 0x00	; 0
     8da:	86 16       	cp	r8, r22
     8dc:	97 06       	cpc	r9, r23
     8de:	f9 f2       	breq	.-66     	; 0x89e <_Z7pulseInhh+0x108>
     8e0:	27 c3       	rjmp	.+1614   	; 0xf30 <_Z7pulseInhh+0x79a>
              return wIdth;
                    }  break;
 case'c':
	                 { while (((PINC) && (c[pInno])) == vAlue)
	                {
		              if (--mAxloops == 0)
     8e2:	01 97       	sbiw	r24, 0x01	; 1
     8e4:	a1 09       	sbc	r26, r1
     8e6:	b1 09       	sbc	r27, r1
     8e8:	51 f4       	brne	.+20     	; 0x8fe <_Z7pulseInhh+0x168>
     8ea:	db c2       	rjmp	.+1462   	; 0xea2 <_Z7pulseInhh+0x70c>
  TCCR2A = (1 << WGM21) | (1 << COM2A1) | (1 << FOC2A) | (0 << COM2A0) | (0 << WGM20); //initializing in CTC mode
  TCCR2A = (1 << CS20);
  unsigned long mAxloops = 500000;
  unsigned long wIdth = 0;
  // wait for any previous pulse to end
  switch(d[pInno]){
     8ec:	80 e2       	ldi	r24, 0x20	; 32
     8ee:	91 ea       	ldi	r25, 0xA1	; 161
     8f0:	a7 e0       	ldi	r26, 0x07	; 7
     8f2:	b0 e0       	ldi	r27, 0x00	; 0
		          return 0;
	                      }
              return wIdth;
                    }  break;
 case'c':
	                 { while (((PINC) && (c[pInno])) == vAlue)
     8f4:	00 e0       	ldi	r16, 0x00	; 0
     8f6:	40 e0       	ldi	r20, 0x00	; 0
     8f8:	52 e0       	ldi	r21, 0x02	; 2
  // The ping travels out and back, so to find the distance of the object we
  // take half of the distance travelled.
  return (microseconds*0.17/ 2);
}

unsigned long pulseIn(volatile uint8_t pInno, uint8_t vAlue)
     8fa:	11 e0       	ldi	r17, 0x01	; 1
		          return 0;
	                      }
              return wIdth;
                    }  break;
 case'c':
	                 { while (((PINC) && (c[pInno])) == vAlue)
     8fc:	70 e0       	ldi	r23, 0x00	; 0
     8fe:	26 b1       	in	r18, 0x06	; 6
     900:	22 23       	and	r18, r18
     902:	71 f0       	breq	.+28     	; 0x920 <_Z7pulseInhh+0x18a>
     904:	e9 81       	ldd	r30, Y+1	; 0x01
     906:	f0 e0       	ldi	r31, 0x00	; 0
     908:	ee 0f       	add	r30, r30
     90a:	ff 1f       	adc	r31, r31
     90c:	e4 0f       	add	r30, r20
     90e:	f5 1f       	adc	r31, r21
  // The ping travels out and back, so to find the distance of the object we
  // take half of the distance travelled.
  return (microseconds*0.17/ 2);
}

unsigned long pulseIn(volatile uint8_t pInno, uint8_t vAlue)
     910:	21 2f       	mov	r18, r17
     912:	01 90       	ld	r0, Z+
     914:	f0 81       	ld	r31, Z
     916:	e0 2d       	mov	r30, r0
     918:	30 97       	sbiw	r30, 0x00	; 0
     91a:	19 f4       	brne	.+6      	; 0x922 <_Z7pulseInhh+0x18c>
     91c:	20 2f       	mov	r18, r16
     91e:	01 c0       	rjmp	.+2      	; 0x922 <_Z7pulseInhh+0x18c>
		          return 0;
	                      }
              return wIdth;
                    }  break;
 case'c':
	                 { while (((PINC) && (c[pInno])) == vAlue)
     920:	20 2f       	mov	r18, r16
     922:	4b 01       	movw	r8, r22
     924:	30 e0       	ldi	r19, 0x00	; 0
     926:	26 17       	cp	r18, r22
     928:	37 07       	cpc	r19, r23
     92a:	d9 f2       	breq	.-74     	; 0x8e2 <_Z7pulseInhh+0x14c>
     92c:	05 c0       	rjmp	.+10     	; 0x938 <_Z7pulseInhh+0x1a2>
		               return 0;
	                   }
  // wait for the pulse to start  
                  while (((PINC) && (c[pInno])) != vAlue)
	                  {
		              if (--mAxloops == 0)
     92e:	01 97       	sbiw	r24, 0x01	; 1
     930:	a1 09       	sbc	r26, r1
     932:	b1 09       	sbc	r27, r1
     934:	29 f4       	brne	.+10     	; 0x940 <_Z7pulseInhh+0x1aa>
     936:	b9 c2       	rjmp	.+1394   	; 0xeaa <_Z7pulseInhh+0x714>
	                {
		              if (--mAxloops == 0)
		               return 0;
	                   }
  // wait for the pulse to start  
                  while (((PINC) && (c[pInno])) != vAlue)
     938:	60 e0       	ldi	r22, 0x00	; 0
     93a:	72 e0       	ldi	r23, 0x02	; 2
  // The ping travels out and back, so to find the distance of the object we
  // take half of the distance travelled.
  return (microseconds*0.17/ 2);
}

unsigned long pulseIn(volatile uint8_t pInno, uint8_t vAlue)
     93c:	01 e0       	ldi	r16, 0x01	; 1
     93e:	10 e0       	ldi	r17, 0x00	; 0
	                {
		              if (--mAxloops == 0)
		               return 0;
	                   }
  // wait for the pulse to start  
                  while (((PINC) && (c[pInno])) != vAlue)
     940:	26 b1       	in	r18, 0x06	; 6
     942:	22 23       	and	r18, r18
     944:	79 f0       	breq	.+30     	; 0x964 <_Z7pulseInhh+0x1ce>
     946:	49 81       	ldd	r20, Y+1	; 0x01
     948:	50 e0       	ldi	r21, 0x00	; 0
     94a:	44 0f       	add	r20, r20
     94c:	55 1f       	adc	r21, r21
     94e:	46 0f       	add	r20, r22
     950:	57 1f       	adc	r21, r23
  // The ping travels out and back, so to find the distance of the object we
  // take half of the distance travelled.
  return (microseconds*0.17/ 2);
}

unsigned long pulseIn(volatile uint8_t pInno, uint8_t vAlue)
     952:	20 2f       	mov	r18, r16
     954:	fa 01       	movw	r30, r20
     956:	40 81       	ld	r20, Z
     958:	51 81       	ldd	r21, Z+1	; 0x01
     95a:	41 15       	cp	r20, r1
     95c:	51 05       	cpc	r21, r1
     95e:	19 f4       	brne	.+6      	; 0x966 <_Z7pulseInhh+0x1d0>
     960:	21 2f       	mov	r18, r17
     962:	01 c0       	rjmp	.+2      	; 0x966 <_Z7pulseInhh+0x1d0>
	                {
		              if (--mAxloops == 0)
		               return 0;
	                   }
  // wait for the pulse to start  
                  while (((PINC) && (c[pInno])) != vAlue)
     964:	21 2f       	mov	r18, r17
     966:	30 e0       	ldi	r19, 0x00	; 0
     968:	82 16       	cp	r8, r18
     96a:	93 06       	cpc	r9, r19
     96c:	01 f7       	brne	.-64     	; 0x92e <_Z7pulseInhh+0x198>
     96e:	20 e0       	ldi	r18, 0x00	; 0
     970:	30 e0       	ldi	r19, 0x00	; 0
     972:	a9 01       	movw	r20, r18
	                  {
		              if (--mAxloops == 0)
		                 return 0;
	                      }
  // wait for the pulse to stop
                while (((PINC) && (c[pInno])) == vAlue)
     974:	cc 24       	eor	r12, r12
     976:	00 e0       	ldi	r16, 0x00	; 0
     978:	12 e0       	ldi	r17, 0x02	; 2
  // The ping travels out and back, so to find the distance of the object we
  // take half of the distance travelled.
  return (microseconds*0.17/ 2);
}

unsigned long pulseIn(volatile uint8_t pInno, uint8_t vAlue)
     97a:	bb 24       	eor	r11, r11
     97c:	b3 94       	inc	r11
     97e:	0a c0       	rjmp	.+20     	; 0x994 <_Z7pulseInhh+0x1fe>
		                 return 0;
	                      }
  // wait for the pulse to stop
                while (((PINC) && (c[pInno])) == vAlue)
	                 {
                 		if (++wIdth == mAxloops)
     980:	2f 5f       	subi	r18, 0xFF	; 255
     982:	3f 4f       	sbci	r19, 0xFF	; 255
     984:	4f 4f       	sbci	r20, 0xFF	; 255
     986:	5f 4f       	sbci	r21, 0xFF	; 255
     988:	82 17       	cp	r24, r18
     98a:	93 07       	cpc	r25, r19
     98c:	a4 07       	cpc	r26, r20
     98e:	b5 07       	cpc	r27, r21
     990:	09 f4       	brne	.+2      	; 0x994 <_Z7pulseInhh+0x1fe>
     992:	8f c2       	rjmp	.+1310   	; 0xeb2 <_Z7pulseInhh+0x71c>
	                  {
		              if (--mAxloops == 0)
		                 return 0;
	                      }
  // wait for the pulse to stop
                while (((PINC) && (c[pInno])) == vAlue)
     994:	66 b1       	in	r22, 0x06	; 6
     996:	66 23       	and	r22, r22
     998:	79 f0       	breq	.+30     	; 0x9b8 <_Z7pulseInhh+0x222>
     99a:	e9 80       	ldd	r14, Y+1	; 0x01
     99c:	ff 24       	eor	r15, r15
     99e:	ee 0c       	add	r14, r14
     9a0:	ff 1c       	adc	r15, r15
     9a2:	e0 0e       	add	r14, r16
     9a4:	f1 1e       	adc	r15, r17
  // The ping travels out and back, so to find the distance of the object we
  // take half of the distance travelled.
  return (microseconds*0.17/ 2);
}

unsigned long pulseIn(volatile uint8_t pInno, uint8_t vAlue)
     9a6:	6b 2d       	mov	r22, r11
     9a8:	f7 01       	movw	r30, r14
     9aa:	e0 80       	ld	r14, Z
     9ac:	f1 80       	ldd	r15, Z+1	; 0x01
     9ae:	e1 14       	cp	r14, r1
     9b0:	f1 04       	cpc	r15, r1
     9b2:	19 f4       	brne	.+6      	; 0x9ba <_Z7pulseInhh+0x224>
     9b4:	6c 2d       	mov	r22, r12
     9b6:	01 c0       	rjmp	.+2      	; 0x9ba <_Z7pulseInhh+0x224>
	                  {
		              if (--mAxloops == 0)
		                 return 0;
	                      }
  // wait for the pulse to stop
                while (((PINC) && (c[pInno])) == vAlue)
     9b8:	6c 2d       	mov	r22, r12
     9ba:	70 e0       	ldi	r23, 0x00	; 0
     9bc:	86 16       	cp	r8, r22
     9be:	97 06       	cpc	r9, r23
     9c0:	f9 f2       	breq	.-66     	; 0x980 <_Z7pulseInhh+0x1ea>
     9c2:	b6 c2       	rjmp	.+1388   	; 0xf30 <_Z7pulseInhh+0x79a>
						 
	 case'd':
	     
	                 { while (((PIND) && (c[pInno])) == vAlue)
	                {
		              if (--mAxloops == 0)
     9c4:	01 97       	sbiw	r24, 0x01	; 1
     9c6:	a1 09       	sbc	r26, r1
     9c8:	b1 09       	sbc	r27, r1
     9ca:	51 f4       	brne	.+20     	; 0x9e0 <_Z7pulseInhh+0x24a>
     9cc:	76 c2       	rjmp	.+1260   	; 0xeba <_Z7pulseInhh+0x724>
  TCCR2A = (1 << WGM21) | (1 << COM2A1) | (1 << FOC2A) | (0 << COM2A0) | (0 << WGM20); //initializing in CTC mode
  TCCR2A = (1 << CS20);
  unsigned long mAxloops = 500000;
  unsigned long wIdth = 0;
  // wait for any previous pulse to end
  switch(d[pInno]){
     9ce:	80 e2       	ldi	r24, 0x20	; 32
     9d0:	91 ea       	ldi	r25, 0xA1	; 161
     9d2:	a7 e0       	ldi	r26, 0x07	; 7
     9d4:	b0 e0       	ldi	r27, 0x00	; 0
                     return wIdth;
                         }break;
						 
	 case'd':
	     
	                 { while (((PIND) && (c[pInno])) == vAlue)
     9d6:	00 e0       	ldi	r16, 0x00	; 0
     9d8:	40 e0       	ldi	r20, 0x00	; 0
     9da:	52 e0       	ldi	r21, 0x02	; 2
  // The ping travels out and back, so to find the distance of the object we
  // take half of the distance travelled.
  return (microseconds*0.17/ 2);
}

unsigned long pulseIn(volatile uint8_t pInno, uint8_t vAlue)
     9dc:	11 e0       	ldi	r17, 0x01	; 1
                     return wIdth;
                         }break;
						 
	 case'd':
	     
	                 { while (((PIND) && (c[pInno])) == vAlue)
     9de:	70 e0       	ldi	r23, 0x00	; 0
     9e0:	29 b1       	in	r18, 0x09	; 9
     9e2:	22 23       	and	r18, r18
     9e4:	71 f0       	breq	.+28     	; 0xa02 <_Z7pulseInhh+0x26c>
     9e6:	e9 81       	ldd	r30, Y+1	; 0x01
     9e8:	f0 e0       	ldi	r31, 0x00	; 0
     9ea:	ee 0f       	add	r30, r30
     9ec:	ff 1f       	adc	r31, r31
     9ee:	e4 0f       	add	r30, r20
     9f0:	f5 1f       	adc	r31, r21
  // The ping travels out and back, so to find the distance of the object we
  // take half of the distance travelled.
  return (microseconds*0.17/ 2);
}

unsigned long pulseIn(volatile uint8_t pInno, uint8_t vAlue)
     9f2:	21 2f       	mov	r18, r17
     9f4:	01 90       	ld	r0, Z+
     9f6:	f0 81       	ld	r31, Z
     9f8:	e0 2d       	mov	r30, r0
     9fa:	30 97       	sbiw	r30, 0x00	; 0
     9fc:	19 f4       	brne	.+6      	; 0xa04 <_Z7pulseInhh+0x26e>
     9fe:	20 2f       	mov	r18, r16
     a00:	01 c0       	rjmp	.+2      	; 0xa04 <_Z7pulseInhh+0x26e>
                     return wIdth;
                         }break;
						 
	 case'd':
	     
	                 { while (((PIND) && (c[pInno])) == vAlue)
     a02:	20 2f       	mov	r18, r16
     a04:	4b 01       	movw	r8, r22
     a06:	30 e0       	ldi	r19, 0x00	; 0
     a08:	26 17       	cp	r18, r22
     a0a:	37 07       	cpc	r19, r23
     a0c:	d9 f2       	breq	.-74     	; 0x9c4 <_Z7pulseInhh+0x22e>
     a0e:	05 c0       	rjmp	.+10     	; 0xa1a <_Z7pulseInhh+0x284>
		               return 0;
	                   }
  // wait for the pulse to start  
                  while (((PIND) && (c[pInno])) != vAlue)
	                  {
		              if (--mAxloops == 0)
     a10:	01 97       	sbiw	r24, 0x01	; 1
     a12:	a1 09       	sbc	r26, r1
     a14:	b1 09       	sbc	r27, r1
     a16:	29 f4       	brne	.+10     	; 0xa22 <_Z7pulseInhh+0x28c>
     a18:	54 c2       	rjmp	.+1192   	; 0xec2 <_Z7pulseInhh+0x72c>
	                {
		              if (--mAxloops == 0)
		               return 0;
	                   }
  // wait for the pulse to start  
                  while (((PIND) && (c[pInno])) != vAlue)
     a1a:	60 e0       	ldi	r22, 0x00	; 0
     a1c:	72 e0       	ldi	r23, 0x02	; 2
  // The ping travels out and back, so to find the distance of the object we
  // take half of the distance travelled.
  return (microseconds*0.17/ 2);
}

unsigned long pulseIn(volatile uint8_t pInno, uint8_t vAlue)
     a1e:	01 e0       	ldi	r16, 0x01	; 1
     a20:	10 e0       	ldi	r17, 0x00	; 0
	                {
		              if (--mAxloops == 0)
		               return 0;
	                   }
  // wait for the pulse to start  
                  while (((PIND) && (c[pInno])) != vAlue)
     a22:	29 b1       	in	r18, 0x09	; 9
     a24:	22 23       	and	r18, r18
     a26:	79 f0       	breq	.+30     	; 0xa46 <_Z7pulseInhh+0x2b0>
     a28:	49 81       	ldd	r20, Y+1	; 0x01
     a2a:	50 e0       	ldi	r21, 0x00	; 0
     a2c:	44 0f       	add	r20, r20
     a2e:	55 1f       	adc	r21, r21
     a30:	46 0f       	add	r20, r22
     a32:	57 1f       	adc	r21, r23
  // The ping travels out and back, so to find the distance of the object we
  // take half of the distance travelled.
  return (microseconds*0.17/ 2);
}

unsigned long pulseIn(volatile uint8_t pInno, uint8_t vAlue)
     a34:	20 2f       	mov	r18, r16
     a36:	fa 01       	movw	r30, r20
     a38:	40 81       	ld	r20, Z
     a3a:	51 81       	ldd	r21, Z+1	; 0x01
     a3c:	41 15       	cp	r20, r1
     a3e:	51 05       	cpc	r21, r1
     a40:	19 f4       	brne	.+6      	; 0xa48 <_Z7pulseInhh+0x2b2>
     a42:	21 2f       	mov	r18, r17
     a44:	01 c0       	rjmp	.+2      	; 0xa48 <_Z7pulseInhh+0x2b2>
	                {
		              if (--mAxloops == 0)
		               return 0;
	                   }
  // wait for the pulse to start  
                  while (((PIND) && (c[pInno])) != vAlue)
     a46:	21 2f       	mov	r18, r17
     a48:	30 e0       	ldi	r19, 0x00	; 0
     a4a:	82 16       	cp	r8, r18
     a4c:	93 06       	cpc	r9, r19
     a4e:	01 f7       	brne	.-64     	; 0xa10 <_Z7pulseInhh+0x27a>
     a50:	20 e0       	ldi	r18, 0x00	; 0
     a52:	30 e0       	ldi	r19, 0x00	; 0
     a54:	a9 01       	movw	r20, r18
	                  {
		              if (--mAxloops == 0)
		                 return 0;
	                      }
  // wait for the pulse to stop
                while (((PIND) && (c[pInno])) == vAlue)
     a56:	cc 24       	eor	r12, r12
     a58:	00 e0       	ldi	r16, 0x00	; 0
     a5a:	12 e0       	ldi	r17, 0x02	; 2
  // The ping travels out and back, so to find the distance of the object we
  // take half of the distance travelled.
  return (microseconds*0.17/ 2);
}

unsigned long pulseIn(volatile uint8_t pInno, uint8_t vAlue)
     a5c:	bb 24       	eor	r11, r11
     a5e:	b3 94       	inc	r11
     a60:	0a c0       	rjmp	.+20     	; 0xa76 <_Z7pulseInhh+0x2e0>
		                 return 0;
	                      }
  // wait for the pulse to stop
                while (((PIND) && (c[pInno])) == vAlue)
	                 {
                 		if (++wIdth == mAxloops)
     a62:	2f 5f       	subi	r18, 0xFF	; 255
     a64:	3f 4f       	sbci	r19, 0xFF	; 255
     a66:	4f 4f       	sbci	r20, 0xFF	; 255
     a68:	5f 4f       	sbci	r21, 0xFF	; 255
     a6a:	82 17       	cp	r24, r18
     a6c:	93 07       	cpc	r25, r19
     a6e:	a4 07       	cpc	r26, r20
     a70:	b5 07       	cpc	r27, r21
     a72:	09 f4       	brne	.+2      	; 0xa76 <_Z7pulseInhh+0x2e0>
     a74:	2a c2       	rjmp	.+1108   	; 0xeca <_Z7pulseInhh+0x734>
	                  {
		              if (--mAxloops == 0)
		                 return 0;
	                      }
  // wait for the pulse to stop
                while (((PIND) && (c[pInno])) == vAlue)
     a76:	69 b1       	in	r22, 0x09	; 9
     a78:	66 23       	and	r22, r22
     a7a:	79 f0       	breq	.+30     	; 0xa9a <_Z7pulseInhh+0x304>
     a7c:	e9 80       	ldd	r14, Y+1	; 0x01
     a7e:	ff 24       	eor	r15, r15
     a80:	ee 0c       	add	r14, r14
     a82:	ff 1c       	adc	r15, r15
     a84:	e0 0e       	add	r14, r16
     a86:	f1 1e       	adc	r15, r17
  // The ping travels out and back, so to find the distance of the object we
  // take half of the distance travelled.
  return (microseconds*0.17/ 2);
}

unsigned long pulseIn(volatile uint8_t pInno, uint8_t vAlue)
     a88:	6b 2d       	mov	r22, r11
     a8a:	f7 01       	movw	r30, r14
     a8c:	e0 80       	ld	r14, Z
     a8e:	f1 80       	ldd	r15, Z+1	; 0x01
     a90:	e1 14       	cp	r14, r1
     a92:	f1 04       	cpc	r15, r1
     a94:	19 f4       	brne	.+6      	; 0xa9c <_Z7pulseInhh+0x306>
     a96:	6c 2d       	mov	r22, r12
     a98:	01 c0       	rjmp	.+2      	; 0xa9c <_Z7pulseInhh+0x306>
	                  {
		              if (--mAxloops == 0)
		                 return 0;
	                      }
  // wait for the pulse to stop
                while (((PIND) && (c[pInno])) == vAlue)
     a9a:	6c 2d       	mov	r22, r12
     a9c:	70 e0       	ldi	r23, 0x00	; 0
     a9e:	86 16       	cp	r8, r22
     aa0:	97 06       	cpc	r9, r23
     aa2:	f9 f2       	breq	.-66     	; 0xa62 <_Z7pulseInhh+0x2cc>
     aa4:	45 c2       	rjmp	.+1162   	; 0xf30 <_Z7pulseInhh+0x79a>
				  //  DDRH|(0<<c[pInno]);
	case'e':
	                  
	                 { while (((PINE) && (c[pInno])) == vAlue)
	                {
		              if (--mAxloops == 0)
     aa6:	01 97       	sbiw	r24, 0x01	; 1
     aa8:	a1 09       	sbc	r26, r1
     aaa:	b1 09       	sbc	r27, r1
     aac:	51 f4       	brne	.+20     	; 0xac2 <_Z7pulseInhh+0x32c>
     aae:	11 c2       	rjmp	.+1058   	; 0xed2 <_Z7pulseInhh+0x73c>
  TCCR2A = (1 << WGM21) | (1 << COM2A1) | (1 << FOC2A) | (0 << COM2A0) | (0 << WGM20); //initializing in CTC mode
  TCCR2A = (1 << CS20);
  unsigned long mAxloops = 500000;
  unsigned long wIdth = 0;
  // wait for any previous pulse to end
  switch(d[pInno]){
     ab0:	80 e2       	ldi	r24, 0x20	; 32
     ab2:	91 ea       	ldi	r25, 0xA1	; 161
     ab4:	a7 e0       	ldi	r26, 0x07	; 7
     ab6:	b0 e0       	ldi	r27, 0x00	; 0
                     return wIdth;
                         } break; 		//case'h':
				  //  DDRH|(0<<c[pInno]);
	case'e':
	                  
	                 { while (((PINE) && (c[pInno])) == vAlue)
     ab8:	00 e0       	ldi	r16, 0x00	; 0
     aba:	40 e0       	ldi	r20, 0x00	; 0
     abc:	52 e0       	ldi	r21, 0x02	; 2
  // The ping travels out and back, so to find the distance of the object we
  // take half of the distance travelled.
  return (microseconds*0.17/ 2);
}

unsigned long pulseIn(volatile uint8_t pInno, uint8_t vAlue)
     abe:	11 e0       	ldi	r17, 0x01	; 1
                     return wIdth;
                         } break; 		//case'h':
				  //  DDRH|(0<<c[pInno]);
	case'e':
	                  
	                 { while (((PINE) && (c[pInno])) == vAlue)
     ac0:	70 e0       	ldi	r23, 0x00	; 0
     ac2:	2c b1       	in	r18, 0x0c	; 12
     ac4:	22 23       	and	r18, r18
     ac6:	71 f0       	breq	.+28     	; 0xae4 <_Z7pulseInhh+0x34e>
     ac8:	e9 81       	ldd	r30, Y+1	; 0x01
     aca:	f0 e0       	ldi	r31, 0x00	; 0
     acc:	ee 0f       	add	r30, r30
     ace:	ff 1f       	adc	r31, r31
     ad0:	e4 0f       	add	r30, r20
     ad2:	f5 1f       	adc	r31, r21
  // The ping travels out and back, so to find the distance of the object we
  // take half of the distance travelled.
  return (microseconds*0.17/ 2);
}

unsigned long pulseIn(volatile uint8_t pInno, uint8_t vAlue)
     ad4:	21 2f       	mov	r18, r17
     ad6:	01 90       	ld	r0, Z+
     ad8:	f0 81       	ld	r31, Z
     ada:	e0 2d       	mov	r30, r0
     adc:	30 97       	sbiw	r30, 0x00	; 0
     ade:	19 f4       	brne	.+6      	; 0xae6 <_Z7pulseInhh+0x350>
     ae0:	20 2f       	mov	r18, r16
     ae2:	01 c0       	rjmp	.+2      	; 0xae6 <_Z7pulseInhh+0x350>
                     return wIdth;
                         } break; 		//case'h':
				  //  DDRH|(0<<c[pInno]);
	case'e':
	                  
	                 { while (((PINE) && (c[pInno])) == vAlue)
     ae4:	20 2f       	mov	r18, r16
     ae6:	4b 01       	movw	r8, r22
     ae8:	30 e0       	ldi	r19, 0x00	; 0
     aea:	26 17       	cp	r18, r22
     aec:	37 07       	cpc	r19, r23
     aee:	d9 f2       	breq	.-74     	; 0xaa6 <_Z7pulseInhh+0x310>
     af0:	05 c0       	rjmp	.+10     	; 0xafc <_Z7pulseInhh+0x366>
		               return 0;
	                   }
  // wait for the pulse to start  
                  while (((PINE) && (c[pInno])) != vAlue)
	                  {
		              if (--mAxloops == 0)
     af2:	01 97       	sbiw	r24, 0x01	; 1
     af4:	a1 09       	sbc	r26, r1
     af6:	b1 09       	sbc	r27, r1
     af8:	29 f4       	brne	.+10     	; 0xb04 <_Z7pulseInhh+0x36e>
     afa:	ef c1       	rjmp	.+990    	; 0xeda <_Z7pulseInhh+0x744>
	                {
		              if (--mAxloops == 0)
		               return 0;
	                   }
  // wait for the pulse to start  
                  while (((PINE) && (c[pInno])) != vAlue)
     afc:	60 e0       	ldi	r22, 0x00	; 0
     afe:	72 e0       	ldi	r23, 0x02	; 2
  // The ping travels out and back, so to find the distance of the object we
  // take half of the distance travelled.
  return (microseconds*0.17/ 2);
}

unsigned long pulseIn(volatile uint8_t pInno, uint8_t vAlue)
     b00:	01 e0       	ldi	r16, 0x01	; 1
     b02:	10 e0       	ldi	r17, 0x00	; 0
	                {
		              if (--mAxloops == 0)
		               return 0;
	                   }
  // wait for the pulse to start  
                  while (((PINE) && (c[pInno])) != vAlue)
     b04:	2c b1       	in	r18, 0x0c	; 12
     b06:	22 23       	and	r18, r18
     b08:	79 f0       	breq	.+30     	; 0xb28 <_Z7pulseInhh+0x392>
     b0a:	49 81       	ldd	r20, Y+1	; 0x01
     b0c:	50 e0       	ldi	r21, 0x00	; 0
     b0e:	44 0f       	add	r20, r20
     b10:	55 1f       	adc	r21, r21
     b12:	46 0f       	add	r20, r22
     b14:	57 1f       	adc	r21, r23
  // The ping travels out and back, so to find the distance of the object we
  // take half of the distance travelled.
  return (microseconds*0.17/ 2);
}

unsigned long pulseIn(volatile uint8_t pInno, uint8_t vAlue)
     b16:	20 2f       	mov	r18, r16
     b18:	fa 01       	movw	r30, r20
     b1a:	40 81       	ld	r20, Z
     b1c:	51 81       	ldd	r21, Z+1	; 0x01
     b1e:	41 15       	cp	r20, r1
     b20:	51 05       	cpc	r21, r1
     b22:	19 f4       	brne	.+6      	; 0xb2a <_Z7pulseInhh+0x394>
     b24:	21 2f       	mov	r18, r17
     b26:	01 c0       	rjmp	.+2      	; 0xb2a <_Z7pulseInhh+0x394>
	                {
		              if (--mAxloops == 0)
		               return 0;
	                   }
  // wait for the pulse to start  
                  while (((PINE) && (c[pInno])) != vAlue)
     b28:	21 2f       	mov	r18, r17
     b2a:	30 e0       	ldi	r19, 0x00	; 0
     b2c:	82 16       	cp	r8, r18
     b2e:	93 06       	cpc	r9, r19
     b30:	01 f7       	brne	.-64     	; 0xaf2 <_Z7pulseInhh+0x35c>
     b32:	20 e0       	ldi	r18, 0x00	; 0
     b34:	30 e0       	ldi	r19, 0x00	; 0
     b36:	a9 01       	movw	r20, r18
	                  {
		              if (--mAxloops == 0)
		                 return 0;
	                      }
  // wait for the pulse to stop
                while (((PINE) && (c[pInno])) == vAlue)
     b38:	cc 24       	eor	r12, r12
     b3a:	00 e0       	ldi	r16, 0x00	; 0
     b3c:	12 e0       	ldi	r17, 0x02	; 2
  // The ping travels out and back, so to find the distance of the object we
  // take half of the distance travelled.
  return (microseconds*0.17/ 2);
}

unsigned long pulseIn(volatile uint8_t pInno, uint8_t vAlue)
     b3e:	bb 24       	eor	r11, r11
     b40:	b3 94       	inc	r11
     b42:	0a c0       	rjmp	.+20     	; 0xb58 <_Z7pulseInhh+0x3c2>
		                 return 0;
	                      }
  // wait for the pulse to stop
                while (((PINE) && (c[pInno])) == vAlue)
	                 {
                 		if (++wIdth == mAxloops)
     b44:	2f 5f       	subi	r18, 0xFF	; 255
     b46:	3f 4f       	sbci	r19, 0xFF	; 255
     b48:	4f 4f       	sbci	r20, 0xFF	; 255
     b4a:	5f 4f       	sbci	r21, 0xFF	; 255
     b4c:	82 17       	cp	r24, r18
     b4e:	93 07       	cpc	r25, r19
     b50:	a4 07       	cpc	r26, r20
     b52:	b5 07       	cpc	r27, r21
     b54:	09 f4       	brne	.+2      	; 0xb58 <_Z7pulseInhh+0x3c2>
     b56:	c5 c1       	rjmp	.+906    	; 0xee2 <_Z7pulseInhh+0x74c>
	                  {
		              if (--mAxloops == 0)
		                 return 0;
	                      }
  // wait for the pulse to stop
                while (((PINE) && (c[pInno])) == vAlue)
     b58:	6c b1       	in	r22, 0x0c	; 12
     b5a:	66 23       	and	r22, r22
     b5c:	79 f0       	breq	.+30     	; 0xb7c <_Z7pulseInhh+0x3e6>
     b5e:	e9 80       	ldd	r14, Y+1	; 0x01
     b60:	ff 24       	eor	r15, r15
     b62:	ee 0c       	add	r14, r14
     b64:	ff 1c       	adc	r15, r15
     b66:	e0 0e       	add	r14, r16
     b68:	f1 1e       	adc	r15, r17
  // The ping travels out and back, so to find the distance of the object we
  // take half of the distance travelled.
  return (microseconds*0.17/ 2);
}

unsigned long pulseIn(volatile uint8_t pInno, uint8_t vAlue)
     b6a:	6b 2d       	mov	r22, r11
     b6c:	f7 01       	movw	r30, r14
     b6e:	e0 80       	ld	r14, Z
     b70:	f1 80       	ldd	r15, Z+1	; 0x01
     b72:	e1 14       	cp	r14, r1
     b74:	f1 04       	cpc	r15, r1
     b76:	19 f4       	brne	.+6      	; 0xb7e <_Z7pulseInhh+0x3e8>
     b78:	6c 2d       	mov	r22, r12
     b7a:	01 c0       	rjmp	.+2      	; 0xb7e <_Z7pulseInhh+0x3e8>
	                  {
		              if (--mAxloops == 0)
		                 return 0;
	                      }
  // wait for the pulse to stop
                while (((PINE) && (c[pInno])) == vAlue)
     b7c:	6c 2d       	mov	r22, r12
     b7e:	70 e0       	ldi	r23, 0x00	; 0
     b80:	86 16       	cp	r8, r22
     b82:	97 06       	cpc	r9, r23
     b84:	f9 f2       	breq	.-66     	; 0xb44 <_Z7pulseInhh+0x3ae>
     b86:	d4 c1       	rjmp	.+936    	; 0xf30 <_Z7pulseInhh+0x79a>
	                  
case'h':
	                 
	                 { while (((PINH) &&(c[pInno])) == vAlue)
	                {
		              if (--mAxloops == 0)
     b88:	01 97       	sbiw	r24, 0x01	; 1
     b8a:	a1 09       	sbc	r26, r1
     b8c:	b1 09       	sbc	r27, r1
     b8e:	69 f4       	brne	.+26     	; 0xbaa <_Z7pulseInhh+0x414>
     b90:	ac c1       	rjmp	.+856    	; 0xeea <_Z7pulseInhh+0x754>
  TCCR2A = (1 << WGM21) | (1 << COM2A1) | (1 << FOC2A) | (0 << COM2A0) | (0 << WGM20); //initializing in CTC mode
  TCCR2A = (1 << CS20);
  unsigned long mAxloops = 500000;
  unsigned long wIdth = 0;
  // wait for any previous pulse to end
  switch(d[pInno]){
     b92:	80 e2       	ldi	r24, 0x20	; 32
     b94:	91 ea       	ldi	r25, 0xA1	; 161
     b96:	a7 e0       	ldi	r26, 0x07	; 7
     b98:	b0 e0       	ldi	r27, 0x00	; 0
                     return wIdth;
                         } break; 			    
	                  
case'h':
	                 
	                 { while (((PINH) &&(c[pInno])) == vAlue)
     b9a:	20 e0       	ldi	r18, 0x00	; 0
     b9c:	31 e0       	ldi	r19, 0x01	; 1
     b9e:	ee 24       	eor	r14, r14
     ba0:	40 e0       	ldi	r20, 0x00	; 0
     ba2:	52 e0       	ldi	r21, 0x02	; 2
  // The ping travels out and back, so to find the distance of the object we
  // take half of the distance travelled.
  return (microseconds*0.17/ 2);
}

unsigned long pulseIn(volatile uint8_t pInno, uint8_t vAlue)
     ba4:	cc 24       	eor	r12, r12
     ba6:	c3 94       	inc	r12
                     return wIdth;
                         } break; 			    
	                  
case'h':
	                 
	                 { while (((PINH) &&(c[pInno])) == vAlue)
     ba8:	70 e0       	ldi	r23, 0x00	; 0
     baa:	f9 01       	movw	r30, r18
     bac:	10 81       	ld	r17, Z
     bae:	11 23       	and	r17, r17
     bb0:	71 f0       	breq	.+28     	; 0xbce <_Z7pulseInhh+0x438>
     bb2:	e9 81       	ldd	r30, Y+1	; 0x01
     bb4:	f0 e0       	ldi	r31, 0x00	; 0
     bb6:	ee 0f       	add	r30, r30
     bb8:	ff 1f       	adc	r31, r31
     bba:	e4 0f       	add	r30, r20
     bbc:	f5 1f       	adc	r31, r21
  // The ping travels out and back, so to find the distance of the object we
  // take half of the distance travelled.
  return (microseconds*0.17/ 2);
}

unsigned long pulseIn(volatile uint8_t pInno, uint8_t vAlue)
     bbe:	0c 2d       	mov	r16, r12
     bc0:	01 90       	ld	r0, Z+
     bc2:	f0 81       	ld	r31, Z
     bc4:	e0 2d       	mov	r30, r0
     bc6:	30 97       	sbiw	r30, 0x00	; 0
     bc8:	19 f4       	brne	.+6      	; 0xbd0 <_Z7pulseInhh+0x43a>
     bca:	0e 2d       	mov	r16, r14
     bcc:	01 c0       	rjmp	.+2      	; 0xbd0 <_Z7pulseInhh+0x43a>
                     return wIdth;
                         } break; 			    
	                  
case'h':
	                 
	                 { while (((PINH) &&(c[pInno])) == vAlue)
     bce:	0e 2d       	mov	r16, r14
     bd0:	4b 01       	movw	r8, r22
     bd2:	10 e0       	ldi	r17, 0x00	; 0
     bd4:	06 17       	cp	r16, r22
     bd6:	17 07       	cpc	r17, r23
     bd8:	b9 f2       	breq	.-82     	; 0xb88 <_Z7pulseInhh+0x3f2>
     bda:	05 c0       	rjmp	.+10     	; 0xbe6 <_Z7pulseInhh+0x450>
		               return 0;
	                   }
  // wait for the pulse to start  
                  while (((PINH) && (c[pInno])) != vAlue)
	                  {
		              if (--mAxloops == 0)
     bdc:	01 97       	sbiw	r24, 0x01	; 1
     bde:	a1 09       	sbc	r26, r1
     be0:	b1 09       	sbc	r27, r1
     be2:	41 f4       	brne	.+16     	; 0xbf4 <_Z7pulseInhh+0x45e>
     be4:	86 c1       	rjmp	.+780    	; 0xef2 <_Z7pulseInhh+0x75c>
	                {
		              if (--mAxloops == 0)
		               return 0;
	                   }
  // wait for the pulse to start  
                  while (((PINH) && (c[pInno])) != vAlue)
     be6:	40 e0       	ldi	r20, 0x00	; 0
     be8:	51 e0       	ldi	r21, 0x01	; 1
     bea:	00 e0       	ldi	r16, 0x00	; 0
     bec:	12 e0       	ldi	r17, 0x02	; 2
  // The ping travels out and back, so to find the distance of the object we
  // take half of the distance travelled.
  return (microseconds*0.17/ 2);
}

unsigned long pulseIn(volatile uint8_t pInno, uint8_t vAlue)
     bee:	cc 24       	eor	r12, r12
     bf0:	c3 94       	inc	r12
     bf2:	ee 24       	eor	r14, r14
	                {
		              if (--mAxloops == 0)
		               return 0;
	                   }
  // wait for the pulse to start  
                  while (((PINH) && (c[pInno])) != vAlue)
     bf4:	fa 01       	movw	r30, r20
     bf6:	20 81       	ld	r18, Z
     bf8:	22 23       	and	r18, r18
     bfa:	79 f0       	breq	.+30     	; 0xc1a <_Z7pulseInhh+0x484>
     bfc:	69 81       	ldd	r22, Y+1	; 0x01
     bfe:	70 e0       	ldi	r23, 0x00	; 0
     c00:	66 0f       	add	r22, r22
     c02:	77 1f       	adc	r23, r23
     c04:	60 0f       	add	r22, r16
     c06:	71 1f       	adc	r23, r17
  // The ping travels out and back, so to find the distance of the object we
  // take half of the distance travelled.
  return (microseconds*0.17/ 2);
}

unsigned long pulseIn(volatile uint8_t pInno, uint8_t vAlue)
     c08:	2c 2d       	mov	r18, r12
     c0a:	fb 01       	movw	r30, r22
     c0c:	60 81       	ld	r22, Z
     c0e:	71 81       	ldd	r23, Z+1	; 0x01
     c10:	61 15       	cp	r22, r1
     c12:	71 05       	cpc	r23, r1
     c14:	19 f4       	brne	.+6      	; 0xc1c <_Z7pulseInhh+0x486>
     c16:	2e 2d       	mov	r18, r14
     c18:	01 c0       	rjmp	.+2      	; 0xc1c <_Z7pulseInhh+0x486>
	                {
		              if (--mAxloops == 0)
		               return 0;
	                   }
  // wait for the pulse to start  
                  while (((PINH) && (c[pInno])) != vAlue)
     c1a:	2e 2d       	mov	r18, r14
     c1c:	30 e0       	ldi	r19, 0x00	; 0
     c1e:	82 16       	cp	r8, r18
     c20:	93 06       	cpc	r9, r19
     c22:	e1 f6       	brne	.-72     	; 0xbdc <_Z7pulseInhh+0x446>
     c24:	20 e0       	ldi	r18, 0x00	; 0
     c26:	30 e0       	ldi	r19, 0x00	; 0
     c28:	a9 01       	movw	r20, r18
	                  {
		              if (--mAxloops == 0)
		                 return 0;
	                      }
  // wait for the pulse to stop
                while (((PINH) && ((c[pInno]))) == vAlue)
     c2a:	00 e0       	ldi	r16, 0x00	; 0
     c2c:	11 e0       	ldi	r17, 0x01	; 1
     c2e:	bb 24       	eor	r11, r11
     c30:	0f 2e       	mov	r0, r31
     c32:	f0 e0       	ldi	r31, 0x00	; 0
     c34:	cf 2e       	mov	r12, r31
     c36:	f2 e0       	ldi	r31, 0x02	; 2
     c38:	df 2e       	mov	r13, r31
     c3a:	f0 2d       	mov	r31, r0
  // The ping travels out and back, so to find the distance of the object we
  // take half of the distance travelled.
  return (microseconds*0.17/ 2);
}

unsigned long pulseIn(volatile uint8_t pInno, uint8_t vAlue)
     c3c:	aa 24       	eor	r10, r10
     c3e:	a3 94       	inc	r10
     c40:	0a c0       	rjmp	.+20     	; 0xc56 <_Z7pulseInhh+0x4c0>
		                 return 0;
	                      }
  // wait for the pulse to stop
                while (((PINH) && ((c[pInno]))) == vAlue)
	                 {
                 		if (++wIdth == mAxloops)
     c42:	2f 5f       	subi	r18, 0xFF	; 255
     c44:	3f 4f       	sbci	r19, 0xFF	; 255
     c46:	4f 4f       	sbci	r20, 0xFF	; 255
     c48:	5f 4f       	sbci	r21, 0xFF	; 255
     c4a:	82 17       	cp	r24, r18
     c4c:	93 07       	cpc	r25, r19
     c4e:	a4 07       	cpc	r26, r20
     c50:	b5 07       	cpc	r27, r21
     c52:	09 f4       	brne	.+2      	; 0xc56 <_Z7pulseInhh+0x4c0>
     c54:	52 c1       	rjmp	.+676    	; 0xefa <_Z7pulseInhh+0x764>
	                  {
		              if (--mAxloops == 0)
		                 return 0;
	                      }
  // wait for the pulse to stop
                while (((PINH) && ((c[pInno]))) == vAlue)
     c56:	f8 01       	movw	r30, r16
     c58:	60 81       	ld	r22, Z
     c5a:	66 23       	and	r22, r22
     c5c:	79 f0       	breq	.+30     	; 0xc7c <_Z7pulseInhh+0x4e6>
     c5e:	e9 80       	ldd	r14, Y+1	; 0x01
     c60:	ff 24       	eor	r15, r15
     c62:	ee 0c       	add	r14, r14
     c64:	ff 1c       	adc	r15, r15
     c66:	ec 0c       	add	r14, r12
     c68:	fd 1c       	adc	r15, r13
  // The ping travels out and back, so to find the distance of the object we
  // take half of the distance travelled.
  return (microseconds*0.17/ 2);
}

unsigned long pulseIn(volatile uint8_t pInno, uint8_t vAlue)
     c6a:	6a 2d       	mov	r22, r10
     c6c:	f7 01       	movw	r30, r14
     c6e:	e0 80       	ld	r14, Z
     c70:	f1 80       	ldd	r15, Z+1	; 0x01
     c72:	e1 14       	cp	r14, r1
     c74:	f1 04       	cpc	r15, r1
     c76:	19 f4       	brne	.+6      	; 0xc7e <_Z7pulseInhh+0x4e8>
     c78:	6b 2d       	mov	r22, r11
     c7a:	01 c0       	rjmp	.+2      	; 0xc7e <_Z7pulseInhh+0x4e8>
	                  {
		              if (--mAxloops == 0)
		                 return 0;
	                      }
  // wait for the pulse to stop
                while (((PINH) && ((c[pInno]))) == vAlue)
     c7c:	6b 2d       	mov	r22, r11
     c7e:	70 e0       	ldi	r23, 0x00	; 0
     c80:	86 16       	cp	r8, r22
     c82:	97 06       	cpc	r9, r23
     c84:	f1 f2       	breq	.-68     	; 0xc42 <_Z7pulseInhh+0x4ac>
     c86:	54 c1       	rjmp	.+680    	; 0xf30 <_Z7pulseInhh+0x79a>
                         } break;  
case'j':
	                  
	                 { while (((PINJ) && (c[pInno])) == vAlue)
	                {
		              if (--mAxloops == 0)
     c88:	01 97       	sbiw	r24, 0x01	; 1
     c8a:	a1 09       	sbc	r26, r1
     c8c:	b1 09       	sbc	r27, r1
     c8e:	69 f4       	brne	.+26     	; 0xcaa <_Z7pulseInhh+0x514>
     c90:	38 c1       	rjmp	.+624    	; 0xf02 <_Z7pulseInhh+0x76c>
  TCCR2A = (1 << WGM21) | (1 << COM2A1) | (1 << FOC2A) | (0 << COM2A0) | (0 << WGM20); //initializing in CTC mode
  TCCR2A = (1 << CS20);
  unsigned long mAxloops = 500000;
  unsigned long wIdth = 0;
  // wait for any previous pulse to end
  switch(d[pInno]){
     c92:	80 e2       	ldi	r24, 0x20	; 32
     c94:	91 ea       	ldi	r25, 0xA1	; 161
     c96:	a7 e0       	ldi	r26, 0x07	; 7
     c98:	b0 e0       	ldi	r27, 0x00	; 0
                     	    }
                     return wIdth;
                         } break;  
case'j':
	                  
	                 { while (((PINJ) && (c[pInno])) == vAlue)
     c9a:	23 e0       	ldi	r18, 0x03	; 3
     c9c:	31 e0       	ldi	r19, 0x01	; 1
     c9e:	ee 24       	eor	r14, r14
     ca0:	40 e0       	ldi	r20, 0x00	; 0
     ca2:	52 e0       	ldi	r21, 0x02	; 2
  // The ping travels out and back, so to find the distance of the object we
  // take half of the distance travelled.
  return (microseconds*0.17/ 2);
}

unsigned long pulseIn(volatile uint8_t pInno, uint8_t vAlue)
     ca4:	cc 24       	eor	r12, r12
     ca6:	c3 94       	inc	r12
                     	    }
                     return wIdth;
                         } break;  
case'j':
	                  
	                 { while (((PINJ) && (c[pInno])) == vAlue)
     ca8:	70 e0       	ldi	r23, 0x00	; 0
     caa:	f9 01       	movw	r30, r18
     cac:	10 81       	ld	r17, Z
     cae:	11 23       	and	r17, r17
     cb0:	71 f0       	breq	.+28     	; 0xcce <_Z7pulseInhh+0x538>
     cb2:	e9 81       	ldd	r30, Y+1	; 0x01
     cb4:	f0 e0       	ldi	r31, 0x00	; 0
     cb6:	ee 0f       	add	r30, r30
     cb8:	ff 1f       	adc	r31, r31
     cba:	e4 0f       	add	r30, r20
     cbc:	f5 1f       	adc	r31, r21
  // The ping travels out and back, so to find the distance of the object we
  // take half of the distance travelled.
  return (microseconds*0.17/ 2);
}

unsigned long pulseIn(volatile uint8_t pInno, uint8_t vAlue)
     cbe:	0c 2d       	mov	r16, r12
     cc0:	01 90       	ld	r0, Z+
     cc2:	f0 81       	ld	r31, Z
     cc4:	e0 2d       	mov	r30, r0
     cc6:	30 97       	sbiw	r30, 0x00	; 0
     cc8:	19 f4       	brne	.+6      	; 0xcd0 <_Z7pulseInhh+0x53a>
     cca:	0e 2d       	mov	r16, r14
     ccc:	01 c0       	rjmp	.+2      	; 0xcd0 <_Z7pulseInhh+0x53a>
                     	    }
                     return wIdth;
                         } break;  
case'j':
	                  
	                 { while (((PINJ) && (c[pInno])) == vAlue)
     cce:	0e 2d       	mov	r16, r14
     cd0:	4b 01       	movw	r8, r22
     cd2:	10 e0       	ldi	r17, 0x00	; 0
     cd4:	06 17       	cp	r16, r22
     cd6:	17 07       	cpc	r17, r23
     cd8:	b9 f2       	breq	.-82     	; 0xc88 <_Z7pulseInhh+0x4f2>
     cda:	05 c0       	rjmp	.+10     	; 0xce6 <_Z7pulseInhh+0x550>
		               return 0;
	                   }
  // wait for the pulse to start  
                  while (((PINJ) && (c[pInno])) != vAlue)
	                  {
		              if (--mAxloops == 0)
     cdc:	01 97       	sbiw	r24, 0x01	; 1
     cde:	a1 09       	sbc	r26, r1
     ce0:	b1 09       	sbc	r27, r1
     ce2:	41 f4       	brne	.+16     	; 0xcf4 <_Z7pulseInhh+0x55e>
     ce4:	12 c1       	rjmp	.+548    	; 0xf0a <_Z7pulseInhh+0x774>
	                {
		              if (--mAxloops == 0)
		               return 0;
	                   }
  // wait for the pulse to start  
                  while (((PINJ) && (c[pInno])) != vAlue)
     ce6:	43 e0       	ldi	r20, 0x03	; 3
     ce8:	51 e0       	ldi	r21, 0x01	; 1
     cea:	00 e0       	ldi	r16, 0x00	; 0
     cec:	12 e0       	ldi	r17, 0x02	; 2
  // The ping travels out and back, so to find the distance of the object we
  // take half of the distance travelled.
  return (microseconds*0.17/ 2);
}

unsigned long pulseIn(volatile uint8_t pInno, uint8_t vAlue)
     cee:	cc 24       	eor	r12, r12
     cf0:	c3 94       	inc	r12
     cf2:	ee 24       	eor	r14, r14
	                {
		              if (--mAxloops == 0)
		               return 0;
	                   }
  // wait for the pulse to start  
                  while (((PINJ) && (c[pInno])) != vAlue)
     cf4:	fa 01       	movw	r30, r20
     cf6:	20 81       	ld	r18, Z
     cf8:	22 23       	and	r18, r18
     cfa:	79 f0       	breq	.+30     	; 0xd1a <_Z7pulseInhh+0x584>
     cfc:	69 81       	ldd	r22, Y+1	; 0x01
     cfe:	70 e0       	ldi	r23, 0x00	; 0
     d00:	66 0f       	add	r22, r22
     d02:	77 1f       	adc	r23, r23
     d04:	60 0f       	add	r22, r16
     d06:	71 1f       	adc	r23, r17
  // The ping travels out and back, so to find the distance of the object we
  // take half of the distance travelled.
  return (microseconds*0.17/ 2);
}

unsigned long pulseIn(volatile uint8_t pInno, uint8_t vAlue)
     d08:	2c 2d       	mov	r18, r12
     d0a:	fb 01       	movw	r30, r22
     d0c:	60 81       	ld	r22, Z
     d0e:	71 81       	ldd	r23, Z+1	; 0x01
     d10:	61 15       	cp	r22, r1
     d12:	71 05       	cpc	r23, r1
     d14:	19 f4       	brne	.+6      	; 0xd1c <_Z7pulseInhh+0x586>
     d16:	2e 2d       	mov	r18, r14
     d18:	01 c0       	rjmp	.+2      	; 0xd1c <_Z7pulseInhh+0x586>
	                {
		              if (--mAxloops == 0)
		               return 0;
	                   }
  // wait for the pulse to start  
                  while (((PINJ) && (c[pInno])) != vAlue)
     d1a:	2e 2d       	mov	r18, r14
     d1c:	30 e0       	ldi	r19, 0x00	; 0
     d1e:	82 16       	cp	r8, r18
     d20:	93 06       	cpc	r9, r19
     d22:	e1 f6       	brne	.-72     	; 0xcdc <_Z7pulseInhh+0x546>
     d24:	20 e0       	ldi	r18, 0x00	; 0
     d26:	30 e0       	ldi	r19, 0x00	; 0
     d28:	a9 01       	movw	r20, r18
	                  {
		              if (--mAxloops == 0)
		                 return 0;
	                      }
  // wait for the pulse to stop
                while (((PINJ) && (c[pInno])) == vAlue)
     d2a:	03 e0       	ldi	r16, 0x03	; 3
     d2c:	11 e0       	ldi	r17, 0x01	; 1
     d2e:	bb 24       	eor	r11, r11
     d30:	0f 2e       	mov	r0, r31
     d32:	f0 e0       	ldi	r31, 0x00	; 0
     d34:	cf 2e       	mov	r12, r31
     d36:	f2 e0       	ldi	r31, 0x02	; 2
     d38:	df 2e       	mov	r13, r31
     d3a:	f0 2d       	mov	r31, r0
  // The ping travels out and back, so to find the distance of the object we
  // take half of the distance travelled.
  return (microseconds*0.17/ 2);
}

unsigned long pulseIn(volatile uint8_t pInno, uint8_t vAlue)
     d3c:	aa 24       	eor	r10, r10
     d3e:	a3 94       	inc	r10
     d40:	0a c0       	rjmp	.+20     	; 0xd56 <_Z7pulseInhh+0x5c0>
		                 return 0;
	                      }
  // wait for the pulse to stop
                while (((PINJ) && (c[pInno])) == vAlue)
	                 {
                 		if (++wIdth == mAxloops)
     d42:	2f 5f       	subi	r18, 0xFF	; 255
     d44:	3f 4f       	sbci	r19, 0xFF	; 255
     d46:	4f 4f       	sbci	r20, 0xFF	; 255
     d48:	5f 4f       	sbci	r21, 0xFF	; 255
     d4a:	82 17       	cp	r24, r18
     d4c:	93 07       	cpc	r25, r19
     d4e:	a4 07       	cpc	r26, r20
     d50:	b5 07       	cpc	r27, r21
     d52:	09 f4       	brne	.+2      	; 0xd56 <_Z7pulseInhh+0x5c0>
     d54:	de c0       	rjmp	.+444    	; 0xf12 <_Z7pulseInhh+0x77c>
	                  {
		              if (--mAxloops == 0)
		                 return 0;
	                      }
  // wait for the pulse to stop
                while (((PINJ) && (c[pInno])) == vAlue)
     d56:	f8 01       	movw	r30, r16
     d58:	60 81       	ld	r22, Z
     d5a:	66 23       	and	r22, r22
     d5c:	79 f0       	breq	.+30     	; 0xd7c <_Z7pulseInhh+0x5e6>
     d5e:	e9 80       	ldd	r14, Y+1	; 0x01
     d60:	ff 24       	eor	r15, r15
     d62:	ee 0c       	add	r14, r14
     d64:	ff 1c       	adc	r15, r15
     d66:	ec 0c       	add	r14, r12
     d68:	fd 1c       	adc	r15, r13
  // The ping travels out and back, so to find the distance of the object we
  // take half of the distance travelled.
  return (microseconds*0.17/ 2);
}

unsigned long pulseIn(volatile uint8_t pInno, uint8_t vAlue)
     d6a:	6a 2d       	mov	r22, r10
     d6c:	f7 01       	movw	r30, r14
     d6e:	e0 80       	ld	r14, Z
     d70:	f1 80       	ldd	r15, Z+1	; 0x01
     d72:	e1 14       	cp	r14, r1
     d74:	f1 04       	cpc	r15, r1
     d76:	19 f4       	brne	.+6      	; 0xd7e <_Z7pulseInhh+0x5e8>
     d78:	6b 2d       	mov	r22, r11
     d7a:	01 c0       	rjmp	.+2      	; 0xd7e <_Z7pulseInhh+0x5e8>
	                  {
		              if (--mAxloops == 0)
		                 return 0;
	                      }
  // wait for the pulse to stop
                while (((PINJ) && (c[pInno])) == vAlue)
     d7c:	6b 2d       	mov	r22, r11
     d7e:	70 e0       	ldi	r23, 0x00	; 0
     d80:	86 16       	cp	r8, r22
     d82:	97 06       	cpc	r9, r23
     d84:	f1 f2       	breq	.-68     	; 0xd42 <_Z7pulseInhh+0x5ac>
     d86:	d4 c0       	rjmp	.+424    	; 0xf30 <_Z7pulseInhh+0x79a>
			           break;
case 'l':
	                  
	                 { while (((PINL) && (c[pInno])) == vAlue)
	                {
		              if (--mAxloops == 0)
     d88:	01 97       	sbiw	r24, 0x01	; 1
     d8a:	a1 09       	sbc	r26, r1
     d8c:	b1 09       	sbc	r27, r1
     d8e:	69 f4       	brne	.+26     	; 0xdaa <_Z7pulseInhh+0x614>
     d90:	c4 c0       	rjmp	.+392    	; 0xf1a <_Z7pulseInhh+0x784>
  TCCR2A = (1 << WGM21) | (1 << COM2A1) | (1 << FOC2A) | (0 << COM2A0) | (0 << WGM20); //initializing in CTC mode
  TCCR2A = (1 << CS20);
  unsigned long mAxloops = 500000;
  unsigned long wIdth = 0;
  // wait for any previous pulse to end
  switch(d[pInno]){
     d92:	80 e2       	ldi	r24, 0x20	; 32
     d94:	91 ea       	ldi	r25, 0xA1	; 161
     d96:	a7 e0       	ldi	r26, 0x07	; 7
     d98:	b0 e0       	ldi	r27, 0x00	; 0
                     return wIdth;
                         }  
			           break;
case 'l':
	                  
	                 { while (((PINL) && (c[pInno])) == vAlue)
     d9a:	29 e0       	ldi	r18, 0x09	; 9
     d9c:	31 e0       	ldi	r19, 0x01	; 1
     d9e:	ee 24       	eor	r14, r14
     da0:	40 e0       	ldi	r20, 0x00	; 0
     da2:	52 e0       	ldi	r21, 0x02	; 2
  // The ping travels out and back, so to find the distance of the object we
  // take half of the distance travelled.
  return (microseconds*0.17/ 2);
}

unsigned long pulseIn(volatile uint8_t pInno, uint8_t vAlue)
     da4:	cc 24       	eor	r12, r12
     da6:	c3 94       	inc	r12
                     return wIdth;
                         }  
			           break;
case 'l':
	                  
	                 { while (((PINL) && (c[pInno])) == vAlue)
     da8:	70 e0       	ldi	r23, 0x00	; 0
     daa:	f9 01       	movw	r30, r18
     dac:	10 81       	ld	r17, Z
     dae:	11 23       	and	r17, r17
     db0:	71 f0       	breq	.+28     	; 0xdce <_Z7pulseInhh+0x638>
     db2:	e9 81       	ldd	r30, Y+1	; 0x01
     db4:	f0 e0       	ldi	r31, 0x00	; 0
     db6:	ee 0f       	add	r30, r30
     db8:	ff 1f       	adc	r31, r31
     dba:	e4 0f       	add	r30, r20
     dbc:	f5 1f       	adc	r31, r21
  // The ping travels out and back, so to find the distance of the object we
  // take half of the distance travelled.
  return (microseconds*0.17/ 2);
}

unsigned long pulseIn(volatile uint8_t pInno, uint8_t vAlue)
     dbe:	0c 2d       	mov	r16, r12
     dc0:	01 90       	ld	r0, Z+
     dc2:	f0 81       	ld	r31, Z
     dc4:	e0 2d       	mov	r30, r0
     dc6:	30 97       	sbiw	r30, 0x00	; 0
     dc8:	19 f4       	brne	.+6      	; 0xdd0 <_Z7pulseInhh+0x63a>
     dca:	0e 2d       	mov	r16, r14
     dcc:	01 c0       	rjmp	.+2      	; 0xdd0 <_Z7pulseInhh+0x63a>
                     return wIdth;
                         }  
			           break;
case 'l':
	                  
	                 { while (((PINL) && (c[pInno])) == vAlue)
     dce:	0e 2d       	mov	r16, r14
     dd0:	4b 01       	movw	r8, r22
     dd2:	10 e0       	ldi	r17, 0x00	; 0
     dd4:	06 17       	cp	r16, r22
     dd6:	17 07       	cpc	r17, r23
     dd8:	b9 f2       	breq	.-82     	; 0xd88 <_Z7pulseInhh+0x5f2>
     dda:	05 c0       	rjmp	.+10     	; 0xde6 <_Z7pulseInhh+0x650>
		               return 0;
	                   }
  // wait for the pulse to start  
                  while (((PINL) && (c[pInno])) != vAlue)
	                  {
		              if (--mAxloops == 0)
     ddc:	01 97       	sbiw	r24, 0x01	; 1
     dde:	a1 09       	sbc	r26, r1
     de0:	b1 09       	sbc	r27, r1
     de2:	41 f4       	brne	.+16     	; 0xdf4 <_Z7pulseInhh+0x65e>
     de4:	9e c0       	rjmp	.+316    	; 0xf22 <_Z7pulseInhh+0x78c>
	                {
		              if (--mAxloops == 0)
		               return 0;
	                   }
  // wait for the pulse to start  
                  while (((PINL) && (c[pInno])) != vAlue)
     de6:	49 e0       	ldi	r20, 0x09	; 9
     de8:	51 e0       	ldi	r21, 0x01	; 1
     dea:	00 e0       	ldi	r16, 0x00	; 0
     dec:	12 e0       	ldi	r17, 0x02	; 2
  // The ping travels out and back, so to find the distance of the object we
  // take half of the distance travelled.
  return (microseconds*0.17/ 2);
}

unsigned long pulseIn(volatile uint8_t pInno, uint8_t vAlue)
     dee:	cc 24       	eor	r12, r12
     df0:	c3 94       	inc	r12
     df2:	ee 24       	eor	r14, r14
	                {
		              if (--mAxloops == 0)
		               return 0;
	                   }
  // wait for the pulse to start  
                  while (((PINL) && (c[pInno])) != vAlue)
     df4:	fa 01       	movw	r30, r20
     df6:	20 81       	ld	r18, Z
     df8:	22 23       	and	r18, r18
     dfa:	79 f0       	breq	.+30     	; 0xe1a <_Z7pulseInhh+0x684>
     dfc:	69 81       	ldd	r22, Y+1	; 0x01
     dfe:	70 e0       	ldi	r23, 0x00	; 0
     e00:	66 0f       	add	r22, r22
     e02:	77 1f       	adc	r23, r23
     e04:	60 0f       	add	r22, r16
     e06:	71 1f       	adc	r23, r17
  // The ping travels out and back, so to find the distance of the object we
  // take half of the distance travelled.
  return (microseconds*0.17/ 2);
}

unsigned long pulseIn(volatile uint8_t pInno, uint8_t vAlue)
     e08:	2c 2d       	mov	r18, r12
     e0a:	fb 01       	movw	r30, r22
     e0c:	60 81       	ld	r22, Z
     e0e:	71 81       	ldd	r23, Z+1	; 0x01
     e10:	61 15       	cp	r22, r1
     e12:	71 05       	cpc	r23, r1
     e14:	19 f4       	brne	.+6      	; 0xe1c <_Z7pulseInhh+0x686>
     e16:	2e 2d       	mov	r18, r14
     e18:	01 c0       	rjmp	.+2      	; 0xe1c <_Z7pulseInhh+0x686>
	                {
		              if (--mAxloops == 0)
		               return 0;
	                   }
  // wait for the pulse to start  
                  while (((PINL) && (c[pInno])) != vAlue)
     e1a:	2e 2d       	mov	r18, r14
     e1c:	30 e0       	ldi	r19, 0x00	; 0
     e1e:	82 16       	cp	r8, r18
     e20:	93 06       	cpc	r9, r19
     e22:	e1 f6       	brne	.-72     	; 0xddc <_Z7pulseInhh+0x646>
     e24:	20 e0       	ldi	r18, 0x00	; 0
     e26:	30 e0       	ldi	r19, 0x00	; 0
     e28:	a9 01       	movw	r20, r18
	                  {
		              if (--mAxloops == 0)
		                 return 0;
	                      }
  // wait for the pulse to stop
                while (((PINL) && (c[pInno])) == vAlue)
     e2a:	09 e0       	ldi	r16, 0x09	; 9
     e2c:	11 e0       	ldi	r17, 0x01	; 1
     e2e:	bb 24       	eor	r11, r11
     e30:	0f 2e       	mov	r0, r31
     e32:	f0 e0       	ldi	r31, 0x00	; 0
     e34:	cf 2e       	mov	r12, r31
     e36:	f2 e0       	ldi	r31, 0x02	; 2
     e38:	df 2e       	mov	r13, r31
     e3a:	f0 2d       	mov	r31, r0
  // The ping travels out and back, so to find the distance of the object we
  // take half of the distance travelled.
  return (microseconds*0.17/ 2);
}

unsigned long pulseIn(volatile uint8_t pInno, uint8_t vAlue)
     e3c:	aa 24       	eor	r10, r10
     e3e:	a3 94       	inc	r10
     e40:	0a c0       	rjmp	.+20     	; 0xe56 <_Z7pulseInhh+0x6c0>
		                 return 0;
	                      }
  // wait for the pulse to stop
                while (((PINL) && (c[pInno])) == vAlue)
	                 {
                 		if (++wIdth == mAxloops)
     e42:	2f 5f       	subi	r18, 0xFF	; 255
     e44:	3f 4f       	sbci	r19, 0xFF	; 255
     e46:	4f 4f       	sbci	r20, 0xFF	; 255
     e48:	5f 4f       	sbci	r21, 0xFF	; 255
     e4a:	82 17       	cp	r24, r18
     e4c:	93 07       	cpc	r25, r19
     e4e:	a4 07       	cpc	r26, r20
     e50:	b5 07       	cpc	r27, r21
     e52:	09 f4       	brne	.+2      	; 0xe56 <_Z7pulseInhh+0x6c0>
     e54:	6a c0       	rjmp	.+212    	; 0xf2a <_Z7pulseInhh+0x794>
	                  {
		              if (--mAxloops == 0)
		                 return 0;
	                      }
  // wait for the pulse to stop
                while (((PINL) && (c[pInno])) == vAlue)
     e56:	f8 01       	movw	r30, r16
     e58:	60 81       	ld	r22, Z
     e5a:	66 23       	and	r22, r22
     e5c:	79 f0       	breq	.+30     	; 0xe7c <_Z7pulseInhh+0x6e6>
     e5e:	e9 80       	ldd	r14, Y+1	; 0x01
     e60:	ff 24       	eor	r15, r15
     e62:	ee 0c       	add	r14, r14
     e64:	ff 1c       	adc	r15, r15
     e66:	ec 0c       	add	r14, r12
     e68:	fd 1c       	adc	r15, r13
  // The ping travels out and back, so to find the distance of the object we
  // take half of the distance travelled.
  return (microseconds*0.17/ 2);
}

unsigned long pulseIn(volatile uint8_t pInno, uint8_t vAlue)
     e6a:	6a 2d       	mov	r22, r10
     e6c:	f7 01       	movw	r30, r14
     e6e:	e0 80       	ld	r14, Z
     e70:	f1 80       	ldd	r15, Z+1	; 0x01
     e72:	e1 14       	cp	r14, r1
     e74:	f1 04       	cpc	r15, r1
     e76:	19 f4       	brne	.+6      	; 0xe7e <_Z7pulseInhh+0x6e8>
     e78:	6b 2d       	mov	r22, r11
     e7a:	01 c0       	rjmp	.+2      	; 0xe7e <_Z7pulseInhh+0x6e8>
	                  {
		              if (--mAxloops == 0)
		                 return 0;
	                      }
  // wait for the pulse to stop
                while (((PINL) && (c[pInno])) == vAlue)
     e7c:	6b 2d       	mov	r22, r11
     e7e:	70 e0       	ldi	r23, 0x00	; 0
     e80:	86 16       	cp	r8, r22
     e82:	97 06       	cpc	r9, r23
     e84:	f1 f2       	breq	.-68     	; 0xe42 <_Z7pulseInhh+0x6ac>
     e86:	54 c0       	rjmp	.+168    	; 0xf30 <_Z7pulseInhh+0x79a>
     e88:	57 c0       	rjmp	.+174    	; 0xf38 <_Z7pulseInhh+0x7a2>
  switch(d[pInno]){
            case'b':
	               { while (((PINB) && ((c[pInno]))) == vAlue)
	              {
		          if (--mAxloops == 0)
		            return 0;
     e8a:	20 e0       	ldi	r18, 0x00	; 0
     e8c:	30 e0       	ldi	r19, 0x00	; 0
     e8e:	a9 01       	movw	r20, r18
     e90:	4f c0       	rjmp	.+158    	; 0xf30 <_Z7pulseInhh+0x79a>
	                }
             // wait for the pulse to start  
              while (((PINB) && (c[pInno])) != vAlue)
	              {
		     if (--mAxloops == 0) 
		          return 0;
     e92:	20 e0       	ldi	r18, 0x00	; 0
     e94:	30 e0       	ldi	r19, 0x00	; 0
     e96:	a9 01       	movw	r20, r18
     e98:	4b c0       	rjmp	.+150    	; 0xf30 <_Z7pulseInhh+0x79a>
	           }
            // wait for the pulse to stop
             while (((PINB) && (c[pInno])) == vAlue)
	                   {
	               	if (++wIdth == mAxloops)
		          return 0;
     e9a:	20 e0       	ldi	r18, 0x00	; 0
     e9c:	30 e0       	ldi	r19, 0x00	; 0
     e9e:	a9 01       	movw	r20, r18
     ea0:	47 c0       	rjmp	.+142    	; 0xf30 <_Z7pulseInhh+0x79a>
                    }  break;
 case'c':
	                 { while (((PINC) && (c[pInno])) == vAlue)
	                {
		              if (--mAxloops == 0)
		               return 0;
     ea2:	20 e0       	ldi	r18, 0x00	; 0
     ea4:	30 e0       	ldi	r19, 0x00	; 0
     ea6:	a9 01       	movw	r20, r18
     ea8:	43 c0       	rjmp	.+134    	; 0xf30 <_Z7pulseInhh+0x79a>
	                   }
  // wait for the pulse to start  
                  while (((PINC) && (c[pInno])) != vAlue)
	                  {
		              if (--mAxloops == 0)
		                 return 0;
     eaa:	20 e0       	ldi	r18, 0x00	; 0
     eac:	30 e0       	ldi	r19, 0x00	; 0
     eae:	a9 01       	movw	r20, r18
     eb0:	3f c0       	rjmp	.+126    	; 0xf30 <_Z7pulseInhh+0x79a>
	                      }
  // wait for the pulse to stop
                while (((PINC) && (c[pInno])) == vAlue)
	                 {
                 		if (++wIdth == mAxloops)
                  		return 0;
     eb2:	20 e0       	ldi	r18, 0x00	; 0
     eb4:	30 e0       	ldi	r19, 0x00	; 0
     eb6:	a9 01       	movw	r20, r18
     eb8:	3b c0       	rjmp	.+118    	; 0xf30 <_Z7pulseInhh+0x79a>
	 case'd':
	     
	                 { while (((PIND) && (c[pInno])) == vAlue)
	                {
		              if (--mAxloops == 0)
		               return 0;
     eba:	20 e0       	ldi	r18, 0x00	; 0
     ebc:	30 e0       	ldi	r19, 0x00	; 0
     ebe:	a9 01       	movw	r20, r18
     ec0:	37 c0       	rjmp	.+110    	; 0xf30 <_Z7pulseInhh+0x79a>
	                   }
  // wait for the pulse to start  
                  while (((PIND) && (c[pInno])) != vAlue)
	                  {
		              if (--mAxloops == 0)
		                 return 0;
     ec2:	20 e0       	ldi	r18, 0x00	; 0
     ec4:	30 e0       	ldi	r19, 0x00	; 0
     ec6:	a9 01       	movw	r20, r18
     ec8:	33 c0       	rjmp	.+102    	; 0xf30 <_Z7pulseInhh+0x79a>
	                      }
  // wait for the pulse to stop
                while (((PIND) && (c[pInno])) == vAlue)
	                 {
                 		if (++wIdth == mAxloops)
                  		return 0;
     eca:	20 e0       	ldi	r18, 0x00	; 0
     ecc:	30 e0       	ldi	r19, 0x00	; 0
     ece:	a9 01       	movw	r20, r18
     ed0:	2f c0       	rjmp	.+94     	; 0xf30 <_Z7pulseInhh+0x79a>
	case'e':
	                  
	                 { while (((PINE) && (c[pInno])) == vAlue)
	                {
		              if (--mAxloops == 0)
		               return 0;
     ed2:	20 e0       	ldi	r18, 0x00	; 0
     ed4:	30 e0       	ldi	r19, 0x00	; 0
     ed6:	a9 01       	movw	r20, r18
     ed8:	2b c0       	rjmp	.+86     	; 0xf30 <_Z7pulseInhh+0x79a>
	                   }
  // wait for the pulse to start  
                  while (((PINE) && (c[pInno])) != vAlue)
	                  {
		              if (--mAxloops == 0)
		                 return 0;
     eda:	20 e0       	ldi	r18, 0x00	; 0
     edc:	30 e0       	ldi	r19, 0x00	; 0
     ede:	a9 01       	movw	r20, r18
     ee0:	27 c0       	rjmp	.+78     	; 0xf30 <_Z7pulseInhh+0x79a>
	                      }
  // wait for the pulse to stop
                while (((PINE) && (c[pInno])) == vAlue)
	                 {
                 		if (++wIdth == mAxloops)
                  		return 0;
     ee2:	20 e0       	ldi	r18, 0x00	; 0
     ee4:	30 e0       	ldi	r19, 0x00	; 0
     ee6:	a9 01       	movw	r20, r18
     ee8:	23 c0       	rjmp	.+70     	; 0xf30 <_Z7pulseInhh+0x79a>
case'h':
	                 
	                 { while (((PINH) &&(c[pInno])) == vAlue)
	                {
		              if (--mAxloops == 0)
		               return 0;
     eea:	20 e0       	ldi	r18, 0x00	; 0
     eec:	30 e0       	ldi	r19, 0x00	; 0
     eee:	a9 01       	movw	r20, r18
     ef0:	1f c0       	rjmp	.+62     	; 0xf30 <_Z7pulseInhh+0x79a>
	                   }
  // wait for the pulse to start  
                  while (((PINH) && (c[pInno])) != vAlue)
	                  {
		              if (--mAxloops == 0)
		                 return 0;
     ef2:	20 e0       	ldi	r18, 0x00	; 0
     ef4:	30 e0       	ldi	r19, 0x00	; 0
     ef6:	a9 01       	movw	r20, r18
     ef8:	1b c0       	rjmp	.+54     	; 0xf30 <_Z7pulseInhh+0x79a>
	                      }
  // wait for the pulse to stop
                while (((PINH) && ((c[pInno]))) == vAlue)
	                 {
                 		if (++wIdth == mAxloops)
                  		return 0;
     efa:	20 e0       	ldi	r18, 0x00	; 0
     efc:	30 e0       	ldi	r19, 0x00	; 0
     efe:	a9 01       	movw	r20, r18
     f00:	17 c0       	rjmp	.+46     	; 0xf30 <_Z7pulseInhh+0x79a>
case'j':
	                  
	                 { while (((PINJ) && (c[pInno])) == vAlue)
	                {
		              if (--mAxloops == 0)
		               return 0;
     f02:	20 e0       	ldi	r18, 0x00	; 0
     f04:	30 e0       	ldi	r19, 0x00	; 0
     f06:	a9 01       	movw	r20, r18
     f08:	13 c0       	rjmp	.+38     	; 0xf30 <_Z7pulseInhh+0x79a>
	                   }
  // wait for the pulse to start  
                  while (((PINJ) && (c[pInno])) != vAlue)
	                  {
		              if (--mAxloops == 0)
		                 return 0;
     f0a:	20 e0       	ldi	r18, 0x00	; 0
     f0c:	30 e0       	ldi	r19, 0x00	; 0
     f0e:	a9 01       	movw	r20, r18
     f10:	0f c0       	rjmp	.+30     	; 0xf30 <_Z7pulseInhh+0x79a>
	                      }
  // wait for the pulse to stop
                while (((PINJ) && (c[pInno])) == vAlue)
	                 {
                 		if (++wIdth == mAxloops)
                  		return 0;
     f12:	20 e0       	ldi	r18, 0x00	; 0
     f14:	30 e0       	ldi	r19, 0x00	; 0
     f16:	a9 01       	movw	r20, r18
     f18:	0b c0       	rjmp	.+22     	; 0xf30 <_Z7pulseInhh+0x79a>
case 'l':
	                  
	                 { while (((PINL) && (c[pInno])) == vAlue)
	                {
		              if (--mAxloops == 0)
		               return 0;
     f1a:	20 e0       	ldi	r18, 0x00	; 0
     f1c:	30 e0       	ldi	r19, 0x00	; 0
     f1e:	a9 01       	movw	r20, r18
     f20:	07 c0       	rjmp	.+14     	; 0xf30 <_Z7pulseInhh+0x79a>
	                   }
  // wait for the pulse to start  
                  while (((PINL) && (c[pInno])) != vAlue)
	                  {
		              if (--mAxloops == 0)
		                 return 0;
     f22:	20 e0       	ldi	r18, 0x00	; 0
     f24:	30 e0       	ldi	r19, 0x00	; 0
     f26:	a9 01       	movw	r20, r18
     f28:	03 c0       	rjmp	.+6      	; 0xf30 <_Z7pulseInhh+0x79a>
	                      }
  // wait for the pulse to stop
                while (((PINL) && (c[pInno])) == vAlue)
	                 {
                 		if (++wIdth == mAxloops)
                  		return 0;
     f2a:	20 e0       	ldi	r18, 0x00	; 0
     f2c:	30 e0       	ldi	r19, 0x00	; 0
     f2e:	a9 01       	movw	r20, r18
                     	    }
                     return wIdth;
                         }  
			           break;	        		   		   	  	  		 		 			 
	     }  
					 }					 	
     f30:	62 2f       	mov	r22, r18
     f32:	73 2f       	mov	r23, r19
     f34:	84 2f       	mov	r24, r20
     f36:	95 2f       	mov	r25, r21
     f38:	0f 90       	pop	r0
     f3a:	cf 91       	pop	r28
     f3c:	df 91       	pop	r29
     f3e:	1f 91       	pop	r17
     f40:	0f 91       	pop	r16
     f42:	ff 90       	pop	r15
     f44:	ef 90       	pop	r14
     f46:	df 90       	pop	r13
     f48:	cf 90       	pop	r12
     f4a:	bf 90       	pop	r11
     f4c:	af 90       	pop	r10
     f4e:	9f 90       	pop	r9
     f50:	8f 90       	pop	r8
     f52:	08 95       	ret

00000f54 <_Z7initADCv>:
	}

};
void initADC()
{
	ADMUX=(1<<REFS0);				//Aref=AVcc
     f54:	80 e4       	ldi	r24, 0x40	; 64
     f56:	80 93 7c 00 	sts	0x007C, r24
	ADCSRA=(1<<ADEN)|(1<<ADPS2)|(1<<ADPS1);		//ADC enabled, Prescaler 64
     f5a:	86 e8       	ldi	r24, 0x86	; 134
     f5c:	80 93 7a 00 	sts	0x007A, r24
}
     f60:	08 95       	ret

00000f62 <_Z10analogReadi>:

int analogRead(int (pInno))
{
     f62:	cf 93       	push	r28
     f64:	df 93       	push	r29
        //prescalar set to default
  	ADMUX=(1<<REFS0)|(0<<REFS1);
     f66:	cc e7       	ldi	r28, 0x7C	; 124
     f68:	d0 e0       	ldi	r29, 0x00	; 0
     f6a:	20 e4       	ldi	r18, 0x40	; 64
     f6c:	28 83       	st	Y, r18
  	ADCSRA|=(1<<ADEN);
     f6e:	ea e7       	ldi	r30, 0x7A	; 122
     f70:	f0 e0       	ldi	r31, 0x00	; 0
     f72:	20 81       	ld	r18, Z
     f74:	20 68       	ori	r18, 0x80	; 128
     f76:	20 83       	st	Z, r18
        ADMUX|=(pInno%8);//chose value from 0 to 7 to chose adc pin accordingly
     f78:	28 81       	ld	r18, Y
     f7a:	68 e0       	ldi	r22, 0x08	; 8
     f7c:	70 e0       	ldi	r23, 0x00	; 0
     f7e:	0e 94 19 7b 	call	0xf632	; 0xf632 <__divmodhi4>
     f82:	28 2b       	or	r18, r24
     f84:	28 83       	st	Y, r18
        ADCSRA|=(1<<ADEN);
     f86:	80 81       	ld	r24, Z
     f88:	80 68       	ori	r24, 0x80	; 128
     f8a:	80 83       	st	Z, r24
        ADCSRA|=(1<<ADSC);
     f8c:	80 81       	ld	r24, Z
     f8e:	80 64       	ori	r24, 0x40	; 64
     f90:	80 83       	st	Z, r24
	while(ADCSRA&(1<<ADSC));
     f92:	80 81       	ld	r24, Z
     f94:	86 fd       	sbrc	r24, 6
     f96:	fd cf       	rjmp	.-6      	; 0xf92 <_Z10analogReadi+0x30>
	return (ADC);
     f98:	20 91 78 00 	lds	r18, 0x0078
     f9c:	30 91 79 00 	lds	r19, 0x0079
}
     fa0:	82 2f       	mov	r24, r18
     fa2:	93 2f       	mov	r25, r19
     fa4:	df 91       	pop	r29
     fa6:	cf 91       	pop	r28
     fa8:	08 95       	ret

00000faa <_Z11analogWritehh>:

void analogWrite(uint8_t pInno,uint8_t dUtycY)
{
  TCCR1B=(1<<CS11)|(1<<CS10);
     faa:	93 e0       	ldi	r25, 0x03	; 3
     fac:	90 93 81 00 	sts	0x0081, r25
  TCCR1A=(1<<WGM10)|(1<<WGM12)|(1<<COM1A1)|(1<<COM1B1);
     fb0:	99 ea       	ldi	r25, 0xA9	; 169
     fb2:	90 93 80 00 	sts	0x0080, r25
	if((pInno%8)==1)
     fb6:	90 e0       	ldi	r25, 0x00	; 0
     fb8:	87 70       	andi	r24, 0x07	; 7
     fba:	90 70       	andi	r25, 0x00	; 0
     fbc:	81 30       	cpi	r24, 0x01	; 1
     fbe:	91 05       	cpc	r25, r1
     fc0:	31 f4       	brne	.+12     	; 0xfce <_Z11analogWritehh+0x24>
	{
	  OCR1A=dUtycY;
     fc2:	70 e0       	ldi	r23, 0x00	; 0
     fc4:	70 93 89 00 	sts	0x0089, r23
     fc8:	60 93 88 00 	sts	0x0088, r22
     fcc:	08 95       	ret
	}
	if((pInno%8)==2)
     fce:	82 30       	cpi	r24, 0x02	; 2
     fd0:	91 05       	cpc	r25, r1
     fd2:	29 f4       	brne	.+10     	; 0xfde <_Z11analogWritehh+0x34>
	{
          OCR1B=dUtycY;
     fd4:	70 e0       	ldi	r23, 0x00	; 0
     fd6:	70 93 8b 00 	sts	0x008B, r23
     fda:	60 93 8a 00 	sts	0x008A, r22
     fde:	08 95       	ret

00000fe0 <_Z6millisv>:
	}
}

int millis()
{
     fe0:	cf 92       	push	r12
     fe2:	df 92       	push	r13
     fe4:	ef 92       	push	r14
     fe6:	ff 92       	push	r15
     fe8:	1f 93       	push	r17
	float l;
	l=mIlli*0.16+0.00000625*TCNT0;
     fea:	16 b5       	in	r17, 0x26	; 38
     fec:	60 91 c0 02 	lds	r22, 0x02C0
     ff0:	70 91 c1 02 	lds	r23, 0x02C1
     ff4:	80 91 c2 02 	lds	r24, 0x02C2
     ff8:	90 91 c3 02 	lds	r25, 0x02C3
     ffc:	2a e0       	ldi	r18, 0x0A	; 10
     ffe:	37 ed       	ldi	r19, 0xD7	; 215
    1000:	43 e2       	ldi	r20, 0x23	; 35
    1002:	5e e3       	ldi	r21, 0x3E	; 62
    1004:	0e 94 a2 7a 	call	0xf544	; 0xf544 <__mulsf3>
    1008:	6b 01       	movw	r12, r22
    100a:	7c 01       	movw	r14, r24
    100c:	61 2f       	mov	r22, r17
    100e:	70 e0       	ldi	r23, 0x00	; 0
    1010:	88 27       	eor	r24, r24
    1012:	77 fd       	sbrc	r23, 7
    1014:	80 95       	com	r24
    1016:	98 2f       	mov	r25, r24
    1018:	0e 94 ee 79 	call	0xf3dc	; 0xf3dc <__floatsisf>
    101c:	27 e1       	ldi	r18, 0x17	; 23
    101e:	37 eb       	ldi	r19, 0xB7	; 183
    1020:	41 ed       	ldi	r20, 0xD1	; 209
    1022:	56 e3       	ldi	r21, 0x36	; 54
    1024:	0e 94 a2 7a 	call	0xf544	; 0xf544 <__mulsf3>
    1028:	9b 01       	movw	r18, r22
    102a:	ac 01       	movw	r20, r24
    102c:	c7 01       	movw	r24, r14
    102e:	b6 01       	movw	r22, r12
    1030:	0e 94 eb 78 	call	0xf1d6	; 0xf1d6 <__addsf3>
        return l;
    1034:	0e 94 bb 79 	call	0xf376	; 0xf376 <__fixsfsi>
}
    1038:	86 2f       	mov	r24, r22
    103a:	97 2f       	mov	r25, r23
    103c:	1f 91       	pop	r17
    103e:	ff 90       	pop	r15
    1040:	ef 90       	pop	r14
    1042:	df 90       	pop	r13
    1044:	cf 90       	pop	r12
    1046:	08 95       	ret

00001048 <_Z5tinitv>:

void tinit(void)
{ 
	TCCR0A|=(1<<WGM01);
    1048:	84 b5       	in	r24, 0x24	; 36
    104a:	82 60       	ori	r24, 0x02	; 2
    104c:	84 bd       	out	0x24, r24	; 36
        TCCR0A|=(1<<CS00);
    104e:	84 b5       	in	r24, 0x24	; 36
    1050:	81 60       	ori	r24, 0x01	; 1
    1052:	84 bd       	out	0x24, r24	; 36
	TIMSK0|=(1<<TOV0);
    1054:	ee e6       	ldi	r30, 0x6E	; 110
    1056:	f0 e0       	ldi	r31, 0x00	; 0
    1058:	80 81       	ld	r24, Z
    105a:	81 60       	ori	r24, 0x01	; 1
    105c:	80 83       	st	Z, r24
        TCNT0=0;
    105e:	16 bc       	out	0x26, r1	; 38
}
    1060:	08 95       	ret

00001062 <__vector_23>:


ISR(TIMER0_OVF_vect)
{
    1062:	1f 92       	push	r1
    1064:	0f 92       	push	r0
    1066:	0f b6       	in	r0, 0x3f	; 63
    1068:	0f 92       	push	r0
    106a:	0b b6       	in	r0, 0x3b	; 59
    106c:	0f 92       	push	r0
    106e:	11 24       	eor	r1, r1
    1070:	2f 93       	push	r18
    1072:	3f 93       	push	r19
    1074:	4f 93       	push	r20
    1076:	5f 93       	push	r21
    1078:	6f 93       	push	r22
    107a:	7f 93       	push	r23
    107c:	8f 93       	push	r24
    107e:	9f 93       	push	r25
    1080:	af 93       	push	r26
    1082:	bf 93       	push	r27
    1084:	ef 93       	push	r30
    1086:	ff 93       	push	r31
	mIlli++;	
    1088:	60 91 c0 02 	lds	r22, 0x02C0
    108c:	70 91 c1 02 	lds	r23, 0x02C1
    1090:	80 91 c2 02 	lds	r24, 0x02C2
    1094:	90 91 c3 02 	lds	r25, 0x02C3
    1098:	20 e0       	ldi	r18, 0x00	; 0
    109a:	30 e0       	ldi	r19, 0x00	; 0
    109c:	40 e8       	ldi	r20, 0x80	; 128
    109e:	5f e3       	ldi	r21, 0x3F	; 63
    10a0:	0e 94 eb 78 	call	0xf1d6	; 0xf1d6 <__addsf3>
    10a4:	60 93 c0 02 	sts	0x02C0, r22
    10a8:	70 93 c1 02 	sts	0x02C1, r23
    10ac:	80 93 c2 02 	sts	0x02C2, r24
    10b0:	90 93 c3 02 	sts	0x02C3, r25
}	
    10b4:	ff 91       	pop	r31
    10b6:	ef 91       	pop	r30
    10b8:	bf 91       	pop	r27
    10ba:	af 91       	pop	r26
    10bc:	9f 91       	pop	r25
    10be:	8f 91       	pop	r24
    10c0:	7f 91       	pop	r23
    10c2:	6f 91       	pop	r22
    10c4:	5f 91       	pop	r21
    10c6:	4f 91       	pop	r20
    10c8:	3f 91       	pop	r19
    10ca:	2f 91       	pop	r18
    10cc:	0f 90       	pop	r0
    10ce:	0b be       	out	0x3b, r0	; 59
    10d0:	0f 90       	pop	r0
    10d2:	0f be       	out	0x3f, r0	; 63
    10d4:	0f 90       	pop	r0
    10d6:	1f 90       	pop	r1
    10d8:	18 95       	reti

000010da <_Z5delaym>:

void delay(unsigned long mIllisec)
{
    10da:	9b 01       	movw	r18, r22
    10dc:	ac 01       	movw	r20, r24
	int i;
	for(i=0;i<mIllisec;i++)
    10de:	61 15       	cp	r22, r1
    10e0:	71 05       	cpc	r23, r1
    10e2:	81 05       	cpc	r24, r1
    10e4:	91 05       	cpc	r25, r1
    10e6:	a1 f0       	breq	.+40     	; 0x1110 <_Z5delaym+0x36>
    10e8:	60 e0       	ldi	r22, 0x00	; 0
    10ea:	70 e0       	ldi	r23, 0x00	; 0
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
    10ec:	89 ef       	ldi	r24, 0xF9	; 249
    10ee:	90 e0       	ldi	r25, 0x00	; 0
    10f0:	01 97       	sbiw	r24, 0x01	; 1
    10f2:	f1 f7       	brne	.-4      	; 0x10f0 <_Z5delaym+0x16>
    10f4:	00 c0       	rjmp	.+0      	; 0x10f6 <_Z5delaym+0x1c>
    10f6:	00 00       	nop
    10f8:	6f 5f       	subi	r22, 0xFF	; 255
    10fa:	7f 4f       	sbci	r23, 0xFF	; 255
    10fc:	cb 01       	movw	r24, r22
    10fe:	aa 27       	eor	r26, r26
    1100:	97 fd       	sbrc	r25, 7
    1102:	a0 95       	com	r26
    1104:	ba 2f       	mov	r27, r26
    1106:	82 17       	cp	r24, r18
    1108:	93 07       	cpc	r25, r19
    110a:	a4 07       	cpc	r26, r20
    110c:	b5 07       	cpc	r27, r21
    110e:	70 f3       	brcs	.-36     	; 0x10ec <_Z5delaym+0x12>
    1110:	08 95       	ret

00001112 <_Z17delayMicrosecondsm>:
	}
	return;
}

void delayMicroseconds(unsigned long mIcrosec)
{
    1112:	9b 01       	movw	r18, r22
    1114:	ac 01       	movw	r20, r24
	int i;
	for(i=0;i<mIcrosec;i++)
    1116:	61 15       	cp	r22, r1
    1118:	71 05       	cpc	r23, r1
    111a:	81 05       	cpc	r24, r1
    111c:	91 05       	cpc	r25, r1
    111e:	79 f0       	breq	.+30     	; 0x113e <_Z17delayMicrosecondsm+0x2c>
    1120:	60 e0       	ldi	r22, 0x00	; 0
    1122:	70 e0       	ldi	r23, 0x00	; 0
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
    1124:	00 00       	nop
    1126:	6f 5f       	subi	r22, 0xFF	; 255
    1128:	7f 4f       	sbci	r23, 0xFF	; 255
    112a:	cb 01       	movw	r24, r22
    112c:	aa 27       	eor	r26, r26
    112e:	97 fd       	sbrc	r25, 7
    1130:	a0 95       	com	r26
    1132:	ba 2f       	mov	r27, r26
    1134:	82 17       	cp	r24, r18
    1136:	93 07       	cpc	r25, r19
    1138:	a4 07       	cpc	r26, r20
    113a:	b5 07       	cpc	r27, r21
    113c:	98 f3       	brcs	.-26     	; 0x1124 <_Z17delayMicrosecondsm+0x12>
    113e:	08 95       	ret

00001140 <_Z3mapddddd>:
	}
	return;
}

double map(double vAlue, double fromLow, double fromHigh, double toLow, double toHigh)
{
    1140:	2f 92       	push	r2
    1142:	3f 92       	push	r3
    1144:	4f 92       	push	r4
    1146:	5f 92       	push	r5
    1148:	6f 92       	push	r6
    114a:	7f 92       	push	r7
    114c:	8f 92       	push	r8
    114e:	9f 92       	push	r9
    1150:	af 92       	push	r10
    1152:	bf 92       	push	r11
    1154:	cf 92       	push	r12
    1156:	df 92       	push	r13
    1158:	ef 92       	push	r14
    115a:	ff 92       	push	r15
    115c:	0f 93       	push	r16
    115e:	1f 93       	push	r17
    1160:	df 93       	push	r29
    1162:	cf 93       	push	r28
    1164:	cd b7       	in	r28, 0x3d	; 61
    1166:	de b7       	in	r29, 0x3e	; 62
    1168:	39 01       	movw	r6, r18
    116a:	4a 01       	movw	r8, r20
    116c:	17 01       	movw	r2, r14
    116e:	28 01       	movw	r4, r16
	return ((vAlue-fromLow)/abs(fromHigh-fromLow)*abs(toHigh+toLow));
    1170:	0e 94 ea 78 	call	0xf1d4	; 0xf1d4 <__subsf3>
    1174:	7b 01       	movw	r14, r22
    1176:	8c 01       	movw	r16, r24
    1178:	c2 01       	movw	r24, r4
    117a:	b1 01       	movw	r22, r2
    117c:	a4 01       	movw	r20, r8
    117e:	93 01       	movw	r18, r6
    1180:	0e 94 ea 78 	call	0xf1d4	; 0xf1d4 <__subsf3>
    1184:	0e 94 bb 79 	call	0xf376	; 0xf376 <__fixsfsi>
    1188:	86 2f       	mov	r24, r22
    118a:	97 2f       	mov	r25, r23
    118c:	bc 01       	movw	r22, r24
    118e:	77 23       	and	r23, r23
    1190:	24 f4       	brge	.+8      	; 0x119a <_Z3mapddddd+0x5a>
    1192:	66 27       	eor	r22, r22
    1194:	77 27       	eor	r23, r23
    1196:	68 1b       	sub	r22, r24
    1198:	79 0b       	sbc	r23, r25
    119a:	88 27       	eor	r24, r24
    119c:	77 fd       	sbrc	r23, 7
    119e:	80 95       	com	r24
    11a0:	98 2f       	mov	r25, r24
    11a2:	0e 94 ee 79 	call	0xf3dc	; 0xf3dc <__floatsisf>
    11a6:	9b 01       	movw	r18, r22
    11a8:	ac 01       	movw	r20, r24
    11aa:	c8 01       	movw	r24, r16
    11ac:	b7 01       	movw	r22, r14
    11ae:	0e 94 53 79 	call	0xf2a6	; 0xf2a6 <__divsf3>
    11b2:	3b 01       	movw	r6, r22
    11b4:	4c 01       	movw	r8, r24
    11b6:	6e 89       	ldd	r22, Y+22	; 0x16
    11b8:	7f 89       	ldd	r23, Y+23	; 0x17
    11ba:	88 8d       	ldd	r24, Y+24	; 0x18
    11bc:	99 8d       	ldd	r25, Y+25	; 0x19
    11be:	a6 01       	movw	r20, r12
    11c0:	95 01       	movw	r18, r10
    11c2:	0e 94 eb 78 	call	0xf1d6	; 0xf1d6 <__addsf3>
    11c6:	0e 94 bb 79 	call	0xf376	; 0xf376 <__fixsfsi>
    11ca:	86 2f       	mov	r24, r22
    11cc:	97 2f       	mov	r25, r23
    11ce:	bc 01       	movw	r22, r24
    11d0:	77 23       	and	r23, r23
    11d2:	24 f4       	brge	.+8      	; 0x11dc <_Z3mapddddd+0x9c>
    11d4:	66 27       	eor	r22, r22
    11d6:	77 27       	eor	r23, r23
    11d8:	68 1b       	sub	r22, r24
    11da:	79 0b       	sbc	r23, r25
    11dc:	88 27       	eor	r24, r24
    11de:	77 fd       	sbrc	r23, 7
    11e0:	80 95       	com	r24
    11e2:	98 2f       	mov	r25, r24
    11e4:	0e 94 ee 79 	call	0xf3dc	; 0xf3dc <__floatsisf>
    11e8:	9b 01       	movw	r18, r22
    11ea:	ac 01       	movw	r20, r24
    11ec:	c4 01       	movw	r24, r8
    11ee:	b3 01       	movw	r22, r6
    11f0:	0e 94 a2 7a 	call	0xf544	; 0xf544 <__mulsf3>
}
    11f4:	cf 91       	pop	r28
    11f6:	df 91       	pop	r29
    11f8:	1f 91       	pop	r17
    11fa:	0f 91       	pop	r16
    11fc:	ff 90       	pop	r15
    11fe:	ef 90       	pop	r14
    1200:	df 90       	pop	r13
    1202:	cf 90       	pop	r12
    1204:	bf 90       	pop	r11
    1206:	af 90       	pop	r10
    1208:	9f 90       	pop	r9
    120a:	8f 90       	pop	r8
    120c:	7f 90       	pop	r7
    120e:	6f 90       	pop	r6
    1210:	5f 90       	pop	r5
    1212:	4f 90       	pop	r4
    1214:	3f 90       	pop	r3
    1216:	2f 90       	pop	r2
    1218:	08 95       	ret

0000121a <_Z9constrainddd>:

double constrain(double nUm,double uPper,double lOwer)
{
    121a:	6f 92       	push	r6
    121c:	7f 92       	push	r7
    121e:	8f 92       	push	r8
    1220:	9f 92       	push	r9
    1222:	af 92       	push	r10
    1224:	bf 92       	push	r11
    1226:	cf 92       	push	r12
    1228:	df 92       	push	r13
    122a:	ef 92       	push	r14
    122c:	ff 92       	push	r15
    122e:	0f 93       	push	r16
    1230:	1f 93       	push	r17
    1232:	96 2e       	mov	r9, r22
    1234:	87 2e       	mov	r8, r23
    1236:	78 2e       	mov	r7, r24
    1238:	69 2e       	mov	r6, r25
    123a:	d2 2e       	mov	r13, r18
    123c:	c3 2e       	mov	r12, r19
    123e:	b4 2e       	mov	r11, r20
    1240:	a5 2e       	mov	r10, r21
	if(nUm<uPper){
    1242:	2d 2d       	mov	r18, r13
    1244:	3c 2d       	mov	r19, r12
    1246:	4b 2d       	mov	r20, r11
    1248:	5a 2d       	mov	r21, r10
    124a:	0e 94 4f 79 	call	0xf29e	; 0xf29e <__cmpsf2>
    124e:	88 23       	and	r24, r24
    1250:	ac f0       	brlt	.+42     	; 0x127c <_Z9constrainddd+0x62>
		return uPper;}
	else if(nUm>lOwer){
    1252:	69 2d       	mov	r22, r9
    1254:	78 2d       	mov	r23, r8
    1256:	87 2d       	mov	r24, r7
    1258:	96 2d       	mov	r25, r6
    125a:	2e 2d       	mov	r18, r14
    125c:	3f 2d       	mov	r19, r15
    125e:	40 2f       	mov	r20, r16
    1260:	51 2f       	mov	r21, r17
    1262:	0e 94 9e 7a 	call	0xf53c	; 0xf53c <__gesf2>
    1266:	18 16       	cp	r1, r24
    1268:	2c f4       	brge	.+10     	; 0x1274 <_Z9constrainddd+0x5a>
		return lOwer;}
    126a:	de 2c       	mov	r13, r14
    126c:	cf 2c       	mov	r12, r15
    126e:	b0 2e       	mov	r11, r16
    1270:	a1 2e       	mov	r10, r17
    1272:	04 c0       	rjmp	.+8      	; 0x127c <_Z9constrainddd+0x62>
	else 
	return nUm;	
    1274:	d9 2c       	mov	r13, r9
    1276:	c8 2c       	mov	r12, r8
    1278:	b7 2c       	mov	r11, r7
    127a:	a6 2c       	mov	r10, r6
}
    127c:	6d 2d       	mov	r22, r13
    127e:	7c 2d       	mov	r23, r12
    1280:	8b 2d       	mov	r24, r11
    1282:	9a 2d       	mov	r25, r10
    1284:	1f 91       	pop	r17
    1286:	0f 91       	pop	r16
    1288:	ff 90       	pop	r15
    128a:	ef 90       	pop	r14
    128c:	df 90       	pop	r13
    128e:	cf 90       	pop	r12
    1290:	bf 90       	pop	r11
    1292:	af 90       	pop	r10
    1294:	9f 90       	pop	r9
    1296:	8f 90       	pop	r8
    1298:	7f 90       	pop	r7
    129a:	6f 90       	pop	r6
    129c:	08 95       	ret

0000129e <_Z15attachIntteruptiPFvvEi>:
void attachIntterupt(int pIn, void (*iSrfunc)(void), int cOmpare)		//cOmpare:LOW=0,HIGH1,RISING=2,FALLING=3
{
	sei();
    129e:	78 94       	sei
	cAllisr=iSrfunc;
    12a0:	70 93 c5 02 	sts	0x02C5, r23
    12a4:	60 93 c4 02 	sts	0x02C4, r22
	switch(pIn)	  //enabling interrupt pin
    12a8:	83 30       	cpi	r24, 0x03	; 3
    12aa:	91 05       	cpc	r25, r1
    12ac:	09 f4       	brne	.+2      	; 0x12b0 <_Z15attachIntteruptiPFvvEi+0x12>
    12ae:	7d c0       	rjmp	.+250    	; 0x13aa <_Z15attachIntteruptiPFvvEi+0x10c>
    12b0:	84 30       	cpi	r24, 0x04	; 4
    12b2:	91 05       	cpc	r25, r1
    12b4:	54 f4       	brge	.+20     	; 0x12ca <_Z15attachIntteruptiPFvvEi+0x2c>
    12b6:	81 30       	cpi	r24, 0x01	; 1
    12b8:	91 05       	cpc	r25, r1
    12ba:	c9 f1       	breq	.+114    	; 0x132e <_Z15attachIntteruptiPFvvEi+0x90>
    12bc:	82 30       	cpi	r24, 0x02	; 2
    12be:	91 05       	cpc	r25, r1
    12c0:	0c f0       	brlt	.+2      	; 0x12c4 <_Z15attachIntteruptiPFvvEi+0x26>
    12c2:	54 c0       	rjmp	.+168    	; 0x136c <_Z15attachIntteruptiPFvvEi+0xce>
    12c4:	00 97       	sbiw	r24, 0x00	; 0
    12c6:	91 f0       	breq	.+36     	; 0x12ec <_Z15attachIntteruptiPFvvEi+0x4e>
    12c8:	0b c1       	rjmp	.+534    	; 0x14e0 <_Z15attachIntteruptiPFvvEi+0x242>
    12ca:	85 30       	cpi	r24, 0x05	; 5
    12cc:	91 05       	cpc	r25, r1
    12ce:	09 f4       	brne	.+2      	; 0x12d2 <_Z15attachIntteruptiPFvvEi+0x34>
    12d0:	aa c0       	rjmp	.+340    	; 0x1426 <_Z15attachIntteruptiPFvvEi+0x188>
    12d2:	85 30       	cpi	r24, 0x05	; 5
    12d4:	91 05       	cpc	r25, r1
    12d6:	0c f4       	brge	.+2      	; 0x12da <_Z15attachIntteruptiPFvvEi+0x3c>
    12d8:	87 c0       	rjmp	.+270    	; 0x13e8 <_Z15attachIntteruptiPFvvEi+0x14a>
    12da:	86 30       	cpi	r24, 0x06	; 6
    12dc:	91 05       	cpc	r25, r1
    12de:	09 f4       	brne	.+2      	; 0x12e2 <_Z15attachIntteruptiPFvvEi+0x44>
    12e0:	c1 c0       	rjmp	.+386    	; 0x1464 <_Z15attachIntteruptiPFvvEi+0x1c6>
    12e2:	87 30       	cpi	r24, 0x07	; 7
    12e4:	91 05       	cpc	r25, r1
    12e6:	09 f0       	breq	.+2      	; 0x12ea <_Z15attachIntteruptiPFvvEi+0x4c>
    12e8:	fb c0       	rjmp	.+502    	; 0x14e0 <_Z15attachIntteruptiPFvvEi+0x242>
    12ea:	db c0       	rjmp	.+438    	; 0x14a2 <_Z15attachIntteruptiPFvvEi+0x204>
	{
		case 0:
		EIMSK|=1<<INT0;
    12ec:	e8 9a       	sbi	0x1d, 0	; 29
		switch(cOmpare){
    12ee:	43 30       	cpi	r20, 0x03	; 3
    12f0:	51 05       	cpc	r21, r1
    12f2:	61 f0       	breq	.+24     	; 0x130c <_Z15attachIntteruptiPFvvEi+0x6e>
    12f4:	44 30       	cpi	r20, 0x04	; 4
    12f6:	51 05       	cpc	r21, r1
    12f8:	79 f0       	breq	.+30     	; 0x1318 <_Z15attachIntteruptiPFvvEi+0x7a>
    12fa:	42 30       	cpi	r20, 0x02	; 2
    12fc:	51 05       	cpc	r21, r1
    12fe:	91 f4       	brne	.+36     	; 0x1324 <_Z15attachIntteruptiPFvvEi+0x86>
			case 2:
			EICRA|=(1<<ISC00)|(1<<ISC01);
    1300:	e9 e6       	ldi	r30, 0x69	; 105
    1302:	f0 e0       	ldi	r31, 0x00	; 0
    1304:	80 81       	ld	r24, Z
    1306:	83 60       	ori	r24, 0x03	; 3
    1308:	80 83       	st	Z, r24
			break;
    130a:	08 95       	ret
			case 3:
			EICRA|=(0<<ISC00)|(1<<ISC01);
    130c:	e9 e6       	ldi	r30, 0x69	; 105
    130e:	f0 e0       	ldi	r31, 0x00	; 0
    1310:	80 81       	ld	r24, Z
    1312:	82 60       	ori	r24, 0x02	; 2
    1314:	80 83       	st	Z, r24
			break;
    1316:	08 95       	ret
			case 4:
			EICRA|=(1<<ISC00)|(0<<ISC01);
    1318:	e9 e6       	ldi	r30, 0x69	; 105
    131a:	f0 e0       	ldi	r31, 0x00	; 0
    131c:	80 81       	ld	r24, Z
    131e:	81 60       	ori	r24, 0x01	; 1
    1320:	80 83       	st	Z, r24
			break;
    1322:	08 95       	ret
			default:
			EICRA|=(0<<ISC00)|(0<<ISC01);
    1324:	e9 e6       	ldi	r30, 0x69	; 105
    1326:	f0 e0       	ldi	r31, 0x00	; 0
    1328:	80 81       	ld	r24, Z
    132a:	80 83       	st	Z, r24
    132c:	08 95       	ret
		}
		break;

		case 1:
		EIMSK|=1<<INT1;
    132e:	e9 9a       	sbi	0x1d, 1	; 29
                switch(cOmpare)
    1330:	43 30       	cpi	r20, 0x03	; 3
    1332:	51 05       	cpc	r21, r1
    1334:	61 f0       	breq	.+24     	; 0x134e <_Z15attachIntteruptiPFvvEi+0xb0>
    1336:	44 30       	cpi	r20, 0x04	; 4
    1338:	51 05       	cpc	r21, r1
    133a:	69 f0       	breq	.+26     	; 0x1356 <_Z15attachIntteruptiPFvvEi+0xb8>
    133c:	42 30       	cpi	r20, 0x02	; 2
    133e:	51 05       	cpc	r21, r1
    1340:	81 f4       	brne	.+32     	; 0x1362 <_Z15attachIntteruptiPFvvEi+0xc4>
		{
			case 2:
			EICRA|=(1<<ISC10)|(1<<ISC11);
    1342:	e9 e6       	ldi	r30, 0x69	; 105
    1344:	f0 e0       	ldi	r31, 0x00	; 0
    1346:	80 81       	ld	r24, Z
    1348:	8c 60       	ori	r24, 0x0C	; 12
    134a:	80 83       	st	Z, r24
			break;
    134c:	08 95       	ret
			case 3:
			EICRA=(0<<ISC10)|(1<<ISC11);
    134e:	88 e0       	ldi	r24, 0x08	; 8
    1350:	80 93 69 00 	sts	0x0069, r24
			break;
    1354:	08 95       	ret
			case 4:
			EICRA|=(1<<ISC10)|(0<<ISC11);
    1356:	e9 e6       	ldi	r30, 0x69	; 105
    1358:	f0 e0       	ldi	r31, 0x00	; 0
    135a:	80 81       	ld	r24, Z
    135c:	84 60       	ori	r24, 0x04	; 4
    135e:	80 83       	st	Z, r24
			break;
    1360:	08 95       	ret
			default:
			EICRA|=(0<<ISC10)|(0<<ISC11);
    1362:	e9 e6       	ldi	r30, 0x69	; 105
    1364:	f0 e0       	ldi	r31, 0x00	; 0
    1366:	80 81       	ld	r24, Z
    1368:	80 83       	st	Z, r24
    136a:	08 95       	ret
		}
		break;
		
		case 2:
		EIMSK|=1<<INT2;
    136c:	ea 9a       	sbi	0x1d, 2	; 29
		switch(cOmpare)
    136e:	43 30       	cpi	r20, 0x03	; 3
    1370:	51 05       	cpc	r21, r1
    1372:	61 f0       	breq	.+24     	; 0x138c <_Z15attachIntteruptiPFvvEi+0xee>
    1374:	44 30       	cpi	r20, 0x04	; 4
    1376:	51 05       	cpc	r21, r1
    1378:	69 f0       	breq	.+26     	; 0x1394 <_Z15attachIntteruptiPFvvEi+0xf6>
    137a:	42 30       	cpi	r20, 0x02	; 2
    137c:	51 05       	cpc	r21, r1
    137e:	81 f4       	brne	.+32     	; 0x13a0 <_Z15attachIntteruptiPFvvEi+0x102>
		{
			case 2:
			EICRA|=(1<<ISC20)|(1<<ISC21);
    1380:	e9 e6       	ldi	r30, 0x69	; 105
    1382:	f0 e0       	ldi	r31, 0x00	; 0
    1384:	80 81       	ld	r24, Z
    1386:	80 63       	ori	r24, 0x30	; 48
    1388:	80 83       	st	Z, r24
			break;
    138a:	08 95       	ret
			case 3:
			EICRA=(0<<ISC20)|(1<<ISC21);
    138c:	80 e2       	ldi	r24, 0x20	; 32
    138e:	80 93 69 00 	sts	0x0069, r24
			break;
    1392:	08 95       	ret
			case 4:
			EICRA|=(1<<ISC20)|(0<<ISC21);
    1394:	e9 e6       	ldi	r30, 0x69	; 105
    1396:	f0 e0       	ldi	r31, 0x00	; 0
    1398:	80 81       	ld	r24, Z
    139a:	80 61       	ori	r24, 0x10	; 16
    139c:	80 83       	st	Z, r24
			break;
    139e:	08 95       	ret
			default:
			EICRA|=(0<<ISC20)|(0<<ISC21);
    13a0:	e9 e6       	ldi	r30, 0x69	; 105
    13a2:	f0 e0       	ldi	r31, 0x00	; 0
    13a4:	80 81       	ld	r24, Z
    13a6:	80 83       	st	Z, r24
    13a8:	08 95       	ret
		}
		break;
		
		case 3:
		EIMSK|=1<<INT3;
    13aa:	eb 9a       	sbi	0x1d, 3	; 29
		switch(cOmpare)
    13ac:	43 30       	cpi	r20, 0x03	; 3
    13ae:	51 05       	cpc	r21, r1
    13b0:	61 f0       	breq	.+24     	; 0x13ca <_Z15attachIntteruptiPFvvEi+0x12c>
    13b2:	44 30       	cpi	r20, 0x04	; 4
    13b4:	51 05       	cpc	r21, r1
    13b6:	69 f0       	breq	.+26     	; 0x13d2 <_Z15attachIntteruptiPFvvEi+0x134>
    13b8:	42 30       	cpi	r20, 0x02	; 2
    13ba:	51 05       	cpc	r21, r1
    13bc:	81 f4       	brne	.+32     	; 0x13de <_Z15attachIntteruptiPFvvEi+0x140>
		{
			case 2:
			EICRA|=(1<<ISC30)|(1<<ISC31);
    13be:	e9 e6       	ldi	r30, 0x69	; 105
    13c0:	f0 e0       	ldi	r31, 0x00	; 0
    13c2:	80 81       	ld	r24, Z
    13c4:	80 6c       	ori	r24, 0xC0	; 192
    13c6:	80 83       	st	Z, r24
			break;
    13c8:	08 95       	ret
			case 3:
			EICRA=(0<<ISC30)|(1<<ISC31);
    13ca:	80 e8       	ldi	r24, 0x80	; 128
    13cc:	80 93 69 00 	sts	0x0069, r24
			break;
    13d0:	08 95       	ret
			case 4:
			EICRA|=(1<<ISC30)|(0<<ISC31);
    13d2:	e9 e6       	ldi	r30, 0x69	; 105
    13d4:	f0 e0       	ldi	r31, 0x00	; 0
    13d6:	80 81       	ld	r24, Z
    13d8:	80 64       	ori	r24, 0x40	; 64
    13da:	80 83       	st	Z, r24
			break;
    13dc:	08 95       	ret
			default:
			EICRA|=(0<<ISC30)|(0<<ISC31);
    13de:	e9 e6       	ldi	r30, 0x69	; 105
    13e0:	f0 e0       	ldi	r31, 0x00	; 0
    13e2:	80 81       	ld	r24, Z
    13e4:	80 83       	st	Z, r24
    13e6:	08 95       	ret
		}
		break;
		
		case 4:
		EIMSK|=1<<INT4;
    13e8:	ec 9a       	sbi	0x1d, 4	; 29
                switch(cOmpare)
    13ea:	43 30       	cpi	r20, 0x03	; 3
    13ec:	51 05       	cpc	r21, r1
    13ee:	61 f0       	breq	.+24     	; 0x1408 <_Z15attachIntteruptiPFvvEi+0x16a>
    13f0:	44 30       	cpi	r20, 0x04	; 4
    13f2:	51 05       	cpc	r21, r1
    13f4:	69 f0       	breq	.+26     	; 0x1410 <_Z15attachIntteruptiPFvvEi+0x172>
    13f6:	42 30       	cpi	r20, 0x02	; 2
    13f8:	51 05       	cpc	r21, r1
    13fa:	81 f4       	brne	.+32     	; 0x141c <_Z15attachIntteruptiPFvvEi+0x17e>
		{
			case 2:
			EICRB|=(1<<ISC40)|(1<<ISC41);
    13fc:	ea e6       	ldi	r30, 0x6A	; 106
    13fe:	f0 e0       	ldi	r31, 0x00	; 0
    1400:	80 81       	ld	r24, Z
    1402:	83 60       	ori	r24, 0x03	; 3
    1404:	80 83       	st	Z, r24
			break;
    1406:	08 95       	ret
			case 3:
			EICRB=(0<<ISC40)|(1<<ISC41);
    1408:	82 e0       	ldi	r24, 0x02	; 2
    140a:	80 93 6a 00 	sts	0x006A, r24
			break;
    140e:	08 95       	ret
			case 4:
			EICRB|=(1<<ISC40)|(0<<ISC41);
    1410:	ea e6       	ldi	r30, 0x6A	; 106
    1412:	f0 e0       	ldi	r31, 0x00	; 0
    1414:	80 81       	ld	r24, Z
    1416:	81 60       	ori	r24, 0x01	; 1
    1418:	80 83       	st	Z, r24
			break;
    141a:	08 95       	ret
			default:
			EICRB|=(0<<ISC40)|(0<<ISC41);
    141c:	ea e6       	ldi	r30, 0x6A	; 106
    141e:	f0 e0       	ldi	r31, 0x00	; 0
    1420:	80 81       	ld	r24, Z
    1422:	80 83       	st	Z, r24
    1424:	08 95       	ret
		}
		break;
		
		case 5:
		EIMSK|=1<<INT5;
    1426:	ed 9a       	sbi	0x1d, 5	; 29
		switch(cOmpare)
    1428:	43 30       	cpi	r20, 0x03	; 3
    142a:	51 05       	cpc	r21, r1
    142c:	61 f0       	breq	.+24     	; 0x1446 <_Z15attachIntteruptiPFvvEi+0x1a8>
    142e:	44 30       	cpi	r20, 0x04	; 4
    1430:	51 05       	cpc	r21, r1
    1432:	69 f0       	breq	.+26     	; 0x144e <_Z15attachIntteruptiPFvvEi+0x1b0>
    1434:	42 30       	cpi	r20, 0x02	; 2
    1436:	51 05       	cpc	r21, r1
    1438:	81 f4       	brne	.+32     	; 0x145a <_Z15attachIntteruptiPFvvEi+0x1bc>
		{
			case 2:
			EICRB|=(1<<ISC50)|(1<<ISC51);
    143a:	ea e6       	ldi	r30, 0x6A	; 106
    143c:	f0 e0       	ldi	r31, 0x00	; 0
    143e:	80 81       	ld	r24, Z
    1440:	8c 60       	ori	r24, 0x0C	; 12
    1442:	80 83       	st	Z, r24
			break;
    1444:	08 95       	ret
			case 3:
			EICRB=(0<<ISC50)|(1<<ISC51);
    1446:	88 e0       	ldi	r24, 0x08	; 8
    1448:	80 93 6a 00 	sts	0x006A, r24
			break;
    144c:	08 95       	ret
			case 4:
			EICRB|=(1<<ISC50)|(0<<ISC51);
    144e:	ea e6       	ldi	r30, 0x6A	; 106
    1450:	f0 e0       	ldi	r31, 0x00	; 0
    1452:	80 81       	ld	r24, Z
    1454:	84 60       	ori	r24, 0x04	; 4
    1456:	80 83       	st	Z, r24
			break;
    1458:	08 95       	ret
			default:
                 	EICRB|=(0<<ISC40)|(0<<ISC41);
    145a:	ea e6       	ldi	r30, 0x6A	; 106
    145c:	f0 e0       	ldi	r31, 0x00	; 0
    145e:	80 81       	ld	r24, Z
    1460:	80 83       	st	Z, r24
    1462:	08 95       	ret
			
		}
		break;
		
		case 6:
		EIMSK|=1<<INT6;
    1464:	ee 9a       	sbi	0x1d, 6	; 29
	        switch(cOmpare)
    1466:	43 30       	cpi	r20, 0x03	; 3
    1468:	51 05       	cpc	r21, r1
    146a:	61 f0       	breq	.+24     	; 0x1484 <_Z15attachIntteruptiPFvvEi+0x1e6>
    146c:	44 30       	cpi	r20, 0x04	; 4
    146e:	51 05       	cpc	r21, r1
    1470:	69 f0       	breq	.+26     	; 0x148c <_Z15attachIntteruptiPFvvEi+0x1ee>
    1472:	42 30       	cpi	r20, 0x02	; 2
    1474:	51 05       	cpc	r21, r1
    1476:	81 f4       	brne	.+32     	; 0x1498 <_Z15attachIntteruptiPFvvEi+0x1fa>
		{
			case 2:
			EICRB|=(1<<ISC60)|(1<<ISC61);
    1478:	ea e6       	ldi	r30, 0x6A	; 106
    147a:	f0 e0       	ldi	r31, 0x00	; 0
    147c:	80 81       	ld	r24, Z
    147e:	80 63       	ori	r24, 0x30	; 48
    1480:	80 83       	st	Z, r24
			break;
    1482:	08 95       	ret
			case 3:
			EICRB=(0<<ISC60)|(1<<ISC61);
    1484:	80 e2       	ldi	r24, 0x20	; 32
    1486:	80 93 6a 00 	sts	0x006A, r24
			break;
    148a:	08 95       	ret
			case 4:
			EICRB|=(1<<ISC60)|(0<<ISC61);
    148c:	ea e6       	ldi	r30, 0x6A	; 106
    148e:	f0 e0       	ldi	r31, 0x00	; 0
    1490:	80 81       	ld	r24, Z
    1492:	80 61       	ori	r24, 0x10	; 16
    1494:	80 83       	st	Z, r24
			break;
    1496:	08 95       	ret
			default:
			EICRB|=(0<<ISC60)|(0<<ISC61);
    1498:	ea e6       	ldi	r30, 0x6A	; 106
    149a:	f0 e0       	ldi	r31, 0x00	; 0
    149c:	80 81       	ld	r24, Z
    149e:	80 83       	st	Z, r24
    14a0:	08 95       	ret
			
		}
		break;
		
		case 7:
		EIMSK|=1<<INT7;
    14a2:	ef 9a       	sbi	0x1d, 7	; 29
		switch(cOmpare)
    14a4:	43 30       	cpi	r20, 0x03	; 3
    14a6:	51 05       	cpc	r21, r1
    14a8:	61 f0       	breq	.+24     	; 0x14c2 <_Z15attachIntteruptiPFvvEi+0x224>
    14aa:	44 30       	cpi	r20, 0x04	; 4
    14ac:	51 05       	cpc	r21, r1
    14ae:	69 f0       	breq	.+26     	; 0x14ca <_Z15attachIntteruptiPFvvEi+0x22c>
    14b0:	42 30       	cpi	r20, 0x02	; 2
    14b2:	51 05       	cpc	r21, r1
    14b4:	81 f4       	brne	.+32     	; 0x14d6 <_Z15attachIntteruptiPFvvEi+0x238>
		{
			case 2:
			EICRB|=(1<<ISC70)|(1<<ISC71);
    14b6:	ea e6       	ldi	r30, 0x6A	; 106
    14b8:	f0 e0       	ldi	r31, 0x00	; 0
    14ba:	80 81       	ld	r24, Z
    14bc:	80 6c       	ori	r24, 0xC0	; 192
    14be:	80 83       	st	Z, r24
			break;
    14c0:	08 95       	ret
			case 3:
			EICRB=(0<<ISC70)|(1<<ISC71);
    14c2:	80 e8       	ldi	r24, 0x80	; 128
    14c4:	80 93 6a 00 	sts	0x006A, r24
			break;
    14c8:	08 95       	ret
			case 4:
			EICRB|=(1<<ISC70)|(0<<ISC71);
    14ca:	ea e6       	ldi	r30, 0x6A	; 106
    14cc:	f0 e0       	ldi	r31, 0x00	; 0
    14ce:	80 81       	ld	r24, Z
    14d0:	80 64       	ori	r24, 0x40	; 64
    14d2:	80 83       	st	Z, r24
			break;
    14d4:	08 95       	ret
			default:
			EICRB|=(0<<ISC70)|(0<<ISC71);
    14d6:	ea e6       	ldi	r30, 0x6A	; 106
    14d8:	f0 e0       	ldi	r31, 0x00	; 0
    14da:	80 81       	ld	r24, Z
    14dc:	80 83       	st	Z, r24
    14de:	08 95       	ret
		}
		break;
		
	        default:EICRA|=(0<<ISC01)|(0<<ISC00);
    14e0:	e9 e6       	ldi	r30, 0x69	; 105
    14e2:	f0 e0       	ldi	r31, 0x00	; 0
    14e4:	80 81       	ld	r24, Z
    14e6:	80 83       	st	Z, r24
    14e8:	08 95       	ret

000014ea <__vector_1>:
	}
}
ISR(INT0_vect)
{
    14ea:	1f 92       	push	r1
    14ec:	0f 92       	push	r0
    14ee:	0f b6       	in	r0, 0x3f	; 63
    14f0:	0f 92       	push	r0
    14f2:	0b b6       	in	r0, 0x3b	; 59
    14f4:	0f 92       	push	r0
    14f6:	11 24       	eor	r1, r1
    14f8:	2f 93       	push	r18
    14fa:	3f 93       	push	r19
    14fc:	4f 93       	push	r20
    14fe:	5f 93       	push	r21
    1500:	6f 93       	push	r22
    1502:	7f 93       	push	r23
    1504:	8f 93       	push	r24
    1506:	9f 93       	push	r25
    1508:	af 93       	push	r26
    150a:	bf 93       	push	r27
    150c:	ef 93       	push	r30
    150e:	ff 93       	push	r31
   cAllisr();
    1510:	e0 91 c4 02 	lds	r30, 0x02C4
    1514:	f0 91 c5 02 	lds	r31, 0x02C5
    1518:	19 95       	eicall
}
    151a:	ff 91       	pop	r31
    151c:	ef 91       	pop	r30
    151e:	bf 91       	pop	r27
    1520:	af 91       	pop	r26
    1522:	9f 91       	pop	r25
    1524:	8f 91       	pop	r24
    1526:	7f 91       	pop	r23
    1528:	6f 91       	pop	r22
    152a:	5f 91       	pop	r21
    152c:	4f 91       	pop	r20
    152e:	3f 91       	pop	r19
    1530:	2f 91       	pop	r18
    1532:	0f 90       	pop	r0
    1534:	0b be       	out	0x3b, r0	; 59
    1536:	0f 90       	pop	r0
    1538:	0f be       	out	0x3f, r0	; 63
    153a:	0f 90       	pop	r0
    153c:	1f 90       	pop	r1
    153e:	18 95       	reti

00001540 <__vector_2>:
ISR(INT1_vect)
{
    1540:	1f 92       	push	r1
    1542:	0f 92       	push	r0
    1544:	0f b6       	in	r0, 0x3f	; 63
    1546:	0f 92       	push	r0
    1548:	0b b6       	in	r0, 0x3b	; 59
    154a:	0f 92       	push	r0
    154c:	11 24       	eor	r1, r1
    154e:	2f 93       	push	r18
    1550:	3f 93       	push	r19
    1552:	4f 93       	push	r20
    1554:	5f 93       	push	r21
    1556:	6f 93       	push	r22
    1558:	7f 93       	push	r23
    155a:	8f 93       	push	r24
    155c:	9f 93       	push	r25
    155e:	af 93       	push	r26
    1560:	bf 93       	push	r27
    1562:	ef 93       	push	r30
    1564:	ff 93       	push	r31
   cAllisr();
    1566:	e0 91 c4 02 	lds	r30, 0x02C4
    156a:	f0 91 c5 02 	lds	r31, 0x02C5
    156e:	19 95       	eicall
}
    1570:	ff 91       	pop	r31
    1572:	ef 91       	pop	r30
    1574:	bf 91       	pop	r27
    1576:	af 91       	pop	r26
    1578:	9f 91       	pop	r25
    157a:	8f 91       	pop	r24
    157c:	7f 91       	pop	r23
    157e:	6f 91       	pop	r22
    1580:	5f 91       	pop	r21
    1582:	4f 91       	pop	r20
    1584:	3f 91       	pop	r19
    1586:	2f 91       	pop	r18
    1588:	0f 90       	pop	r0
    158a:	0b be       	out	0x3b, r0	; 59
    158c:	0f 90       	pop	r0
    158e:	0f be       	out	0x3f, r0	; 63
    1590:	0f 90       	pop	r0
    1592:	1f 90       	pop	r1
    1594:	18 95       	reti

00001596 <__vector_3>:
ISR(INT2_vect)
{
    1596:	1f 92       	push	r1
    1598:	0f 92       	push	r0
    159a:	0f b6       	in	r0, 0x3f	; 63
    159c:	0f 92       	push	r0
    159e:	0b b6       	in	r0, 0x3b	; 59
    15a0:	0f 92       	push	r0
    15a2:	11 24       	eor	r1, r1
    15a4:	2f 93       	push	r18
    15a6:	3f 93       	push	r19
    15a8:	4f 93       	push	r20
    15aa:	5f 93       	push	r21
    15ac:	6f 93       	push	r22
    15ae:	7f 93       	push	r23
    15b0:	8f 93       	push	r24
    15b2:	9f 93       	push	r25
    15b4:	af 93       	push	r26
    15b6:	bf 93       	push	r27
    15b8:	ef 93       	push	r30
    15ba:	ff 93       	push	r31
   cAllisr();
    15bc:	e0 91 c4 02 	lds	r30, 0x02C4
    15c0:	f0 91 c5 02 	lds	r31, 0x02C5
    15c4:	19 95       	eicall
}
    15c6:	ff 91       	pop	r31
    15c8:	ef 91       	pop	r30
    15ca:	bf 91       	pop	r27
    15cc:	af 91       	pop	r26
    15ce:	9f 91       	pop	r25
    15d0:	8f 91       	pop	r24
    15d2:	7f 91       	pop	r23
    15d4:	6f 91       	pop	r22
    15d6:	5f 91       	pop	r21
    15d8:	4f 91       	pop	r20
    15da:	3f 91       	pop	r19
    15dc:	2f 91       	pop	r18
    15de:	0f 90       	pop	r0
    15e0:	0b be       	out	0x3b, r0	; 59
    15e2:	0f 90       	pop	r0
    15e4:	0f be       	out	0x3f, r0	; 63
    15e6:	0f 90       	pop	r0
    15e8:	1f 90       	pop	r1
    15ea:	18 95       	reti

000015ec <__vector_4>:
ISR(INT3_vect)
{
    15ec:	1f 92       	push	r1
    15ee:	0f 92       	push	r0
    15f0:	0f b6       	in	r0, 0x3f	; 63
    15f2:	0f 92       	push	r0
    15f4:	0b b6       	in	r0, 0x3b	; 59
    15f6:	0f 92       	push	r0
    15f8:	11 24       	eor	r1, r1
    15fa:	2f 93       	push	r18
    15fc:	3f 93       	push	r19
    15fe:	4f 93       	push	r20
    1600:	5f 93       	push	r21
    1602:	6f 93       	push	r22
    1604:	7f 93       	push	r23
    1606:	8f 93       	push	r24
    1608:	9f 93       	push	r25
    160a:	af 93       	push	r26
    160c:	bf 93       	push	r27
    160e:	ef 93       	push	r30
    1610:	ff 93       	push	r31
   cAllisr();
    1612:	e0 91 c4 02 	lds	r30, 0x02C4
    1616:	f0 91 c5 02 	lds	r31, 0x02C5
    161a:	19 95       	eicall
}
    161c:	ff 91       	pop	r31
    161e:	ef 91       	pop	r30
    1620:	bf 91       	pop	r27
    1622:	af 91       	pop	r26
    1624:	9f 91       	pop	r25
    1626:	8f 91       	pop	r24
    1628:	7f 91       	pop	r23
    162a:	6f 91       	pop	r22
    162c:	5f 91       	pop	r21
    162e:	4f 91       	pop	r20
    1630:	3f 91       	pop	r19
    1632:	2f 91       	pop	r18
    1634:	0f 90       	pop	r0
    1636:	0b be       	out	0x3b, r0	; 59
    1638:	0f 90       	pop	r0
    163a:	0f be       	out	0x3f, r0	; 63
    163c:	0f 90       	pop	r0
    163e:	1f 90       	pop	r1
    1640:	18 95       	reti

00001642 <__vector_5>:
ISR(INT4_vect)
{
    1642:	1f 92       	push	r1
    1644:	0f 92       	push	r0
    1646:	0f b6       	in	r0, 0x3f	; 63
    1648:	0f 92       	push	r0
    164a:	0b b6       	in	r0, 0x3b	; 59
    164c:	0f 92       	push	r0
    164e:	11 24       	eor	r1, r1
    1650:	2f 93       	push	r18
    1652:	3f 93       	push	r19
    1654:	4f 93       	push	r20
    1656:	5f 93       	push	r21
    1658:	6f 93       	push	r22
    165a:	7f 93       	push	r23
    165c:	8f 93       	push	r24
    165e:	9f 93       	push	r25
    1660:	af 93       	push	r26
    1662:	bf 93       	push	r27
    1664:	ef 93       	push	r30
    1666:	ff 93       	push	r31
    cAllisr();
    1668:	e0 91 c4 02 	lds	r30, 0x02C4
    166c:	f0 91 c5 02 	lds	r31, 0x02C5
    1670:	19 95       	eicall
}
    1672:	ff 91       	pop	r31
    1674:	ef 91       	pop	r30
    1676:	bf 91       	pop	r27
    1678:	af 91       	pop	r26
    167a:	9f 91       	pop	r25
    167c:	8f 91       	pop	r24
    167e:	7f 91       	pop	r23
    1680:	6f 91       	pop	r22
    1682:	5f 91       	pop	r21
    1684:	4f 91       	pop	r20
    1686:	3f 91       	pop	r19
    1688:	2f 91       	pop	r18
    168a:	0f 90       	pop	r0
    168c:	0b be       	out	0x3b, r0	; 59
    168e:	0f 90       	pop	r0
    1690:	0f be       	out	0x3f, r0	; 63
    1692:	0f 90       	pop	r0
    1694:	1f 90       	pop	r1
    1696:	18 95       	reti

00001698 <__vector_6>:
ISR(INT5_vect)
{
    1698:	1f 92       	push	r1
    169a:	0f 92       	push	r0
    169c:	0f b6       	in	r0, 0x3f	; 63
    169e:	0f 92       	push	r0
    16a0:	0b b6       	in	r0, 0x3b	; 59
    16a2:	0f 92       	push	r0
    16a4:	11 24       	eor	r1, r1
    16a6:	2f 93       	push	r18
    16a8:	3f 93       	push	r19
    16aa:	4f 93       	push	r20
    16ac:	5f 93       	push	r21
    16ae:	6f 93       	push	r22
    16b0:	7f 93       	push	r23
    16b2:	8f 93       	push	r24
    16b4:	9f 93       	push	r25
    16b6:	af 93       	push	r26
    16b8:	bf 93       	push	r27
    16ba:	ef 93       	push	r30
    16bc:	ff 93       	push	r31
    cAllisr();
    16be:	e0 91 c4 02 	lds	r30, 0x02C4
    16c2:	f0 91 c5 02 	lds	r31, 0x02C5
    16c6:	19 95       	eicall
}
    16c8:	ff 91       	pop	r31
    16ca:	ef 91       	pop	r30
    16cc:	bf 91       	pop	r27
    16ce:	af 91       	pop	r26
    16d0:	9f 91       	pop	r25
    16d2:	8f 91       	pop	r24
    16d4:	7f 91       	pop	r23
    16d6:	6f 91       	pop	r22
    16d8:	5f 91       	pop	r21
    16da:	4f 91       	pop	r20
    16dc:	3f 91       	pop	r19
    16de:	2f 91       	pop	r18
    16e0:	0f 90       	pop	r0
    16e2:	0b be       	out	0x3b, r0	; 59
    16e4:	0f 90       	pop	r0
    16e6:	0f be       	out	0x3f, r0	; 63
    16e8:	0f 90       	pop	r0
    16ea:	1f 90       	pop	r1
    16ec:	18 95       	reti

000016ee <__vector_7>:
ISR(INT6_vect)
{
    16ee:	1f 92       	push	r1
    16f0:	0f 92       	push	r0
    16f2:	0f b6       	in	r0, 0x3f	; 63
    16f4:	0f 92       	push	r0
    16f6:	0b b6       	in	r0, 0x3b	; 59
    16f8:	0f 92       	push	r0
    16fa:	11 24       	eor	r1, r1
    16fc:	2f 93       	push	r18
    16fe:	3f 93       	push	r19
    1700:	4f 93       	push	r20
    1702:	5f 93       	push	r21
    1704:	6f 93       	push	r22
    1706:	7f 93       	push	r23
    1708:	8f 93       	push	r24
    170a:	9f 93       	push	r25
    170c:	af 93       	push	r26
    170e:	bf 93       	push	r27
    1710:	ef 93       	push	r30
    1712:	ff 93       	push	r31
    cAllisr();
    1714:	e0 91 c4 02 	lds	r30, 0x02C4
    1718:	f0 91 c5 02 	lds	r31, 0x02C5
    171c:	19 95       	eicall
}
    171e:	ff 91       	pop	r31
    1720:	ef 91       	pop	r30
    1722:	bf 91       	pop	r27
    1724:	af 91       	pop	r26
    1726:	9f 91       	pop	r25
    1728:	8f 91       	pop	r24
    172a:	7f 91       	pop	r23
    172c:	6f 91       	pop	r22
    172e:	5f 91       	pop	r21
    1730:	4f 91       	pop	r20
    1732:	3f 91       	pop	r19
    1734:	2f 91       	pop	r18
    1736:	0f 90       	pop	r0
    1738:	0b be       	out	0x3b, r0	; 59
    173a:	0f 90       	pop	r0
    173c:	0f be       	out	0x3f, r0	; 63
    173e:	0f 90       	pop	r0
    1740:	1f 90       	pop	r1
    1742:	18 95       	reti

00001744 <__vector_8>:
ISR(INT7_vect)
{ 
    1744:	1f 92       	push	r1
    1746:	0f 92       	push	r0
    1748:	0f b6       	in	r0, 0x3f	; 63
    174a:	0f 92       	push	r0
    174c:	0b b6       	in	r0, 0x3b	; 59
    174e:	0f 92       	push	r0
    1750:	11 24       	eor	r1, r1
    1752:	2f 93       	push	r18
    1754:	3f 93       	push	r19
    1756:	4f 93       	push	r20
    1758:	5f 93       	push	r21
    175a:	6f 93       	push	r22
    175c:	7f 93       	push	r23
    175e:	8f 93       	push	r24
    1760:	9f 93       	push	r25
    1762:	af 93       	push	r26
    1764:	bf 93       	push	r27
    1766:	ef 93       	push	r30
    1768:	ff 93       	push	r31
    cAllisr();
    176a:	e0 91 c4 02 	lds	r30, 0x02C4
    176e:	f0 91 c5 02 	lds	r31, 0x02C5
    1772:	19 95       	eicall
}
    1774:	ff 91       	pop	r31
    1776:	ef 91       	pop	r30
    1778:	bf 91       	pop	r27
    177a:	af 91       	pop	r26
    177c:	9f 91       	pop	r25
    177e:	8f 91       	pop	r24
    1780:	7f 91       	pop	r23
    1782:	6f 91       	pop	r22
    1784:	5f 91       	pop	r21
    1786:	4f 91       	pop	r20
    1788:	3f 91       	pop	r19
    178a:	2f 91       	pop	r18
    178c:	0f 90       	pop	r0
    178e:	0b be       	out	0x3b, r0	; 59
    1790:	0f 90       	pop	r0
    1792:	0f be       	out	0x3f, r0	; 63
    1794:	0f 90       	pop	r0
    1796:	1f 90       	pop	r1
    1798:	18 95       	reti

0000179a <_Z6angle1i>:
Servo p;   // 4 Objects created for 4 servos
Servo q;
Servo r;
Servo s;
	void angle1(int dist)
	{
    179a:	2f 92       	push	r2
    179c:	3f 92       	push	r3
    179e:	4f 92       	push	r4
    17a0:	5f 92       	push	r5
    17a2:	6f 92       	push	r6
    17a4:	7f 92       	push	r7
    17a6:	8f 92       	push	r8
    17a8:	9f 92       	push	r9
    17aa:	af 92       	push	r10
    17ac:	bf 92       	push	r11
    17ae:	cf 92       	push	r12
    17b0:	df 92       	push	r13
    17b2:	ef 92       	push	r14
    17b4:	ff 92       	push	r15
    17b6:	0f 93       	push	r16
    17b8:	1f 93       	push	r17
    17ba:	cf 93       	push	r28
    17bc:	df 93       	push	r29
		v=(ang1-90) +(dist-1250)*k;
    17be:	bc 01       	movw	r22, r24
    17c0:	62 5e       	subi	r22, 0xE2	; 226
    17c2:	74 40       	sbci	r23, 0x04	; 4
    17c4:	88 27       	eor	r24, r24
    17c6:	77 fd       	sbrc	r23, 7
    17c8:	80 95       	com	r24
    17ca:	98 2f       	mov	r25, r24
    17cc:	0e 94 ee 79 	call	0xf3dc	; 0xf3dc <__floatsisf>
    17d0:	20 91 b4 02 	lds	r18, 0x02B4
    17d4:	30 91 b5 02 	lds	r19, 0x02B5
    17d8:	40 91 b6 02 	lds	r20, 0x02B6
    17dc:	50 91 b7 02 	lds	r21, 0x02B7
    17e0:	0e 94 a2 7a 	call	0xf544	; 0xf544 <__mulsf3>
    17e4:	f6 2e       	mov	r15, r22
    17e6:	07 2f       	mov	r16, r23
    17e8:	18 2f       	mov	r17, r24
    17ea:	e9 2e       	mov	r14, r25
    17ec:	60 91 b8 02 	lds	r22, 0x02B8
    17f0:	70 91 b9 02 	lds	r23, 0x02B9
    17f4:	6a 55       	subi	r22, 0x5A	; 90
    17f6:	70 40       	sbci	r23, 0x00	; 0
    17f8:	88 27       	eor	r24, r24
    17fa:	77 fd       	sbrc	r23, 7
    17fc:	80 95       	com	r24
    17fe:	98 2f       	mov	r25, r24
    1800:	0e 94 ee 79 	call	0xf3dc	; 0xf3dc <__floatsisf>
    1804:	2f 2d       	mov	r18, r15
    1806:	30 2f       	mov	r19, r16
    1808:	41 2f       	mov	r20, r17
    180a:	5e 2d       	mov	r21, r14
    180c:	0e 94 eb 78 	call	0xf1d6	; 0xf1d6 <__addsf3>
    1810:	0e 94 bb 79 	call	0xf376	; 0xf376 <__fixsfsi>
    1814:	eb 01       	movw	r28, r22
    1816:	70 93 cb 02 	sts	0x02CB, r23
    181a:	60 93 ca 02 	sts	0x02CA, r22
		y=(ang2-90)+ (dist-1250)*k;
    181e:	60 91 ba 02 	lds	r22, 0x02BA
    1822:	70 91 bb 02 	lds	r23, 0x02BB
    1826:	6a 55       	subi	r22, 0x5A	; 90
    1828:	70 40       	sbci	r23, 0x00	; 0
    182a:	88 27       	eor	r24, r24
    182c:	77 fd       	sbrc	r23, 7
    182e:	80 95       	com	r24
    1830:	98 2f       	mov	r25, r24
    1832:	0e 94 ee 79 	call	0xf3dc	; 0xf3dc <__floatsisf>
    1836:	9b 01       	movw	r18, r22
    1838:	ac 01       	movw	r20, r24
    183a:	6f 2d       	mov	r22, r15
    183c:	70 2f       	mov	r23, r16
    183e:	81 2f       	mov	r24, r17
    1840:	9e 2d       	mov	r25, r14
    1842:	0e 94 eb 78 	call	0xf1d6	; 0xf1d6 <__addsf3>
    1846:	0e 94 bb 79 	call	0xf376	; 0xf376 <__fixsfsi>
    184a:	70 93 cd 02 	sts	0x02CD, r23
    184e:	60 93 cc 02 	sts	0x02CC, r22
		z=(ang3-90)+ (dist-1250)*k;
    1852:	60 91 bc 02 	lds	r22, 0x02BC
    1856:	70 91 bd 02 	lds	r23, 0x02BD
    185a:	6a 55       	subi	r22, 0x5A	; 90
    185c:	70 40       	sbci	r23, 0x00	; 0
    185e:	88 27       	eor	r24, r24
    1860:	77 fd       	sbrc	r23, 7
    1862:	80 95       	com	r24
    1864:	98 2f       	mov	r25, r24
    1866:	0e 94 ee 79 	call	0xf3dc	; 0xf3dc <__floatsisf>
    186a:	9b 01       	movw	r18, r22
    186c:	ac 01       	movw	r20, r24
    186e:	6f 2d       	mov	r22, r15
    1870:	70 2f       	mov	r23, r16
    1872:	81 2f       	mov	r24, r17
    1874:	9e 2d       	mov	r25, r14
    1876:	0e 94 eb 78 	call	0xf1d6	; 0xf1d6 <__addsf3>
    187a:	0e 94 bb 79 	call	0xf376	; 0xf376 <__fixsfsi>
    187e:	70 93 cf 02 	sts	0x02CF, r23
    1882:	60 93 ce 02 	sts	0x02CE, r22
		w=(ang4-90)+ (dist-1250)*k;
    1886:	60 91 be 02 	lds	r22, 0x02BE
    188a:	70 91 bf 02 	lds	r23, 0x02BF
    188e:	6a 55       	subi	r22, 0x5A	; 90
    1890:	70 40       	sbci	r23, 0x00	; 0
    1892:	88 27       	eor	r24, r24
    1894:	77 fd       	sbrc	r23, 7
    1896:	80 95       	com	r24
    1898:	98 2f       	mov	r25, r24
    189a:	0e 94 ee 79 	call	0xf3dc	; 0xf3dc <__floatsisf>
    189e:	9b 01       	movw	r18, r22
    18a0:	ac 01       	movw	r20, r24
    18a2:	6f 2d       	mov	r22, r15
    18a4:	70 2f       	mov	r23, r16
    18a6:	81 2f       	mov	r24, r17
    18a8:	9e 2d       	mov	r25, r14
    18aa:	0e 94 eb 78 	call	0xf1d6	; 0xf1d6 <__addsf3>
    18ae:	0e 94 bb 79 	call	0xf376	; 0xf376 <__fixsfsi>
    18b2:	70 93 d1 02 	sts	0x02D1, r23
    18b6:	60 93 d0 02 	sts	0x02D0, r22
     }
  }

  void write(int vAl)           //PIN=servo pin no. on mega,vAl=angle F_CPU for the servo at pin
  {
    switch(pIn)
    18ba:	80 91 d4 02 	lds	r24, 0x02D4
    18be:	88 30       	cpi	r24, 0x08	; 8
    18c0:	09 f4       	brne	.+2      	; 0x18c4 <_Z6angle1i+0x12a>
    18c2:	72 c2       	rjmp	.+1252   	; 0x1da8 <_Z6angle1i+0x60e>
    18c4:	89 30       	cpi	r24, 0x09	; 9
    18c6:	98 f4       	brcc	.+38     	; 0x18ee <_Z6angle1i+0x154>
    18c8:	85 30       	cpi	r24, 0x05	; 5
    18ca:	09 f4       	brne	.+2      	; 0x18ce <_Z6angle1i+0x134>
    18cc:	ce c0       	rjmp	.+412    	; 0x1a6a <_Z6angle1i+0x2d0>
    18ce:	86 30       	cpi	r24, 0x06	; 6
    18d0:	38 f4       	brcc	.+14     	; 0x18e0 <_Z6angle1i+0x146>
    18d2:	82 30       	cpi	r24, 0x02	; 2
    18d4:	09 f4       	brne	.+2      	; 0x18d8 <_Z6angle1i+0x13e>
    18d6:	1c c1       	rjmp	.+568    	; 0x1b10 <_Z6angle1i+0x376>
    18d8:	83 30       	cpi	r24, 0x03	; 3
    18da:	09 f0       	breq	.+2      	; 0x18de <_Z6angle1i+0x144>
    18dc:	b0 c3       	rjmp	.+1888   	; 0x203e <_Z6angle1i+0x8a4>
    18de:	6b c1       	rjmp	.+726    	; 0x1bb6 <_Z6angle1i+0x41c>
    18e0:	86 30       	cpi	r24, 0x06	; 6
    18e2:	09 f4       	brne	.+2      	; 0x18e6 <_Z6angle1i+0x14c>
    18e4:	bb c1       	rjmp	.+886    	; 0x1c5c <_Z6angle1i+0x4c2>
    18e6:	87 30       	cpi	r24, 0x07	; 7
    18e8:	09 f0       	breq	.+2      	; 0x18ec <_Z6angle1i+0x152>
    18ea:	a9 c3       	rjmp	.+1874   	; 0x203e <_Z6angle1i+0x8a4>
    18ec:	0a c2       	rjmp	.+1044   	; 0x1d02 <_Z6angle1i+0x568>
    18ee:	8c 32       	cpi	r24, 0x2C	; 44
    18f0:	09 f4       	brne	.+2      	; 0x18f4 <_Z6angle1i+0x15a>
    18f2:	53 c3       	rjmp	.+1702   	; 0x1f9a <_Z6angle1i+0x800>
    18f4:	8d 32       	cpi	r24, 0x2D	; 45
    18f6:	30 f4       	brcc	.+12     	; 0x1904 <_Z6angle1i+0x16a>
    18f8:	8b 30       	cpi	r24, 0x0B	; 11
    18fa:	59 f0       	breq	.+22     	; 0x1912 <_Z6angle1i+0x178>
    18fc:	8c 30       	cpi	r24, 0x0C	; 12
    18fe:	09 f0       	breq	.+2      	; 0x1902 <_Z6angle1i+0x168>
    1900:	9e c3       	rjmp	.+1852   	; 0x203e <_Z6angle1i+0x8a4>
    1902:	5d c0       	rjmp	.+186    	; 0x19be <_Z6angle1i+0x224>
    1904:	8d 32       	cpi	r24, 0x2D	; 45
    1906:	09 f4       	brne	.+2      	; 0x190a <_Z6angle1i+0x170>
    1908:	f5 c2       	rjmp	.+1514   	; 0x1ef4 <_Z6angle1i+0x75a>
    190a:	8e 32       	cpi	r24, 0x2E	; 46
    190c:	09 f0       	breq	.+2      	; 0x1910 <_Z6angle1i+0x176>
    190e:	97 c3       	rjmp	.+1838   	; 0x203e <_Z6angle1i+0x8a4>
    1910:	9e c2       	rjmp	.+1340   	; 0x1e4e <_Z6angle1i+0x6b4>
    {
     case 11:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    1912:	0f 2e       	mov	r0, r31
    1914:	f6 e8       	ldi	r31, 0x86	; 134
    1916:	8f 2e       	mov	r8, r31
    1918:	99 24       	eor	r9, r9
    191a:	f0 2d       	mov	r31, r0
    191c:	f4 01       	movw	r30, r8
    191e:	00 81       	ld	r16, Z
    1920:	11 81       	ldd	r17, Z+1	; 0x01
    1922:	e0 80       	ld	r14, Z
    1924:	f1 80       	ldd	r15, Z+1	; 0x01
    1926:	00 d0       	rcall	.+0      	; 0x1928 <_Z6angle1i+0x18e>
    1928:	0f 92       	push	r0
    192a:	2d b6       	in	r2, 0x3d	; 61
    192c:	3e b6       	in	r3, 0x3e	; 62
    192e:	08 94       	sec
    1930:	21 1c       	adc	r2, r1
    1932:	31 1c       	adc	r3, r1
    1934:	be 01       	movw	r22, r28
    1936:	88 27       	eor	r24, r24
    1938:	77 fd       	sbrc	r23, 7
    193a:	80 95       	com	r24
    193c:	98 2f       	mov	r25, r24
    193e:	0e 94 ee 79 	call	0xf3dc	; 0xf3dc <__floatsisf>
    1942:	2b 01       	movw	r4, r22
    1944:	3c 01       	movw	r6, r24
    1946:	c8 01       	movw	r24, r16
    1948:	68 e2       	ldi	r22, 0x28	; 40
    194a:	70 e0       	ldi	r23, 0x00	; 0
    194c:	0e 94 05 7b 	call	0xf60a	; 0xf60a <__udivmodhi4>
    1950:	80 e0       	ldi	r24, 0x00	; 0
    1952:	90 e0       	ldi	r25, 0x00	; 0
    1954:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    1958:	5b 01       	movw	r10, r22
    195a:	6c 01       	movw	r12, r24
    195c:	f6 94       	lsr	r15
    195e:	e7 94       	ror	r14
    1960:	f6 94       	lsr	r15
    1962:	e7 94       	ror	r14
    1964:	f6 94       	lsr	r15
    1966:	e7 94       	ror	r14
    1968:	b7 01       	movw	r22, r14
    196a:	80 e0       	ldi	r24, 0x00	; 0
    196c:	90 e0       	ldi	r25, 0x00	; 0
    196e:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    1972:	f1 01       	movw	r30, r2
    1974:	60 83       	st	Z, r22
    1976:	71 83       	std	Z+1, r23	; 0x01
    1978:	82 83       	std	Z+2, r24	; 0x02
    197a:	93 83       	std	Z+3, r25	; 0x03
    197c:	c3 01       	movw	r24, r6
    197e:	b2 01       	movw	r22, r4
    1980:	20 e0       	ldi	r18, 0x00	; 0
    1982:	30 e0       	ldi	r19, 0x00	; 0
    1984:	a9 01       	movw	r20, r18
    1986:	0f 2e       	mov	r0, r31
    1988:	f0 e0       	ldi	r31, 0x00	; 0
    198a:	ef 2e       	mov	r14, r31
    198c:	f0 e0       	ldi	r31, 0x00	; 0
    198e:	ff 2e       	mov	r15, r31
    1990:	f4 e3       	ldi	r31, 0x34	; 52
    1992:	0f 2f       	mov	r16, r31
    1994:	f3 e4       	ldi	r31, 0x43	; 67
    1996:	1f 2f       	mov	r17, r31
    1998:	f0 2d       	mov	r31, r0
    199a:	0e 94 a0 08 	call	0x1140	; 0x1140 <_Z3mapddddd>
    199e:	0f 90       	pop	r0
    19a0:	0f 90       	pop	r0
    19a2:	0f 90       	pop	r0
    19a4:	0f 90       	pop	r0
        OCR1A=ICR1-vAl;
    19a6:	f4 01       	movw	r30, r8
    19a8:	c0 81       	ld	r28, Z
    19aa:	d1 81       	ldd	r29, Z+1	; 0x01
  void write(int vAl)           //PIN=servo pin no. on mega,vAl=angle F_CPU for the servo at pin
  {
    switch(pIn)
    {
     case 11:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    19ac:	0e 94 bb 79 	call	0xf376	; 0xf376 <__fixsfsi>
        OCR1A=ICR1-vAl;
    19b0:	c6 1b       	sub	r28, r22
    19b2:	d7 0b       	sbc	r29, r23
    19b4:	d0 93 89 00 	sts	0x0089, r29
    19b8:	c0 93 88 00 	sts	0x0088, r28
    19bc:	40 c3       	rjmp	.+1664   	; 0x203e <_Z6angle1i+0x8a4>
        break;
      case 12:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    19be:	0f 2e       	mov	r0, r31
    19c0:	f6 e8       	ldi	r31, 0x86	; 134
    19c2:	8f 2e       	mov	r8, r31
    19c4:	99 24       	eor	r9, r9
    19c6:	f0 2d       	mov	r31, r0
    19c8:	f4 01       	movw	r30, r8
    19ca:	00 81       	ld	r16, Z
    19cc:	11 81       	ldd	r17, Z+1	; 0x01
    19ce:	e0 80       	ld	r14, Z
    19d0:	f1 80       	ldd	r15, Z+1	; 0x01
    19d2:	00 d0       	rcall	.+0      	; 0x19d4 <_Z6angle1i+0x23a>
    19d4:	0f 92       	push	r0
    19d6:	2d b6       	in	r2, 0x3d	; 61
    19d8:	3e b6       	in	r3, 0x3e	; 62
    19da:	08 94       	sec
    19dc:	21 1c       	adc	r2, r1
    19de:	31 1c       	adc	r3, r1
    19e0:	be 01       	movw	r22, r28
    19e2:	88 27       	eor	r24, r24
    19e4:	77 fd       	sbrc	r23, 7
    19e6:	80 95       	com	r24
    19e8:	98 2f       	mov	r25, r24
    19ea:	0e 94 ee 79 	call	0xf3dc	; 0xf3dc <__floatsisf>
    19ee:	2b 01       	movw	r4, r22
    19f0:	3c 01       	movw	r6, r24
    19f2:	c8 01       	movw	r24, r16
    19f4:	68 e2       	ldi	r22, 0x28	; 40
    19f6:	70 e0       	ldi	r23, 0x00	; 0
    19f8:	0e 94 05 7b 	call	0xf60a	; 0xf60a <__udivmodhi4>
    19fc:	80 e0       	ldi	r24, 0x00	; 0
    19fe:	90 e0       	ldi	r25, 0x00	; 0
    1a00:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    1a04:	5b 01       	movw	r10, r22
    1a06:	6c 01       	movw	r12, r24
    1a08:	f6 94       	lsr	r15
    1a0a:	e7 94       	ror	r14
    1a0c:	f6 94       	lsr	r15
    1a0e:	e7 94       	ror	r14
    1a10:	f6 94       	lsr	r15
    1a12:	e7 94       	ror	r14
    1a14:	b7 01       	movw	r22, r14
    1a16:	80 e0       	ldi	r24, 0x00	; 0
    1a18:	90 e0       	ldi	r25, 0x00	; 0
    1a1a:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    1a1e:	f1 01       	movw	r30, r2
    1a20:	60 83       	st	Z, r22
    1a22:	71 83       	std	Z+1, r23	; 0x01
    1a24:	82 83       	std	Z+2, r24	; 0x02
    1a26:	93 83       	std	Z+3, r25	; 0x03
    1a28:	c3 01       	movw	r24, r6
    1a2a:	b2 01       	movw	r22, r4
    1a2c:	20 e0       	ldi	r18, 0x00	; 0
    1a2e:	30 e0       	ldi	r19, 0x00	; 0
    1a30:	a9 01       	movw	r20, r18
    1a32:	0f 2e       	mov	r0, r31
    1a34:	f0 e0       	ldi	r31, 0x00	; 0
    1a36:	ef 2e       	mov	r14, r31
    1a38:	f0 e0       	ldi	r31, 0x00	; 0
    1a3a:	ff 2e       	mov	r15, r31
    1a3c:	f4 e3       	ldi	r31, 0x34	; 52
    1a3e:	0f 2f       	mov	r16, r31
    1a40:	f3 e4       	ldi	r31, 0x43	; 67
    1a42:	1f 2f       	mov	r17, r31
    1a44:	f0 2d       	mov	r31, r0
    1a46:	0e 94 a0 08 	call	0x1140	; 0x1140 <_Z3mapddddd>
    1a4a:	0f 90       	pop	r0
    1a4c:	0f 90       	pop	r0
    1a4e:	0f 90       	pop	r0
    1a50:	0f 90       	pop	r0
        OCR1B=ICR1-vAl;
    1a52:	f4 01       	movw	r30, r8
    1a54:	c0 81       	ld	r28, Z
    1a56:	d1 81       	ldd	r29, Z+1	; 0x01
     case 11:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
        OCR1A=ICR1-vAl;
        break;
      case 12:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    1a58:	0e 94 bb 79 	call	0xf376	; 0xf376 <__fixsfsi>
        OCR1B=ICR1-vAl;
    1a5c:	c6 1b       	sub	r28, r22
    1a5e:	d7 0b       	sbc	r29, r23
    1a60:	d0 93 8b 00 	sts	0x008B, r29
    1a64:	c0 93 8a 00 	sts	0x008A, r28
    1a68:	ea c2       	rjmp	.+1492   	; 0x203e <_Z6angle1i+0x8a4>
        break;
      case 5:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    1a6a:	e6 e8       	ldi	r30, 0x86	; 134
    1a6c:	f0 e0       	ldi	r31, 0x00	; 0
    1a6e:	a0 80       	ld	r10, Z
    1a70:	b1 80       	ldd	r11, Z+1	; 0x01
    1a72:	80 80       	ld	r8, Z
    1a74:	91 80       	ldd	r9, Z+1	; 0x01
    1a76:	00 d0       	rcall	.+0      	; 0x1a78 <_Z6angle1i+0x2de>
    1a78:	0f 92       	push	r0
    1a7a:	4d b6       	in	r4, 0x3d	; 61
    1a7c:	5e b6       	in	r5, 0x3e	; 62
    1a7e:	08 94       	sec
    1a80:	41 1c       	adc	r4, r1
    1a82:	51 1c       	adc	r5, r1
    1a84:	be 01       	movw	r22, r28
    1a86:	88 27       	eor	r24, r24
    1a88:	77 fd       	sbrc	r23, 7
    1a8a:	80 95       	com	r24
    1a8c:	98 2f       	mov	r25, r24
    1a8e:	0e 94 ee 79 	call	0xf3dc	; 0xf3dc <__floatsisf>
    1a92:	7b 01       	movw	r14, r22
    1a94:	8c 01       	movw	r16, r24
    1a96:	c5 01       	movw	r24, r10
    1a98:	68 e2       	ldi	r22, 0x28	; 40
    1a9a:	70 e0       	ldi	r23, 0x00	; 0
    1a9c:	0e 94 05 7b 	call	0xf60a	; 0xf60a <__udivmodhi4>
    1aa0:	80 e0       	ldi	r24, 0x00	; 0
    1aa2:	90 e0       	ldi	r25, 0x00	; 0
    1aa4:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    1aa8:	5b 01       	movw	r10, r22
    1aaa:	6c 01       	movw	r12, r24
    1aac:	96 94       	lsr	r9
    1aae:	87 94       	ror	r8
    1ab0:	96 94       	lsr	r9
    1ab2:	87 94       	ror	r8
    1ab4:	96 94       	lsr	r9
    1ab6:	87 94       	ror	r8
    1ab8:	b4 01       	movw	r22, r8
    1aba:	80 e0       	ldi	r24, 0x00	; 0
    1abc:	90 e0       	ldi	r25, 0x00	; 0
    1abe:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    1ac2:	f2 01       	movw	r30, r4
    1ac4:	60 83       	st	Z, r22
    1ac6:	71 83       	std	Z+1, r23	; 0x01
    1ac8:	82 83       	std	Z+2, r24	; 0x02
    1aca:	93 83       	std	Z+3, r25	; 0x03
    1acc:	c8 01       	movw	r24, r16
    1ace:	b7 01       	movw	r22, r14
    1ad0:	20 e0       	ldi	r18, 0x00	; 0
    1ad2:	30 e0       	ldi	r19, 0x00	; 0
    1ad4:	a9 01       	movw	r20, r18
    1ad6:	0f 2e       	mov	r0, r31
    1ad8:	f0 e0       	ldi	r31, 0x00	; 0
    1ada:	ef 2e       	mov	r14, r31
    1adc:	f0 e0       	ldi	r31, 0x00	; 0
    1ade:	ff 2e       	mov	r15, r31
    1ae0:	f4 e3       	ldi	r31, 0x34	; 52
    1ae2:	0f 2f       	mov	r16, r31
    1ae4:	f3 e4       	ldi	r31, 0x43	; 67
    1ae6:	1f 2f       	mov	r17, r31
    1ae8:	f0 2d       	mov	r31, r0
    1aea:	0e 94 a0 08 	call	0x1140	; 0x1140 <_Z3mapddddd>
    1aee:	0f 90       	pop	r0
    1af0:	0f 90       	pop	r0
    1af2:	0f 90       	pop	r0
    1af4:	0f 90       	pop	r0
        OCR3A=ICR3-vAl;
    1af6:	c0 91 96 00 	lds	r28, 0x0096
    1afa:	d0 91 97 00 	lds	r29, 0x0097
      case 12:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
        OCR1B=ICR1-vAl;
        break;
      case 5:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    1afe:	0e 94 bb 79 	call	0xf376	; 0xf376 <__fixsfsi>
        OCR3A=ICR3-vAl;
    1b02:	c6 1b       	sub	r28, r22
    1b04:	d7 0b       	sbc	r29, r23
    1b06:	d0 93 99 00 	sts	0x0099, r29
    1b0a:	c0 93 98 00 	sts	0x0098, r28
    1b0e:	97 c2       	rjmp	.+1326   	; 0x203e <_Z6angle1i+0x8a4>
        break;
      case 2:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    1b10:	e6 e8       	ldi	r30, 0x86	; 134
    1b12:	f0 e0       	ldi	r31, 0x00	; 0
    1b14:	a0 80       	ld	r10, Z
    1b16:	b1 80       	ldd	r11, Z+1	; 0x01
    1b18:	80 80       	ld	r8, Z
    1b1a:	91 80       	ldd	r9, Z+1	; 0x01
    1b1c:	00 d0       	rcall	.+0      	; 0x1b1e <_Z6angle1i+0x384>
    1b1e:	0f 92       	push	r0
    1b20:	4d b6       	in	r4, 0x3d	; 61
    1b22:	5e b6       	in	r5, 0x3e	; 62
    1b24:	08 94       	sec
    1b26:	41 1c       	adc	r4, r1
    1b28:	51 1c       	adc	r5, r1
    1b2a:	be 01       	movw	r22, r28
    1b2c:	88 27       	eor	r24, r24
    1b2e:	77 fd       	sbrc	r23, 7
    1b30:	80 95       	com	r24
    1b32:	98 2f       	mov	r25, r24
    1b34:	0e 94 ee 79 	call	0xf3dc	; 0xf3dc <__floatsisf>
    1b38:	7b 01       	movw	r14, r22
    1b3a:	8c 01       	movw	r16, r24
    1b3c:	c5 01       	movw	r24, r10
    1b3e:	68 e2       	ldi	r22, 0x28	; 40
    1b40:	70 e0       	ldi	r23, 0x00	; 0
    1b42:	0e 94 05 7b 	call	0xf60a	; 0xf60a <__udivmodhi4>
    1b46:	80 e0       	ldi	r24, 0x00	; 0
    1b48:	90 e0       	ldi	r25, 0x00	; 0
    1b4a:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    1b4e:	5b 01       	movw	r10, r22
    1b50:	6c 01       	movw	r12, r24
    1b52:	96 94       	lsr	r9
    1b54:	87 94       	ror	r8
    1b56:	96 94       	lsr	r9
    1b58:	87 94       	ror	r8
    1b5a:	96 94       	lsr	r9
    1b5c:	87 94       	ror	r8
    1b5e:	b4 01       	movw	r22, r8
    1b60:	80 e0       	ldi	r24, 0x00	; 0
    1b62:	90 e0       	ldi	r25, 0x00	; 0
    1b64:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    1b68:	f2 01       	movw	r30, r4
    1b6a:	60 83       	st	Z, r22
    1b6c:	71 83       	std	Z+1, r23	; 0x01
    1b6e:	82 83       	std	Z+2, r24	; 0x02
    1b70:	93 83       	std	Z+3, r25	; 0x03
    1b72:	c8 01       	movw	r24, r16
    1b74:	b7 01       	movw	r22, r14
    1b76:	20 e0       	ldi	r18, 0x00	; 0
    1b78:	30 e0       	ldi	r19, 0x00	; 0
    1b7a:	a9 01       	movw	r20, r18
    1b7c:	0f 2e       	mov	r0, r31
    1b7e:	f0 e0       	ldi	r31, 0x00	; 0
    1b80:	ef 2e       	mov	r14, r31
    1b82:	f0 e0       	ldi	r31, 0x00	; 0
    1b84:	ff 2e       	mov	r15, r31
    1b86:	f4 e3       	ldi	r31, 0x34	; 52
    1b88:	0f 2f       	mov	r16, r31
    1b8a:	f3 e4       	ldi	r31, 0x43	; 67
    1b8c:	1f 2f       	mov	r17, r31
    1b8e:	f0 2d       	mov	r31, r0
    1b90:	0e 94 a0 08 	call	0x1140	; 0x1140 <_Z3mapddddd>
    1b94:	0f 90       	pop	r0
    1b96:	0f 90       	pop	r0
    1b98:	0f 90       	pop	r0
    1b9a:	0f 90       	pop	r0
        OCR3B=ICR3-vAl;
    1b9c:	c0 91 96 00 	lds	r28, 0x0096
    1ba0:	d0 91 97 00 	lds	r29, 0x0097
      case 5:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
        OCR3A=ICR3-vAl;
        break;
      case 2:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    1ba4:	0e 94 bb 79 	call	0xf376	; 0xf376 <__fixsfsi>
        OCR3B=ICR3-vAl;
    1ba8:	c6 1b       	sub	r28, r22
    1baa:	d7 0b       	sbc	r29, r23
    1bac:	d0 93 9b 00 	sts	0x009B, r29
    1bb0:	c0 93 9a 00 	sts	0x009A, r28
    1bb4:	44 c2       	rjmp	.+1160   	; 0x203e <_Z6angle1i+0x8a4>
        break;
      case 3:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    1bb6:	e6 e8       	ldi	r30, 0x86	; 134
    1bb8:	f0 e0       	ldi	r31, 0x00	; 0
    1bba:	a0 80       	ld	r10, Z
    1bbc:	b1 80       	ldd	r11, Z+1	; 0x01
    1bbe:	80 80       	ld	r8, Z
    1bc0:	91 80       	ldd	r9, Z+1	; 0x01
    1bc2:	00 d0       	rcall	.+0      	; 0x1bc4 <_Z6angle1i+0x42a>
    1bc4:	0f 92       	push	r0
    1bc6:	4d b6       	in	r4, 0x3d	; 61
    1bc8:	5e b6       	in	r5, 0x3e	; 62
    1bca:	08 94       	sec
    1bcc:	41 1c       	adc	r4, r1
    1bce:	51 1c       	adc	r5, r1
    1bd0:	be 01       	movw	r22, r28
    1bd2:	88 27       	eor	r24, r24
    1bd4:	77 fd       	sbrc	r23, 7
    1bd6:	80 95       	com	r24
    1bd8:	98 2f       	mov	r25, r24
    1bda:	0e 94 ee 79 	call	0xf3dc	; 0xf3dc <__floatsisf>
    1bde:	7b 01       	movw	r14, r22
    1be0:	8c 01       	movw	r16, r24
    1be2:	c5 01       	movw	r24, r10
    1be4:	68 e2       	ldi	r22, 0x28	; 40
    1be6:	70 e0       	ldi	r23, 0x00	; 0
    1be8:	0e 94 05 7b 	call	0xf60a	; 0xf60a <__udivmodhi4>
    1bec:	80 e0       	ldi	r24, 0x00	; 0
    1bee:	90 e0       	ldi	r25, 0x00	; 0
    1bf0:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    1bf4:	5b 01       	movw	r10, r22
    1bf6:	6c 01       	movw	r12, r24
    1bf8:	96 94       	lsr	r9
    1bfa:	87 94       	ror	r8
    1bfc:	96 94       	lsr	r9
    1bfe:	87 94       	ror	r8
    1c00:	96 94       	lsr	r9
    1c02:	87 94       	ror	r8
    1c04:	b4 01       	movw	r22, r8
    1c06:	80 e0       	ldi	r24, 0x00	; 0
    1c08:	90 e0       	ldi	r25, 0x00	; 0
    1c0a:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    1c0e:	f2 01       	movw	r30, r4
    1c10:	60 83       	st	Z, r22
    1c12:	71 83       	std	Z+1, r23	; 0x01
    1c14:	82 83       	std	Z+2, r24	; 0x02
    1c16:	93 83       	std	Z+3, r25	; 0x03
    1c18:	c8 01       	movw	r24, r16
    1c1a:	b7 01       	movw	r22, r14
    1c1c:	20 e0       	ldi	r18, 0x00	; 0
    1c1e:	30 e0       	ldi	r19, 0x00	; 0
    1c20:	a9 01       	movw	r20, r18
    1c22:	0f 2e       	mov	r0, r31
    1c24:	f0 e0       	ldi	r31, 0x00	; 0
    1c26:	ef 2e       	mov	r14, r31
    1c28:	f0 e0       	ldi	r31, 0x00	; 0
    1c2a:	ff 2e       	mov	r15, r31
    1c2c:	f4 e3       	ldi	r31, 0x34	; 52
    1c2e:	0f 2f       	mov	r16, r31
    1c30:	f3 e4       	ldi	r31, 0x43	; 67
    1c32:	1f 2f       	mov	r17, r31
    1c34:	f0 2d       	mov	r31, r0
    1c36:	0e 94 a0 08 	call	0x1140	; 0x1140 <_Z3mapddddd>
    1c3a:	0f 90       	pop	r0
    1c3c:	0f 90       	pop	r0
    1c3e:	0f 90       	pop	r0
    1c40:	0f 90       	pop	r0
        OCR3C=ICR3-vAl;
    1c42:	c0 91 96 00 	lds	r28, 0x0096
    1c46:	d0 91 97 00 	lds	r29, 0x0097
      case 2:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
        OCR3B=ICR3-vAl;
        break;
      case 3:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    1c4a:	0e 94 bb 79 	call	0xf376	; 0xf376 <__fixsfsi>
        OCR3C=ICR3-vAl;
    1c4e:	c6 1b       	sub	r28, r22
    1c50:	d7 0b       	sbc	r29, r23
    1c52:	d0 93 9d 00 	sts	0x009D, r29
    1c56:	c0 93 9c 00 	sts	0x009C, r28
    1c5a:	f1 c1       	rjmp	.+994    	; 0x203e <_Z6angle1i+0x8a4>
        break;
      case 6:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    1c5c:	e6 e8       	ldi	r30, 0x86	; 134
    1c5e:	f0 e0       	ldi	r31, 0x00	; 0
    1c60:	a0 80       	ld	r10, Z
    1c62:	b1 80       	ldd	r11, Z+1	; 0x01
    1c64:	80 80       	ld	r8, Z
    1c66:	91 80       	ldd	r9, Z+1	; 0x01
    1c68:	00 d0       	rcall	.+0      	; 0x1c6a <_Z6angle1i+0x4d0>
    1c6a:	0f 92       	push	r0
    1c6c:	4d b6       	in	r4, 0x3d	; 61
    1c6e:	5e b6       	in	r5, 0x3e	; 62
    1c70:	08 94       	sec
    1c72:	41 1c       	adc	r4, r1
    1c74:	51 1c       	adc	r5, r1
    1c76:	be 01       	movw	r22, r28
    1c78:	88 27       	eor	r24, r24
    1c7a:	77 fd       	sbrc	r23, 7
    1c7c:	80 95       	com	r24
    1c7e:	98 2f       	mov	r25, r24
    1c80:	0e 94 ee 79 	call	0xf3dc	; 0xf3dc <__floatsisf>
    1c84:	7b 01       	movw	r14, r22
    1c86:	8c 01       	movw	r16, r24
    1c88:	c5 01       	movw	r24, r10
    1c8a:	68 e2       	ldi	r22, 0x28	; 40
    1c8c:	70 e0       	ldi	r23, 0x00	; 0
    1c8e:	0e 94 05 7b 	call	0xf60a	; 0xf60a <__udivmodhi4>
    1c92:	80 e0       	ldi	r24, 0x00	; 0
    1c94:	90 e0       	ldi	r25, 0x00	; 0
    1c96:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    1c9a:	5b 01       	movw	r10, r22
    1c9c:	6c 01       	movw	r12, r24
    1c9e:	96 94       	lsr	r9
    1ca0:	87 94       	ror	r8
    1ca2:	96 94       	lsr	r9
    1ca4:	87 94       	ror	r8
    1ca6:	96 94       	lsr	r9
    1ca8:	87 94       	ror	r8
    1caa:	b4 01       	movw	r22, r8
    1cac:	80 e0       	ldi	r24, 0x00	; 0
    1cae:	90 e0       	ldi	r25, 0x00	; 0
    1cb0:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    1cb4:	f2 01       	movw	r30, r4
    1cb6:	60 83       	st	Z, r22
    1cb8:	71 83       	std	Z+1, r23	; 0x01
    1cba:	82 83       	std	Z+2, r24	; 0x02
    1cbc:	93 83       	std	Z+3, r25	; 0x03
    1cbe:	c8 01       	movw	r24, r16
    1cc0:	b7 01       	movw	r22, r14
    1cc2:	20 e0       	ldi	r18, 0x00	; 0
    1cc4:	30 e0       	ldi	r19, 0x00	; 0
    1cc6:	a9 01       	movw	r20, r18
    1cc8:	0f 2e       	mov	r0, r31
    1cca:	f0 e0       	ldi	r31, 0x00	; 0
    1ccc:	ef 2e       	mov	r14, r31
    1cce:	f0 e0       	ldi	r31, 0x00	; 0
    1cd0:	ff 2e       	mov	r15, r31
    1cd2:	f4 e3       	ldi	r31, 0x34	; 52
    1cd4:	0f 2f       	mov	r16, r31
    1cd6:	f3 e4       	ldi	r31, 0x43	; 67
    1cd8:	1f 2f       	mov	r17, r31
    1cda:	f0 2d       	mov	r31, r0
    1cdc:	0e 94 a0 08 	call	0x1140	; 0x1140 <_Z3mapddddd>
    1ce0:	0f 90       	pop	r0
    1ce2:	0f 90       	pop	r0
    1ce4:	0f 90       	pop	r0
    1ce6:	0f 90       	pop	r0
        OCR4A=ICR4-vAl;
    1ce8:	c0 91 a6 00 	lds	r28, 0x00A6
    1cec:	d0 91 a7 00 	lds	r29, 0x00A7
      case 3:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
        OCR3C=ICR3-vAl;
        break;
      case 6:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    1cf0:	0e 94 bb 79 	call	0xf376	; 0xf376 <__fixsfsi>
        OCR4A=ICR4-vAl;
    1cf4:	c6 1b       	sub	r28, r22
    1cf6:	d7 0b       	sbc	r29, r23
    1cf8:	d0 93 a9 00 	sts	0x00A9, r29
    1cfc:	c0 93 a8 00 	sts	0x00A8, r28
    1d00:	9e c1       	rjmp	.+828    	; 0x203e <_Z6angle1i+0x8a4>
        break;
      case 7:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    1d02:	e6 e8       	ldi	r30, 0x86	; 134
    1d04:	f0 e0       	ldi	r31, 0x00	; 0
    1d06:	a0 80       	ld	r10, Z
    1d08:	b1 80       	ldd	r11, Z+1	; 0x01
    1d0a:	80 80       	ld	r8, Z
    1d0c:	91 80       	ldd	r9, Z+1	; 0x01
    1d0e:	00 d0       	rcall	.+0      	; 0x1d10 <_Z6angle1i+0x576>
    1d10:	0f 92       	push	r0
    1d12:	4d b6       	in	r4, 0x3d	; 61
    1d14:	5e b6       	in	r5, 0x3e	; 62
    1d16:	08 94       	sec
    1d18:	41 1c       	adc	r4, r1
    1d1a:	51 1c       	adc	r5, r1
    1d1c:	be 01       	movw	r22, r28
    1d1e:	88 27       	eor	r24, r24
    1d20:	77 fd       	sbrc	r23, 7
    1d22:	80 95       	com	r24
    1d24:	98 2f       	mov	r25, r24
    1d26:	0e 94 ee 79 	call	0xf3dc	; 0xf3dc <__floatsisf>
    1d2a:	7b 01       	movw	r14, r22
    1d2c:	8c 01       	movw	r16, r24
    1d2e:	c5 01       	movw	r24, r10
    1d30:	68 e2       	ldi	r22, 0x28	; 40
    1d32:	70 e0       	ldi	r23, 0x00	; 0
    1d34:	0e 94 05 7b 	call	0xf60a	; 0xf60a <__udivmodhi4>
    1d38:	80 e0       	ldi	r24, 0x00	; 0
    1d3a:	90 e0       	ldi	r25, 0x00	; 0
    1d3c:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    1d40:	5b 01       	movw	r10, r22
    1d42:	6c 01       	movw	r12, r24
    1d44:	96 94       	lsr	r9
    1d46:	87 94       	ror	r8
    1d48:	96 94       	lsr	r9
    1d4a:	87 94       	ror	r8
    1d4c:	96 94       	lsr	r9
    1d4e:	87 94       	ror	r8
    1d50:	b4 01       	movw	r22, r8
    1d52:	80 e0       	ldi	r24, 0x00	; 0
    1d54:	90 e0       	ldi	r25, 0x00	; 0
    1d56:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    1d5a:	f2 01       	movw	r30, r4
    1d5c:	60 83       	st	Z, r22
    1d5e:	71 83       	std	Z+1, r23	; 0x01
    1d60:	82 83       	std	Z+2, r24	; 0x02
    1d62:	93 83       	std	Z+3, r25	; 0x03
    1d64:	c8 01       	movw	r24, r16
    1d66:	b7 01       	movw	r22, r14
    1d68:	20 e0       	ldi	r18, 0x00	; 0
    1d6a:	30 e0       	ldi	r19, 0x00	; 0
    1d6c:	a9 01       	movw	r20, r18
    1d6e:	0f 2e       	mov	r0, r31
    1d70:	f0 e0       	ldi	r31, 0x00	; 0
    1d72:	ef 2e       	mov	r14, r31
    1d74:	f0 e0       	ldi	r31, 0x00	; 0
    1d76:	ff 2e       	mov	r15, r31
    1d78:	f4 e3       	ldi	r31, 0x34	; 52
    1d7a:	0f 2f       	mov	r16, r31
    1d7c:	f3 e4       	ldi	r31, 0x43	; 67
    1d7e:	1f 2f       	mov	r17, r31
    1d80:	f0 2d       	mov	r31, r0
    1d82:	0e 94 a0 08 	call	0x1140	; 0x1140 <_Z3mapddddd>
    1d86:	0f 90       	pop	r0
    1d88:	0f 90       	pop	r0
    1d8a:	0f 90       	pop	r0
    1d8c:	0f 90       	pop	r0
        OCR4B=ICR4-vAl;
    1d8e:	c0 91 a6 00 	lds	r28, 0x00A6
    1d92:	d0 91 a7 00 	lds	r29, 0x00A7
      case 6:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
        OCR4A=ICR4-vAl;
        break;
      case 7:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    1d96:	0e 94 bb 79 	call	0xf376	; 0xf376 <__fixsfsi>
        OCR4B=ICR4-vAl;
    1d9a:	c6 1b       	sub	r28, r22
    1d9c:	d7 0b       	sbc	r29, r23
    1d9e:	d0 93 ab 00 	sts	0x00AB, r29
    1da2:	c0 93 aa 00 	sts	0x00AA, r28
    1da6:	4b c1       	rjmp	.+662    	; 0x203e <_Z6angle1i+0x8a4>
        break; 
      case 8:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    1da8:	e6 e8       	ldi	r30, 0x86	; 134
    1daa:	f0 e0       	ldi	r31, 0x00	; 0
    1dac:	a0 80       	ld	r10, Z
    1dae:	b1 80       	ldd	r11, Z+1	; 0x01
    1db0:	80 80       	ld	r8, Z
    1db2:	91 80       	ldd	r9, Z+1	; 0x01
    1db4:	00 d0       	rcall	.+0      	; 0x1db6 <_Z6angle1i+0x61c>
    1db6:	0f 92       	push	r0
    1db8:	4d b6       	in	r4, 0x3d	; 61
    1dba:	5e b6       	in	r5, 0x3e	; 62
    1dbc:	08 94       	sec
    1dbe:	41 1c       	adc	r4, r1
    1dc0:	51 1c       	adc	r5, r1
    1dc2:	be 01       	movw	r22, r28
    1dc4:	88 27       	eor	r24, r24
    1dc6:	77 fd       	sbrc	r23, 7
    1dc8:	80 95       	com	r24
    1dca:	98 2f       	mov	r25, r24
    1dcc:	0e 94 ee 79 	call	0xf3dc	; 0xf3dc <__floatsisf>
    1dd0:	7b 01       	movw	r14, r22
    1dd2:	8c 01       	movw	r16, r24
    1dd4:	c5 01       	movw	r24, r10
    1dd6:	68 e2       	ldi	r22, 0x28	; 40
    1dd8:	70 e0       	ldi	r23, 0x00	; 0
    1dda:	0e 94 05 7b 	call	0xf60a	; 0xf60a <__udivmodhi4>
    1dde:	80 e0       	ldi	r24, 0x00	; 0
    1de0:	90 e0       	ldi	r25, 0x00	; 0
    1de2:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    1de6:	5b 01       	movw	r10, r22
    1de8:	6c 01       	movw	r12, r24
    1dea:	96 94       	lsr	r9
    1dec:	87 94       	ror	r8
    1dee:	96 94       	lsr	r9
    1df0:	87 94       	ror	r8
    1df2:	96 94       	lsr	r9
    1df4:	87 94       	ror	r8
    1df6:	b4 01       	movw	r22, r8
    1df8:	80 e0       	ldi	r24, 0x00	; 0
    1dfa:	90 e0       	ldi	r25, 0x00	; 0
    1dfc:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    1e00:	f2 01       	movw	r30, r4
    1e02:	60 83       	st	Z, r22
    1e04:	71 83       	std	Z+1, r23	; 0x01
    1e06:	82 83       	std	Z+2, r24	; 0x02
    1e08:	93 83       	std	Z+3, r25	; 0x03
    1e0a:	c8 01       	movw	r24, r16
    1e0c:	b7 01       	movw	r22, r14
    1e0e:	20 e0       	ldi	r18, 0x00	; 0
    1e10:	30 e0       	ldi	r19, 0x00	; 0
    1e12:	a9 01       	movw	r20, r18
    1e14:	0f 2e       	mov	r0, r31
    1e16:	f0 e0       	ldi	r31, 0x00	; 0
    1e18:	ef 2e       	mov	r14, r31
    1e1a:	f0 e0       	ldi	r31, 0x00	; 0
    1e1c:	ff 2e       	mov	r15, r31
    1e1e:	f4 e3       	ldi	r31, 0x34	; 52
    1e20:	0f 2f       	mov	r16, r31
    1e22:	f3 e4       	ldi	r31, 0x43	; 67
    1e24:	1f 2f       	mov	r17, r31
    1e26:	f0 2d       	mov	r31, r0
    1e28:	0e 94 a0 08 	call	0x1140	; 0x1140 <_Z3mapddddd>
    1e2c:	0f 90       	pop	r0
    1e2e:	0f 90       	pop	r0
    1e30:	0f 90       	pop	r0
    1e32:	0f 90       	pop	r0
        OCR4C=ICR4-vAl;
    1e34:	c0 91 a6 00 	lds	r28, 0x00A6
    1e38:	d0 91 a7 00 	lds	r29, 0x00A7
      case 7:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
        OCR4B=ICR4-vAl;
        break; 
      case 8:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    1e3c:	0e 94 bb 79 	call	0xf376	; 0xf376 <__fixsfsi>
        OCR4C=ICR4-vAl;
    1e40:	c6 1b       	sub	r28, r22
    1e42:	d7 0b       	sbc	r29, r23
    1e44:	d0 93 ad 00 	sts	0x00AD, r29
    1e48:	c0 93 ac 00 	sts	0x00AC, r28
    1e4c:	f8 c0       	rjmp	.+496    	; 0x203e <_Z6angle1i+0x8a4>
        break;
      case 46:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    1e4e:	e6 e8       	ldi	r30, 0x86	; 134
    1e50:	f0 e0       	ldi	r31, 0x00	; 0
    1e52:	a0 80       	ld	r10, Z
    1e54:	b1 80       	ldd	r11, Z+1	; 0x01
    1e56:	80 80       	ld	r8, Z
    1e58:	91 80       	ldd	r9, Z+1	; 0x01
    1e5a:	00 d0       	rcall	.+0      	; 0x1e5c <_Z6angle1i+0x6c2>
    1e5c:	0f 92       	push	r0
    1e5e:	4d b6       	in	r4, 0x3d	; 61
    1e60:	5e b6       	in	r5, 0x3e	; 62
    1e62:	08 94       	sec
    1e64:	41 1c       	adc	r4, r1
    1e66:	51 1c       	adc	r5, r1
    1e68:	be 01       	movw	r22, r28
    1e6a:	88 27       	eor	r24, r24
    1e6c:	77 fd       	sbrc	r23, 7
    1e6e:	80 95       	com	r24
    1e70:	98 2f       	mov	r25, r24
    1e72:	0e 94 ee 79 	call	0xf3dc	; 0xf3dc <__floatsisf>
    1e76:	7b 01       	movw	r14, r22
    1e78:	8c 01       	movw	r16, r24
    1e7a:	c5 01       	movw	r24, r10
    1e7c:	68 e2       	ldi	r22, 0x28	; 40
    1e7e:	70 e0       	ldi	r23, 0x00	; 0
    1e80:	0e 94 05 7b 	call	0xf60a	; 0xf60a <__udivmodhi4>
    1e84:	80 e0       	ldi	r24, 0x00	; 0
    1e86:	90 e0       	ldi	r25, 0x00	; 0
    1e88:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    1e8c:	5b 01       	movw	r10, r22
    1e8e:	6c 01       	movw	r12, r24
    1e90:	96 94       	lsr	r9
    1e92:	87 94       	ror	r8
    1e94:	96 94       	lsr	r9
    1e96:	87 94       	ror	r8
    1e98:	96 94       	lsr	r9
    1e9a:	87 94       	ror	r8
    1e9c:	b4 01       	movw	r22, r8
    1e9e:	80 e0       	ldi	r24, 0x00	; 0
    1ea0:	90 e0       	ldi	r25, 0x00	; 0
    1ea2:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    1ea6:	f2 01       	movw	r30, r4
    1ea8:	60 83       	st	Z, r22
    1eaa:	71 83       	std	Z+1, r23	; 0x01
    1eac:	82 83       	std	Z+2, r24	; 0x02
    1eae:	93 83       	std	Z+3, r25	; 0x03
    1eb0:	c8 01       	movw	r24, r16
    1eb2:	b7 01       	movw	r22, r14
    1eb4:	20 e0       	ldi	r18, 0x00	; 0
    1eb6:	30 e0       	ldi	r19, 0x00	; 0
    1eb8:	a9 01       	movw	r20, r18
    1eba:	0f 2e       	mov	r0, r31
    1ebc:	f0 e0       	ldi	r31, 0x00	; 0
    1ebe:	ef 2e       	mov	r14, r31
    1ec0:	f0 e0       	ldi	r31, 0x00	; 0
    1ec2:	ff 2e       	mov	r15, r31
    1ec4:	f4 e3       	ldi	r31, 0x34	; 52
    1ec6:	0f 2f       	mov	r16, r31
    1ec8:	f3 e4       	ldi	r31, 0x43	; 67
    1eca:	1f 2f       	mov	r17, r31
    1ecc:	f0 2d       	mov	r31, r0
    1ece:	0e 94 a0 08 	call	0x1140	; 0x1140 <_Z3mapddddd>
    1ed2:	0f 90       	pop	r0
    1ed4:	0f 90       	pop	r0
    1ed6:	0f 90       	pop	r0
    1ed8:	0f 90       	pop	r0
        OCR5A=ICR5-vAl;
    1eda:	c0 91 26 01 	lds	r28, 0x0126
    1ede:	d0 91 27 01 	lds	r29, 0x0127
      case 8:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
        OCR4C=ICR4-vAl;
        break;
      case 46:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    1ee2:	0e 94 bb 79 	call	0xf376	; 0xf376 <__fixsfsi>
        OCR5A=ICR5-vAl;
    1ee6:	c6 1b       	sub	r28, r22
    1ee8:	d7 0b       	sbc	r29, r23
    1eea:	d0 93 29 01 	sts	0x0129, r29
    1eee:	c0 93 28 01 	sts	0x0128, r28
    1ef2:	a5 c0       	rjmp	.+330    	; 0x203e <_Z6angle1i+0x8a4>
        break;
      case 45:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    1ef4:	e6 e8       	ldi	r30, 0x86	; 134
    1ef6:	f0 e0       	ldi	r31, 0x00	; 0
    1ef8:	a0 80       	ld	r10, Z
    1efa:	b1 80       	ldd	r11, Z+1	; 0x01
    1efc:	80 80       	ld	r8, Z
    1efe:	91 80       	ldd	r9, Z+1	; 0x01
    1f00:	00 d0       	rcall	.+0      	; 0x1f02 <_Z6angle1i+0x768>
    1f02:	0f 92       	push	r0
    1f04:	4d b6       	in	r4, 0x3d	; 61
    1f06:	5e b6       	in	r5, 0x3e	; 62
    1f08:	08 94       	sec
    1f0a:	41 1c       	adc	r4, r1
    1f0c:	51 1c       	adc	r5, r1
    1f0e:	be 01       	movw	r22, r28
    1f10:	88 27       	eor	r24, r24
    1f12:	77 fd       	sbrc	r23, 7
    1f14:	80 95       	com	r24
    1f16:	98 2f       	mov	r25, r24
    1f18:	0e 94 ee 79 	call	0xf3dc	; 0xf3dc <__floatsisf>
    1f1c:	7b 01       	movw	r14, r22
    1f1e:	8c 01       	movw	r16, r24
    1f20:	c5 01       	movw	r24, r10
    1f22:	68 e2       	ldi	r22, 0x28	; 40
    1f24:	70 e0       	ldi	r23, 0x00	; 0
    1f26:	0e 94 05 7b 	call	0xf60a	; 0xf60a <__udivmodhi4>
    1f2a:	80 e0       	ldi	r24, 0x00	; 0
    1f2c:	90 e0       	ldi	r25, 0x00	; 0
    1f2e:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    1f32:	5b 01       	movw	r10, r22
    1f34:	6c 01       	movw	r12, r24
    1f36:	96 94       	lsr	r9
    1f38:	87 94       	ror	r8
    1f3a:	96 94       	lsr	r9
    1f3c:	87 94       	ror	r8
    1f3e:	96 94       	lsr	r9
    1f40:	87 94       	ror	r8
    1f42:	b4 01       	movw	r22, r8
    1f44:	80 e0       	ldi	r24, 0x00	; 0
    1f46:	90 e0       	ldi	r25, 0x00	; 0
    1f48:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    1f4c:	f2 01       	movw	r30, r4
    1f4e:	60 83       	st	Z, r22
    1f50:	71 83       	std	Z+1, r23	; 0x01
    1f52:	82 83       	std	Z+2, r24	; 0x02
    1f54:	93 83       	std	Z+3, r25	; 0x03
    1f56:	c8 01       	movw	r24, r16
    1f58:	b7 01       	movw	r22, r14
    1f5a:	20 e0       	ldi	r18, 0x00	; 0
    1f5c:	30 e0       	ldi	r19, 0x00	; 0
    1f5e:	a9 01       	movw	r20, r18
    1f60:	0f 2e       	mov	r0, r31
    1f62:	f0 e0       	ldi	r31, 0x00	; 0
    1f64:	ef 2e       	mov	r14, r31
    1f66:	f0 e0       	ldi	r31, 0x00	; 0
    1f68:	ff 2e       	mov	r15, r31
    1f6a:	f4 e3       	ldi	r31, 0x34	; 52
    1f6c:	0f 2f       	mov	r16, r31
    1f6e:	f3 e4       	ldi	r31, 0x43	; 67
    1f70:	1f 2f       	mov	r17, r31
    1f72:	f0 2d       	mov	r31, r0
    1f74:	0e 94 a0 08 	call	0x1140	; 0x1140 <_Z3mapddddd>
    1f78:	0f 90       	pop	r0
    1f7a:	0f 90       	pop	r0
    1f7c:	0f 90       	pop	r0
    1f7e:	0f 90       	pop	r0
        OCR5B=ICR5-vAl;
    1f80:	c0 91 26 01 	lds	r28, 0x0126
    1f84:	d0 91 27 01 	lds	r29, 0x0127
      case 46:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
        OCR5A=ICR5-vAl;
        break;
      case 45:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    1f88:	0e 94 bb 79 	call	0xf376	; 0xf376 <__fixsfsi>
        OCR5B=ICR5-vAl;
    1f8c:	c6 1b       	sub	r28, r22
    1f8e:	d7 0b       	sbc	r29, r23
    1f90:	d0 93 2b 01 	sts	0x012B, r29
    1f94:	c0 93 2a 01 	sts	0x012A, r28
    1f98:	52 c0       	rjmp	.+164    	; 0x203e <_Z6angle1i+0x8a4>
        break;
      case 44:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    1f9a:	e6 e8       	ldi	r30, 0x86	; 134
    1f9c:	f0 e0       	ldi	r31, 0x00	; 0
    1f9e:	a0 80       	ld	r10, Z
    1fa0:	b1 80       	ldd	r11, Z+1	; 0x01
    1fa2:	80 80       	ld	r8, Z
    1fa4:	91 80       	ldd	r9, Z+1	; 0x01
    1fa6:	00 d0       	rcall	.+0      	; 0x1fa8 <_Z6angle1i+0x80e>
    1fa8:	0f 92       	push	r0
    1faa:	4d b6       	in	r4, 0x3d	; 61
    1fac:	5e b6       	in	r5, 0x3e	; 62
    1fae:	08 94       	sec
    1fb0:	41 1c       	adc	r4, r1
    1fb2:	51 1c       	adc	r5, r1
    1fb4:	be 01       	movw	r22, r28
    1fb6:	88 27       	eor	r24, r24
    1fb8:	77 fd       	sbrc	r23, 7
    1fba:	80 95       	com	r24
    1fbc:	98 2f       	mov	r25, r24
    1fbe:	0e 94 ee 79 	call	0xf3dc	; 0xf3dc <__floatsisf>
    1fc2:	7b 01       	movw	r14, r22
    1fc4:	8c 01       	movw	r16, r24
    1fc6:	c5 01       	movw	r24, r10
    1fc8:	68 e2       	ldi	r22, 0x28	; 40
    1fca:	70 e0       	ldi	r23, 0x00	; 0
    1fcc:	0e 94 05 7b 	call	0xf60a	; 0xf60a <__udivmodhi4>
    1fd0:	80 e0       	ldi	r24, 0x00	; 0
    1fd2:	90 e0       	ldi	r25, 0x00	; 0
    1fd4:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    1fd8:	5b 01       	movw	r10, r22
    1fda:	6c 01       	movw	r12, r24
    1fdc:	96 94       	lsr	r9
    1fde:	87 94       	ror	r8
    1fe0:	96 94       	lsr	r9
    1fe2:	87 94       	ror	r8
    1fe4:	96 94       	lsr	r9
    1fe6:	87 94       	ror	r8
    1fe8:	b4 01       	movw	r22, r8
    1fea:	80 e0       	ldi	r24, 0x00	; 0
    1fec:	90 e0       	ldi	r25, 0x00	; 0
    1fee:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    1ff2:	f2 01       	movw	r30, r4
    1ff4:	60 83       	st	Z, r22
    1ff6:	71 83       	std	Z+1, r23	; 0x01
    1ff8:	82 83       	std	Z+2, r24	; 0x02
    1ffa:	93 83       	std	Z+3, r25	; 0x03
    1ffc:	c8 01       	movw	r24, r16
    1ffe:	b7 01       	movw	r22, r14
    2000:	20 e0       	ldi	r18, 0x00	; 0
    2002:	30 e0       	ldi	r19, 0x00	; 0
    2004:	a9 01       	movw	r20, r18
    2006:	0f 2e       	mov	r0, r31
    2008:	f0 e0       	ldi	r31, 0x00	; 0
    200a:	ef 2e       	mov	r14, r31
    200c:	f0 e0       	ldi	r31, 0x00	; 0
    200e:	ff 2e       	mov	r15, r31
    2010:	f4 e3       	ldi	r31, 0x34	; 52
    2012:	0f 2f       	mov	r16, r31
    2014:	f3 e4       	ldi	r31, 0x43	; 67
    2016:	1f 2f       	mov	r17, r31
    2018:	f0 2d       	mov	r31, r0
    201a:	0e 94 a0 08 	call	0x1140	; 0x1140 <_Z3mapddddd>
    201e:	0f 90       	pop	r0
    2020:	0f 90       	pop	r0
    2022:	0f 90       	pop	r0
    2024:	0f 90       	pop	r0
        OCR5C=ICR5-vAl;
    2026:	c0 91 26 01 	lds	r28, 0x0126
    202a:	d0 91 27 01 	lds	r29, 0x0127
      case 45:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
        OCR5B=ICR5-vAl;
        break;
      case 44:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    202e:	0e 94 bb 79 	call	0xf376	; 0xf376 <__fixsfsi>
        OCR5C=ICR5-vAl;
    2032:	c6 1b       	sub	r28, r22
    2034:	d7 0b       	sbc	r29, r23
    2036:	d0 93 2d 01 	sts	0x012D, r29
    203a:	c0 93 2c 01 	sts	0x012C, r28

		p.write(v);
		q.write(y);
    203e:	60 91 cc 02 	lds	r22, 0x02CC
    2042:	70 91 cd 02 	lds	r23, 0x02CD
     }
  }

  void write(int vAl)           //PIN=servo pin no. on mega,vAl=angle F_CPU for the servo at pin
  {
    switch(pIn)
    2046:	80 91 d5 02 	lds	r24, 0x02D5
    204a:	88 30       	cpi	r24, 0x08	; 8
    204c:	09 f4       	brne	.+2      	; 0x2050 <_Z6angle1i+0x8b6>
    204e:	63 c2       	rjmp	.+1222   	; 0x2516 <__stack+0x317>
    2050:	89 30       	cpi	r24, 0x09	; 9
    2052:	98 f4       	brcc	.+38     	; 0x207a <_Z6angle1i+0x8e0>
    2054:	85 30       	cpi	r24, 0x05	; 5
    2056:	09 f4       	brne	.+2      	; 0x205a <_Z6angle1i+0x8c0>
    2058:	c4 c0       	rjmp	.+392    	; 0x21e2 <_Z6angle1i+0xa48>
    205a:	86 30       	cpi	r24, 0x06	; 6
    205c:	38 f4       	brcc	.+14     	; 0x206c <_Z6angle1i+0x8d2>
    205e:	82 30       	cpi	r24, 0x02	; 2
    2060:	09 f4       	brne	.+2      	; 0x2064 <_Z6angle1i+0x8ca>
    2062:	11 c1       	rjmp	.+546    	; 0x2286 <__stack+0x87>
    2064:	83 30       	cpi	r24, 0x03	; 3
    2066:	09 f0       	breq	.+2      	; 0x206a <_Z6angle1i+0x8d0>
    2068:	9d c3       	rjmp	.+1850   	; 0x27a4 <__stack+0x5a5>
    206a:	5f c1       	rjmp	.+702    	; 0x232a <__stack+0x12b>
    206c:	86 30       	cpi	r24, 0x06	; 6
    206e:	09 f4       	brne	.+2      	; 0x2072 <_Z6angle1i+0x8d8>
    2070:	ae c1       	rjmp	.+860    	; 0x23ce <__stack+0x1cf>
    2072:	87 30       	cpi	r24, 0x07	; 7
    2074:	09 f0       	breq	.+2      	; 0x2078 <_Z6angle1i+0x8de>
    2076:	96 c3       	rjmp	.+1836   	; 0x27a4 <__stack+0x5a5>
    2078:	fc c1       	rjmp	.+1016   	; 0x2472 <__stack+0x273>
    207a:	8c 32       	cpi	r24, 0x2C	; 44
    207c:	09 f4       	brne	.+2      	; 0x2080 <_Z6angle1i+0x8e6>
    207e:	41 c3       	rjmp	.+1666   	; 0x2702 <__stack+0x503>
    2080:	8d 32       	cpi	r24, 0x2D	; 45
    2082:	30 f4       	brcc	.+12     	; 0x2090 <_Z6angle1i+0x8f6>
    2084:	8b 30       	cpi	r24, 0x0B	; 11
    2086:	59 f0       	breq	.+22     	; 0x209e <_Z6angle1i+0x904>
    2088:	8c 30       	cpi	r24, 0x0C	; 12
    208a:	09 f0       	breq	.+2      	; 0x208e <_Z6angle1i+0x8f4>
    208c:	8b c3       	rjmp	.+1814   	; 0x27a4 <__stack+0x5a5>
    208e:	58 c0       	rjmp	.+176    	; 0x2140 <_Z6angle1i+0x9a6>
    2090:	8d 32       	cpi	r24, 0x2D	; 45
    2092:	09 f4       	brne	.+2      	; 0x2096 <_Z6angle1i+0x8fc>
    2094:	e4 c2       	rjmp	.+1480   	; 0x265e <__stack+0x45f>
    2096:	8e 32       	cpi	r24, 0x2E	; 46
    2098:	09 f0       	breq	.+2      	; 0x209c <_Z6angle1i+0x902>
    209a:	84 c3       	rjmp	.+1800   	; 0x27a4 <__stack+0x5a5>
    209c:	8e c2       	rjmp	.+1308   	; 0x25ba <__stack+0x3bb>
    {
     case 11:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    209e:	c6 e8       	ldi	r28, 0x86	; 134
    20a0:	d0 e0       	ldi	r29, 0x00	; 0
    20a2:	08 81       	ld	r16, Y
    20a4:	19 81       	ldd	r17, Y+1	; 0x01
    20a6:	e8 80       	ld	r14, Y
    20a8:	f9 80       	ldd	r15, Y+1	; 0x01
    20aa:	00 d0       	rcall	.+0      	; 0x20ac <_Z6angle1i+0x912>
    20ac:	0f 92       	push	r0
    20ae:	8d b6       	in	r8, 0x3d	; 61
    20b0:	9e b6       	in	r9, 0x3e	; 62
    20b2:	08 94       	sec
    20b4:	81 1c       	adc	r8, r1
    20b6:	91 1c       	adc	r9, r1
    20b8:	88 27       	eor	r24, r24
    20ba:	77 fd       	sbrc	r23, 7
    20bc:	80 95       	com	r24
    20be:	98 2f       	mov	r25, r24
    20c0:	0e 94 ee 79 	call	0xf3dc	; 0xf3dc <__floatsisf>
    20c4:	2b 01       	movw	r4, r22
    20c6:	3c 01       	movw	r6, r24
    20c8:	c8 01       	movw	r24, r16
    20ca:	68 e2       	ldi	r22, 0x28	; 40
    20cc:	70 e0       	ldi	r23, 0x00	; 0
    20ce:	0e 94 05 7b 	call	0xf60a	; 0xf60a <__udivmodhi4>
    20d2:	80 e0       	ldi	r24, 0x00	; 0
    20d4:	90 e0       	ldi	r25, 0x00	; 0
    20d6:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    20da:	5b 01       	movw	r10, r22
    20dc:	6c 01       	movw	r12, r24
    20de:	f6 94       	lsr	r15
    20e0:	e7 94       	ror	r14
    20e2:	f6 94       	lsr	r15
    20e4:	e7 94       	ror	r14
    20e6:	f6 94       	lsr	r15
    20e8:	e7 94       	ror	r14
    20ea:	b7 01       	movw	r22, r14
    20ec:	80 e0       	ldi	r24, 0x00	; 0
    20ee:	90 e0       	ldi	r25, 0x00	; 0
    20f0:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    20f4:	f4 01       	movw	r30, r8
    20f6:	60 83       	st	Z, r22
    20f8:	71 83       	std	Z+1, r23	; 0x01
    20fa:	82 83       	std	Z+2, r24	; 0x02
    20fc:	93 83       	std	Z+3, r25	; 0x03
    20fe:	c3 01       	movw	r24, r6
    2100:	b2 01       	movw	r22, r4
    2102:	20 e0       	ldi	r18, 0x00	; 0
    2104:	30 e0       	ldi	r19, 0x00	; 0
    2106:	a9 01       	movw	r20, r18
    2108:	0f 2e       	mov	r0, r31
    210a:	f0 e0       	ldi	r31, 0x00	; 0
    210c:	ef 2e       	mov	r14, r31
    210e:	f0 e0       	ldi	r31, 0x00	; 0
    2110:	ff 2e       	mov	r15, r31
    2112:	f4 e3       	ldi	r31, 0x34	; 52
    2114:	0f 2f       	mov	r16, r31
    2116:	f3 e4       	ldi	r31, 0x43	; 67
    2118:	1f 2f       	mov	r17, r31
    211a:	f0 2d       	mov	r31, r0
    211c:	0e 94 a0 08 	call	0x1140	; 0x1140 <_Z3mapddddd>
    2120:	0f 90       	pop	r0
    2122:	0f 90       	pop	r0
    2124:	0f 90       	pop	r0
    2126:	0f 90       	pop	r0
        OCR1A=ICR1-vAl;
    2128:	09 90       	ld	r0, Y+
    212a:	d8 81       	ld	r29, Y
    212c:	c0 2d       	mov	r28, r0
  void write(int vAl)           //PIN=servo pin no. on mega,vAl=angle F_CPU for the servo at pin
  {
    switch(pIn)
    {
     case 11:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    212e:	0e 94 bb 79 	call	0xf376	; 0xf376 <__fixsfsi>
        OCR1A=ICR1-vAl;
    2132:	c6 1b       	sub	r28, r22
    2134:	d7 0b       	sbc	r29, r23
    2136:	d0 93 89 00 	sts	0x0089, r29
    213a:	c0 93 88 00 	sts	0x0088, r28
    213e:	32 c3       	rjmp	.+1636   	; 0x27a4 <__stack+0x5a5>
        break;
      case 12:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    2140:	c6 e8       	ldi	r28, 0x86	; 134
    2142:	d0 e0       	ldi	r29, 0x00	; 0
    2144:	08 81       	ld	r16, Y
    2146:	19 81       	ldd	r17, Y+1	; 0x01
    2148:	e8 80       	ld	r14, Y
    214a:	f9 80       	ldd	r15, Y+1	; 0x01
    214c:	00 d0       	rcall	.+0      	; 0x214e <_Z6angle1i+0x9b4>
    214e:	0f 92       	push	r0
    2150:	8d b6       	in	r8, 0x3d	; 61
    2152:	9e b6       	in	r9, 0x3e	; 62
    2154:	08 94       	sec
    2156:	81 1c       	adc	r8, r1
    2158:	91 1c       	adc	r9, r1
    215a:	88 27       	eor	r24, r24
    215c:	77 fd       	sbrc	r23, 7
    215e:	80 95       	com	r24
    2160:	98 2f       	mov	r25, r24
    2162:	0e 94 ee 79 	call	0xf3dc	; 0xf3dc <__floatsisf>
    2166:	2b 01       	movw	r4, r22
    2168:	3c 01       	movw	r6, r24
    216a:	c8 01       	movw	r24, r16
    216c:	68 e2       	ldi	r22, 0x28	; 40
    216e:	70 e0       	ldi	r23, 0x00	; 0
    2170:	0e 94 05 7b 	call	0xf60a	; 0xf60a <__udivmodhi4>
    2174:	80 e0       	ldi	r24, 0x00	; 0
    2176:	90 e0       	ldi	r25, 0x00	; 0
    2178:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    217c:	5b 01       	movw	r10, r22
    217e:	6c 01       	movw	r12, r24
    2180:	f6 94       	lsr	r15
    2182:	e7 94       	ror	r14
    2184:	f6 94       	lsr	r15
    2186:	e7 94       	ror	r14
    2188:	f6 94       	lsr	r15
    218a:	e7 94       	ror	r14
    218c:	b7 01       	movw	r22, r14
    218e:	80 e0       	ldi	r24, 0x00	; 0
    2190:	90 e0       	ldi	r25, 0x00	; 0
    2192:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    2196:	f4 01       	movw	r30, r8
    2198:	60 83       	st	Z, r22
    219a:	71 83       	std	Z+1, r23	; 0x01
    219c:	82 83       	std	Z+2, r24	; 0x02
    219e:	93 83       	std	Z+3, r25	; 0x03
    21a0:	c3 01       	movw	r24, r6
    21a2:	b2 01       	movw	r22, r4
    21a4:	20 e0       	ldi	r18, 0x00	; 0
    21a6:	30 e0       	ldi	r19, 0x00	; 0
    21a8:	a9 01       	movw	r20, r18
    21aa:	0f 2e       	mov	r0, r31
    21ac:	f0 e0       	ldi	r31, 0x00	; 0
    21ae:	ef 2e       	mov	r14, r31
    21b0:	f0 e0       	ldi	r31, 0x00	; 0
    21b2:	ff 2e       	mov	r15, r31
    21b4:	f4 e3       	ldi	r31, 0x34	; 52
    21b6:	0f 2f       	mov	r16, r31
    21b8:	f3 e4       	ldi	r31, 0x43	; 67
    21ba:	1f 2f       	mov	r17, r31
    21bc:	f0 2d       	mov	r31, r0
    21be:	0e 94 a0 08 	call	0x1140	; 0x1140 <_Z3mapddddd>
    21c2:	0f 90       	pop	r0
    21c4:	0f 90       	pop	r0
    21c6:	0f 90       	pop	r0
    21c8:	0f 90       	pop	r0
        OCR1B=ICR1-vAl;
    21ca:	09 90       	ld	r0, Y+
    21cc:	d8 81       	ld	r29, Y
    21ce:	c0 2d       	mov	r28, r0
     case 11:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
        OCR1A=ICR1-vAl;
        break;
      case 12:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    21d0:	0e 94 bb 79 	call	0xf376	; 0xf376 <__fixsfsi>
        OCR1B=ICR1-vAl;
    21d4:	c6 1b       	sub	r28, r22
    21d6:	d7 0b       	sbc	r29, r23
    21d8:	d0 93 8b 00 	sts	0x008B, r29
    21dc:	c0 93 8a 00 	sts	0x008A, r28
    21e0:	e1 c2       	rjmp	.+1474   	; 0x27a4 <__stack+0x5a5>
        break;
      case 5:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    21e2:	e6 e8       	ldi	r30, 0x86	; 134
    21e4:	f0 e0       	ldi	r31, 0x00	; 0
    21e6:	c0 81       	ld	r28, Z
    21e8:	d1 81       	ldd	r29, Z+1	; 0x01
    21ea:	80 80       	ld	r8, Z
    21ec:	91 80       	ldd	r9, Z+1	; 0x01
    21ee:	00 d0       	rcall	.+0      	; 0x21f0 <_Z6angle1i+0xa56>
    21f0:	0f 92       	push	r0
    21f2:	4d b6       	in	r4, 0x3d	; 61
    21f4:	5e b6       	in	r5, 0x3e	; 62
    21f6:	08 94       	sec
    21f8:	41 1c       	adc	r4, r1
    21fa:	51 1c       	adc	r5, r1
    21fc:	88 27       	eor	r24, r24
    21fe:	77 fd       	sbrc	r23, 7
    2200:	80 95       	com	r24
    2202:	98 2f       	mov	r25, r24
    2204:	0e 94 ee 79 	call	0xf3dc	; 0xf3dc <__floatsisf>
    2208:	7b 01       	movw	r14, r22
    220a:	8c 01       	movw	r16, r24
    220c:	ce 01       	movw	r24, r28
    220e:	68 e2       	ldi	r22, 0x28	; 40
    2210:	70 e0       	ldi	r23, 0x00	; 0
    2212:	0e 94 05 7b 	call	0xf60a	; 0xf60a <__udivmodhi4>
    2216:	80 e0       	ldi	r24, 0x00	; 0
    2218:	90 e0       	ldi	r25, 0x00	; 0
    221a:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    221e:	5b 01       	movw	r10, r22
    2220:	6c 01       	movw	r12, r24
    2222:	96 94       	lsr	r9
    2224:	87 94       	ror	r8
    2226:	96 94       	lsr	r9
    2228:	87 94       	ror	r8
    222a:	96 94       	lsr	r9
    222c:	87 94       	ror	r8
    222e:	b4 01       	movw	r22, r8
    2230:	80 e0       	ldi	r24, 0x00	; 0
    2232:	90 e0       	ldi	r25, 0x00	; 0
    2234:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    2238:	f2 01       	movw	r30, r4
    223a:	60 83       	st	Z, r22
    223c:	71 83       	std	Z+1, r23	; 0x01
    223e:	82 83       	std	Z+2, r24	; 0x02
    2240:	93 83       	std	Z+3, r25	; 0x03
    2242:	c8 01       	movw	r24, r16
    2244:	b7 01       	movw	r22, r14
    2246:	20 e0       	ldi	r18, 0x00	; 0
    2248:	30 e0       	ldi	r19, 0x00	; 0
    224a:	a9 01       	movw	r20, r18
    224c:	0f 2e       	mov	r0, r31
    224e:	f0 e0       	ldi	r31, 0x00	; 0
    2250:	ef 2e       	mov	r14, r31
    2252:	f0 e0       	ldi	r31, 0x00	; 0
    2254:	ff 2e       	mov	r15, r31
    2256:	f4 e3       	ldi	r31, 0x34	; 52
    2258:	0f 2f       	mov	r16, r31
    225a:	f3 e4       	ldi	r31, 0x43	; 67
    225c:	1f 2f       	mov	r17, r31
    225e:	f0 2d       	mov	r31, r0
    2260:	0e 94 a0 08 	call	0x1140	; 0x1140 <_Z3mapddddd>
    2264:	0f 90       	pop	r0
    2266:	0f 90       	pop	r0
    2268:	0f 90       	pop	r0
    226a:	0f 90       	pop	r0
        OCR3A=ICR3-vAl;
    226c:	c0 91 96 00 	lds	r28, 0x0096
    2270:	d0 91 97 00 	lds	r29, 0x0097
      case 12:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
        OCR1B=ICR1-vAl;
        break;
      case 5:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    2274:	0e 94 bb 79 	call	0xf376	; 0xf376 <__fixsfsi>
        OCR3A=ICR3-vAl;
    2278:	c6 1b       	sub	r28, r22
    227a:	d7 0b       	sbc	r29, r23
    227c:	d0 93 99 00 	sts	0x0099, r29
    2280:	c0 93 98 00 	sts	0x0098, r28
    2284:	8f c2       	rjmp	.+1310   	; 0x27a4 <__stack+0x5a5>
        break;
      case 2:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    2286:	e6 e8       	ldi	r30, 0x86	; 134
    2288:	f0 e0       	ldi	r31, 0x00	; 0
    228a:	c0 81       	ld	r28, Z
    228c:	d1 81       	ldd	r29, Z+1	; 0x01
    228e:	80 80       	ld	r8, Z
    2290:	91 80       	ldd	r9, Z+1	; 0x01
    2292:	00 d0       	rcall	.+0      	; 0x2294 <__stack+0x95>
    2294:	0f 92       	push	r0
    2296:	4d b6       	in	r4, 0x3d	; 61
    2298:	5e b6       	in	r5, 0x3e	; 62
    229a:	08 94       	sec
    229c:	41 1c       	adc	r4, r1
    229e:	51 1c       	adc	r5, r1
    22a0:	88 27       	eor	r24, r24
    22a2:	77 fd       	sbrc	r23, 7
    22a4:	80 95       	com	r24
    22a6:	98 2f       	mov	r25, r24
    22a8:	0e 94 ee 79 	call	0xf3dc	; 0xf3dc <__floatsisf>
    22ac:	7b 01       	movw	r14, r22
    22ae:	8c 01       	movw	r16, r24
    22b0:	ce 01       	movw	r24, r28
    22b2:	68 e2       	ldi	r22, 0x28	; 40
    22b4:	70 e0       	ldi	r23, 0x00	; 0
    22b6:	0e 94 05 7b 	call	0xf60a	; 0xf60a <__udivmodhi4>
    22ba:	80 e0       	ldi	r24, 0x00	; 0
    22bc:	90 e0       	ldi	r25, 0x00	; 0
    22be:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    22c2:	5b 01       	movw	r10, r22
    22c4:	6c 01       	movw	r12, r24
    22c6:	96 94       	lsr	r9
    22c8:	87 94       	ror	r8
    22ca:	96 94       	lsr	r9
    22cc:	87 94       	ror	r8
    22ce:	96 94       	lsr	r9
    22d0:	87 94       	ror	r8
    22d2:	b4 01       	movw	r22, r8
    22d4:	80 e0       	ldi	r24, 0x00	; 0
    22d6:	90 e0       	ldi	r25, 0x00	; 0
    22d8:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    22dc:	f2 01       	movw	r30, r4
    22de:	60 83       	st	Z, r22
    22e0:	71 83       	std	Z+1, r23	; 0x01
    22e2:	82 83       	std	Z+2, r24	; 0x02
    22e4:	93 83       	std	Z+3, r25	; 0x03
    22e6:	c8 01       	movw	r24, r16
    22e8:	b7 01       	movw	r22, r14
    22ea:	20 e0       	ldi	r18, 0x00	; 0
    22ec:	30 e0       	ldi	r19, 0x00	; 0
    22ee:	a9 01       	movw	r20, r18
    22f0:	0f 2e       	mov	r0, r31
    22f2:	f0 e0       	ldi	r31, 0x00	; 0
    22f4:	ef 2e       	mov	r14, r31
    22f6:	f0 e0       	ldi	r31, 0x00	; 0
    22f8:	ff 2e       	mov	r15, r31
    22fa:	f4 e3       	ldi	r31, 0x34	; 52
    22fc:	0f 2f       	mov	r16, r31
    22fe:	f3 e4       	ldi	r31, 0x43	; 67
    2300:	1f 2f       	mov	r17, r31
    2302:	f0 2d       	mov	r31, r0
    2304:	0e 94 a0 08 	call	0x1140	; 0x1140 <_Z3mapddddd>
    2308:	0f 90       	pop	r0
    230a:	0f 90       	pop	r0
    230c:	0f 90       	pop	r0
    230e:	0f 90       	pop	r0
        OCR3B=ICR3-vAl;
    2310:	c0 91 96 00 	lds	r28, 0x0096
    2314:	d0 91 97 00 	lds	r29, 0x0097
      case 5:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
        OCR3A=ICR3-vAl;
        break;
      case 2:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    2318:	0e 94 bb 79 	call	0xf376	; 0xf376 <__fixsfsi>
        OCR3B=ICR3-vAl;
    231c:	c6 1b       	sub	r28, r22
    231e:	d7 0b       	sbc	r29, r23
    2320:	d0 93 9b 00 	sts	0x009B, r29
    2324:	c0 93 9a 00 	sts	0x009A, r28
    2328:	3d c2       	rjmp	.+1146   	; 0x27a4 <__stack+0x5a5>
        break;
      case 3:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    232a:	e6 e8       	ldi	r30, 0x86	; 134
    232c:	f0 e0       	ldi	r31, 0x00	; 0
    232e:	c0 81       	ld	r28, Z
    2330:	d1 81       	ldd	r29, Z+1	; 0x01
    2332:	80 80       	ld	r8, Z
    2334:	91 80       	ldd	r9, Z+1	; 0x01
    2336:	00 d0       	rcall	.+0      	; 0x2338 <__stack+0x139>
    2338:	0f 92       	push	r0
    233a:	4d b6       	in	r4, 0x3d	; 61
    233c:	5e b6       	in	r5, 0x3e	; 62
    233e:	08 94       	sec
    2340:	41 1c       	adc	r4, r1
    2342:	51 1c       	adc	r5, r1
    2344:	88 27       	eor	r24, r24
    2346:	77 fd       	sbrc	r23, 7
    2348:	80 95       	com	r24
    234a:	98 2f       	mov	r25, r24
    234c:	0e 94 ee 79 	call	0xf3dc	; 0xf3dc <__floatsisf>
    2350:	7b 01       	movw	r14, r22
    2352:	8c 01       	movw	r16, r24
    2354:	ce 01       	movw	r24, r28
    2356:	68 e2       	ldi	r22, 0x28	; 40
    2358:	70 e0       	ldi	r23, 0x00	; 0
    235a:	0e 94 05 7b 	call	0xf60a	; 0xf60a <__udivmodhi4>
    235e:	80 e0       	ldi	r24, 0x00	; 0
    2360:	90 e0       	ldi	r25, 0x00	; 0
    2362:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    2366:	5b 01       	movw	r10, r22
    2368:	6c 01       	movw	r12, r24
    236a:	96 94       	lsr	r9
    236c:	87 94       	ror	r8
    236e:	96 94       	lsr	r9
    2370:	87 94       	ror	r8
    2372:	96 94       	lsr	r9
    2374:	87 94       	ror	r8
    2376:	b4 01       	movw	r22, r8
    2378:	80 e0       	ldi	r24, 0x00	; 0
    237a:	90 e0       	ldi	r25, 0x00	; 0
    237c:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    2380:	f2 01       	movw	r30, r4
    2382:	60 83       	st	Z, r22
    2384:	71 83       	std	Z+1, r23	; 0x01
    2386:	82 83       	std	Z+2, r24	; 0x02
    2388:	93 83       	std	Z+3, r25	; 0x03
    238a:	c8 01       	movw	r24, r16
    238c:	b7 01       	movw	r22, r14
    238e:	20 e0       	ldi	r18, 0x00	; 0
    2390:	30 e0       	ldi	r19, 0x00	; 0
    2392:	a9 01       	movw	r20, r18
    2394:	0f 2e       	mov	r0, r31
    2396:	f0 e0       	ldi	r31, 0x00	; 0
    2398:	ef 2e       	mov	r14, r31
    239a:	f0 e0       	ldi	r31, 0x00	; 0
    239c:	ff 2e       	mov	r15, r31
    239e:	f4 e3       	ldi	r31, 0x34	; 52
    23a0:	0f 2f       	mov	r16, r31
    23a2:	f3 e4       	ldi	r31, 0x43	; 67
    23a4:	1f 2f       	mov	r17, r31
    23a6:	f0 2d       	mov	r31, r0
    23a8:	0e 94 a0 08 	call	0x1140	; 0x1140 <_Z3mapddddd>
    23ac:	0f 90       	pop	r0
    23ae:	0f 90       	pop	r0
    23b0:	0f 90       	pop	r0
    23b2:	0f 90       	pop	r0
        OCR3C=ICR3-vAl;
    23b4:	c0 91 96 00 	lds	r28, 0x0096
    23b8:	d0 91 97 00 	lds	r29, 0x0097
      case 2:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
        OCR3B=ICR3-vAl;
        break;
      case 3:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    23bc:	0e 94 bb 79 	call	0xf376	; 0xf376 <__fixsfsi>
        OCR3C=ICR3-vAl;
    23c0:	c6 1b       	sub	r28, r22
    23c2:	d7 0b       	sbc	r29, r23
    23c4:	d0 93 9d 00 	sts	0x009D, r29
    23c8:	c0 93 9c 00 	sts	0x009C, r28
    23cc:	eb c1       	rjmp	.+982    	; 0x27a4 <__stack+0x5a5>
        break;
      case 6:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    23ce:	e6 e8       	ldi	r30, 0x86	; 134
    23d0:	f0 e0       	ldi	r31, 0x00	; 0
    23d2:	c0 81       	ld	r28, Z
    23d4:	d1 81       	ldd	r29, Z+1	; 0x01
    23d6:	80 80       	ld	r8, Z
    23d8:	91 80       	ldd	r9, Z+1	; 0x01
    23da:	00 d0       	rcall	.+0      	; 0x23dc <__stack+0x1dd>
    23dc:	0f 92       	push	r0
    23de:	4d b6       	in	r4, 0x3d	; 61
    23e0:	5e b6       	in	r5, 0x3e	; 62
    23e2:	08 94       	sec
    23e4:	41 1c       	adc	r4, r1
    23e6:	51 1c       	adc	r5, r1
    23e8:	88 27       	eor	r24, r24
    23ea:	77 fd       	sbrc	r23, 7
    23ec:	80 95       	com	r24
    23ee:	98 2f       	mov	r25, r24
    23f0:	0e 94 ee 79 	call	0xf3dc	; 0xf3dc <__floatsisf>
    23f4:	7b 01       	movw	r14, r22
    23f6:	8c 01       	movw	r16, r24
    23f8:	ce 01       	movw	r24, r28
    23fa:	68 e2       	ldi	r22, 0x28	; 40
    23fc:	70 e0       	ldi	r23, 0x00	; 0
    23fe:	0e 94 05 7b 	call	0xf60a	; 0xf60a <__udivmodhi4>
    2402:	80 e0       	ldi	r24, 0x00	; 0
    2404:	90 e0       	ldi	r25, 0x00	; 0
    2406:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    240a:	5b 01       	movw	r10, r22
    240c:	6c 01       	movw	r12, r24
    240e:	96 94       	lsr	r9
    2410:	87 94       	ror	r8
    2412:	96 94       	lsr	r9
    2414:	87 94       	ror	r8
    2416:	96 94       	lsr	r9
    2418:	87 94       	ror	r8
    241a:	b4 01       	movw	r22, r8
    241c:	80 e0       	ldi	r24, 0x00	; 0
    241e:	90 e0       	ldi	r25, 0x00	; 0
    2420:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    2424:	f2 01       	movw	r30, r4
    2426:	60 83       	st	Z, r22
    2428:	71 83       	std	Z+1, r23	; 0x01
    242a:	82 83       	std	Z+2, r24	; 0x02
    242c:	93 83       	std	Z+3, r25	; 0x03
    242e:	c8 01       	movw	r24, r16
    2430:	b7 01       	movw	r22, r14
    2432:	20 e0       	ldi	r18, 0x00	; 0
    2434:	30 e0       	ldi	r19, 0x00	; 0
    2436:	a9 01       	movw	r20, r18
    2438:	0f 2e       	mov	r0, r31
    243a:	f0 e0       	ldi	r31, 0x00	; 0
    243c:	ef 2e       	mov	r14, r31
    243e:	f0 e0       	ldi	r31, 0x00	; 0
    2440:	ff 2e       	mov	r15, r31
    2442:	f4 e3       	ldi	r31, 0x34	; 52
    2444:	0f 2f       	mov	r16, r31
    2446:	f3 e4       	ldi	r31, 0x43	; 67
    2448:	1f 2f       	mov	r17, r31
    244a:	f0 2d       	mov	r31, r0
    244c:	0e 94 a0 08 	call	0x1140	; 0x1140 <_Z3mapddddd>
    2450:	0f 90       	pop	r0
    2452:	0f 90       	pop	r0
    2454:	0f 90       	pop	r0
    2456:	0f 90       	pop	r0
        OCR4A=ICR4-vAl;
    2458:	c0 91 a6 00 	lds	r28, 0x00A6
    245c:	d0 91 a7 00 	lds	r29, 0x00A7
      case 3:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
        OCR3C=ICR3-vAl;
        break;
      case 6:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    2460:	0e 94 bb 79 	call	0xf376	; 0xf376 <__fixsfsi>
        OCR4A=ICR4-vAl;
    2464:	c6 1b       	sub	r28, r22
    2466:	d7 0b       	sbc	r29, r23
    2468:	d0 93 a9 00 	sts	0x00A9, r29
    246c:	c0 93 a8 00 	sts	0x00A8, r28
    2470:	99 c1       	rjmp	.+818    	; 0x27a4 <__stack+0x5a5>
        break;
      case 7:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    2472:	e6 e8       	ldi	r30, 0x86	; 134
    2474:	f0 e0       	ldi	r31, 0x00	; 0
    2476:	c0 81       	ld	r28, Z
    2478:	d1 81       	ldd	r29, Z+1	; 0x01
    247a:	80 80       	ld	r8, Z
    247c:	91 80       	ldd	r9, Z+1	; 0x01
    247e:	00 d0       	rcall	.+0      	; 0x2480 <__stack+0x281>
    2480:	0f 92       	push	r0
    2482:	4d b6       	in	r4, 0x3d	; 61
    2484:	5e b6       	in	r5, 0x3e	; 62
    2486:	08 94       	sec
    2488:	41 1c       	adc	r4, r1
    248a:	51 1c       	adc	r5, r1
    248c:	88 27       	eor	r24, r24
    248e:	77 fd       	sbrc	r23, 7
    2490:	80 95       	com	r24
    2492:	98 2f       	mov	r25, r24
    2494:	0e 94 ee 79 	call	0xf3dc	; 0xf3dc <__floatsisf>
    2498:	7b 01       	movw	r14, r22
    249a:	8c 01       	movw	r16, r24
    249c:	ce 01       	movw	r24, r28
    249e:	68 e2       	ldi	r22, 0x28	; 40
    24a0:	70 e0       	ldi	r23, 0x00	; 0
    24a2:	0e 94 05 7b 	call	0xf60a	; 0xf60a <__udivmodhi4>
    24a6:	80 e0       	ldi	r24, 0x00	; 0
    24a8:	90 e0       	ldi	r25, 0x00	; 0
    24aa:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    24ae:	5b 01       	movw	r10, r22
    24b0:	6c 01       	movw	r12, r24
    24b2:	96 94       	lsr	r9
    24b4:	87 94       	ror	r8
    24b6:	96 94       	lsr	r9
    24b8:	87 94       	ror	r8
    24ba:	96 94       	lsr	r9
    24bc:	87 94       	ror	r8
    24be:	b4 01       	movw	r22, r8
    24c0:	80 e0       	ldi	r24, 0x00	; 0
    24c2:	90 e0       	ldi	r25, 0x00	; 0
    24c4:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    24c8:	f2 01       	movw	r30, r4
    24ca:	60 83       	st	Z, r22
    24cc:	71 83       	std	Z+1, r23	; 0x01
    24ce:	82 83       	std	Z+2, r24	; 0x02
    24d0:	93 83       	std	Z+3, r25	; 0x03
    24d2:	c8 01       	movw	r24, r16
    24d4:	b7 01       	movw	r22, r14
    24d6:	20 e0       	ldi	r18, 0x00	; 0
    24d8:	30 e0       	ldi	r19, 0x00	; 0
    24da:	a9 01       	movw	r20, r18
    24dc:	0f 2e       	mov	r0, r31
    24de:	f0 e0       	ldi	r31, 0x00	; 0
    24e0:	ef 2e       	mov	r14, r31
    24e2:	f0 e0       	ldi	r31, 0x00	; 0
    24e4:	ff 2e       	mov	r15, r31
    24e6:	f4 e3       	ldi	r31, 0x34	; 52
    24e8:	0f 2f       	mov	r16, r31
    24ea:	f3 e4       	ldi	r31, 0x43	; 67
    24ec:	1f 2f       	mov	r17, r31
    24ee:	f0 2d       	mov	r31, r0
    24f0:	0e 94 a0 08 	call	0x1140	; 0x1140 <_Z3mapddddd>
    24f4:	0f 90       	pop	r0
    24f6:	0f 90       	pop	r0
    24f8:	0f 90       	pop	r0
    24fa:	0f 90       	pop	r0
        OCR4B=ICR4-vAl;
    24fc:	c0 91 a6 00 	lds	r28, 0x00A6
    2500:	d0 91 a7 00 	lds	r29, 0x00A7
      case 6:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
        OCR4A=ICR4-vAl;
        break;
      case 7:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    2504:	0e 94 bb 79 	call	0xf376	; 0xf376 <__fixsfsi>
        OCR4B=ICR4-vAl;
    2508:	c6 1b       	sub	r28, r22
    250a:	d7 0b       	sbc	r29, r23
    250c:	d0 93 ab 00 	sts	0x00AB, r29
    2510:	c0 93 aa 00 	sts	0x00AA, r28
    2514:	47 c1       	rjmp	.+654    	; 0x27a4 <__stack+0x5a5>
        break; 
      case 8:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    2516:	e6 e8       	ldi	r30, 0x86	; 134
    2518:	f0 e0       	ldi	r31, 0x00	; 0
    251a:	c0 81       	ld	r28, Z
    251c:	d1 81       	ldd	r29, Z+1	; 0x01
    251e:	80 80       	ld	r8, Z
    2520:	91 80       	ldd	r9, Z+1	; 0x01
    2522:	00 d0       	rcall	.+0      	; 0x2524 <__stack+0x325>
    2524:	0f 92       	push	r0
    2526:	4d b6       	in	r4, 0x3d	; 61
    2528:	5e b6       	in	r5, 0x3e	; 62
    252a:	08 94       	sec
    252c:	41 1c       	adc	r4, r1
    252e:	51 1c       	adc	r5, r1
    2530:	88 27       	eor	r24, r24
    2532:	77 fd       	sbrc	r23, 7
    2534:	80 95       	com	r24
    2536:	98 2f       	mov	r25, r24
    2538:	0e 94 ee 79 	call	0xf3dc	; 0xf3dc <__floatsisf>
    253c:	7b 01       	movw	r14, r22
    253e:	8c 01       	movw	r16, r24
    2540:	ce 01       	movw	r24, r28
    2542:	68 e2       	ldi	r22, 0x28	; 40
    2544:	70 e0       	ldi	r23, 0x00	; 0
    2546:	0e 94 05 7b 	call	0xf60a	; 0xf60a <__udivmodhi4>
    254a:	80 e0       	ldi	r24, 0x00	; 0
    254c:	90 e0       	ldi	r25, 0x00	; 0
    254e:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    2552:	5b 01       	movw	r10, r22
    2554:	6c 01       	movw	r12, r24
    2556:	96 94       	lsr	r9
    2558:	87 94       	ror	r8
    255a:	96 94       	lsr	r9
    255c:	87 94       	ror	r8
    255e:	96 94       	lsr	r9
    2560:	87 94       	ror	r8
    2562:	b4 01       	movw	r22, r8
    2564:	80 e0       	ldi	r24, 0x00	; 0
    2566:	90 e0       	ldi	r25, 0x00	; 0
    2568:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    256c:	f2 01       	movw	r30, r4
    256e:	60 83       	st	Z, r22
    2570:	71 83       	std	Z+1, r23	; 0x01
    2572:	82 83       	std	Z+2, r24	; 0x02
    2574:	93 83       	std	Z+3, r25	; 0x03
    2576:	c8 01       	movw	r24, r16
    2578:	b7 01       	movw	r22, r14
    257a:	20 e0       	ldi	r18, 0x00	; 0
    257c:	30 e0       	ldi	r19, 0x00	; 0
    257e:	a9 01       	movw	r20, r18
    2580:	0f 2e       	mov	r0, r31
    2582:	f0 e0       	ldi	r31, 0x00	; 0
    2584:	ef 2e       	mov	r14, r31
    2586:	f0 e0       	ldi	r31, 0x00	; 0
    2588:	ff 2e       	mov	r15, r31
    258a:	f4 e3       	ldi	r31, 0x34	; 52
    258c:	0f 2f       	mov	r16, r31
    258e:	f3 e4       	ldi	r31, 0x43	; 67
    2590:	1f 2f       	mov	r17, r31
    2592:	f0 2d       	mov	r31, r0
    2594:	0e 94 a0 08 	call	0x1140	; 0x1140 <_Z3mapddddd>
    2598:	0f 90       	pop	r0
    259a:	0f 90       	pop	r0
    259c:	0f 90       	pop	r0
    259e:	0f 90       	pop	r0
        OCR4C=ICR4-vAl;
    25a0:	c0 91 a6 00 	lds	r28, 0x00A6
    25a4:	d0 91 a7 00 	lds	r29, 0x00A7
      case 7:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
        OCR4B=ICR4-vAl;
        break; 
      case 8:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    25a8:	0e 94 bb 79 	call	0xf376	; 0xf376 <__fixsfsi>
        OCR4C=ICR4-vAl;
    25ac:	c6 1b       	sub	r28, r22
    25ae:	d7 0b       	sbc	r29, r23
    25b0:	d0 93 ad 00 	sts	0x00AD, r29
    25b4:	c0 93 ac 00 	sts	0x00AC, r28
    25b8:	f5 c0       	rjmp	.+490    	; 0x27a4 <__stack+0x5a5>
        break;
      case 46:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    25ba:	e6 e8       	ldi	r30, 0x86	; 134
    25bc:	f0 e0       	ldi	r31, 0x00	; 0
    25be:	c0 81       	ld	r28, Z
    25c0:	d1 81       	ldd	r29, Z+1	; 0x01
    25c2:	80 80       	ld	r8, Z
    25c4:	91 80       	ldd	r9, Z+1	; 0x01
    25c6:	00 d0       	rcall	.+0      	; 0x25c8 <__stack+0x3c9>
    25c8:	0f 92       	push	r0
    25ca:	4d b6       	in	r4, 0x3d	; 61
    25cc:	5e b6       	in	r5, 0x3e	; 62
    25ce:	08 94       	sec
    25d0:	41 1c       	adc	r4, r1
    25d2:	51 1c       	adc	r5, r1
    25d4:	88 27       	eor	r24, r24
    25d6:	77 fd       	sbrc	r23, 7
    25d8:	80 95       	com	r24
    25da:	98 2f       	mov	r25, r24
    25dc:	0e 94 ee 79 	call	0xf3dc	; 0xf3dc <__floatsisf>
    25e0:	7b 01       	movw	r14, r22
    25e2:	8c 01       	movw	r16, r24
    25e4:	ce 01       	movw	r24, r28
    25e6:	68 e2       	ldi	r22, 0x28	; 40
    25e8:	70 e0       	ldi	r23, 0x00	; 0
    25ea:	0e 94 05 7b 	call	0xf60a	; 0xf60a <__udivmodhi4>
    25ee:	80 e0       	ldi	r24, 0x00	; 0
    25f0:	90 e0       	ldi	r25, 0x00	; 0
    25f2:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    25f6:	5b 01       	movw	r10, r22
    25f8:	6c 01       	movw	r12, r24
    25fa:	96 94       	lsr	r9
    25fc:	87 94       	ror	r8
    25fe:	96 94       	lsr	r9
    2600:	87 94       	ror	r8
    2602:	96 94       	lsr	r9
    2604:	87 94       	ror	r8
    2606:	b4 01       	movw	r22, r8
    2608:	80 e0       	ldi	r24, 0x00	; 0
    260a:	90 e0       	ldi	r25, 0x00	; 0
    260c:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    2610:	f2 01       	movw	r30, r4
    2612:	60 83       	st	Z, r22
    2614:	71 83       	std	Z+1, r23	; 0x01
    2616:	82 83       	std	Z+2, r24	; 0x02
    2618:	93 83       	std	Z+3, r25	; 0x03
    261a:	c8 01       	movw	r24, r16
    261c:	b7 01       	movw	r22, r14
    261e:	20 e0       	ldi	r18, 0x00	; 0
    2620:	30 e0       	ldi	r19, 0x00	; 0
    2622:	a9 01       	movw	r20, r18
    2624:	0f 2e       	mov	r0, r31
    2626:	f0 e0       	ldi	r31, 0x00	; 0
    2628:	ef 2e       	mov	r14, r31
    262a:	f0 e0       	ldi	r31, 0x00	; 0
    262c:	ff 2e       	mov	r15, r31
    262e:	f4 e3       	ldi	r31, 0x34	; 52
    2630:	0f 2f       	mov	r16, r31
    2632:	f3 e4       	ldi	r31, 0x43	; 67
    2634:	1f 2f       	mov	r17, r31
    2636:	f0 2d       	mov	r31, r0
    2638:	0e 94 a0 08 	call	0x1140	; 0x1140 <_Z3mapddddd>
    263c:	0f 90       	pop	r0
    263e:	0f 90       	pop	r0
    2640:	0f 90       	pop	r0
    2642:	0f 90       	pop	r0
        OCR5A=ICR5-vAl;
    2644:	c0 91 26 01 	lds	r28, 0x0126
    2648:	d0 91 27 01 	lds	r29, 0x0127
      case 8:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
        OCR4C=ICR4-vAl;
        break;
      case 46:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    264c:	0e 94 bb 79 	call	0xf376	; 0xf376 <__fixsfsi>
        OCR5A=ICR5-vAl;
    2650:	c6 1b       	sub	r28, r22
    2652:	d7 0b       	sbc	r29, r23
    2654:	d0 93 29 01 	sts	0x0129, r29
    2658:	c0 93 28 01 	sts	0x0128, r28
    265c:	a3 c0       	rjmp	.+326    	; 0x27a4 <__stack+0x5a5>
        break;
      case 45:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    265e:	e6 e8       	ldi	r30, 0x86	; 134
    2660:	f0 e0       	ldi	r31, 0x00	; 0
    2662:	c0 81       	ld	r28, Z
    2664:	d1 81       	ldd	r29, Z+1	; 0x01
    2666:	80 80       	ld	r8, Z
    2668:	91 80       	ldd	r9, Z+1	; 0x01
    266a:	00 d0       	rcall	.+0      	; 0x266c <__stack+0x46d>
    266c:	0f 92       	push	r0
    266e:	4d b6       	in	r4, 0x3d	; 61
    2670:	5e b6       	in	r5, 0x3e	; 62
    2672:	08 94       	sec
    2674:	41 1c       	adc	r4, r1
    2676:	51 1c       	adc	r5, r1
    2678:	88 27       	eor	r24, r24
    267a:	77 fd       	sbrc	r23, 7
    267c:	80 95       	com	r24
    267e:	98 2f       	mov	r25, r24
    2680:	0e 94 ee 79 	call	0xf3dc	; 0xf3dc <__floatsisf>
    2684:	7b 01       	movw	r14, r22
    2686:	8c 01       	movw	r16, r24
    2688:	ce 01       	movw	r24, r28
    268a:	68 e2       	ldi	r22, 0x28	; 40
    268c:	70 e0       	ldi	r23, 0x00	; 0
    268e:	0e 94 05 7b 	call	0xf60a	; 0xf60a <__udivmodhi4>
    2692:	80 e0       	ldi	r24, 0x00	; 0
    2694:	90 e0       	ldi	r25, 0x00	; 0
    2696:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    269a:	5b 01       	movw	r10, r22
    269c:	6c 01       	movw	r12, r24
    269e:	96 94       	lsr	r9
    26a0:	87 94       	ror	r8
    26a2:	96 94       	lsr	r9
    26a4:	87 94       	ror	r8
    26a6:	96 94       	lsr	r9
    26a8:	87 94       	ror	r8
    26aa:	b4 01       	movw	r22, r8
    26ac:	80 e0       	ldi	r24, 0x00	; 0
    26ae:	90 e0       	ldi	r25, 0x00	; 0
    26b0:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    26b4:	f2 01       	movw	r30, r4
    26b6:	60 83       	st	Z, r22
    26b8:	71 83       	std	Z+1, r23	; 0x01
    26ba:	82 83       	std	Z+2, r24	; 0x02
    26bc:	93 83       	std	Z+3, r25	; 0x03
    26be:	c8 01       	movw	r24, r16
    26c0:	b7 01       	movw	r22, r14
    26c2:	20 e0       	ldi	r18, 0x00	; 0
    26c4:	30 e0       	ldi	r19, 0x00	; 0
    26c6:	a9 01       	movw	r20, r18
    26c8:	0f 2e       	mov	r0, r31
    26ca:	f0 e0       	ldi	r31, 0x00	; 0
    26cc:	ef 2e       	mov	r14, r31
    26ce:	f0 e0       	ldi	r31, 0x00	; 0
    26d0:	ff 2e       	mov	r15, r31
    26d2:	f4 e3       	ldi	r31, 0x34	; 52
    26d4:	0f 2f       	mov	r16, r31
    26d6:	f3 e4       	ldi	r31, 0x43	; 67
    26d8:	1f 2f       	mov	r17, r31
    26da:	f0 2d       	mov	r31, r0
    26dc:	0e 94 a0 08 	call	0x1140	; 0x1140 <_Z3mapddddd>
    26e0:	0f 90       	pop	r0
    26e2:	0f 90       	pop	r0
    26e4:	0f 90       	pop	r0
    26e6:	0f 90       	pop	r0
        OCR5B=ICR5-vAl;
    26e8:	c0 91 26 01 	lds	r28, 0x0126
    26ec:	d0 91 27 01 	lds	r29, 0x0127
      case 46:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
        OCR5A=ICR5-vAl;
        break;
      case 45:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    26f0:	0e 94 bb 79 	call	0xf376	; 0xf376 <__fixsfsi>
        OCR5B=ICR5-vAl;
    26f4:	c6 1b       	sub	r28, r22
    26f6:	d7 0b       	sbc	r29, r23
    26f8:	d0 93 2b 01 	sts	0x012B, r29
    26fc:	c0 93 2a 01 	sts	0x012A, r28
    2700:	51 c0       	rjmp	.+162    	; 0x27a4 <__stack+0x5a5>
        break;
      case 44:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    2702:	e6 e8       	ldi	r30, 0x86	; 134
    2704:	f0 e0       	ldi	r31, 0x00	; 0
    2706:	c0 81       	ld	r28, Z
    2708:	d1 81       	ldd	r29, Z+1	; 0x01
    270a:	80 80       	ld	r8, Z
    270c:	91 80       	ldd	r9, Z+1	; 0x01
    270e:	00 d0       	rcall	.+0      	; 0x2710 <__stack+0x511>
    2710:	0f 92       	push	r0
    2712:	4d b6       	in	r4, 0x3d	; 61
    2714:	5e b6       	in	r5, 0x3e	; 62
    2716:	08 94       	sec
    2718:	41 1c       	adc	r4, r1
    271a:	51 1c       	adc	r5, r1
    271c:	88 27       	eor	r24, r24
    271e:	77 fd       	sbrc	r23, 7
    2720:	80 95       	com	r24
    2722:	98 2f       	mov	r25, r24
    2724:	0e 94 ee 79 	call	0xf3dc	; 0xf3dc <__floatsisf>
    2728:	7b 01       	movw	r14, r22
    272a:	8c 01       	movw	r16, r24
    272c:	ce 01       	movw	r24, r28
    272e:	68 e2       	ldi	r22, 0x28	; 40
    2730:	70 e0       	ldi	r23, 0x00	; 0
    2732:	0e 94 05 7b 	call	0xf60a	; 0xf60a <__udivmodhi4>
    2736:	80 e0       	ldi	r24, 0x00	; 0
    2738:	90 e0       	ldi	r25, 0x00	; 0
    273a:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    273e:	5b 01       	movw	r10, r22
    2740:	6c 01       	movw	r12, r24
    2742:	96 94       	lsr	r9
    2744:	87 94       	ror	r8
    2746:	96 94       	lsr	r9
    2748:	87 94       	ror	r8
    274a:	96 94       	lsr	r9
    274c:	87 94       	ror	r8
    274e:	b4 01       	movw	r22, r8
    2750:	80 e0       	ldi	r24, 0x00	; 0
    2752:	90 e0       	ldi	r25, 0x00	; 0
    2754:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    2758:	f2 01       	movw	r30, r4
    275a:	60 83       	st	Z, r22
    275c:	71 83       	std	Z+1, r23	; 0x01
    275e:	82 83       	std	Z+2, r24	; 0x02
    2760:	93 83       	std	Z+3, r25	; 0x03
    2762:	c8 01       	movw	r24, r16
    2764:	b7 01       	movw	r22, r14
    2766:	20 e0       	ldi	r18, 0x00	; 0
    2768:	30 e0       	ldi	r19, 0x00	; 0
    276a:	a9 01       	movw	r20, r18
    276c:	0f 2e       	mov	r0, r31
    276e:	f0 e0       	ldi	r31, 0x00	; 0
    2770:	ef 2e       	mov	r14, r31
    2772:	f0 e0       	ldi	r31, 0x00	; 0
    2774:	ff 2e       	mov	r15, r31
    2776:	f4 e3       	ldi	r31, 0x34	; 52
    2778:	0f 2f       	mov	r16, r31
    277a:	f3 e4       	ldi	r31, 0x43	; 67
    277c:	1f 2f       	mov	r17, r31
    277e:	f0 2d       	mov	r31, r0
    2780:	0e 94 a0 08 	call	0x1140	; 0x1140 <_Z3mapddddd>
    2784:	0f 90       	pop	r0
    2786:	0f 90       	pop	r0
    2788:	0f 90       	pop	r0
    278a:	0f 90       	pop	r0
        OCR5C=ICR5-vAl;
    278c:	c0 91 26 01 	lds	r28, 0x0126
    2790:	d0 91 27 01 	lds	r29, 0x0127
      case 45:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
        OCR5B=ICR5-vAl;
        break;
      case 44:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    2794:	0e 94 bb 79 	call	0xf376	; 0xf376 <__fixsfsi>
        OCR5C=ICR5-vAl;
    2798:	c6 1b       	sub	r28, r22
    279a:	d7 0b       	sbc	r29, r23
    279c:	d0 93 2d 01 	sts	0x012D, r29
    27a0:	c0 93 2c 01 	sts	0x012C, r28
		r.write(z);
    27a4:	60 91 ce 02 	lds	r22, 0x02CE
    27a8:	70 91 cf 02 	lds	r23, 0x02CF
     }
  }

  void write(int vAl)           //PIN=servo pin no. on mega,vAl=angle F_CPU for the servo at pin
  {
    switch(pIn)
    27ac:	80 91 d6 02 	lds	r24, 0x02D6
    27b0:	88 30       	cpi	r24, 0x08	; 8
    27b2:	09 f4       	brne	.+2      	; 0x27b6 <__stack+0x5b7>
    27b4:	63 c2       	rjmp	.+1222   	; 0x2c7c <__stack+0xa7d>
    27b6:	89 30       	cpi	r24, 0x09	; 9
    27b8:	98 f4       	brcc	.+38     	; 0x27e0 <__stack+0x5e1>
    27ba:	85 30       	cpi	r24, 0x05	; 5
    27bc:	09 f4       	brne	.+2      	; 0x27c0 <__stack+0x5c1>
    27be:	c4 c0       	rjmp	.+392    	; 0x2948 <__stack+0x749>
    27c0:	86 30       	cpi	r24, 0x06	; 6
    27c2:	38 f4       	brcc	.+14     	; 0x27d2 <__stack+0x5d3>
    27c4:	82 30       	cpi	r24, 0x02	; 2
    27c6:	09 f4       	brne	.+2      	; 0x27ca <__stack+0x5cb>
    27c8:	11 c1       	rjmp	.+546    	; 0x29ec <__stack+0x7ed>
    27ca:	83 30       	cpi	r24, 0x03	; 3
    27cc:	09 f0       	breq	.+2      	; 0x27d0 <__stack+0x5d1>
    27ce:	9d c3       	rjmp	.+1850   	; 0x2f0a <__stack+0xd0b>
    27d0:	5f c1       	rjmp	.+702    	; 0x2a90 <__stack+0x891>
    27d2:	86 30       	cpi	r24, 0x06	; 6
    27d4:	09 f4       	brne	.+2      	; 0x27d8 <__stack+0x5d9>
    27d6:	ae c1       	rjmp	.+860    	; 0x2b34 <__stack+0x935>
    27d8:	87 30       	cpi	r24, 0x07	; 7
    27da:	09 f0       	breq	.+2      	; 0x27de <__stack+0x5df>
    27dc:	96 c3       	rjmp	.+1836   	; 0x2f0a <__stack+0xd0b>
    27de:	fc c1       	rjmp	.+1016   	; 0x2bd8 <__stack+0x9d9>
    27e0:	8c 32       	cpi	r24, 0x2C	; 44
    27e2:	09 f4       	brne	.+2      	; 0x27e6 <__stack+0x5e7>
    27e4:	41 c3       	rjmp	.+1666   	; 0x2e68 <__stack+0xc69>
    27e6:	8d 32       	cpi	r24, 0x2D	; 45
    27e8:	30 f4       	brcc	.+12     	; 0x27f6 <__stack+0x5f7>
    27ea:	8b 30       	cpi	r24, 0x0B	; 11
    27ec:	59 f0       	breq	.+22     	; 0x2804 <__stack+0x605>
    27ee:	8c 30       	cpi	r24, 0x0C	; 12
    27f0:	09 f0       	breq	.+2      	; 0x27f4 <__stack+0x5f5>
    27f2:	8b c3       	rjmp	.+1814   	; 0x2f0a <__stack+0xd0b>
    27f4:	58 c0       	rjmp	.+176    	; 0x28a6 <__stack+0x6a7>
    27f6:	8d 32       	cpi	r24, 0x2D	; 45
    27f8:	09 f4       	brne	.+2      	; 0x27fc <__stack+0x5fd>
    27fa:	e4 c2       	rjmp	.+1480   	; 0x2dc4 <__stack+0xbc5>
    27fc:	8e 32       	cpi	r24, 0x2E	; 46
    27fe:	09 f0       	breq	.+2      	; 0x2802 <__stack+0x603>
    2800:	84 c3       	rjmp	.+1800   	; 0x2f0a <__stack+0xd0b>
    2802:	8e c2       	rjmp	.+1308   	; 0x2d20 <__stack+0xb21>
    {
     case 11:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    2804:	c6 e8       	ldi	r28, 0x86	; 134
    2806:	d0 e0       	ldi	r29, 0x00	; 0
    2808:	08 81       	ld	r16, Y
    280a:	19 81       	ldd	r17, Y+1	; 0x01
    280c:	e8 80       	ld	r14, Y
    280e:	f9 80       	ldd	r15, Y+1	; 0x01
    2810:	00 d0       	rcall	.+0      	; 0x2812 <__stack+0x613>
    2812:	0f 92       	push	r0
    2814:	8d b6       	in	r8, 0x3d	; 61
    2816:	9e b6       	in	r9, 0x3e	; 62
    2818:	08 94       	sec
    281a:	81 1c       	adc	r8, r1
    281c:	91 1c       	adc	r9, r1
    281e:	88 27       	eor	r24, r24
    2820:	77 fd       	sbrc	r23, 7
    2822:	80 95       	com	r24
    2824:	98 2f       	mov	r25, r24
    2826:	0e 94 ee 79 	call	0xf3dc	; 0xf3dc <__floatsisf>
    282a:	2b 01       	movw	r4, r22
    282c:	3c 01       	movw	r6, r24
    282e:	c8 01       	movw	r24, r16
    2830:	68 e2       	ldi	r22, 0x28	; 40
    2832:	70 e0       	ldi	r23, 0x00	; 0
    2834:	0e 94 05 7b 	call	0xf60a	; 0xf60a <__udivmodhi4>
    2838:	80 e0       	ldi	r24, 0x00	; 0
    283a:	90 e0       	ldi	r25, 0x00	; 0
    283c:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    2840:	5b 01       	movw	r10, r22
    2842:	6c 01       	movw	r12, r24
    2844:	f6 94       	lsr	r15
    2846:	e7 94       	ror	r14
    2848:	f6 94       	lsr	r15
    284a:	e7 94       	ror	r14
    284c:	f6 94       	lsr	r15
    284e:	e7 94       	ror	r14
    2850:	b7 01       	movw	r22, r14
    2852:	80 e0       	ldi	r24, 0x00	; 0
    2854:	90 e0       	ldi	r25, 0x00	; 0
    2856:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    285a:	f4 01       	movw	r30, r8
    285c:	60 83       	st	Z, r22
    285e:	71 83       	std	Z+1, r23	; 0x01
    2860:	82 83       	std	Z+2, r24	; 0x02
    2862:	93 83       	std	Z+3, r25	; 0x03
    2864:	c3 01       	movw	r24, r6
    2866:	b2 01       	movw	r22, r4
    2868:	20 e0       	ldi	r18, 0x00	; 0
    286a:	30 e0       	ldi	r19, 0x00	; 0
    286c:	a9 01       	movw	r20, r18
    286e:	0f 2e       	mov	r0, r31
    2870:	f0 e0       	ldi	r31, 0x00	; 0
    2872:	ef 2e       	mov	r14, r31
    2874:	f0 e0       	ldi	r31, 0x00	; 0
    2876:	ff 2e       	mov	r15, r31
    2878:	f4 e3       	ldi	r31, 0x34	; 52
    287a:	0f 2f       	mov	r16, r31
    287c:	f3 e4       	ldi	r31, 0x43	; 67
    287e:	1f 2f       	mov	r17, r31
    2880:	f0 2d       	mov	r31, r0
    2882:	0e 94 a0 08 	call	0x1140	; 0x1140 <_Z3mapddddd>
    2886:	0f 90       	pop	r0
    2888:	0f 90       	pop	r0
    288a:	0f 90       	pop	r0
    288c:	0f 90       	pop	r0
        OCR1A=ICR1-vAl;
    288e:	09 90       	ld	r0, Y+
    2890:	d8 81       	ld	r29, Y
    2892:	c0 2d       	mov	r28, r0
  void write(int vAl)           //PIN=servo pin no. on mega,vAl=angle F_CPU for the servo at pin
  {
    switch(pIn)
    {
     case 11:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    2894:	0e 94 bb 79 	call	0xf376	; 0xf376 <__fixsfsi>
        OCR1A=ICR1-vAl;
    2898:	c6 1b       	sub	r28, r22
    289a:	d7 0b       	sbc	r29, r23
    289c:	d0 93 89 00 	sts	0x0089, r29
    28a0:	c0 93 88 00 	sts	0x0088, r28
    28a4:	32 c3       	rjmp	.+1636   	; 0x2f0a <__stack+0xd0b>
        break;
      case 12:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    28a6:	c6 e8       	ldi	r28, 0x86	; 134
    28a8:	d0 e0       	ldi	r29, 0x00	; 0
    28aa:	08 81       	ld	r16, Y
    28ac:	19 81       	ldd	r17, Y+1	; 0x01
    28ae:	e8 80       	ld	r14, Y
    28b0:	f9 80       	ldd	r15, Y+1	; 0x01
    28b2:	00 d0       	rcall	.+0      	; 0x28b4 <__stack+0x6b5>
    28b4:	0f 92       	push	r0
    28b6:	8d b6       	in	r8, 0x3d	; 61
    28b8:	9e b6       	in	r9, 0x3e	; 62
    28ba:	08 94       	sec
    28bc:	81 1c       	adc	r8, r1
    28be:	91 1c       	adc	r9, r1
    28c0:	88 27       	eor	r24, r24
    28c2:	77 fd       	sbrc	r23, 7
    28c4:	80 95       	com	r24
    28c6:	98 2f       	mov	r25, r24
    28c8:	0e 94 ee 79 	call	0xf3dc	; 0xf3dc <__floatsisf>
    28cc:	2b 01       	movw	r4, r22
    28ce:	3c 01       	movw	r6, r24
    28d0:	c8 01       	movw	r24, r16
    28d2:	68 e2       	ldi	r22, 0x28	; 40
    28d4:	70 e0       	ldi	r23, 0x00	; 0
    28d6:	0e 94 05 7b 	call	0xf60a	; 0xf60a <__udivmodhi4>
    28da:	80 e0       	ldi	r24, 0x00	; 0
    28dc:	90 e0       	ldi	r25, 0x00	; 0
    28de:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    28e2:	5b 01       	movw	r10, r22
    28e4:	6c 01       	movw	r12, r24
    28e6:	f6 94       	lsr	r15
    28e8:	e7 94       	ror	r14
    28ea:	f6 94       	lsr	r15
    28ec:	e7 94       	ror	r14
    28ee:	f6 94       	lsr	r15
    28f0:	e7 94       	ror	r14
    28f2:	b7 01       	movw	r22, r14
    28f4:	80 e0       	ldi	r24, 0x00	; 0
    28f6:	90 e0       	ldi	r25, 0x00	; 0
    28f8:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    28fc:	f4 01       	movw	r30, r8
    28fe:	60 83       	st	Z, r22
    2900:	71 83       	std	Z+1, r23	; 0x01
    2902:	82 83       	std	Z+2, r24	; 0x02
    2904:	93 83       	std	Z+3, r25	; 0x03
    2906:	c3 01       	movw	r24, r6
    2908:	b2 01       	movw	r22, r4
    290a:	20 e0       	ldi	r18, 0x00	; 0
    290c:	30 e0       	ldi	r19, 0x00	; 0
    290e:	a9 01       	movw	r20, r18
    2910:	0f 2e       	mov	r0, r31
    2912:	f0 e0       	ldi	r31, 0x00	; 0
    2914:	ef 2e       	mov	r14, r31
    2916:	f0 e0       	ldi	r31, 0x00	; 0
    2918:	ff 2e       	mov	r15, r31
    291a:	f4 e3       	ldi	r31, 0x34	; 52
    291c:	0f 2f       	mov	r16, r31
    291e:	f3 e4       	ldi	r31, 0x43	; 67
    2920:	1f 2f       	mov	r17, r31
    2922:	f0 2d       	mov	r31, r0
    2924:	0e 94 a0 08 	call	0x1140	; 0x1140 <_Z3mapddddd>
    2928:	0f 90       	pop	r0
    292a:	0f 90       	pop	r0
    292c:	0f 90       	pop	r0
    292e:	0f 90       	pop	r0
        OCR1B=ICR1-vAl;
    2930:	09 90       	ld	r0, Y+
    2932:	d8 81       	ld	r29, Y
    2934:	c0 2d       	mov	r28, r0
     case 11:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
        OCR1A=ICR1-vAl;
        break;
      case 12:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    2936:	0e 94 bb 79 	call	0xf376	; 0xf376 <__fixsfsi>
        OCR1B=ICR1-vAl;
    293a:	c6 1b       	sub	r28, r22
    293c:	d7 0b       	sbc	r29, r23
    293e:	d0 93 8b 00 	sts	0x008B, r29
    2942:	c0 93 8a 00 	sts	0x008A, r28
    2946:	e1 c2       	rjmp	.+1474   	; 0x2f0a <__stack+0xd0b>
        break;
      case 5:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    2948:	e6 e8       	ldi	r30, 0x86	; 134
    294a:	f0 e0       	ldi	r31, 0x00	; 0
    294c:	c0 81       	ld	r28, Z
    294e:	d1 81       	ldd	r29, Z+1	; 0x01
    2950:	80 80       	ld	r8, Z
    2952:	91 80       	ldd	r9, Z+1	; 0x01
    2954:	00 d0       	rcall	.+0      	; 0x2956 <__stack+0x757>
    2956:	0f 92       	push	r0
    2958:	4d b6       	in	r4, 0x3d	; 61
    295a:	5e b6       	in	r5, 0x3e	; 62
    295c:	08 94       	sec
    295e:	41 1c       	adc	r4, r1
    2960:	51 1c       	adc	r5, r1
    2962:	88 27       	eor	r24, r24
    2964:	77 fd       	sbrc	r23, 7
    2966:	80 95       	com	r24
    2968:	98 2f       	mov	r25, r24
    296a:	0e 94 ee 79 	call	0xf3dc	; 0xf3dc <__floatsisf>
    296e:	7b 01       	movw	r14, r22
    2970:	8c 01       	movw	r16, r24
    2972:	ce 01       	movw	r24, r28
    2974:	68 e2       	ldi	r22, 0x28	; 40
    2976:	70 e0       	ldi	r23, 0x00	; 0
    2978:	0e 94 05 7b 	call	0xf60a	; 0xf60a <__udivmodhi4>
    297c:	80 e0       	ldi	r24, 0x00	; 0
    297e:	90 e0       	ldi	r25, 0x00	; 0
    2980:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    2984:	5b 01       	movw	r10, r22
    2986:	6c 01       	movw	r12, r24
    2988:	96 94       	lsr	r9
    298a:	87 94       	ror	r8
    298c:	96 94       	lsr	r9
    298e:	87 94       	ror	r8
    2990:	96 94       	lsr	r9
    2992:	87 94       	ror	r8
    2994:	b4 01       	movw	r22, r8
    2996:	80 e0       	ldi	r24, 0x00	; 0
    2998:	90 e0       	ldi	r25, 0x00	; 0
    299a:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    299e:	f2 01       	movw	r30, r4
    29a0:	60 83       	st	Z, r22
    29a2:	71 83       	std	Z+1, r23	; 0x01
    29a4:	82 83       	std	Z+2, r24	; 0x02
    29a6:	93 83       	std	Z+3, r25	; 0x03
    29a8:	c8 01       	movw	r24, r16
    29aa:	b7 01       	movw	r22, r14
    29ac:	20 e0       	ldi	r18, 0x00	; 0
    29ae:	30 e0       	ldi	r19, 0x00	; 0
    29b0:	a9 01       	movw	r20, r18
    29b2:	0f 2e       	mov	r0, r31
    29b4:	f0 e0       	ldi	r31, 0x00	; 0
    29b6:	ef 2e       	mov	r14, r31
    29b8:	f0 e0       	ldi	r31, 0x00	; 0
    29ba:	ff 2e       	mov	r15, r31
    29bc:	f4 e3       	ldi	r31, 0x34	; 52
    29be:	0f 2f       	mov	r16, r31
    29c0:	f3 e4       	ldi	r31, 0x43	; 67
    29c2:	1f 2f       	mov	r17, r31
    29c4:	f0 2d       	mov	r31, r0
    29c6:	0e 94 a0 08 	call	0x1140	; 0x1140 <_Z3mapddddd>
    29ca:	0f 90       	pop	r0
    29cc:	0f 90       	pop	r0
    29ce:	0f 90       	pop	r0
    29d0:	0f 90       	pop	r0
        OCR3A=ICR3-vAl;
    29d2:	c0 91 96 00 	lds	r28, 0x0096
    29d6:	d0 91 97 00 	lds	r29, 0x0097
      case 12:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
        OCR1B=ICR1-vAl;
        break;
      case 5:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    29da:	0e 94 bb 79 	call	0xf376	; 0xf376 <__fixsfsi>
        OCR3A=ICR3-vAl;
    29de:	c6 1b       	sub	r28, r22
    29e0:	d7 0b       	sbc	r29, r23
    29e2:	d0 93 99 00 	sts	0x0099, r29
    29e6:	c0 93 98 00 	sts	0x0098, r28
    29ea:	8f c2       	rjmp	.+1310   	; 0x2f0a <__stack+0xd0b>
        break;
      case 2:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    29ec:	e6 e8       	ldi	r30, 0x86	; 134
    29ee:	f0 e0       	ldi	r31, 0x00	; 0
    29f0:	c0 81       	ld	r28, Z
    29f2:	d1 81       	ldd	r29, Z+1	; 0x01
    29f4:	80 80       	ld	r8, Z
    29f6:	91 80       	ldd	r9, Z+1	; 0x01
    29f8:	00 d0       	rcall	.+0      	; 0x29fa <__stack+0x7fb>
    29fa:	0f 92       	push	r0
    29fc:	4d b6       	in	r4, 0x3d	; 61
    29fe:	5e b6       	in	r5, 0x3e	; 62
    2a00:	08 94       	sec
    2a02:	41 1c       	adc	r4, r1
    2a04:	51 1c       	adc	r5, r1
    2a06:	88 27       	eor	r24, r24
    2a08:	77 fd       	sbrc	r23, 7
    2a0a:	80 95       	com	r24
    2a0c:	98 2f       	mov	r25, r24
    2a0e:	0e 94 ee 79 	call	0xf3dc	; 0xf3dc <__floatsisf>
    2a12:	7b 01       	movw	r14, r22
    2a14:	8c 01       	movw	r16, r24
    2a16:	ce 01       	movw	r24, r28
    2a18:	68 e2       	ldi	r22, 0x28	; 40
    2a1a:	70 e0       	ldi	r23, 0x00	; 0
    2a1c:	0e 94 05 7b 	call	0xf60a	; 0xf60a <__udivmodhi4>
    2a20:	80 e0       	ldi	r24, 0x00	; 0
    2a22:	90 e0       	ldi	r25, 0x00	; 0
    2a24:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    2a28:	5b 01       	movw	r10, r22
    2a2a:	6c 01       	movw	r12, r24
    2a2c:	96 94       	lsr	r9
    2a2e:	87 94       	ror	r8
    2a30:	96 94       	lsr	r9
    2a32:	87 94       	ror	r8
    2a34:	96 94       	lsr	r9
    2a36:	87 94       	ror	r8
    2a38:	b4 01       	movw	r22, r8
    2a3a:	80 e0       	ldi	r24, 0x00	; 0
    2a3c:	90 e0       	ldi	r25, 0x00	; 0
    2a3e:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    2a42:	f2 01       	movw	r30, r4
    2a44:	60 83       	st	Z, r22
    2a46:	71 83       	std	Z+1, r23	; 0x01
    2a48:	82 83       	std	Z+2, r24	; 0x02
    2a4a:	93 83       	std	Z+3, r25	; 0x03
    2a4c:	c8 01       	movw	r24, r16
    2a4e:	b7 01       	movw	r22, r14
    2a50:	20 e0       	ldi	r18, 0x00	; 0
    2a52:	30 e0       	ldi	r19, 0x00	; 0
    2a54:	a9 01       	movw	r20, r18
    2a56:	0f 2e       	mov	r0, r31
    2a58:	f0 e0       	ldi	r31, 0x00	; 0
    2a5a:	ef 2e       	mov	r14, r31
    2a5c:	f0 e0       	ldi	r31, 0x00	; 0
    2a5e:	ff 2e       	mov	r15, r31
    2a60:	f4 e3       	ldi	r31, 0x34	; 52
    2a62:	0f 2f       	mov	r16, r31
    2a64:	f3 e4       	ldi	r31, 0x43	; 67
    2a66:	1f 2f       	mov	r17, r31
    2a68:	f0 2d       	mov	r31, r0
    2a6a:	0e 94 a0 08 	call	0x1140	; 0x1140 <_Z3mapddddd>
    2a6e:	0f 90       	pop	r0
    2a70:	0f 90       	pop	r0
    2a72:	0f 90       	pop	r0
    2a74:	0f 90       	pop	r0
        OCR3B=ICR3-vAl;
    2a76:	c0 91 96 00 	lds	r28, 0x0096
    2a7a:	d0 91 97 00 	lds	r29, 0x0097
      case 5:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
        OCR3A=ICR3-vAl;
        break;
      case 2:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    2a7e:	0e 94 bb 79 	call	0xf376	; 0xf376 <__fixsfsi>
        OCR3B=ICR3-vAl;
    2a82:	c6 1b       	sub	r28, r22
    2a84:	d7 0b       	sbc	r29, r23
    2a86:	d0 93 9b 00 	sts	0x009B, r29
    2a8a:	c0 93 9a 00 	sts	0x009A, r28
    2a8e:	3d c2       	rjmp	.+1146   	; 0x2f0a <__stack+0xd0b>
        break;
      case 3:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    2a90:	e6 e8       	ldi	r30, 0x86	; 134
    2a92:	f0 e0       	ldi	r31, 0x00	; 0
    2a94:	c0 81       	ld	r28, Z
    2a96:	d1 81       	ldd	r29, Z+1	; 0x01
    2a98:	80 80       	ld	r8, Z
    2a9a:	91 80       	ldd	r9, Z+1	; 0x01
    2a9c:	00 d0       	rcall	.+0      	; 0x2a9e <__stack+0x89f>
    2a9e:	0f 92       	push	r0
    2aa0:	4d b6       	in	r4, 0x3d	; 61
    2aa2:	5e b6       	in	r5, 0x3e	; 62
    2aa4:	08 94       	sec
    2aa6:	41 1c       	adc	r4, r1
    2aa8:	51 1c       	adc	r5, r1
    2aaa:	88 27       	eor	r24, r24
    2aac:	77 fd       	sbrc	r23, 7
    2aae:	80 95       	com	r24
    2ab0:	98 2f       	mov	r25, r24
    2ab2:	0e 94 ee 79 	call	0xf3dc	; 0xf3dc <__floatsisf>
    2ab6:	7b 01       	movw	r14, r22
    2ab8:	8c 01       	movw	r16, r24
    2aba:	ce 01       	movw	r24, r28
    2abc:	68 e2       	ldi	r22, 0x28	; 40
    2abe:	70 e0       	ldi	r23, 0x00	; 0
    2ac0:	0e 94 05 7b 	call	0xf60a	; 0xf60a <__udivmodhi4>
    2ac4:	80 e0       	ldi	r24, 0x00	; 0
    2ac6:	90 e0       	ldi	r25, 0x00	; 0
    2ac8:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    2acc:	5b 01       	movw	r10, r22
    2ace:	6c 01       	movw	r12, r24
    2ad0:	96 94       	lsr	r9
    2ad2:	87 94       	ror	r8
    2ad4:	96 94       	lsr	r9
    2ad6:	87 94       	ror	r8
    2ad8:	96 94       	lsr	r9
    2ada:	87 94       	ror	r8
    2adc:	b4 01       	movw	r22, r8
    2ade:	80 e0       	ldi	r24, 0x00	; 0
    2ae0:	90 e0       	ldi	r25, 0x00	; 0
    2ae2:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    2ae6:	f2 01       	movw	r30, r4
    2ae8:	60 83       	st	Z, r22
    2aea:	71 83       	std	Z+1, r23	; 0x01
    2aec:	82 83       	std	Z+2, r24	; 0x02
    2aee:	93 83       	std	Z+3, r25	; 0x03
    2af0:	c8 01       	movw	r24, r16
    2af2:	b7 01       	movw	r22, r14
    2af4:	20 e0       	ldi	r18, 0x00	; 0
    2af6:	30 e0       	ldi	r19, 0x00	; 0
    2af8:	a9 01       	movw	r20, r18
    2afa:	0f 2e       	mov	r0, r31
    2afc:	f0 e0       	ldi	r31, 0x00	; 0
    2afe:	ef 2e       	mov	r14, r31
    2b00:	f0 e0       	ldi	r31, 0x00	; 0
    2b02:	ff 2e       	mov	r15, r31
    2b04:	f4 e3       	ldi	r31, 0x34	; 52
    2b06:	0f 2f       	mov	r16, r31
    2b08:	f3 e4       	ldi	r31, 0x43	; 67
    2b0a:	1f 2f       	mov	r17, r31
    2b0c:	f0 2d       	mov	r31, r0
    2b0e:	0e 94 a0 08 	call	0x1140	; 0x1140 <_Z3mapddddd>
    2b12:	0f 90       	pop	r0
    2b14:	0f 90       	pop	r0
    2b16:	0f 90       	pop	r0
    2b18:	0f 90       	pop	r0
        OCR3C=ICR3-vAl;
    2b1a:	c0 91 96 00 	lds	r28, 0x0096
    2b1e:	d0 91 97 00 	lds	r29, 0x0097
      case 2:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
        OCR3B=ICR3-vAl;
        break;
      case 3:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    2b22:	0e 94 bb 79 	call	0xf376	; 0xf376 <__fixsfsi>
        OCR3C=ICR3-vAl;
    2b26:	c6 1b       	sub	r28, r22
    2b28:	d7 0b       	sbc	r29, r23
    2b2a:	d0 93 9d 00 	sts	0x009D, r29
    2b2e:	c0 93 9c 00 	sts	0x009C, r28
    2b32:	eb c1       	rjmp	.+982    	; 0x2f0a <__stack+0xd0b>
        break;
      case 6:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    2b34:	e6 e8       	ldi	r30, 0x86	; 134
    2b36:	f0 e0       	ldi	r31, 0x00	; 0
    2b38:	c0 81       	ld	r28, Z
    2b3a:	d1 81       	ldd	r29, Z+1	; 0x01
    2b3c:	80 80       	ld	r8, Z
    2b3e:	91 80       	ldd	r9, Z+1	; 0x01
    2b40:	00 d0       	rcall	.+0      	; 0x2b42 <__stack+0x943>
    2b42:	0f 92       	push	r0
    2b44:	4d b6       	in	r4, 0x3d	; 61
    2b46:	5e b6       	in	r5, 0x3e	; 62
    2b48:	08 94       	sec
    2b4a:	41 1c       	adc	r4, r1
    2b4c:	51 1c       	adc	r5, r1
    2b4e:	88 27       	eor	r24, r24
    2b50:	77 fd       	sbrc	r23, 7
    2b52:	80 95       	com	r24
    2b54:	98 2f       	mov	r25, r24
    2b56:	0e 94 ee 79 	call	0xf3dc	; 0xf3dc <__floatsisf>
    2b5a:	7b 01       	movw	r14, r22
    2b5c:	8c 01       	movw	r16, r24
    2b5e:	ce 01       	movw	r24, r28
    2b60:	68 e2       	ldi	r22, 0x28	; 40
    2b62:	70 e0       	ldi	r23, 0x00	; 0
    2b64:	0e 94 05 7b 	call	0xf60a	; 0xf60a <__udivmodhi4>
    2b68:	80 e0       	ldi	r24, 0x00	; 0
    2b6a:	90 e0       	ldi	r25, 0x00	; 0
    2b6c:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    2b70:	5b 01       	movw	r10, r22
    2b72:	6c 01       	movw	r12, r24
    2b74:	96 94       	lsr	r9
    2b76:	87 94       	ror	r8
    2b78:	96 94       	lsr	r9
    2b7a:	87 94       	ror	r8
    2b7c:	96 94       	lsr	r9
    2b7e:	87 94       	ror	r8
    2b80:	b4 01       	movw	r22, r8
    2b82:	80 e0       	ldi	r24, 0x00	; 0
    2b84:	90 e0       	ldi	r25, 0x00	; 0
    2b86:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    2b8a:	f2 01       	movw	r30, r4
    2b8c:	60 83       	st	Z, r22
    2b8e:	71 83       	std	Z+1, r23	; 0x01
    2b90:	82 83       	std	Z+2, r24	; 0x02
    2b92:	93 83       	std	Z+3, r25	; 0x03
    2b94:	c8 01       	movw	r24, r16
    2b96:	b7 01       	movw	r22, r14
    2b98:	20 e0       	ldi	r18, 0x00	; 0
    2b9a:	30 e0       	ldi	r19, 0x00	; 0
    2b9c:	a9 01       	movw	r20, r18
    2b9e:	0f 2e       	mov	r0, r31
    2ba0:	f0 e0       	ldi	r31, 0x00	; 0
    2ba2:	ef 2e       	mov	r14, r31
    2ba4:	f0 e0       	ldi	r31, 0x00	; 0
    2ba6:	ff 2e       	mov	r15, r31
    2ba8:	f4 e3       	ldi	r31, 0x34	; 52
    2baa:	0f 2f       	mov	r16, r31
    2bac:	f3 e4       	ldi	r31, 0x43	; 67
    2bae:	1f 2f       	mov	r17, r31
    2bb0:	f0 2d       	mov	r31, r0
    2bb2:	0e 94 a0 08 	call	0x1140	; 0x1140 <_Z3mapddddd>
    2bb6:	0f 90       	pop	r0
    2bb8:	0f 90       	pop	r0
    2bba:	0f 90       	pop	r0
    2bbc:	0f 90       	pop	r0
        OCR4A=ICR4-vAl;
    2bbe:	c0 91 a6 00 	lds	r28, 0x00A6
    2bc2:	d0 91 a7 00 	lds	r29, 0x00A7
      case 3:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
        OCR3C=ICR3-vAl;
        break;
      case 6:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    2bc6:	0e 94 bb 79 	call	0xf376	; 0xf376 <__fixsfsi>
        OCR4A=ICR4-vAl;
    2bca:	c6 1b       	sub	r28, r22
    2bcc:	d7 0b       	sbc	r29, r23
    2bce:	d0 93 a9 00 	sts	0x00A9, r29
    2bd2:	c0 93 a8 00 	sts	0x00A8, r28
    2bd6:	99 c1       	rjmp	.+818    	; 0x2f0a <__stack+0xd0b>
        break;
      case 7:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    2bd8:	e6 e8       	ldi	r30, 0x86	; 134
    2bda:	f0 e0       	ldi	r31, 0x00	; 0
    2bdc:	c0 81       	ld	r28, Z
    2bde:	d1 81       	ldd	r29, Z+1	; 0x01
    2be0:	80 80       	ld	r8, Z
    2be2:	91 80       	ldd	r9, Z+1	; 0x01
    2be4:	00 d0       	rcall	.+0      	; 0x2be6 <__stack+0x9e7>
    2be6:	0f 92       	push	r0
    2be8:	4d b6       	in	r4, 0x3d	; 61
    2bea:	5e b6       	in	r5, 0x3e	; 62
    2bec:	08 94       	sec
    2bee:	41 1c       	adc	r4, r1
    2bf0:	51 1c       	adc	r5, r1
    2bf2:	88 27       	eor	r24, r24
    2bf4:	77 fd       	sbrc	r23, 7
    2bf6:	80 95       	com	r24
    2bf8:	98 2f       	mov	r25, r24
    2bfa:	0e 94 ee 79 	call	0xf3dc	; 0xf3dc <__floatsisf>
    2bfe:	7b 01       	movw	r14, r22
    2c00:	8c 01       	movw	r16, r24
    2c02:	ce 01       	movw	r24, r28
    2c04:	68 e2       	ldi	r22, 0x28	; 40
    2c06:	70 e0       	ldi	r23, 0x00	; 0
    2c08:	0e 94 05 7b 	call	0xf60a	; 0xf60a <__udivmodhi4>
    2c0c:	80 e0       	ldi	r24, 0x00	; 0
    2c0e:	90 e0       	ldi	r25, 0x00	; 0
    2c10:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    2c14:	5b 01       	movw	r10, r22
    2c16:	6c 01       	movw	r12, r24
    2c18:	96 94       	lsr	r9
    2c1a:	87 94       	ror	r8
    2c1c:	96 94       	lsr	r9
    2c1e:	87 94       	ror	r8
    2c20:	96 94       	lsr	r9
    2c22:	87 94       	ror	r8
    2c24:	b4 01       	movw	r22, r8
    2c26:	80 e0       	ldi	r24, 0x00	; 0
    2c28:	90 e0       	ldi	r25, 0x00	; 0
    2c2a:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    2c2e:	f2 01       	movw	r30, r4
    2c30:	60 83       	st	Z, r22
    2c32:	71 83       	std	Z+1, r23	; 0x01
    2c34:	82 83       	std	Z+2, r24	; 0x02
    2c36:	93 83       	std	Z+3, r25	; 0x03
    2c38:	c8 01       	movw	r24, r16
    2c3a:	b7 01       	movw	r22, r14
    2c3c:	20 e0       	ldi	r18, 0x00	; 0
    2c3e:	30 e0       	ldi	r19, 0x00	; 0
    2c40:	a9 01       	movw	r20, r18
    2c42:	0f 2e       	mov	r0, r31
    2c44:	f0 e0       	ldi	r31, 0x00	; 0
    2c46:	ef 2e       	mov	r14, r31
    2c48:	f0 e0       	ldi	r31, 0x00	; 0
    2c4a:	ff 2e       	mov	r15, r31
    2c4c:	f4 e3       	ldi	r31, 0x34	; 52
    2c4e:	0f 2f       	mov	r16, r31
    2c50:	f3 e4       	ldi	r31, 0x43	; 67
    2c52:	1f 2f       	mov	r17, r31
    2c54:	f0 2d       	mov	r31, r0
    2c56:	0e 94 a0 08 	call	0x1140	; 0x1140 <_Z3mapddddd>
    2c5a:	0f 90       	pop	r0
    2c5c:	0f 90       	pop	r0
    2c5e:	0f 90       	pop	r0
    2c60:	0f 90       	pop	r0
        OCR4B=ICR4-vAl;
    2c62:	c0 91 a6 00 	lds	r28, 0x00A6
    2c66:	d0 91 a7 00 	lds	r29, 0x00A7
      case 6:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
        OCR4A=ICR4-vAl;
        break;
      case 7:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    2c6a:	0e 94 bb 79 	call	0xf376	; 0xf376 <__fixsfsi>
        OCR4B=ICR4-vAl;
    2c6e:	c6 1b       	sub	r28, r22
    2c70:	d7 0b       	sbc	r29, r23
    2c72:	d0 93 ab 00 	sts	0x00AB, r29
    2c76:	c0 93 aa 00 	sts	0x00AA, r28
    2c7a:	47 c1       	rjmp	.+654    	; 0x2f0a <__stack+0xd0b>
        break; 
      case 8:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    2c7c:	e6 e8       	ldi	r30, 0x86	; 134
    2c7e:	f0 e0       	ldi	r31, 0x00	; 0
    2c80:	c0 81       	ld	r28, Z
    2c82:	d1 81       	ldd	r29, Z+1	; 0x01
    2c84:	80 80       	ld	r8, Z
    2c86:	91 80       	ldd	r9, Z+1	; 0x01
    2c88:	00 d0       	rcall	.+0      	; 0x2c8a <__stack+0xa8b>
    2c8a:	0f 92       	push	r0
    2c8c:	4d b6       	in	r4, 0x3d	; 61
    2c8e:	5e b6       	in	r5, 0x3e	; 62
    2c90:	08 94       	sec
    2c92:	41 1c       	adc	r4, r1
    2c94:	51 1c       	adc	r5, r1
    2c96:	88 27       	eor	r24, r24
    2c98:	77 fd       	sbrc	r23, 7
    2c9a:	80 95       	com	r24
    2c9c:	98 2f       	mov	r25, r24
    2c9e:	0e 94 ee 79 	call	0xf3dc	; 0xf3dc <__floatsisf>
    2ca2:	7b 01       	movw	r14, r22
    2ca4:	8c 01       	movw	r16, r24
    2ca6:	ce 01       	movw	r24, r28
    2ca8:	68 e2       	ldi	r22, 0x28	; 40
    2caa:	70 e0       	ldi	r23, 0x00	; 0
    2cac:	0e 94 05 7b 	call	0xf60a	; 0xf60a <__udivmodhi4>
    2cb0:	80 e0       	ldi	r24, 0x00	; 0
    2cb2:	90 e0       	ldi	r25, 0x00	; 0
    2cb4:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    2cb8:	5b 01       	movw	r10, r22
    2cba:	6c 01       	movw	r12, r24
    2cbc:	96 94       	lsr	r9
    2cbe:	87 94       	ror	r8
    2cc0:	96 94       	lsr	r9
    2cc2:	87 94       	ror	r8
    2cc4:	96 94       	lsr	r9
    2cc6:	87 94       	ror	r8
    2cc8:	b4 01       	movw	r22, r8
    2cca:	80 e0       	ldi	r24, 0x00	; 0
    2ccc:	90 e0       	ldi	r25, 0x00	; 0
    2cce:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    2cd2:	f2 01       	movw	r30, r4
    2cd4:	60 83       	st	Z, r22
    2cd6:	71 83       	std	Z+1, r23	; 0x01
    2cd8:	82 83       	std	Z+2, r24	; 0x02
    2cda:	93 83       	std	Z+3, r25	; 0x03
    2cdc:	c8 01       	movw	r24, r16
    2cde:	b7 01       	movw	r22, r14
    2ce0:	20 e0       	ldi	r18, 0x00	; 0
    2ce2:	30 e0       	ldi	r19, 0x00	; 0
    2ce4:	a9 01       	movw	r20, r18
    2ce6:	0f 2e       	mov	r0, r31
    2ce8:	f0 e0       	ldi	r31, 0x00	; 0
    2cea:	ef 2e       	mov	r14, r31
    2cec:	f0 e0       	ldi	r31, 0x00	; 0
    2cee:	ff 2e       	mov	r15, r31
    2cf0:	f4 e3       	ldi	r31, 0x34	; 52
    2cf2:	0f 2f       	mov	r16, r31
    2cf4:	f3 e4       	ldi	r31, 0x43	; 67
    2cf6:	1f 2f       	mov	r17, r31
    2cf8:	f0 2d       	mov	r31, r0
    2cfa:	0e 94 a0 08 	call	0x1140	; 0x1140 <_Z3mapddddd>
    2cfe:	0f 90       	pop	r0
    2d00:	0f 90       	pop	r0
    2d02:	0f 90       	pop	r0
    2d04:	0f 90       	pop	r0
        OCR4C=ICR4-vAl;
    2d06:	c0 91 a6 00 	lds	r28, 0x00A6
    2d0a:	d0 91 a7 00 	lds	r29, 0x00A7
      case 7:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
        OCR4B=ICR4-vAl;
        break; 
      case 8:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    2d0e:	0e 94 bb 79 	call	0xf376	; 0xf376 <__fixsfsi>
        OCR4C=ICR4-vAl;
    2d12:	c6 1b       	sub	r28, r22
    2d14:	d7 0b       	sbc	r29, r23
    2d16:	d0 93 ad 00 	sts	0x00AD, r29
    2d1a:	c0 93 ac 00 	sts	0x00AC, r28
    2d1e:	f5 c0       	rjmp	.+490    	; 0x2f0a <__stack+0xd0b>
        break;
      case 46:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    2d20:	e6 e8       	ldi	r30, 0x86	; 134
    2d22:	f0 e0       	ldi	r31, 0x00	; 0
    2d24:	c0 81       	ld	r28, Z
    2d26:	d1 81       	ldd	r29, Z+1	; 0x01
    2d28:	80 80       	ld	r8, Z
    2d2a:	91 80       	ldd	r9, Z+1	; 0x01
    2d2c:	00 d0       	rcall	.+0      	; 0x2d2e <__stack+0xb2f>
    2d2e:	0f 92       	push	r0
    2d30:	4d b6       	in	r4, 0x3d	; 61
    2d32:	5e b6       	in	r5, 0x3e	; 62
    2d34:	08 94       	sec
    2d36:	41 1c       	adc	r4, r1
    2d38:	51 1c       	adc	r5, r1
    2d3a:	88 27       	eor	r24, r24
    2d3c:	77 fd       	sbrc	r23, 7
    2d3e:	80 95       	com	r24
    2d40:	98 2f       	mov	r25, r24
    2d42:	0e 94 ee 79 	call	0xf3dc	; 0xf3dc <__floatsisf>
    2d46:	7b 01       	movw	r14, r22
    2d48:	8c 01       	movw	r16, r24
    2d4a:	ce 01       	movw	r24, r28
    2d4c:	68 e2       	ldi	r22, 0x28	; 40
    2d4e:	70 e0       	ldi	r23, 0x00	; 0
    2d50:	0e 94 05 7b 	call	0xf60a	; 0xf60a <__udivmodhi4>
    2d54:	80 e0       	ldi	r24, 0x00	; 0
    2d56:	90 e0       	ldi	r25, 0x00	; 0
    2d58:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    2d5c:	5b 01       	movw	r10, r22
    2d5e:	6c 01       	movw	r12, r24
    2d60:	96 94       	lsr	r9
    2d62:	87 94       	ror	r8
    2d64:	96 94       	lsr	r9
    2d66:	87 94       	ror	r8
    2d68:	96 94       	lsr	r9
    2d6a:	87 94       	ror	r8
    2d6c:	b4 01       	movw	r22, r8
    2d6e:	80 e0       	ldi	r24, 0x00	; 0
    2d70:	90 e0       	ldi	r25, 0x00	; 0
    2d72:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    2d76:	f2 01       	movw	r30, r4
    2d78:	60 83       	st	Z, r22
    2d7a:	71 83       	std	Z+1, r23	; 0x01
    2d7c:	82 83       	std	Z+2, r24	; 0x02
    2d7e:	93 83       	std	Z+3, r25	; 0x03
    2d80:	c8 01       	movw	r24, r16
    2d82:	b7 01       	movw	r22, r14
    2d84:	20 e0       	ldi	r18, 0x00	; 0
    2d86:	30 e0       	ldi	r19, 0x00	; 0
    2d88:	a9 01       	movw	r20, r18
    2d8a:	0f 2e       	mov	r0, r31
    2d8c:	f0 e0       	ldi	r31, 0x00	; 0
    2d8e:	ef 2e       	mov	r14, r31
    2d90:	f0 e0       	ldi	r31, 0x00	; 0
    2d92:	ff 2e       	mov	r15, r31
    2d94:	f4 e3       	ldi	r31, 0x34	; 52
    2d96:	0f 2f       	mov	r16, r31
    2d98:	f3 e4       	ldi	r31, 0x43	; 67
    2d9a:	1f 2f       	mov	r17, r31
    2d9c:	f0 2d       	mov	r31, r0
    2d9e:	0e 94 a0 08 	call	0x1140	; 0x1140 <_Z3mapddddd>
    2da2:	0f 90       	pop	r0
    2da4:	0f 90       	pop	r0
    2da6:	0f 90       	pop	r0
    2da8:	0f 90       	pop	r0
        OCR5A=ICR5-vAl;
    2daa:	c0 91 26 01 	lds	r28, 0x0126
    2dae:	d0 91 27 01 	lds	r29, 0x0127
      case 8:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
        OCR4C=ICR4-vAl;
        break;
      case 46:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    2db2:	0e 94 bb 79 	call	0xf376	; 0xf376 <__fixsfsi>
        OCR5A=ICR5-vAl;
    2db6:	c6 1b       	sub	r28, r22
    2db8:	d7 0b       	sbc	r29, r23
    2dba:	d0 93 29 01 	sts	0x0129, r29
    2dbe:	c0 93 28 01 	sts	0x0128, r28
    2dc2:	a3 c0       	rjmp	.+326    	; 0x2f0a <__stack+0xd0b>
        break;
      case 45:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    2dc4:	e6 e8       	ldi	r30, 0x86	; 134
    2dc6:	f0 e0       	ldi	r31, 0x00	; 0
    2dc8:	c0 81       	ld	r28, Z
    2dca:	d1 81       	ldd	r29, Z+1	; 0x01
    2dcc:	80 80       	ld	r8, Z
    2dce:	91 80       	ldd	r9, Z+1	; 0x01
    2dd0:	00 d0       	rcall	.+0      	; 0x2dd2 <__stack+0xbd3>
    2dd2:	0f 92       	push	r0
    2dd4:	4d b6       	in	r4, 0x3d	; 61
    2dd6:	5e b6       	in	r5, 0x3e	; 62
    2dd8:	08 94       	sec
    2dda:	41 1c       	adc	r4, r1
    2ddc:	51 1c       	adc	r5, r1
    2dde:	88 27       	eor	r24, r24
    2de0:	77 fd       	sbrc	r23, 7
    2de2:	80 95       	com	r24
    2de4:	98 2f       	mov	r25, r24
    2de6:	0e 94 ee 79 	call	0xf3dc	; 0xf3dc <__floatsisf>
    2dea:	7b 01       	movw	r14, r22
    2dec:	8c 01       	movw	r16, r24
    2dee:	ce 01       	movw	r24, r28
    2df0:	68 e2       	ldi	r22, 0x28	; 40
    2df2:	70 e0       	ldi	r23, 0x00	; 0
    2df4:	0e 94 05 7b 	call	0xf60a	; 0xf60a <__udivmodhi4>
    2df8:	80 e0       	ldi	r24, 0x00	; 0
    2dfa:	90 e0       	ldi	r25, 0x00	; 0
    2dfc:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    2e00:	5b 01       	movw	r10, r22
    2e02:	6c 01       	movw	r12, r24
    2e04:	96 94       	lsr	r9
    2e06:	87 94       	ror	r8
    2e08:	96 94       	lsr	r9
    2e0a:	87 94       	ror	r8
    2e0c:	96 94       	lsr	r9
    2e0e:	87 94       	ror	r8
    2e10:	b4 01       	movw	r22, r8
    2e12:	80 e0       	ldi	r24, 0x00	; 0
    2e14:	90 e0       	ldi	r25, 0x00	; 0
    2e16:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    2e1a:	f2 01       	movw	r30, r4
    2e1c:	60 83       	st	Z, r22
    2e1e:	71 83       	std	Z+1, r23	; 0x01
    2e20:	82 83       	std	Z+2, r24	; 0x02
    2e22:	93 83       	std	Z+3, r25	; 0x03
    2e24:	c8 01       	movw	r24, r16
    2e26:	b7 01       	movw	r22, r14
    2e28:	20 e0       	ldi	r18, 0x00	; 0
    2e2a:	30 e0       	ldi	r19, 0x00	; 0
    2e2c:	a9 01       	movw	r20, r18
    2e2e:	0f 2e       	mov	r0, r31
    2e30:	f0 e0       	ldi	r31, 0x00	; 0
    2e32:	ef 2e       	mov	r14, r31
    2e34:	f0 e0       	ldi	r31, 0x00	; 0
    2e36:	ff 2e       	mov	r15, r31
    2e38:	f4 e3       	ldi	r31, 0x34	; 52
    2e3a:	0f 2f       	mov	r16, r31
    2e3c:	f3 e4       	ldi	r31, 0x43	; 67
    2e3e:	1f 2f       	mov	r17, r31
    2e40:	f0 2d       	mov	r31, r0
    2e42:	0e 94 a0 08 	call	0x1140	; 0x1140 <_Z3mapddddd>
    2e46:	0f 90       	pop	r0
    2e48:	0f 90       	pop	r0
    2e4a:	0f 90       	pop	r0
    2e4c:	0f 90       	pop	r0
        OCR5B=ICR5-vAl;
    2e4e:	c0 91 26 01 	lds	r28, 0x0126
    2e52:	d0 91 27 01 	lds	r29, 0x0127
      case 46:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
        OCR5A=ICR5-vAl;
        break;
      case 45:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    2e56:	0e 94 bb 79 	call	0xf376	; 0xf376 <__fixsfsi>
        OCR5B=ICR5-vAl;
    2e5a:	c6 1b       	sub	r28, r22
    2e5c:	d7 0b       	sbc	r29, r23
    2e5e:	d0 93 2b 01 	sts	0x012B, r29
    2e62:	c0 93 2a 01 	sts	0x012A, r28
    2e66:	51 c0       	rjmp	.+162    	; 0x2f0a <__stack+0xd0b>
        break;
      case 44:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    2e68:	e6 e8       	ldi	r30, 0x86	; 134
    2e6a:	f0 e0       	ldi	r31, 0x00	; 0
    2e6c:	c0 81       	ld	r28, Z
    2e6e:	d1 81       	ldd	r29, Z+1	; 0x01
    2e70:	80 80       	ld	r8, Z
    2e72:	91 80       	ldd	r9, Z+1	; 0x01
    2e74:	00 d0       	rcall	.+0      	; 0x2e76 <__stack+0xc77>
    2e76:	0f 92       	push	r0
    2e78:	4d b6       	in	r4, 0x3d	; 61
    2e7a:	5e b6       	in	r5, 0x3e	; 62
    2e7c:	08 94       	sec
    2e7e:	41 1c       	adc	r4, r1
    2e80:	51 1c       	adc	r5, r1
    2e82:	88 27       	eor	r24, r24
    2e84:	77 fd       	sbrc	r23, 7
    2e86:	80 95       	com	r24
    2e88:	98 2f       	mov	r25, r24
    2e8a:	0e 94 ee 79 	call	0xf3dc	; 0xf3dc <__floatsisf>
    2e8e:	7b 01       	movw	r14, r22
    2e90:	8c 01       	movw	r16, r24
    2e92:	ce 01       	movw	r24, r28
    2e94:	68 e2       	ldi	r22, 0x28	; 40
    2e96:	70 e0       	ldi	r23, 0x00	; 0
    2e98:	0e 94 05 7b 	call	0xf60a	; 0xf60a <__udivmodhi4>
    2e9c:	80 e0       	ldi	r24, 0x00	; 0
    2e9e:	90 e0       	ldi	r25, 0x00	; 0
    2ea0:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    2ea4:	5b 01       	movw	r10, r22
    2ea6:	6c 01       	movw	r12, r24
    2ea8:	96 94       	lsr	r9
    2eaa:	87 94       	ror	r8
    2eac:	96 94       	lsr	r9
    2eae:	87 94       	ror	r8
    2eb0:	96 94       	lsr	r9
    2eb2:	87 94       	ror	r8
    2eb4:	b4 01       	movw	r22, r8
    2eb6:	80 e0       	ldi	r24, 0x00	; 0
    2eb8:	90 e0       	ldi	r25, 0x00	; 0
    2eba:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    2ebe:	f2 01       	movw	r30, r4
    2ec0:	60 83       	st	Z, r22
    2ec2:	71 83       	std	Z+1, r23	; 0x01
    2ec4:	82 83       	std	Z+2, r24	; 0x02
    2ec6:	93 83       	std	Z+3, r25	; 0x03
    2ec8:	c8 01       	movw	r24, r16
    2eca:	b7 01       	movw	r22, r14
    2ecc:	20 e0       	ldi	r18, 0x00	; 0
    2ece:	30 e0       	ldi	r19, 0x00	; 0
    2ed0:	a9 01       	movw	r20, r18
    2ed2:	0f 2e       	mov	r0, r31
    2ed4:	f0 e0       	ldi	r31, 0x00	; 0
    2ed6:	ef 2e       	mov	r14, r31
    2ed8:	f0 e0       	ldi	r31, 0x00	; 0
    2eda:	ff 2e       	mov	r15, r31
    2edc:	f4 e3       	ldi	r31, 0x34	; 52
    2ede:	0f 2f       	mov	r16, r31
    2ee0:	f3 e4       	ldi	r31, 0x43	; 67
    2ee2:	1f 2f       	mov	r17, r31
    2ee4:	f0 2d       	mov	r31, r0
    2ee6:	0e 94 a0 08 	call	0x1140	; 0x1140 <_Z3mapddddd>
    2eea:	0f 90       	pop	r0
    2eec:	0f 90       	pop	r0
    2eee:	0f 90       	pop	r0
    2ef0:	0f 90       	pop	r0
        OCR5C=ICR5-vAl;
    2ef2:	c0 91 26 01 	lds	r28, 0x0126
    2ef6:	d0 91 27 01 	lds	r29, 0x0127
      case 45:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
        OCR5B=ICR5-vAl;
        break;
      case 44:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    2efa:	0e 94 bb 79 	call	0xf376	; 0xf376 <__fixsfsi>
        OCR5C=ICR5-vAl;
    2efe:	c6 1b       	sub	r28, r22
    2f00:	d7 0b       	sbc	r29, r23
    2f02:	d0 93 2d 01 	sts	0x012D, r29
    2f06:	c0 93 2c 01 	sts	0x012C, r28
		s.write(w);
    2f0a:	60 91 d0 02 	lds	r22, 0x02D0
    2f0e:	70 91 d1 02 	lds	r23, 0x02D1
     }
  }

  void write(int vAl)           //PIN=servo pin no. on mega,vAl=angle F_CPU for the servo at pin
  {
    switch(pIn)
    2f12:	80 91 d7 02 	lds	r24, 0x02D7
    2f16:	88 30       	cpi	r24, 0x08	; 8
    2f18:	09 f4       	brne	.+2      	; 0x2f1c <__stack+0xd1d>
    2f1a:	63 c2       	rjmp	.+1222   	; 0x33e2 <__stack+0x11e3>
    2f1c:	89 30       	cpi	r24, 0x09	; 9
    2f1e:	98 f4       	brcc	.+38     	; 0x2f46 <__stack+0xd47>
    2f20:	85 30       	cpi	r24, 0x05	; 5
    2f22:	09 f4       	brne	.+2      	; 0x2f26 <__stack+0xd27>
    2f24:	c4 c0       	rjmp	.+392    	; 0x30ae <__stack+0xeaf>
    2f26:	86 30       	cpi	r24, 0x06	; 6
    2f28:	38 f4       	brcc	.+14     	; 0x2f38 <__stack+0xd39>
    2f2a:	82 30       	cpi	r24, 0x02	; 2
    2f2c:	09 f4       	brne	.+2      	; 0x2f30 <__stack+0xd31>
    2f2e:	11 c1       	rjmp	.+546    	; 0x3152 <__stack+0xf53>
    2f30:	83 30       	cpi	r24, 0x03	; 3
    2f32:	09 f0       	breq	.+2      	; 0x2f36 <__stack+0xd37>
    2f34:	9d c3       	rjmp	.+1850   	; 0x3670 <__stack+0x1471>
    2f36:	5f c1       	rjmp	.+702    	; 0x31f6 <__stack+0xff7>
    2f38:	86 30       	cpi	r24, 0x06	; 6
    2f3a:	09 f4       	brne	.+2      	; 0x2f3e <__stack+0xd3f>
    2f3c:	ae c1       	rjmp	.+860    	; 0x329a <__stack+0x109b>
    2f3e:	87 30       	cpi	r24, 0x07	; 7
    2f40:	09 f0       	breq	.+2      	; 0x2f44 <__stack+0xd45>
    2f42:	96 c3       	rjmp	.+1836   	; 0x3670 <__stack+0x1471>
    2f44:	fc c1       	rjmp	.+1016   	; 0x333e <__stack+0x113f>
    2f46:	8c 32       	cpi	r24, 0x2C	; 44
    2f48:	09 f4       	brne	.+2      	; 0x2f4c <__stack+0xd4d>
    2f4a:	41 c3       	rjmp	.+1666   	; 0x35ce <__stack+0x13cf>
    2f4c:	8d 32       	cpi	r24, 0x2D	; 45
    2f4e:	30 f4       	brcc	.+12     	; 0x2f5c <__stack+0xd5d>
    2f50:	8b 30       	cpi	r24, 0x0B	; 11
    2f52:	59 f0       	breq	.+22     	; 0x2f6a <__stack+0xd6b>
    2f54:	8c 30       	cpi	r24, 0x0C	; 12
    2f56:	09 f0       	breq	.+2      	; 0x2f5a <__stack+0xd5b>
    2f58:	8b c3       	rjmp	.+1814   	; 0x3670 <__stack+0x1471>
    2f5a:	58 c0       	rjmp	.+176    	; 0x300c <__stack+0xe0d>
    2f5c:	8d 32       	cpi	r24, 0x2D	; 45
    2f5e:	09 f4       	brne	.+2      	; 0x2f62 <__stack+0xd63>
    2f60:	e4 c2       	rjmp	.+1480   	; 0x352a <__stack+0x132b>
    2f62:	8e 32       	cpi	r24, 0x2E	; 46
    2f64:	09 f0       	breq	.+2      	; 0x2f68 <__stack+0xd69>
    2f66:	84 c3       	rjmp	.+1800   	; 0x3670 <__stack+0x1471>
    2f68:	8e c2       	rjmp	.+1308   	; 0x3486 <__stack+0x1287>
    {
     case 11:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    2f6a:	c6 e8       	ldi	r28, 0x86	; 134
    2f6c:	d0 e0       	ldi	r29, 0x00	; 0
    2f6e:	08 81       	ld	r16, Y
    2f70:	19 81       	ldd	r17, Y+1	; 0x01
    2f72:	e8 80       	ld	r14, Y
    2f74:	f9 80       	ldd	r15, Y+1	; 0x01
    2f76:	00 d0       	rcall	.+0      	; 0x2f78 <__stack+0xd79>
    2f78:	0f 92       	push	r0
    2f7a:	8d b6       	in	r8, 0x3d	; 61
    2f7c:	9e b6       	in	r9, 0x3e	; 62
    2f7e:	08 94       	sec
    2f80:	81 1c       	adc	r8, r1
    2f82:	91 1c       	adc	r9, r1
    2f84:	88 27       	eor	r24, r24
    2f86:	77 fd       	sbrc	r23, 7
    2f88:	80 95       	com	r24
    2f8a:	98 2f       	mov	r25, r24
    2f8c:	0e 94 ee 79 	call	0xf3dc	; 0xf3dc <__floatsisf>
    2f90:	2b 01       	movw	r4, r22
    2f92:	3c 01       	movw	r6, r24
    2f94:	c8 01       	movw	r24, r16
    2f96:	68 e2       	ldi	r22, 0x28	; 40
    2f98:	70 e0       	ldi	r23, 0x00	; 0
    2f9a:	0e 94 05 7b 	call	0xf60a	; 0xf60a <__udivmodhi4>
    2f9e:	80 e0       	ldi	r24, 0x00	; 0
    2fa0:	90 e0       	ldi	r25, 0x00	; 0
    2fa2:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    2fa6:	5b 01       	movw	r10, r22
    2fa8:	6c 01       	movw	r12, r24
    2faa:	f6 94       	lsr	r15
    2fac:	e7 94       	ror	r14
    2fae:	f6 94       	lsr	r15
    2fb0:	e7 94       	ror	r14
    2fb2:	f6 94       	lsr	r15
    2fb4:	e7 94       	ror	r14
    2fb6:	b7 01       	movw	r22, r14
    2fb8:	80 e0       	ldi	r24, 0x00	; 0
    2fba:	90 e0       	ldi	r25, 0x00	; 0
    2fbc:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    2fc0:	f4 01       	movw	r30, r8
    2fc2:	60 83       	st	Z, r22
    2fc4:	71 83       	std	Z+1, r23	; 0x01
    2fc6:	82 83       	std	Z+2, r24	; 0x02
    2fc8:	93 83       	std	Z+3, r25	; 0x03
    2fca:	c3 01       	movw	r24, r6
    2fcc:	b2 01       	movw	r22, r4
    2fce:	20 e0       	ldi	r18, 0x00	; 0
    2fd0:	30 e0       	ldi	r19, 0x00	; 0
    2fd2:	a9 01       	movw	r20, r18
    2fd4:	0f 2e       	mov	r0, r31
    2fd6:	f0 e0       	ldi	r31, 0x00	; 0
    2fd8:	ef 2e       	mov	r14, r31
    2fda:	f0 e0       	ldi	r31, 0x00	; 0
    2fdc:	ff 2e       	mov	r15, r31
    2fde:	f4 e3       	ldi	r31, 0x34	; 52
    2fe0:	0f 2f       	mov	r16, r31
    2fe2:	f3 e4       	ldi	r31, 0x43	; 67
    2fe4:	1f 2f       	mov	r17, r31
    2fe6:	f0 2d       	mov	r31, r0
    2fe8:	0e 94 a0 08 	call	0x1140	; 0x1140 <_Z3mapddddd>
    2fec:	0f 90       	pop	r0
    2fee:	0f 90       	pop	r0
    2ff0:	0f 90       	pop	r0
    2ff2:	0f 90       	pop	r0
        OCR1A=ICR1-vAl;
    2ff4:	09 90       	ld	r0, Y+
    2ff6:	d8 81       	ld	r29, Y
    2ff8:	c0 2d       	mov	r28, r0
  void write(int vAl)           //PIN=servo pin no. on mega,vAl=angle F_CPU for the servo at pin
  {
    switch(pIn)
    {
     case 11:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    2ffa:	0e 94 bb 79 	call	0xf376	; 0xf376 <__fixsfsi>
        OCR1A=ICR1-vAl;
    2ffe:	c6 1b       	sub	r28, r22
    3000:	d7 0b       	sbc	r29, r23
    3002:	d0 93 89 00 	sts	0x0089, r29
    3006:	c0 93 88 00 	sts	0x0088, r28
    300a:	32 c3       	rjmp	.+1636   	; 0x3670 <__stack+0x1471>
        break;
      case 12:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    300c:	c6 e8       	ldi	r28, 0x86	; 134
    300e:	d0 e0       	ldi	r29, 0x00	; 0
    3010:	08 81       	ld	r16, Y
    3012:	19 81       	ldd	r17, Y+1	; 0x01
    3014:	e8 80       	ld	r14, Y
    3016:	f9 80       	ldd	r15, Y+1	; 0x01
    3018:	00 d0       	rcall	.+0      	; 0x301a <__stack+0xe1b>
    301a:	0f 92       	push	r0
    301c:	8d b6       	in	r8, 0x3d	; 61
    301e:	9e b6       	in	r9, 0x3e	; 62
    3020:	08 94       	sec
    3022:	81 1c       	adc	r8, r1
    3024:	91 1c       	adc	r9, r1
    3026:	88 27       	eor	r24, r24
    3028:	77 fd       	sbrc	r23, 7
    302a:	80 95       	com	r24
    302c:	98 2f       	mov	r25, r24
    302e:	0e 94 ee 79 	call	0xf3dc	; 0xf3dc <__floatsisf>
    3032:	2b 01       	movw	r4, r22
    3034:	3c 01       	movw	r6, r24
    3036:	c8 01       	movw	r24, r16
    3038:	68 e2       	ldi	r22, 0x28	; 40
    303a:	70 e0       	ldi	r23, 0x00	; 0
    303c:	0e 94 05 7b 	call	0xf60a	; 0xf60a <__udivmodhi4>
    3040:	80 e0       	ldi	r24, 0x00	; 0
    3042:	90 e0       	ldi	r25, 0x00	; 0
    3044:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    3048:	5b 01       	movw	r10, r22
    304a:	6c 01       	movw	r12, r24
    304c:	f6 94       	lsr	r15
    304e:	e7 94       	ror	r14
    3050:	f6 94       	lsr	r15
    3052:	e7 94       	ror	r14
    3054:	f6 94       	lsr	r15
    3056:	e7 94       	ror	r14
    3058:	b7 01       	movw	r22, r14
    305a:	80 e0       	ldi	r24, 0x00	; 0
    305c:	90 e0       	ldi	r25, 0x00	; 0
    305e:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    3062:	f4 01       	movw	r30, r8
    3064:	60 83       	st	Z, r22
    3066:	71 83       	std	Z+1, r23	; 0x01
    3068:	82 83       	std	Z+2, r24	; 0x02
    306a:	93 83       	std	Z+3, r25	; 0x03
    306c:	c3 01       	movw	r24, r6
    306e:	b2 01       	movw	r22, r4
    3070:	20 e0       	ldi	r18, 0x00	; 0
    3072:	30 e0       	ldi	r19, 0x00	; 0
    3074:	a9 01       	movw	r20, r18
    3076:	0f 2e       	mov	r0, r31
    3078:	f0 e0       	ldi	r31, 0x00	; 0
    307a:	ef 2e       	mov	r14, r31
    307c:	f0 e0       	ldi	r31, 0x00	; 0
    307e:	ff 2e       	mov	r15, r31
    3080:	f4 e3       	ldi	r31, 0x34	; 52
    3082:	0f 2f       	mov	r16, r31
    3084:	f3 e4       	ldi	r31, 0x43	; 67
    3086:	1f 2f       	mov	r17, r31
    3088:	f0 2d       	mov	r31, r0
    308a:	0e 94 a0 08 	call	0x1140	; 0x1140 <_Z3mapddddd>
    308e:	0f 90       	pop	r0
    3090:	0f 90       	pop	r0
    3092:	0f 90       	pop	r0
    3094:	0f 90       	pop	r0
        OCR1B=ICR1-vAl;
    3096:	09 90       	ld	r0, Y+
    3098:	d8 81       	ld	r29, Y
    309a:	c0 2d       	mov	r28, r0
     case 11:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
        OCR1A=ICR1-vAl;
        break;
      case 12:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    309c:	0e 94 bb 79 	call	0xf376	; 0xf376 <__fixsfsi>
        OCR1B=ICR1-vAl;
    30a0:	c6 1b       	sub	r28, r22
    30a2:	d7 0b       	sbc	r29, r23
    30a4:	d0 93 8b 00 	sts	0x008B, r29
    30a8:	c0 93 8a 00 	sts	0x008A, r28
    30ac:	e1 c2       	rjmp	.+1474   	; 0x3670 <__stack+0x1471>
        break;
      case 5:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    30ae:	e6 e8       	ldi	r30, 0x86	; 134
    30b0:	f0 e0       	ldi	r31, 0x00	; 0
    30b2:	c0 81       	ld	r28, Z
    30b4:	d1 81       	ldd	r29, Z+1	; 0x01
    30b6:	80 80       	ld	r8, Z
    30b8:	91 80       	ldd	r9, Z+1	; 0x01
    30ba:	00 d0       	rcall	.+0      	; 0x30bc <__stack+0xebd>
    30bc:	0f 92       	push	r0
    30be:	4d b6       	in	r4, 0x3d	; 61
    30c0:	5e b6       	in	r5, 0x3e	; 62
    30c2:	08 94       	sec
    30c4:	41 1c       	adc	r4, r1
    30c6:	51 1c       	adc	r5, r1
    30c8:	88 27       	eor	r24, r24
    30ca:	77 fd       	sbrc	r23, 7
    30cc:	80 95       	com	r24
    30ce:	98 2f       	mov	r25, r24
    30d0:	0e 94 ee 79 	call	0xf3dc	; 0xf3dc <__floatsisf>
    30d4:	7b 01       	movw	r14, r22
    30d6:	8c 01       	movw	r16, r24
    30d8:	ce 01       	movw	r24, r28
    30da:	68 e2       	ldi	r22, 0x28	; 40
    30dc:	70 e0       	ldi	r23, 0x00	; 0
    30de:	0e 94 05 7b 	call	0xf60a	; 0xf60a <__udivmodhi4>
    30e2:	80 e0       	ldi	r24, 0x00	; 0
    30e4:	90 e0       	ldi	r25, 0x00	; 0
    30e6:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    30ea:	5b 01       	movw	r10, r22
    30ec:	6c 01       	movw	r12, r24
    30ee:	96 94       	lsr	r9
    30f0:	87 94       	ror	r8
    30f2:	96 94       	lsr	r9
    30f4:	87 94       	ror	r8
    30f6:	96 94       	lsr	r9
    30f8:	87 94       	ror	r8
    30fa:	b4 01       	movw	r22, r8
    30fc:	80 e0       	ldi	r24, 0x00	; 0
    30fe:	90 e0       	ldi	r25, 0x00	; 0
    3100:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    3104:	f2 01       	movw	r30, r4
    3106:	60 83       	st	Z, r22
    3108:	71 83       	std	Z+1, r23	; 0x01
    310a:	82 83       	std	Z+2, r24	; 0x02
    310c:	93 83       	std	Z+3, r25	; 0x03
    310e:	c8 01       	movw	r24, r16
    3110:	b7 01       	movw	r22, r14
    3112:	20 e0       	ldi	r18, 0x00	; 0
    3114:	30 e0       	ldi	r19, 0x00	; 0
    3116:	a9 01       	movw	r20, r18
    3118:	0f 2e       	mov	r0, r31
    311a:	f0 e0       	ldi	r31, 0x00	; 0
    311c:	ef 2e       	mov	r14, r31
    311e:	f0 e0       	ldi	r31, 0x00	; 0
    3120:	ff 2e       	mov	r15, r31
    3122:	f4 e3       	ldi	r31, 0x34	; 52
    3124:	0f 2f       	mov	r16, r31
    3126:	f3 e4       	ldi	r31, 0x43	; 67
    3128:	1f 2f       	mov	r17, r31
    312a:	f0 2d       	mov	r31, r0
    312c:	0e 94 a0 08 	call	0x1140	; 0x1140 <_Z3mapddddd>
    3130:	0f 90       	pop	r0
    3132:	0f 90       	pop	r0
    3134:	0f 90       	pop	r0
    3136:	0f 90       	pop	r0
        OCR3A=ICR3-vAl;
    3138:	c0 91 96 00 	lds	r28, 0x0096
    313c:	d0 91 97 00 	lds	r29, 0x0097
      case 12:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
        OCR1B=ICR1-vAl;
        break;
      case 5:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    3140:	0e 94 bb 79 	call	0xf376	; 0xf376 <__fixsfsi>
        OCR3A=ICR3-vAl;
    3144:	c6 1b       	sub	r28, r22
    3146:	d7 0b       	sbc	r29, r23
    3148:	d0 93 99 00 	sts	0x0099, r29
    314c:	c0 93 98 00 	sts	0x0098, r28
    3150:	8f c2       	rjmp	.+1310   	; 0x3670 <__stack+0x1471>
        break;
      case 2:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    3152:	e6 e8       	ldi	r30, 0x86	; 134
    3154:	f0 e0       	ldi	r31, 0x00	; 0
    3156:	c0 81       	ld	r28, Z
    3158:	d1 81       	ldd	r29, Z+1	; 0x01
    315a:	80 80       	ld	r8, Z
    315c:	91 80       	ldd	r9, Z+1	; 0x01
    315e:	00 d0       	rcall	.+0      	; 0x3160 <__stack+0xf61>
    3160:	0f 92       	push	r0
    3162:	4d b6       	in	r4, 0x3d	; 61
    3164:	5e b6       	in	r5, 0x3e	; 62
    3166:	08 94       	sec
    3168:	41 1c       	adc	r4, r1
    316a:	51 1c       	adc	r5, r1
    316c:	88 27       	eor	r24, r24
    316e:	77 fd       	sbrc	r23, 7
    3170:	80 95       	com	r24
    3172:	98 2f       	mov	r25, r24
    3174:	0e 94 ee 79 	call	0xf3dc	; 0xf3dc <__floatsisf>
    3178:	7b 01       	movw	r14, r22
    317a:	8c 01       	movw	r16, r24
    317c:	ce 01       	movw	r24, r28
    317e:	68 e2       	ldi	r22, 0x28	; 40
    3180:	70 e0       	ldi	r23, 0x00	; 0
    3182:	0e 94 05 7b 	call	0xf60a	; 0xf60a <__udivmodhi4>
    3186:	80 e0       	ldi	r24, 0x00	; 0
    3188:	90 e0       	ldi	r25, 0x00	; 0
    318a:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    318e:	5b 01       	movw	r10, r22
    3190:	6c 01       	movw	r12, r24
    3192:	96 94       	lsr	r9
    3194:	87 94       	ror	r8
    3196:	96 94       	lsr	r9
    3198:	87 94       	ror	r8
    319a:	96 94       	lsr	r9
    319c:	87 94       	ror	r8
    319e:	b4 01       	movw	r22, r8
    31a0:	80 e0       	ldi	r24, 0x00	; 0
    31a2:	90 e0       	ldi	r25, 0x00	; 0
    31a4:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    31a8:	f2 01       	movw	r30, r4
    31aa:	60 83       	st	Z, r22
    31ac:	71 83       	std	Z+1, r23	; 0x01
    31ae:	82 83       	std	Z+2, r24	; 0x02
    31b0:	93 83       	std	Z+3, r25	; 0x03
    31b2:	c8 01       	movw	r24, r16
    31b4:	b7 01       	movw	r22, r14
    31b6:	20 e0       	ldi	r18, 0x00	; 0
    31b8:	30 e0       	ldi	r19, 0x00	; 0
    31ba:	a9 01       	movw	r20, r18
    31bc:	0f 2e       	mov	r0, r31
    31be:	f0 e0       	ldi	r31, 0x00	; 0
    31c0:	ef 2e       	mov	r14, r31
    31c2:	f0 e0       	ldi	r31, 0x00	; 0
    31c4:	ff 2e       	mov	r15, r31
    31c6:	f4 e3       	ldi	r31, 0x34	; 52
    31c8:	0f 2f       	mov	r16, r31
    31ca:	f3 e4       	ldi	r31, 0x43	; 67
    31cc:	1f 2f       	mov	r17, r31
    31ce:	f0 2d       	mov	r31, r0
    31d0:	0e 94 a0 08 	call	0x1140	; 0x1140 <_Z3mapddddd>
    31d4:	0f 90       	pop	r0
    31d6:	0f 90       	pop	r0
    31d8:	0f 90       	pop	r0
    31da:	0f 90       	pop	r0
        OCR3B=ICR3-vAl;
    31dc:	c0 91 96 00 	lds	r28, 0x0096
    31e0:	d0 91 97 00 	lds	r29, 0x0097
      case 5:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
        OCR3A=ICR3-vAl;
        break;
      case 2:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    31e4:	0e 94 bb 79 	call	0xf376	; 0xf376 <__fixsfsi>
        OCR3B=ICR3-vAl;
    31e8:	c6 1b       	sub	r28, r22
    31ea:	d7 0b       	sbc	r29, r23
    31ec:	d0 93 9b 00 	sts	0x009B, r29
    31f0:	c0 93 9a 00 	sts	0x009A, r28
    31f4:	3d c2       	rjmp	.+1146   	; 0x3670 <__stack+0x1471>
        break;
      case 3:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    31f6:	e6 e8       	ldi	r30, 0x86	; 134
    31f8:	f0 e0       	ldi	r31, 0x00	; 0
    31fa:	c0 81       	ld	r28, Z
    31fc:	d1 81       	ldd	r29, Z+1	; 0x01
    31fe:	80 80       	ld	r8, Z
    3200:	91 80       	ldd	r9, Z+1	; 0x01
    3202:	00 d0       	rcall	.+0      	; 0x3204 <__stack+0x1005>
    3204:	0f 92       	push	r0
    3206:	4d b6       	in	r4, 0x3d	; 61
    3208:	5e b6       	in	r5, 0x3e	; 62
    320a:	08 94       	sec
    320c:	41 1c       	adc	r4, r1
    320e:	51 1c       	adc	r5, r1
    3210:	88 27       	eor	r24, r24
    3212:	77 fd       	sbrc	r23, 7
    3214:	80 95       	com	r24
    3216:	98 2f       	mov	r25, r24
    3218:	0e 94 ee 79 	call	0xf3dc	; 0xf3dc <__floatsisf>
    321c:	7b 01       	movw	r14, r22
    321e:	8c 01       	movw	r16, r24
    3220:	ce 01       	movw	r24, r28
    3222:	68 e2       	ldi	r22, 0x28	; 40
    3224:	70 e0       	ldi	r23, 0x00	; 0
    3226:	0e 94 05 7b 	call	0xf60a	; 0xf60a <__udivmodhi4>
    322a:	80 e0       	ldi	r24, 0x00	; 0
    322c:	90 e0       	ldi	r25, 0x00	; 0
    322e:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    3232:	5b 01       	movw	r10, r22
    3234:	6c 01       	movw	r12, r24
    3236:	96 94       	lsr	r9
    3238:	87 94       	ror	r8
    323a:	96 94       	lsr	r9
    323c:	87 94       	ror	r8
    323e:	96 94       	lsr	r9
    3240:	87 94       	ror	r8
    3242:	b4 01       	movw	r22, r8
    3244:	80 e0       	ldi	r24, 0x00	; 0
    3246:	90 e0       	ldi	r25, 0x00	; 0
    3248:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    324c:	f2 01       	movw	r30, r4
    324e:	60 83       	st	Z, r22
    3250:	71 83       	std	Z+1, r23	; 0x01
    3252:	82 83       	std	Z+2, r24	; 0x02
    3254:	93 83       	std	Z+3, r25	; 0x03
    3256:	c8 01       	movw	r24, r16
    3258:	b7 01       	movw	r22, r14
    325a:	20 e0       	ldi	r18, 0x00	; 0
    325c:	30 e0       	ldi	r19, 0x00	; 0
    325e:	a9 01       	movw	r20, r18
    3260:	0f 2e       	mov	r0, r31
    3262:	f0 e0       	ldi	r31, 0x00	; 0
    3264:	ef 2e       	mov	r14, r31
    3266:	f0 e0       	ldi	r31, 0x00	; 0
    3268:	ff 2e       	mov	r15, r31
    326a:	f4 e3       	ldi	r31, 0x34	; 52
    326c:	0f 2f       	mov	r16, r31
    326e:	f3 e4       	ldi	r31, 0x43	; 67
    3270:	1f 2f       	mov	r17, r31
    3272:	f0 2d       	mov	r31, r0
    3274:	0e 94 a0 08 	call	0x1140	; 0x1140 <_Z3mapddddd>
    3278:	0f 90       	pop	r0
    327a:	0f 90       	pop	r0
    327c:	0f 90       	pop	r0
    327e:	0f 90       	pop	r0
        OCR3C=ICR3-vAl;
    3280:	c0 91 96 00 	lds	r28, 0x0096
    3284:	d0 91 97 00 	lds	r29, 0x0097
      case 2:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
        OCR3B=ICR3-vAl;
        break;
      case 3:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    3288:	0e 94 bb 79 	call	0xf376	; 0xf376 <__fixsfsi>
        OCR3C=ICR3-vAl;
    328c:	c6 1b       	sub	r28, r22
    328e:	d7 0b       	sbc	r29, r23
    3290:	d0 93 9d 00 	sts	0x009D, r29
    3294:	c0 93 9c 00 	sts	0x009C, r28
    3298:	eb c1       	rjmp	.+982    	; 0x3670 <__stack+0x1471>
        break;
      case 6:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    329a:	e6 e8       	ldi	r30, 0x86	; 134
    329c:	f0 e0       	ldi	r31, 0x00	; 0
    329e:	c0 81       	ld	r28, Z
    32a0:	d1 81       	ldd	r29, Z+1	; 0x01
    32a2:	80 80       	ld	r8, Z
    32a4:	91 80       	ldd	r9, Z+1	; 0x01
    32a6:	00 d0       	rcall	.+0      	; 0x32a8 <__stack+0x10a9>
    32a8:	0f 92       	push	r0
    32aa:	4d b6       	in	r4, 0x3d	; 61
    32ac:	5e b6       	in	r5, 0x3e	; 62
    32ae:	08 94       	sec
    32b0:	41 1c       	adc	r4, r1
    32b2:	51 1c       	adc	r5, r1
    32b4:	88 27       	eor	r24, r24
    32b6:	77 fd       	sbrc	r23, 7
    32b8:	80 95       	com	r24
    32ba:	98 2f       	mov	r25, r24
    32bc:	0e 94 ee 79 	call	0xf3dc	; 0xf3dc <__floatsisf>
    32c0:	7b 01       	movw	r14, r22
    32c2:	8c 01       	movw	r16, r24
    32c4:	ce 01       	movw	r24, r28
    32c6:	68 e2       	ldi	r22, 0x28	; 40
    32c8:	70 e0       	ldi	r23, 0x00	; 0
    32ca:	0e 94 05 7b 	call	0xf60a	; 0xf60a <__udivmodhi4>
    32ce:	80 e0       	ldi	r24, 0x00	; 0
    32d0:	90 e0       	ldi	r25, 0x00	; 0
    32d2:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    32d6:	5b 01       	movw	r10, r22
    32d8:	6c 01       	movw	r12, r24
    32da:	96 94       	lsr	r9
    32dc:	87 94       	ror	r8
    32de:	96 94       	lsr	r9
    32e0:	87 94       	ror	r8
    32e2:	96 94       	lsr	r9
    32e4:	87 94       	ror	r8
    32e6:	b4 01       	movw	r22, r8
    32e8:	80 e0       	ldi	r24, 0x00	; 0
    32ea:	90 e0       	ldi	r25, 0x00	; 0
    32ec:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    32f0:	f2 01       	movw	r30, r4
    32f2:	60 83       	st	Z, r22
    32f4:	71 83       	std	Z+1, r23	; 0x01
    32f6:	82 83       	std	Z+2, r24	; 0x02
    32f8:	93 83       	std	Z+3, r25	; 0x03
    32fa:	c8 01       	movw	r24, r16
    32fc:	b7 01       	movw	r22, r14
    32fe:	20 e0       	ldi	r18, 0x00	; 0
    3300:	30 e0       	ldi	r19, 0x00	; 0
    3302:	a9 01       	movw	r20, r18
    3304:	0f 2e       	mov	r0, r31
    3306:	f0 e0       	ldi	r31, 0x00	; 0
    3308:	ef 2e       	mov	r14, r31
    330a:	f0 e0       	ldi	r31, 0x00	; 0
    330c:	ff 2e       	mov	r15, r31
    330e:	f4 e3       	ldi	r31, 0x34	; 52
    3310:	0f 2f       	mov	r16, r31
    3312:	f3 e4       	ldi	r31, 0x43	; 67
    3314:	1f 2f       	mov	r17, r31
    3316:	f0 2d       	mov	r31, r0
    3318:	0e 94 a0 08 	call	0x1140	; 0x1140 <_Z3mapddddd>
    331c:	0f 90       	pop	r0
    331e:	0f 90       	pop	r0
    3320:	0f 90       	pop	r0
    3322:	0f 90       	pop	r0
        OCR4A=ICR4-vAl;
    3324:	c0 91 a6 00 	lds	r28, 0x00A6
    3328:	d0 91 a7 00 	lds	r29, 0x00A7
      case 3:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
        OCR3C=ICR3-vAl;
        break;
      case 6:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    332c:	0e 94 bb 79 	call	0xf376	; 0xf376 <__fixsfsi>
        OCR4A=ICR4-vAl;
    3330:	c6 1b       	sub	r28, r22
    3332:	d7 0b       	sbc	r29, r23
    3334:	d0 93 a9 00 	sts	0x00A9, r29
    3338:	c0 93 a8 00 	sts	0x00A8, r28
    333c:	99 c1       	rjmp	.+818    	; 0x3670 <__stack+0x1471>
        break;
      case 7:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    333e:	e6 e8       	ldi	r30, 0x86	; 134
    3340:	f0 e0       	ldi	r31, 0x00	; 0
    3342:	c0 81       	ld	r28, Z
    3344:	d1 81       	ldd	r29, Z+1	; 0x01
    3346:	80 80       	ld	r8, Z
    3348:	91 80       	ldd	r9, Z+1	; 0x01
    334a:	00 d0       	rcall	.+0      	; 0x334c <__stack+0x114d>
    334c:	0f 92       	push	r0
    334e:	4d b6       	in	r4, 0x3d	; 61
    3350:	5e b6       	in	r5, 0x3e	; 62
    3352:	08 94       	sec
    3354:	41 1c       	adc	r4, r1
    3356:	51 1c       	adc	r5, r1
    3358:	88 27       	eor	r24, r24
    335a:	77 fd       	sbrc	r23, 7
    335c:	80 95       	com	r24
    335e:	98 2f       	mov	r25, r24
    3360:	0e 94 ee 79 	call	0xf3dc	; 0xf3dc <__floatsisf>
    3364:	7b 01       	movw	r14, r22
    3366:	8c 01       	movw	r16, r24
    3368:	ce 01       	movw	r24, r28
    336a:	68 e2       	ldi	r22, 0x28	; 40
    336c:	70 e0       	ldi	r23, 0x00	; 0
    336e:	0e 94 05 7b 	call	0xf60a	; 0xf60a <__udivmodhi4>
    3372:	80 e0       	ldi	r24, 0x00	; 0
    3374:	90 e0       	ldi	r25, 0x00	; 0
    3376:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    337a:	5b 01       	movw	r10, r22
    337c:	6c 01       	movw	r12, r24
    337e:	96 94       	lsr	r9
    3380:	87 94       	ror	r8
    3382:	96 94       	lsr	r9
    3384:	87 94       	ror	r8
    3386:	96 94       	lsr	r9
    3388:	87 94       	ror	r8
    338a:	b4 01       	movw	r22, r8
    338c:	80 e0       	ldi	r24, 0x00	; 0
    338e:	90 e0       	ldi	r25, 0x00	; 0
    3390:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    3394:	f2 01       	movw	r30, r4
    3396:	60 83       	st	Z, r22
    3398:	71 83       	std	Z+1, r23	; 0x01
    339a:	82 83       	std	Z+2, r24	; 0x02
    339c:	93 83       	std	Z+3, r25	; 0x03
    339e:	c8 01       	movw	r24, r16
    33a0:	b7 01       	movw	r22, r14
    33a2:	20 e0       	ldi	r18, 0x00	; 0
    33a4:	30 e0       	ldi	r19, 0x00	; 0
    33a6:	a9 01       	movw	r20, r18
    33a8:	0f 2e       	mov	r0, r31
    33aa:	f0 e0       	ldi	r31, 0x00	; 0
    33ac:	ef 2e       	mov	r14, r31
    33ae:	f0 e0       	ldi	r31, 0x00	; 0
    33b0:	ff 2e       	mov	r15, r31
    33b2:	f4 e3       	ldi	r31, 0x34	; 52
    33b4:	0f 2f       	mov	r16, r31
    33b6:	f3 e4       	ldi	r31, 0x43	; 67
    33b8:	1f 2f       	mov	r17, r31
    33ba:	f0 2d       	mov	r31, r0
    33bc:	0e 94 a0 08 	call	0x1140	; 0x1140 <_Z3mapddddd>
    33c0:	0f 90       	pop	r0
    33c2:	0f 90       	pop	r0
    33c4:	0f 90       	pop	r0
    33c6:	0f 90       	pop	r0
        OCR4B=ICR4-vAl;
    33c8:	c0 91 a6 00 	lds	r28, 0x00A6
    33cc:	d0 91 a7 00 	lds	r29, 0x00A7
      case 6:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
        OCR4A=ICR4-vAl;
        break;
      case 7:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    33d0:	0e 94 bb 79 	call	0xf376	; 0xf376 <__fixsfsi>
        OCR4B=ICR4-vAl;
    33d4:	c6 1b       	sub	r28, r22
    33d6:	d7 0b       	sbc	r29, r23
    33d8:	d0 93 ab 00 	sts	0x00AB, r29
    33dc:	c0 93 aa 00 	sts	0x00AA, r28
    33e0:	47 c1       	rjmp	.+654    	; 0x3670 <__stack+0x1471>
        break; 
      case 8:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    33e2:	e6 e8       	ldi	r30, 0x86	; 134
    33e4:	f0 e0       	ldi	r31, 0x00	; 0
    33e6:	c0 81       	ld	r28, Z
    33e8:	d1 81       	ldd	r29, Z+1	; 0x01
    33ea:	80 80       	ld	r8, Z
    33ec:	91 80       	ldd	r9, Z+1	; 0x01
    33ee:	00 d0       	rcall	.+0      	; 0x33f0 <__stack+0x11f1>
    33f0:	0f 92       	push	r0
    33f2:	4d b6       	in	r4, 0x3d	; 61
    33f4:	5e b6       	in	r5, 0x3e	; 62
    33f6:	08 94       	sec
    33f8:	41 1c       	adc	r4, r1
    33fa:	51 1c       	adc	r5, r1
    33fc:	88 27       	eor	r24, r24
    33fe:	77 fd       	sbrc	r23, 7
    3400:	80 95       	com	r24
    3402:	98 2f       	mov	r25, r24
    3404:	0e 94 ee 79 	call	0xf3dc	; 0xf3dc <__floatsisf>
    3408:	7b 01       	movw	r14, r22
    340a:	8c 01       	movw	r16, r24
    340c:	ce 01       	movw	r24, r28
    340e:	68 e2       	ldi	r22, 0x28	; 40
    3410:	70 e0       	ldi	r23, 0x00	; 0
    3412:	0e 94 05 7b 	call	0xf60a	; 0xf60a <__udivmodhi4>
    3416:	80 e0       	ldi	r24, 0x00	; 0
    3418:	90 e0       	ldi	r25, 0x00	; 0
    341a:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    341e:	5b 01       	movw	r10, r22
    3420:	6c 01       	movw	r12, r24
    3422:	96 94       	lsr	r9
    3424:	87 94       	ror	r8
    3426:	96 94       	lsr	r9
    3428:	87 94       	ror	r8
    342a:	96 94       	lsr	r9
    342c:	87 94       	ror	r8
    342e:	b4 01       	movw	r22, r8
    3430:	80 e0       	ldi	r24, 0x00	; 0
    3432:	90 e0       	ldi	r25, 0x00	; 0
    3434:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    3438:	f2 01       	movw	r30, r4
    343a:	60 83       	st	Z, r22
    343c:	71 83       	std	Z+1, r23	; 0x01
    343e:	82 83       	std	Z+2, r24	; 0x02
    3440:	93 83       	std	Z+3, r25	; 0x03
    3442:	c8 01       	movw	r24, r16
    3444:	b7 01       	movw	r22, r14
    3446:	20 e0       	ldi	r18, 0x00	; 0
    3448:	30 e0       	ldi	r19, 0x00	; 0
    344a:	a9 01       	movw	r20, r18
    344c:	0f 2e       	mov	r0, r31
    344e:	f0 e0       	ldi	r31, 0x00	; 0
    3450:	ef 2e       	mov	r14, r31
    3452:	f0 e0       	ldi	r31, 0x00	; 0
    3454:	ff 2e       	mov	r15, r31
    3456:	f4 e3       	ldi	r31, 0x34	; 52
    3458:	0f 2f       	mov	r16, r31
    345a:	f3 e4       	ldi	r31, 0x43	; 67
    345c:	1f 2f       	mov	r17, r31
    345e:	f0 2d       	mov	r31, r0
    3460:	0e 94 a0 08 	call	0x1140	; 0x1140 <_Z3mapddddd>
    3464:	0f 90       	pop	r0
    3466:	0f 90       	pop	r0
    3468:	0f 90       	pop	r0
    346a:	0f 90       	pop	r0
        OCR4C=ICR4-vAl;
    346c:	c0 91 a6 00 	lds	r28, 0x00A6
    3470:	d0 91 a7 00 	lds	r29, 0x00A7
      case 7:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
        OCR4B=ICR4-vAl;
        break; 
      case 8:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    3474:	0e 94 bb 79 	call	0xf376	; 0xf376 <__fixsfsi>
        OCR4C=ICR4-vAl;
    3478:	c6 1b       	sub	r28, r22
    347a:	d7 0b       	sbc	r29, r23
    347c:	d0 93 ad 00 	sts	0x00AD, r29
    3480:	c0 93 ac 00 	sts	0x00AC, r28
    3484:	f5 c0       	rjmp	.+490    	; 0x3670 <__stack+0x1471>
        break;
      case 46:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    3486:	e6 e8       	ldi	r30, 0x86	; 134
    3488:	f0 e0       	ldi	r31, 0x00	; 0
    348a:	c0 81       	ld	r28, Z
    348c:	d1 81       	ldd	r29, Z+1	; 0x01
    348e:	80 80       	ld	r8, Z
    3490:	91 80       	ldd	r9, Z+1	; 0x01
    3492:	00 d0       	rcall	.+0      	; 0x3494 <__stack+0x1295>
    3494:	0f 92       	push	r0
    3496:	4d b6       	in	r4, 0x3d	; 61
    3498:	5e b6       	in	r5, 0x3e	; 62
    349a:	08 94       	sec
    349c:	41 1c       	adc	r4, r1
    349e:	51 1c       	adc	r5, r1
    34a0:	88 27       	eor	r24, r24
    34a2:	77 fd       	sbrc	r23, 7
    34a4:	80 95       	com	r24
    34a6:	98 2f       	mov	r25, r24
    34a8:	0e 94 ee 79 	call	0xf3dc	; 0xf3dc <__floatsisf>
    34ac:	7b 01       	movw	r14, r22
    34ae:	8c 01       	movw	r16, r24
    34b0:	ce 01       	movw	r24, r28
    34b2:	68 e2       	ldi	r22, 0x28	; 40
    34b4:	70 e0       	ldi	r23, 0x00	; 0
    34b6:	0e 94 05 7b 	call	0xf60a	; 0xf60a <__udivmodhi4>
    34ba:	80 e0       	ldi	r24, 0x00	; 0
    34bc:	90 e0       	ldi	r25, 0x00	; 0
    34be:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    34c2:	5b 01       	movw	r10, r22
    34c4:	6c 01       	movw	r12, r24
    34c6:	96 94       	lsr	r9
    34c8:	87 94       	ror	r8
    34ca:	96 94       	lsr	r9
    34cc:	87 94       	ror	r8
    34ce:	96 94       	lsr	r9
    34d0:	87 94       	ror	r8
    34d2:	b4 01       	movw	r22, r8
    34d4:	80 e0       	ldi	r24, 0x00	; 0
    34d6:	90 e0       	ldi	r25, 0x00	; 0
    34d8:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    34dc:	f2 01       	movw	r30, r4
    34de:	60 83       	st	Z, r22
    34e0:	71 83       	std	Z+1, r23	; 0x01
    34e2:	82 83       	std	Z+2, r24	; 0x02
    34e4:	93 83       	std	Z+3, r25	; 0x03
    34e6:	c8 01       	movw	r24, r16
    34e8:	b7 01       	movw	r22, r14
    34ea:	20 e0       	ldi	r18, 0x00	; 0
    34ec:	30 e0       	ldi	r19, 0x00	; 0
    34ee:	a9 01       	movw	r20, r18
    34f0:	0f 2e       	mov	r0, r31
    34f2:	f0 e0       	ldi	r31, 0x00	; 0
    34f4:	ef 2e       	mov	r14, r31
    34f6:	f0 e0       	ldi	r31, 0x00	; 0
    34f8:	ff 2e       	mov	r15, r31
    34fa:	f4 e3       	ldi	r31, 0x34	; 52
    34fc:	0f 2f       	mov	r16, r31
    34fe:	f3 e4       	ldi	r31, 0x43	; 67
    3500:	1f 2f       	mov	r17, r31
    3502:	f0 2d       	mov	r31, r0
    3504:	0e 94 a0 08 	call	0x1140	; 0x1140 <_Z3mapddddd>
    3508:	0f 90       	pop	r0
    350a:	0f 90       	pop	r0
    350c:	0f 90       	pop	r0
    350e:	0f 90       	pop	r0
        OCR5A=ICR5-vAl;
    3510:	c0 91 26 01 	lds	r28, 0x0126
    3514:	d0 91 27 01 	lds	r29, 0x0127
      case 8:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
        OCR4C=ICR4-vAl;
        break;
      case 46:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    3518:	0e 94 bb 79 	call	0xf376	; 0xf376 <__fixsfsi>
        OCR5A=ICR5-vAl;
    351c:	c6 1b       	sub	r28, r22
    351e:	d7 0b       	sbc	r29, r23
    3520:	d0 93 29 01 	sts	0x0129, r29
    3524:	c0 93 28 01 	sts	0x0128, r28
    3528:	a3 c0       	rjmp	.+326    	; 0x3670 <__stack+0x1471>
        break;
      case 45:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    352a:	e6 e8       	ldi	r30, 0x86	; 134
    352c:	f0 e0       	ldi	r31, 0x00	; 0
    352e:	c0 81       	ld	r28, Z
    3530:	d1 81       	ldd	r29, Z+1	; 0x01
    3532:	80 80       	ld	r8, Z
    3534:	91 80       	ldd	r9, Z+1	; 0x01
    3536:	00 d0       	rcall	.+0      	; 0x3538 <__stack+0x1339>
    3538:	0f 92       	push	r0
    353a:	4d b6       	in	r4, 0x3d	; 61
    353c:	5e b6       	in	r5, 0x3e	; 62
    353e:	08 94       	sec
    3540:	41 1c       	adc	r4, r1
    3542:	51 1c       	adc	r5, r1
    3544:	88 27       	eor	r24, r24
    3546:	77 fd       	sbrc	r23, 7
    3548:	80 95       	com	r24
    354a:	98 2f       	mov	r25, r24
    354c:	0e 94 ee 79 	call	0xf3dc	; 0xf3dc <__floatsisf>
    3550:	7b 01       	movw	r14, r22
    3552:	8c 01       	movw	r16, r24
    3554:	ce 01       	movw	r24, r28
    3556:	68 e2       	ldi	r22, 0x28	; 40
    3558:	70 e0       	ldi	r23, 0x00	; 0
    355a:	0e 94 05 7b 	call	0xf60a	; 0xf60a <__udivmodhi4>
    355e:	80 e0       	ldi	r24, 0x00	; 0
    3560:	90 e0       	ldi	r25, 0x00	; 0
    3562:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    3566:	5b 01       	movw	r10, r22
    3568:	6c 01       	movw	r12, r24
    356a:	96 94       	lsr	r9
    356c:	87 94       	ror	r8
    356e:	96 94       	lsr	r9
    3570:	87 94       	ror	r8
    3572:	96 94       	lsr	r9
    3574:	87 94       	ror	r8
    3576:	b4 01       	movw	r22, r8
    3578:	80 e0       	ldi	r24, 0x00	; 0
    357a:	90 e0       	ldi	r25, 0x00	; 0
    357c:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    3580:	f2 01       	movw	r30, r4
    3582:	60 83       	st	Z, r22
    3584:	71 83       	std	Z+1, r23	; 0x01
    3586:	82 83       	std	Z+2, r24	; 0x02
    3588:	93 83       	std	Z+3, r25	; 0x03
    358a:	c8 01       	movw	r24, r16
    358c:	b7 01       	movw	r22, r14
    358e:	20 e0       	ldi	r18, 0x00	; 0
    3590:	30 e0       	ldi	r19, 0x00	; 0
    3592:	a9 01       	movw	r20, r18
    3594:	0f 2e       	mov	r0, r31
    3596:	f0 e0       	ldi	r31, 0x00	; 0
    3598:	ef 2e       	mov	r14, r31
    359a:	f0 e0       	ldi	r31, 0x00	; 0
    359c:	ff 2e       	mov	r15, r31
    359e:	f4 e3       	ldi	r31, 0x34	; 52
    35a0:	0f 2f       	mov	r16, r31
    35a2:	f3 e4       	ldi	r31, 0x43	; 67
    35a4:	1f 2f       	mov	r17, r31
    35a6:	f0 2d       	mov	r31, r0
    35a8:	0e 94 a0 08 	call	0x1140	; 0x1140 <_Z3mapddddd>
    35ac:	0f 90       	pop	r0
    35ae:	0f 90       	pop	r0
    35b0:	0f 90       	pop	r0
    35b2:	0f 90       	pop	r0
        OCR5B=ICR5-vAl;
    35b4:	c0 91 26 01 	lds	r28, 0x0126
    35b8:	d0 91 27 01 	lds	r29, 0x0127
      case 46:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
        OCR5A=ICR5-vAl;
        break;
      case 45:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    35bc:	0e 94 bb 79 	call	0xf376	; 0xf376 <__fixsfsi>
        OCR5B=ICR5-vAl;
    35c0:	c6 1b       	sub	r28, r22
    35c2:	d7 0b       	sbc	r29, r23
    35c4:	d0 93 2b 01 	sts	0x012B, r29
    35c8:	c0 93 2a 01 	sts	0x012A, r28
    35cc:	51 c0       	rjmp	.+162    	; 0x3670 <__stack+0x1471>
        break;
      case 44:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    35ce:	e6 e8       	ldi	r30, 0x86	; 134
    35d0:	f0 e0       	ldi	r31, 0x00	; 0
    35d2:	c0 81       	ld	r28, Z
    35d4:	d1 81       	ldd	r29, Z+1	; 0x01
    35d6:	80 80       	ld	r8, Z
    35d8:	91 80       	ldd	r9, Z+1	; 0x01
    35da:	00 d0       	rcall	.+0      	; 0x35dc <__stack+0x13dd>
    35dc:	0f 92       	push	r0
    35de:	4d b6       	in	r4, 0x3d	; 61
    35e0:	5e b6       	in	r5, 0x3e	; 62
    35e2:	08 94       	sec
    35e4:	41 1c       	adc	r4, r1
    35e6:	51 1c       	adc	r5, r1
    35e8:	88 27       	eor	r24, r24
    35ea:	77 fd       	sbrc	r23, 7
    35ec:	80 95       	com	r24
    35ee:	98 2f       	mov	r25, r24
    35f0:	0e 94 ee 79 	call	0xf3dc	; 0xf3dc <__floatsisf>
    35f4:	7b 01       	movw	r14, r22
    35f6:	8c 01       	movw	r16, r24
    35f8:	ce 01       	movw	r24, r28
    35fa:	68 e2       	ldi	r22, 0x28	; 40
    35fc:	70 e0       	ldi	r23, 0x00	; 0
    35fe:	0e 94 05 7b 	call	0xf60a	; 0xf60a <__udivmodhi4>
    3602:	80 e0       	ldi	r24, 0x00	; 0
    3604:	90 e0       	ldi	r25, 0x00	; 0
    3606:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    360a:	5b 01       	movw	r10, r22
    360c:	6c 01       	movw	r12, r24
    360e:	96 94       	lsr	r9
    3610:	87 94       	ror	r8
    3612:	96 94       	lsr	r9
    3614:	87 94       	ror	r8
    3616:	96 94       	lsr	r9
    3618:	87 94       	ror	r8
    361a:	b4 01       	movw	r22, r8
    361c:	80 e0       	ldi	r24, 0x00	; 0
    361e:	90 e0       	ldi	r25, 0x00	; 0
    3620:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    3624:	f2 01       	movw	r30, r4
    3626:	60 83       	st	Z, r22
    3628:	71 83       	std	Z+1, r23	; 0x01
    362a:	82 83       	std	Z+2, r24	; 0x02
    362c:	93 83       	std	Z+3, r25	; 0x03
    362e:	c8 01       	movw	r24, r16
    3630:	b7 01       	movw	r22, r14
    3632:	20 e0       	ldi	r18, 0x00	; 0
    3634:	30 e0       	ldi	r19, 0x00	; 0
    3636:	a9 01       	movw	r20, r18
    3638:	0f 2e       	mov	r0, r31
    363a:	f0 e0       	ldi	r31, 0x00	; 0
    363c:	ef 2e       	mov	r14, r31
    363e:	f0 e0       	ldi	r31, 0x00	; 0
    3640:	ff 2e       	mov	r15, r31
    3642:	f4 e3       	ldi	r31, 0x34	; 52
    3644:	0f 2f       	mov	r16, r31
    3646:	f3 e4       	ldi	r31, 0x43	; 67
    3648:	1f 2f       	mov	r17, r31
    364a:	f0 2d       	mov	r31, r0
    364c:	0e 94 a0 08 	call	0x1140	; 0x1140 <_Z3mapddddd>
    3650:	0f 90       	pop	r0
    3652:	0f 90       	pop	r0
    3654:	0f 90       	pop	r0
    3656:	0f 90       	pop	r0
        OCR5C=ICR5-vAl;
    3658:	c0 91 26 01 	lds	r28, 0x0126
    365c:	d0 91 27 01 	lds	r29, 0x0127
      case 45:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
        OCR5B=ICR5-vAl;
        break;
      case 44:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    3660:	0e 94 bb 79 	call	0xf376	; 0xf376 <__fixsfsi>
        OCR5C=ICR5-vAl;
    3664:	c6 1b       	sub	r28, r22
    3666:	d7 0b       	sbc	r29, r23
    3668:	d0 93 2d 01 	sts	0x012D, r29
    366c:	c0 93 2c 01 	sts	0x012C, r28
	}
    3670:	df 91       	pop	r29
    3672:	cf 91       	pop	r28
    3674:	1f 91       	pop	r17
    3676:	0f 91       	pop	r16
    3678:	ff 90       	pop	r15
    367a:	ef 90       	pop	r14
    367c:	df 90       	pop	r13
    367e:	cf 90       	pop	r12
    3680:	bf 90       	pop	r11
    3682:	af 90       	pop	r10
    3684:	9f 90       	pop	r9
    3686:	8f 90       	pop	r8
    3688:	7f 90       	pop	r7
    368a:	6f 90       	pop	r6
    368c:	5f 90       	pop	r5
    368e:	4f 90       	pop	r4
    3690:	3f 90       	pop	r3
    3692:	2f 90       	pop	r2
    3694:	08 95       	ret

00003696 <_Z6angle2i>:
	void angle2(int dist)
	{
    3696:	2f 92       	push	r2
    3698:	3f 92       	push	r3
    369a:	4f 92       	push	r4
    369c:	5f 92       	push	r5
    369e:	6f 92       	push	r6
    36a0:	7f 92       	push	r7
    36a2:	8f 92       	push	r8
    36a4:	9f 92       	push	r9
    36a6:	af 92       	push	r10
    36a8:	bf 92       	push	r11
    36aa:	cf 92       	push	r12
    36ac:	df 92       	push	r13
    36ae:	ef 92       	push	r14
    36b0:	ff 92       	push	r15
    36b2:	0f 93       	push	r16
    36b4:	1f 93       	push	r17
    36b6:	cf 93       	push	r28
    36b8:	df 93       	push	r29
		v=ang1 + (dist-2000)*k;
    36ba:	bc 01       	movw	r22, r24
    36bc:	60 5d       	subi	r22, 0xD0	; 208
    36be:	77 40       	sbci	r23, 0x07	; 7
    36c0:	88 27       	eor	r24, r24
    36c2:	77 fd       	sbrc	r23, 7
    36c4:	80 95       	com	r24
    36c6:	98 2f       	mov	r25, r24
    36c8:	0e 94 ee 79 	call	0xf3dc	; 0xf3dc <__floatsisf>
    36cc:	20 91 b4 02 	lds	r18, 0x02B4
    36d0:	30 91 b5 02 	lds	r19, 0x02B5
    36d4:	40 91 b6 02 	lds	r20, 0x02B6
    36d8:	50 91 b7 02 	lds	r21, 0x02B7
    36dc:	0e 94 a2 7a 	call	0xf544	; 0xf544 <__mulsf3>
    36e0:	f6 2e       	mov	r15, r22
    36e2:	07 2f       	mov	r16, r23
    36e4:	18 2f       	mov	r17, r24
    36e6:	e9 2e       	mov	r14, r25
    36e8:	60 91 b8 02 	lds	r22, 0x02B8
    36ec:	70 91 b9 02 	lds	r23, 0x02B9
    36f0:	88 27       	eor	r24, r24
    36f2:	77 fd       	sbrc	r23, 7
    36f4:	80 95       	com	r24
    36f6:	98 2f       	mov	r25, r24
    36f8:	0e 94 ee 79 	call	0xf3dc	; 0xf3dc <__floatsisf>
    36fc:	2f 2d       	mov	r18, r15
    36fe:	30 2f       	mov	r19, r16
    3700:	41 2f       	mov	r20, r17
    3702:	5e 2d       	mov	r21, r14
    3704:	0e 94 eb 78 	call	0xf1d6	; 0xf1d6 <__addsf3>
    3708:	0e 94 bb 79 	call	0xf376	; 0xf376 <__fixsfsi>
    370c:	eb 01       	movw	r28, r22
    370e:	70 93 cb 02 	sts	0x02CB, r23
    3712:	60 93 ca 02 	sts	0x02CA, r22
		y=ang2 + (dist-2000)*k;
    3716:	60 91 ba 02 	lds	r22, 0x02BA
    371a:	70 91 bb 02 	lds	r23, 0x02BB
    371e:	88 27       	eor	r24, r24
    3720:	77 fd       	sbrc	r23, 7
    3722:	80 95       	com	r24
    3724:	98 2f       	mov	r25, r24
    3726:	0e 94 ee 79 	call	0xf3dc	; 0xf3dc <__floatsisf>
    372a:	9b 01       	movw	r18, r22
    372c:	ac 01       	movw	r20, r24
    372e:	6f 2d       	mov	r22, r15
    3730:	70 2f       	mov	r23, r16
    3732:	81 2f       	mov	r24, r17
    3734:	9e 2d       	mov	r25, r14
    3736:	0e 94 eb 78 	call	0xf1d6	; 0xf1d6 <__addsf3>
    373a:	0e 94 bb 79 	call	0xf376	; 0xf376 <__fixsfsi>
    373e:	70 93 cd 02 	sts	0x02CD, r23
    3742:	60 93 cc 02 	sts	0x02CC, r22
		z=ang3 + (dist-2000)*k;
    3746:	60 91 bc 02 	lds	r22, 0x02BC
    374a:	70 91 bd 02 	lds	r23, 0x02BD
    374e:	88 27       	eor	r24, r24
    3750:	77 fd       	sbrc	r23, 7
    3752:	80 95       	com	r24
    3754:	98 2f       	mov	r25, r24
    3756:	0e 94 ee 79 	call	0xf3dc	; 0xf3dc <__floatsisf>
    375a:	9b 01       	movw	r18, r22
    375c:	ac 01       	movw	r20, r24
    375e:	6f 2d       	mov	r22, r15
    3760:	70 2f       	mov	r23, r16
    3762:	81 2f       	mov	r24, r17
    3764:	9e 2d       	mov	r25, r14
    3766:	0e 94 eb 78 	call	0xf1d6	; 0xf1d6 <__addsf3>
    376a:	0e 94 bb 79 	call	0xf376	; 0xf376 <__fixsfsi>
    376e:	70 93 cf 02 	sts	0x02CF, r23
    3772:	60 93 ce 02 	sts	0x02CE, r22
		w=ang4 + (dist-2000)*k;
    3776:	60 91 be 02 	lds	r22, 0x02BE
    377a:	70 91 bf 02 	lds	r23, 0x02BF
    377e:	88 27       	eor	r24, r24
    3780:	77 fd       	sbrc	r23, 7
    3782:	80 95       	com	r24
    3784:	98 2f       	mov	r25, r24
    3786:	0e 94 ee 79 	call	0xf3dc	; 0xf3dc <__floatsisf>
    378a:	9b 01       	movw	r18, r22
    378c:	ac 01       	movw	r20, r24
    378e:	6f 2d       	mov	r22, r15
    3790:	70 2f       	mov	r23, r16
    3792:	81 2f       	mov	r24, r17
    3794:	9e 2d       	mov	r25, r14
    3796:	0e 94 eb 78 	call	0xf1d6	; 0xf1d6 <__addsf3>
    379a:	0e 94 bb 79 	call	0xf376	; 0xf376 <__fixsfsi>
    379e:	70 93 d1 02 	sts	0x02D1, r23
    37a2:	60 93 d0 02 	sts	0x02D0, r22
     }
  }

  void write(int vAl)           //PIN=servo pin no. on mega,vAl=angle F_CPU for the servo at pin
  {
    switch(pIn)
    37a6:	80 91 d4 02 	lds	r24, 0x02D4
    37aa:	88 30       	cpi	r24, 0x08	; 8
    37ac:	09 f4       	brne	.+2      	; 0x37b0 <_Z6angle2i+0x11a>
    37ae:	72 c2       	rjmp	.+1252   	; 0x3c94 <_Z6angle2i+0x5fe>
    37b0:	89 30       	cpi	r24, 0x09	; 9
    37b2:	98 f4       	brcc	.+38     	; 0x37da <_Z6angle2i+0x144>
    37b4:	85 30       	cpi	r24, 0x05	; 5
    37b6:	09 f4       	brne	.+2      	; 0x37ba <_Z6angle2i+0x124>
    37b8:	ce c0       	rjmp	.+412    	; 0x3956 <_Z6angle2i+0x2c0>
    37ba:	86 30       	cpi	r24, 0x06	; 6
    37bc:	38 f4       	brcc	.+14     	; 0x37cc <_Z6angle2i+0x136>
    37be:	82 30       	cpi	r24, 0x02	; 2
    37c0:	09 f4       	brne	.+2      	; 0x37c4 <_Z6angle2i+0x12e>
    37c2:	1c c1       	rjmp	.+568    	; 0x39fc <_Z6angle2i+0x366>
    37c4:	83 30       	cpi	r24, 0x03	; 3
    37c6:	09 f0       	breq	.+2      	; 0x37ca <_Z6angle2i+0x134>
    37c8:	b0 c3       	rjmp	.+1888   	; 0x3f2a <_Z6angle2i+0x894>
    37ca:	6b c1       	rjmp	.+726    	; 0x3aa2 <_Z6angle2i+0x40c>
    37cc:	86 30       	cpi	r24, 0x06	; 6
    37ce:	09 f4       	brne	.+2      	; 0x37d2 <_Z6angle2i+0x13c>
    37d0:	bb c1       	rjmp	.+886    	; 0x3b48 <_Z6angle2i+0x4b2>
    37d2:	87 30       	cpi	r24, 0x07	; 7
    37d4:	09 f0       	breq	.+2      	; 0x37d8 <_Z6angle2i+0x142>
    37d6:	a9 c3       	rjmp	.+1874   	; 0x3f2a <_Z6angle2i+0x894>
    37d8:	0a c2       	rjmp	.+1044   	; 0x3bee <_Z6angle2i+0x558>
    37da:	8c 32       	cpi	r24, 0x2C	; 44
    37dc:	09 f4       	brne	.+2      	; 0x37e0 <_Z6angle2i+0x14a>
    37de:	53 c3       	rjmp	.+1702   	; 0x3e86 <_Z6angle2i+0x7f0>
    37e0:	8d 32       	cpi	r24, 0x2D	; 45
    37e2:	30 f4       	brcc	.+12     	; 0x37f0 <_Z6angle2i+0x15a>
    37e4:	8b 30       	cpi	r24, 0x0B	; 11
    37e6:	59 f0       	breq	.+22     	; 0x37fe <_Z6angle2i+0x168>
    37e8:	8c 30       	cpi	r24, 0x0C	; 12
    37ea:	09 f0       	breq	.+2      	; 0x37ee <_Z6angle2i+0x158>
    37ec:	9e c3       	rjmp	.+1852   	; 0x3f2a <_Z6angle2i+0x894>
    37ee:	5d c0       	rjmp	.+186    	; 0x38aa <_Z6angle2i+0x214>
    37f0:	8d 32       	cpi	r24, 0x2D	; 45
    37f2:	09 f4       	brne	.+2      	; 0x37f6 <_Z6angle2i+0x160>
    37f4:	f5 c2       	rjmp	.+1514   	; 0x3de0 <_Z6angle2i+0x74a>
    37f6:	8e 32       	cpi	r24, 0x2E	; 46
    37f8:	09 f0       	breq	.+2      	; 0x37fc <_Z6angle2i+0x166>
    37fa:	97 c3       	rjmp	.+1838   	; 0x3f2a <_Z6angle2i+0x894>
    37fc:	9e c2       	rjmp	.+1340   	; 0x3d3a <_Z6angle2i+0x6a4>
    {
     case 11:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    37fe:	0f 2e       	mov	r0, r31
    3800:	f6 e8       	ldi	r31, 0x86	; 134
    3802:	8f 2e       	mov	r8, r31
    3804:	99 24       	eor	r9, r9
    3806:	f0 2d       	mov	r31, r0
    3808:	f4 01       	movw	r30, r8
    380a:	00 81       	ld	r16, Z
    380c:	11 81       	ldd	r17, Z+1	; 0x01
    380e:	e0 80       	ld	r14, Z
    3810:	f1 80       	ldd	r15, Z+1	; 0x01
    3812:	00 d0       	rcall	.+0      	; 0x3814 <_Z6angle2i+0x17e>
    3814:	0f 92       	push	r0
    3816:	2d b6       	in	r2, 0x3d	; 61
    3818:	3e b6       	in	r3, 0x3e	; 62
    381a:	08 94       	sec
    381c:	21 1c       	adc	r2, r1
    381e:	31 1c       	adc	r3, r1
    3820:	be 01       	movw	r22, r28
    3822:	88 27       	eor	r24, r24
    3824:	77 fd       	sbrc	r23, 7
    3826:	80 95       	com	r24
    3828:	98 2f       	mov	r25, r24
    382a:	0e 94 ee 79 	call	0xf3dc	; 0xf3dc <__floatsisf>
    382e:	2b 01       	movw	r4, r22
    3830:	3c 01       	movw	r6, r24
    3832:	c8 01       	movw	r24, r16
    3834:	68 e2       	ldi	r22, 0x28	; 40
    3836:	70 e0       	ldi	r23, 0x00	; 0
    3838:	0e 94 05 7b 	call	0xf60a	; 0xf60a <__udivmodhi4>
    383c:	80 e0       	ldi	r24, 0x00	; 0
    383e:	90 e0       	ldi	r25, 0x00	; 0
    3840:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    3844:	5b 01       	movw	r10, r22
    3846:	6c 01       	movw	r12, r24
    3848:	f6 94       	lsr	r15
    384a:	e7 94       	ror	r14
    384c:	f6 94       	lsr	r15
    384e:	e7 94       	ror	r14
    3850:	f6 94       	lsr	r15
    3852:	e7 94       	ror	r14
    3854:	b7 01       	movw	r22, r14
    3856:	80 e0       	ldi	r24, 0x00	; 0
    3858:	90 e0       	ldi	r25, 0x00	; 0
    385a:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    385e:	f1 01       	movw	r30, r2
    3860:	60 83       	st	Z, r22
    3862:	71 83       	std	Z+1, r23	; 0x01
    3864:	82 83       	std	Z+2, r24	; 0x02
    3866:	93 83       	std	Z+3, r25	; 0x03
    3868:	c3 01       	movw	r24, r6
    386a:	b2 01       	movw	r22, r4
    386c:	20 e0       	ldi	r18, 0x00	; 0
    386e:	30 e0       	ldi	r19, 0x00	; 0
    3870:	a9 01       	movw	r20, r18
    3872:	0f 2e       	mov	r0, r31
    3874:	f0 e0       	ldi	r31, 0x00	; 0
    3876:	ef 2e       	mov	r14, r31
    3878:	f0 e0       	ldi	r31, 0x00	; 0
    387a:	ff 2e       	mov	r15, r31
    387c:	f4 e3       	ldi	r31, 0x34	; 52
    387e:	0f 2f       	mov	r16, r31
    3880:	f3 e4       	ldi	r31, 0x43	; 67
    3882:	1f 2f       	mov	r17, r31
    3884:	f0 2d       	mov	r31, r0
    3886:	0e 94 a0 08 	call	0x1140	; 0x1140 <_Z3mapddddd>
    388a:	0f 90       	pop	r0
    388c:	0f 90       	pop	r0
    388e:	0f 90       	pop	r0
    3890:	0f 90       	pop	r0
        OCR1A=ICR1-vAl;
    3892:	f4 01       	movw	r30, r8
    3894:	c0 81       	ld	r28, Z
    3896:	d1 81       	ldd	r29, Z+1	; 0x01
  void write(int vAl)           //PIN=servo pin no. on mega,vAl=angle F_CPU for the servo at pin
  {
    switch(pIn)
    {
     case 11:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    3898:	0e 94 bb 79 	call	0xf376	; 0xf376 <__fixsfsi>
        OCR1A=ICR1-vAl;
    389c:	c6 1b       	sub	r28, r22
    389e:	d7 0b       	sbc	r29, r23
    38a0:	d0 93 89 00 	sts	0x0089, r29
    38a4:	c0 93 88 00 	sts	0x0088, r28
    38a8:	40 c3       	rjmp	.+1664   	; 0x3f2a <_Z6angle2i+0x894>
        break;
      case 12:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    38aa:	0f 2e       	mov	r0, r31
    38ac:	f6 e8       	ldi	r31, 0x86	; 134
    38ae:	8f 2e       	mov	r8, r31
    38b0:	99 24       	eor	r9, r9
    38b2:	f0 2d       	mov	r31, r0
    38b4:	f4 01       	movw	r30, r8
    38b6:	00 81       	ld	r16, Z
    38b8:	11 81       	ldd	r17, Z+1	; 0x01
    38ba:	e0 80       	ld	r14, Z
    38bc:	f1 80       	ldd	r15, Z+1	; 0x01
    38be:	00 d0       	rcall	.+0      	; 0x38c0 <_Z6angle2i+0x22a>
    38c0:	0f 92       	push	r0
    38c2:	2d b6       	in	r2, 0x3d	; 61
    38c4:	3e b6       	in	r3, 0x3e	; 62
    38c6:	08 94       	sec
    38c8:	21 1c       	adc	r2, r1
    38ca:	31 1c       	adc	r3, r1
    38cc:	be 01       	movw	r22, r28
    38ce:	88 27       	eor	r24, r24
    38d0:	77 fd       	sbrc	r23, 7
    38d2:	80 95       	com	r24
    38d4:	98 2f       	mov	r25, r24
    38d6:	0e 94 ee 79 	call	0xf3dc	; 0xf3dc <__floatsisf>
    38da:	2b 01       	movw	r4, r22
    38dc:	3c 01       	movw	r6, r24
    38de:	c8 01       	movw	r24, r16
    38e0:	68 e2       	ldi	r22, 0x28	; 40
    38e2:	70 e0       	ldi	r23, 0x00	; 0
    38e4:	0e 94 05 7b 	call	0xf60a	; 0xf60a <__udivmodhi4>
    38e8:	80 e0       	ldi	r24, 0x00	; 0
    38ea:	90 e0       	ldi	r25, 0x00	; 0
    38ec:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    38f0:	5b 01       	movw	r10, r22
    38f2:	6c 01       	movw	r12, r24
    38f4:	f6 94       	lsr	r15
    38f6:	e7 94       	ror	r14
    38f8:	f6 94       	lsr	r15
    38fa:	e7 94       	ror	r14
    38fc:	f6 94       	lsr	r15
    38fe:	e7 94       	ror	r14
    3900:	b7 01       	movw	r22, r14
    3902:	80 e0       	ldi	r24, 0x00	; 0
    3904:	90 e0       	ldi	r25, 0x00	; 0
    3906:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    390a:	f1 01       	movw	r30, r2
    390c:	60 83       	st	Z, r22
    390e:	71 83       	std	Z+1, r23	; 0x01
    3910:	82 83       	std	Z+2, r24	; 0x02
    3912:	93 83       	std	Z+3, r25	; 0x03
    3914:	c3 01       	movw	r24, r6
    3916:	b2 01       	movw	r22, r4
    3918:	20 e0       	ldi	r18, 0x00	; 0
    391a:	30 e0       	ldi	r19, 0x00	; 0
    391c:	a9 01       	movw	r20, r18
    391e:	0f 2e       	mov	r0, r31
    3920:	f0 e0       	ldi	r31, 0x00	; 0
    3922:	ef 2e       	mov	r14, r31
    3924:	f0 e0       	ldi	r31, 0x00	; 0
    3926:	ff 2e       	mov	r15, r31
    3928:	f4 e3       	ldi	r31, 0x34	; 52
    392a:	0f 2f       	mov	r16, r31
    392c:	f3 e4       	ldi	r31, 0x43	; 67
    392e:	1f 2f       	mov	r17, r31
    3930:	f0 2d       	mov	r31, r0
    3932:	0e 94 a0 08 	call	0x1140	; 0x1140 <_Z3mapddddd>
    3936:	0f 90       	pop	r0
    3938:	0f 90       	pop	r0
    393a:	0f 90       	pop	r0
    393c:	0f 90       	pop	r0
        OCR1B=ICR1-vAl;
    393e:	f4 01       	movw	r30, r8
    3940:	c0 81       	ld	r28, Z
    3942:	d1 81       	ldd	r29, Z+1	; 0x01
     case 11:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
        OCR1A=ICR1-vAl;
        break;
      case 12:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    3944:	0e 94 bb 79 	call	0xf376	; 0xf376 <__fixsfsi>
        OCR1B=ICR1-vAl;
    3948:	c6 1b       	sub	r28, r22
    394a:	d7 0b       	sbc	r29, r23
    394c:	d0 93 8b 00 	sts	0x008B, r29
    3950:	c0 93 8a 00 	sts	0x008A, r28
    3954:	ea c2       	rjmp	.+1492   	; 0x3f2a <_Z6angle2i+0x894>
        break;
      case 5:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    3956:	e6 e8       	ldi	r30, 0x86	; 134
    3958:	f0 e0       	ldi	r31, 0x00	; 0
    395a:	a0 80       	ld	r10, Z
    395c:	b1 80       	ldd	r11, Z+1	; 0x01
    395e:	80 80       	ld	r8, Z
    3960:	91 80       	ldd	r9, Z+1	; 0x01
    3962:	00 d0       	rcall	.+0      	; 0x3964 <_Z6angle2i+0x2ce>
    3964:	0f 92       	push	r0
    3966:	4d b6       	in	r4, 0x3d	; 61
    3968:	5e b6       	in	r5, 0x3e	; 62
    396a:	08 94       	sec
    396c:	41 1c       	adc	r4, r1
    396e:	51 1c       	adc	r5, r1
    3970:	be 01       	movw	r22, r28
    3972:	88 27       	eor	r24, r24
    3974:	77 fd       	sbrc	r23, 7
    3976:	80 95       	com	r24
    3978:	98 2f       	mov	r25, r24
    397a:	0e 94 ee 79 	call	0xf3dc	; 0xf3dc <__floatsisf>
    397e:	7b 01       	movw	r14, r22
    3980:	8c 01       	movw	r16, r24
    3982:	c5 01       	movw	r24, r10
    3984:	68 e2       	ldi	r22, 0x28	; 40
    3986:	70 e0       	ldi	r23, 0x00	; 0
    3988:	0e 94 05 7b 	call	0xf60a	; 0xf60a <__udivmodhi4>
    398c:	80 e0       	ldi	r24, 0x00	; 0
    398e:	90 e0       	ldi	r25, 0x00	; 0
    3990:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    3994:	5b 01       	movw	r10, r22
    3996:	6c 01       	movw	r12, r24
    3998:	96 94       	lsr	r9
    399a:	87 94       	ror	r8
    399c:	96 94       	lsr	r9
    399e:	87 94       	ror	r8
    39a0:	96 94       	lsr	r9
    39a2:	87 94       	ror	r8
    39a4:	b4 01       	movw	r22, r8
    39a6:	80 e0       	ldi	r24, 0x00	; 0
    39a8:	90 e0       	ldi	r25, 0x00	; 0
    39aa:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    39ae:	f2 01       	movw	r30, r4
    39b0:	60 83       	st	Z, r22
    39b2:	71 83       	std	Z+1, r23	; 0x01
    39b4:	82 83       	std	Z+2, r24	; 0x02
    39b6:	93 83       	std	Z+3, r25	; 0x03
    39b8:	c8 01       	movw	r24, r16
    39ba:	b7 01       	movw	r22, r14
    39bc:	20 e0       	ldi	r18, 0x00	; 0
    39be:	30 e0       	ldi	r19, 0x00	; 0
    39c0:	a9 01       	movw	r20, r18
    39c2:	0f 2e       	mov	r0, r31
    39c4:	f0 e0       	ldi	r31, 0x00	; 0
    39c6:	ef 2e       	mov	r14, r31
    39c8:	f0 e0       	ldi	r31, 0x00	; 0
    39ca:	ff 2e       	mov	r15, r31
    39cc:	f4 e3       	ldi	r31, 0x34	; 52
    39ce:	0f 2f       	mov	r16, r31
    39d0:	f3 e4       	ldi	r31, 0x43	; 67
    39d2:	1f 2f       	mov	r17, r31
    39d4:	f0 2d       	mov	r31, r0
    39d6:	0e 94 a0 08 	call	0x1140	; 0x1140 <_Z3mapddddd>
    39da:	0f 90       	pop	r0
    39dc:	0f 90       	pop	r0
    39de:	0f 90       	pop	r0
    39e0:	0f 90       	pop	r0
        OCR3A=ICR3-vAl;
    39e2:	c0 91 96 00 	lds	r28, 0x0096
    39e6:	d0 91 97 00 	lds	r29, 0x0097
      case 12:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
        OCR1B=ICR1-vAl;
        break;
      case 5:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    39ea:	0e 94 bb 79 	call	0xf376	; 0xf376 <__fixsfsi>
        OCR3A=ICR3-vAl;
    39ee:	c6 1b       	sub	r28, r22
    39f0:	d7 0b       	sbc	r29, r23
    39f2:	d0 93 99 00 	sts	0x0099, r29
    39f6:	c0 93 98 00 	sts	0x0098, r28
    39fa:	97 c2       	rjmp	.+1326   	; 0x3f2a <_Z6angle2i+0x894>
        break;
      case 2:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    39fc:	e6 e8       	ldi	r30, 0x86	; 134
    39fe:	f0 e0       	ldi	r31, 0x00	; 0
    3a00:	a0 80       	ld	r10, Z
    3a02:	b1 80       	ldd	r11, Z+1	; 0x01
    3a04:	80 80       	ld	r8, Z
    3a06:	91 80       	ldd	r9, Z+1	; 0x01
    3a08:	00 d0       	rcall	.+0      	; 0x3a0a <_Z6angle2i+0x374>
    3a0a:	0f 92       	push	r0
    3a0c:	4d b6       	in	r4, 0x3d	; 61
    3a0e:	5e b6       	in	r5, 0x3e	; 62
    3a10:	08 94       	sec
    3a12:	41 1c       	adc	r4, r1
    3a14:	51 1c       	adc	r5, r1
    3a16:	be 01       	movw	r22, r28
    3a18:	88 27       	eor	r24, r24
    3a1a:	77 fd       	sbrc	r23, 7
    3a1c:	80 95       	com	r24
    3a1e:	98 2f       	mov	r25, r24
    3a20:	0e 94 ee 79 	call	0xf3dc	; 0xf3dc <__floatsisf>
    3a24:	7b 01       	movw	r14, r22
    3a26:	8c 01       	movw	r16, r24
    3a28:	c5 01       	movw	r24, r10
    3a2a:	68 e2       	ldi	r22, 0x28	; 40
    3a2c:	70 e0       	ldi	r23, 0x00	; 0
    3a2e:	0e 94 05 7b 	call	0xf60a	; 0xf60a <__udivmodhi4>
    3a32:	80 e0       	ldi	r24, 0x00	; 0
    3a34:	90 e0       	ldi	r25, 0x00	; 0
    3a36:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    3a3a:	5b 01       	movw	r10, r22
    3a3c:	6c 01       	movw	r12, r24
    3a3e:	96 94       	lsr	r9
    3a40:	87 94       	ror	r8
    3a42:	96 94       	lsr	r9
    3a44:	87 94       	ror	r8
    3a46:	96 94       	lsr	r9
    3a48:	87 94       	ror	r8
    3a4a:	b4 01       	movw	r22, r8
    3a4c:	80 e0       	ldi	r24, 0x00	; 0
    3a4e:	90 e0       	ldi	r25, 0x00	; 0
    3a50:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    3a54:	f2 01       	movw	r30, r4
    3a56:	60 83       	st	Z, r22
    3a58:	71 83       	std	Z+1, r23	; 0x01
    3a5a:	82 83       	std	Z+2, r24	; 0x02
    3a5c:	93 83       	std	Z+3, r25	; 0x03
    3a5e:	c8 01       	movw	r24, r16
    3a60:	b7 01       	movw	r22, r14
    3a62:	20 e0       	ldi	r18, 0x00	; 0
    3a64:	30 e0       	ldi	r19, 0x00	; 0
    3a66:	a9 01       	movw	r20, r18
    3a68:	0f 2e       	mov	r0, r31
    3a6a:	f0 e0       	ldi	r31, 0x00	; 0
    3a6c:	ef 2e       	mov	r14, r31
    3a6e:	f0 e0       	ldi	r31, 0x00	; 0
    3a70:	ff 2e       	mov	r15, r31
    3a72:	f4 e3       	ldi	r31, 0x34	; 52
    3a74:	0f 2f       	mov	r16, r31
    3a76:	f3 e4       	ldi	r31, 0x43	; 67
    3a78:	1f 2f       	mov	r17, r31
    3a7a:	f0 2d       	mov	r31, r0
    3a7c:	0e 94 a0 08 	call	0x1140	; 0x1140 <_Z3mapddddd>
    3a80:	0f 90       	pop	r0
    3a82:	0f 90       	pop	r0
    3a84:	0f 90       	pop	r0
    3a86:	0f 90       	pop	r0
        OCR3B=ICR3-vAl;
    3a88:	c0 91 96 00 	lds	r28, 0x0096
    3a8c:	d0 91 97 00 	lds	r29, 0x0097
      case 5:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
        OCR3A=ICR3-vAl;
        break;
      case 2:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    3a90:	0e 94 bb 79 	call	0xf376	; 0xf376 <__fixsfsi>
        OCR3B=ICR3-vAl;
    3a94:	c6 1b       	sub	r28, r22
    3a96:	d7 0b       	sbc	r29, r23
    3a98:	d0 93 9b 00 	sts	0x009B, r29
    3a9c:	c0 93 9a 00 	sts	0x009A, r28
    3aa0:	44 c2       	rjmp	.+1160   	; 0x3f2a <_Z6angle2i+0x894>
        break;
      case 3:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    3aa2:	e6 e8       	ldi	r30, 0x86	; 134
    3aa4:	f0 e0       	ldi	r31, 0x00	; 0
    3aa6:	a0 80       	ld	r10, Z
    3aa8:	b1 80       	ldd	r11, Z+1	; 0x01
    3aaa:	80 80       	ld	r8, Z
    3aac:	91 80       	ldd	r9, Z+1	; 0x01
    3aae:	00 d0       	rcall	.+0      	; 0x3ab0 <_Z6angle2i+0x41a>
    3ab0:	0f 92       	push	r0
    3ab2:	4d b6       	in	r4, 0x3d	; 61
    3ab4:	5e b6       	in	r5, 0x3e	; 62
    3ab6:	08 94       	sec
    3ab8:	41 1c       	adc	r4, r1
    3aba:	51 1c       	adc	r5, r1
    3abc:	be 01       	movw	r22, r28
    3abe:	88 27       	eor	r24, r24
    3ac0:	77 fd       	sbrc	r23, 7
    3ac2:	80 95       	com	r24
    3ac4:	98 2f       	mov	r25, r24
    3ac6:	0e 94 ee 79 	call	0xf3dc	; 0xf3dc <__floatsisf>
    3aca:	7b 01       	movw	r14, r22
    3acc:	8c 01       	movw	r16, r24
    3ace:	c5 01       	movw	r24, r10
    3ad0:	68 e2       	ldi	r22, 0x28	; 40
    3ad2:	70 e0       	ldi	r23, 0x00	; 0
    3ad4:	0e 94 05 7b 	call	0xf60a	; 0xf60a <__udivmodhi4>
    3ad8:	80 e0       	ldi	r24, 0x00	; 0
    3ada:	90 e0       	ldi	r25, 0x00	; 0
    3adc:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    3ae0:	5b 01       	movw	r10, r22
    3ae2:	6c 01       	movw	r12, r24
    3ae4:	96 94       	lsr	r9
    3ae6:	87 94       	ror	r8
    3ae8:	96 94       	lsr	r9
    3aea:	87 94       	ror	r8
    3aec:	96 94       	lsr	r9
    3aee:	87 94       	ror	r8
    3af0:	b4 01       	movw	r22, r8
    3af2:	80 e0       	ldi	r24, 0x00	; 0
    3af4:	90 e0       	ldi	r25, 0x00	; 0
    3af6:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    3afa:	f2 01       	movw	r30, r4
    3afc:	60 83       	st	Z, r22
    3afe:	71 83       	std	Z+1, r23	; 0x01
    3b00:	82 83       	std	Z+2, r24	; 0x02
    3b02:	93 83       	std	Z+3, r25	; 0x03
    3b04:	c8 01       	movw	r24, r16
    3b06:	b7 01       	movw	r22, r14
    3b08:	20 e0       	ldi	r18, 0x00	; 0
    3b0a:	30 e0       	ldi	r19, 0x00	; 0
    3b0c:	a9 01       	movw	r20, r18
    3b0e:	0f 2e       	mov	r0, r31
    3b10:	f0 e0       	ldi	r31, 0x00	; 0
    3b12:	ef 2e       	mov	r14, r31
    3b14:	f0 e0       	ldi	r31, 0x00	; 0
    3b16:	ff 2e       	mov	r15, r31
    3b18:	f4 e3       	ldi	r31, 0x34	; 52
    3b1a:	0f 2f       	mov	r16, r31
    3b1c:	f3 e4       	ldi	r31, 0x43	; 67
    3b1e:	1f 2f       	mov	r17, r31
    3b20:	f0 2d       	mov	r31, r0
    3b22:	0e 94 a0 08 	call	0x1140	; 0x1140 <_Z3mapddddd>
    3b26:	0f 90       	pop	r0
    3b28:	0f 90       	pop	r0
    3b2a:	0f 90       	pop	r0
    3b2c:	0f 90       	pop	r0
        OCR3C=ICR3-vAl;
    3b2e:	c0 91 96 00 	lds	r28, 0x0096
    3b32:	d0 91 97 00 	lds	r29, 0x0097
      case 2:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
        OCR3B=ICR3-vAl;
        break;
      case 3:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    3b36:	0e 94 bb 79 	call	0xf376	; 0xf376 <__fixsfsi>
        OCR3C=ICR3-vAl;
    3b3a:	c6 1b       	sub	r28, r22
    3b3c:	d7 0b       	sbc	r29, r23
    3b3e:	d0 93 9d 00 	sts	0x009D, r29
    3b42:	c0 93 9c 00 	sts	0x009C, r28
    3b46:	f1 c1       	rjmp	.+994    	; 0x3f2a <_Z6angle2i+0x894>
        break;
      case 6:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    3b48:	e6 e8       	ldi	r30, 0x86	; 134
    3b4a:	f0 e0       	ldi	r31, 0x00	; 0
    3b4c:	a0 80       	ld	r10, Z
    3b4e:	b1 80       	ldd	r11, Z+1	; 0x01
    3b50:	80 80       	ld	r8, Z
    3b52:	91 80       	ldd	r9, Z+1	; 0x01
    3b54:	00 d0       	rcall	.+0      	; 0x3b56 <_Z6angle2i+0x4c0>
    3b56:	0f 92       	push	r0
    3b58:	4d b6       	in	r4, 0x3d	; 61
    3b5a:	5e b6       	in	r5, 0x3e	; 62
    3b5c:	08 94       	sec
    3b5e:	41 1c       	adc	r4, r1
    3b60:	51 1c       	adc	r5, r1
    3b62:	be 01       	movw	r22, r28
    3b64:	88 27       	eor	r24, r24
    3b66:	77 fd       	sbrc	r23, 7
    3b68:	80 95       	com	r24
    3b6a:	98 2f       	mov	r25, r24
    3b6c:	0e 94 ee 79 	call	0xf3dc	; 0xf3dc <__floatsisf>
    3b70:	7b 01       	movw	r14, r22
    3b72:	8c 01       	movw	r16, r24
    3b74:	c5 01       	movw	r24, r10
    3b76:	68 e2       	ldi	r22, 0x28	; 40
    3b78:	70 e0       	ldi	r23, 0x00	; 0
    3b7a:	0e 94 05 7b 	call	0xf60a	; 0xf60a <__udivmodhi4>
    3b7e:	80 e0       	ldi	r24, 0x00	; 0
    3b80:	90 e0       	ldi	r25, 0x00	; 0
    3b82:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    3b86:	5b 01       	movw	r10, r22
    3b88:	6c 01       	movw	r12, r24
    3b8a:	96 94       	lsr	r9
    3b8c:	87 94       	ror	r8
    3b8e:	96 94       	lsr	r9
    3b90:	87 94       	ror	r8
    3b92:	96 94       	lsr	r9
    3b94:	87 94       	ror	r8
    3b96:	b4 01       	movw	r22, r8
    3b98:	80 e0       	ldi	r24, 0x00	; 0
    3b9a:	90 e0       	ldi	r25, 0x00	; 0
    3b9c:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    3ba0:	f2 01       	movw	r30, r4
    3ba2:	60 83       	st	Z, r22
    3ba4:	71 83       	std	Z+1, r23	; 0x01
    3ba6:	82 83       	std	Z+2, r24	; 0x02
    3ba8:	93 83       	std	Z+3, r25	; 0x03
    3baa:	c8 01       	movw	r24, r16
    3bac:	b7 01       	movw	r22, r14
    3bae:	20 e0       	ldi	r18, 0x00	; 0
    3bb0:	30 e0       	ldi	r19, 0x00	; 0
    3bb2:	a9 01       	movw	r20, r18
    3bb4:	0f 2e       	mov	r0, r31
    3bb6:	f0 e0       	ldi	r31, 0x00	; 0
    3bb8:	ef 2e       	mov	r14, r31
    3bba:	f0 e0       	ldi	r31, 0x00	; 0
    3bbc:	ff 2e       	mov	r15, r31
    3bbe:	f4 e3       	ldi	r31, 0x34	; 52
    3bc0:	0f 2f       	mov	r16, r31
    3bc2:	f3 e4       	ldi	r31, 0x43	; 67
    3bc4:	1f 2f       	mov	r17, r31
    3bc6:	f0 2d       	mov	r31, r0
    3bc8:	0e 94 a0 08 	call	0x1140	; 0x1140 <_Z3mapddddd>
    3bcc:	0f 90       	pop	r0
    3bce:	0f 90       	pop	r0
    3bd0:	0f 90       	pop	r0
    3bd2:	0f 90       	pop	r0
        OCR4A=ICR4-vAl;
    3bd4:	c0 91 a6 00 	lds	r28, 0x00A6
    3bd8:	d0 91 a7 00 	lds	r29, 0x00A7
      case 3:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
        OCR3C=ICR3-vAl;
        break;
      case 6:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    3bdc:	0e 94 bb 79 	call	0xf376	; 0xf376 <__fixsfsi>
        OCR4A=ICR4-vAl;
    3be0:	c6 1b       	sub	r28, r22
    3be2:	d7 0b       	sbc	r29, r23
    3be4:	d0 93 a9 00 	sts	0x00A9, r29
    3be8:	c0 93 a8 00 	sts	0x00A8, r28
    3bec:	9e c1       	rjmp	.+828    	; 0x3f2a <_Z6angle2i+0x894>
        break;
      case 7:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    3bee:	e6 e8       	ldi	r30, 0x86	; 134
    3bf0:	f0 e0       	ldi	r31, 0x00	; 0
    3bf2:	a0 80       	ld	r10, Z
    3bf4:	b1 80       	ldd	r11, Z+1	; 0x01
    3bf6:	80 80       	ld	r8, Z
    3bf8:	91 80       	ldd	r9, Z+1	; 0x01
    3bfa:	00 d0       	rcall	.+0      	; 0x3bfc <_Z6angle2i+0x566>
    3bfc:	0f 92       	push	r0
    3bfe:	4d b6       	in	r4, 0x3d	; 61
    3c00:	5e b6       	in	r5, 0x3e	; 62
    3c02:	08 94       	sec
    3c04:	41 1c       	adc	r4, r1
    3c06:	51 1c       	adc	r5, r1
    3c08:	be 01       	movw	r22, r28
    3c0a:	88 27       	eor	r24, r24
    3c0c:	77 fd       	sbrc	r23, 7
    3c0e:	80 95       	com	r24
    3c10:	98 2f       	mov	r25, r24
    3c12:	0e 94 ee 79 	call	0xf3dc	; 0xf3dc <__floatsisf>
    3c16:	7b 01       	movw	r14, r22
    3c18:	8c 01       	movw	r16, r24
    3c1a:	c5 01       	movw	r24, r10
    3c1c:	68 e2       	ldi	r22, 0x28	; 40
    3c1e:	70 e0       	ldi	r23, 0x00	; 0
    3c20:	0e 94 05 7b 	call	0xf60a	; 0xf60a <__udivmodhi4>
    3c24:	80 e0       	ldi	r24, 0x00	; 0
    3c26:	90 e0       	ldi	r25, 0x00	; 0
    3c28:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    3c2c:	5b 01       	movw	r10, r22
    3c2e:	6c 01       	movw	r12, r24
    3c30:	96 94       	lsr	r9
    3c32:	87 94       	ror	r8
    3c34:	96 94       	lsr	r9
    3c36:	87 94       	ror	r8
    3c38:	96 94       	lsr	r9
    3c3a:	87 94       	ror	r8
    3c3c:	b4 01       	movw	r22, r8
    3c3e:	80 e0       	ldi	r24, 0x00	; 0
    3c40:	90 e0       	ldi	r25, 0x00	; 0
    3c42:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    3c46:	f2 01       	movw	r30, r4
    3c48:	60 83       	st	Z, r22
    3c4a:	71 83       	std	Z+1, r23	; 0x01
    3c4c:	82 83       	std	Z+2, r24	; 0x02
    3c4e:	93 83       	std	Z+3, r25	; 0x03
    3c50:	c8 01       	movw	r24, r16
    3c52:	b7 01       	movw	r22, r14
    3c54:	20 e0       	ldi	r18, 0x00	; 0
    3c56:	30 e0       	ldi	r19, 0x00	; 0
    3c58:	a9 01       	movw	r20, r18
    3c5a:	0f 2e       	mov	r0, r31
    3c5c:	f0 e0       	ldi	r31, 0x00	; 0
    3c5e:	ef 2e       	mov	r14, r31
    3c60:	f0 e0       	ldi	r31, 0x00	; 0
    3c62:	ff 2e       	mov	r15, r31
    3c64:	f4 e3       	ldi	r31, 0x34	; 52
    3c66:	0f 2f       	mov	r16, r31
    3c68:	f3 e4       	ldi	r31, 0x43	; 67
    3c6a:	1f 2f       	mov	r17, r31
    3c6c:	f0 2d       	mov	r31, r0
    3c6e:	0e 94 a0 08 	call	0x1140	; 0x1140 <_Z3mapddddd>
    3c72:	0f 90       	pop	r0
    3c74:	0f 90       	pop	r0
    3c76:	0f 90       	pop	r0
    3c78:	0f 90       	pop	r0
        OCR4B=ICR4-vAl;
    3c7a:	c0 91 a6 00 	lds	r28, 0x00A6
    3c7e:	d0 91 a7 00 	lds	r29, 0x00A7
      case 6:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
        OCR4A=ICR4-vAl;
        break;
      case 7:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    3c82:	0e 94 bb 79 	call	0xf376	; 0xf376 <__fixsfsi>
        OCR4B=ICR4-vAl;
    3c86:	c6 1b       	sub	r28, r22
    3c88:	d7 0b       	sbc	r29, r23
    3c8a:	d0 93 ab 00 	sts	0x00AB, r29
    3c8e:	c0 93 aa 00 	sts	0x00AA, r28
    3c92:	4b c1       	rjmp	.+662    	; 0x3f2a <_Z6angle2i+0x894>
        break; 
      case 8:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    3c94:	e6 e8       	ldi	r30, 0x86	; 134
    3c96:	f0 e0       	ldi	r31, 0x00	; 0
    3c98:	a0 80       	ld	r10, Z
    3c9a:	b1 80       	ldd	r11, Z+1	; 0x01
    3c9c:	80 80       	ld	r8, Z
    3c9e:	91 80       	ldd	r9, Z+1	; 0x01
    3ca0:	00 d0       	rcall	.+0      	; 0x3ca2 <_Z6angle2i+0x60c>
    3ca2:	0f 92       	push	r0
    3ca4:	4d b6       	in	r4, 0x3d	; 61
    3ca6:	5e b6       	in	r5, 0x3e	; 62
    3ca8:	08 94       	sec
    3caa:	41 1c       	adc	r4, r1
    3cac:	51 1c       	adc	r5, r1
    3cae:	be 01       	movw	r22, r28
    3cb0:	88 27       	eor	r24, r24
    3cb2:	77 fd       	sbrc	r23, 7
    3cb4:	80 95       	com	r24
    3cb6:	98 2f       	mov	r25, r24
    3cb8:	0e 94 ee 79 	call	0xf3dc	; 0xf3dc <__floatsisf>
    3cbc:	7b 01       	movw	r14, r22
    3cbe:	8c 01       	movw	r16, r24
    3cc0:	c5 01       	movw	r24, r10
    3cc2:	68 e2       	ldi	r22, 0x28	; 40
    3cc4:	70 e0       	ldi	r23, 0x00	; 0
    3cc6:	0e 94 05 7b 	call	0xf60a	; 0xf60a <__udivmodhi4>
    3cca:	80 e0       	ldi	r24, 0x00	; 0
    3ccc:	90 e0       	ldi	r25, 0x00	; 0
    3cce:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    3cd2:	5b 01       	movw	r10, r22
    3cd4:	6c 01       	movw	r12, r24
    3cd6:	96 94       	lsr	r9
    3cd8:	87 94       	ror	r8
    3cda:	96 94       	lsr	r9
    3cdc:	87 94       	ror	r8
    3cde:	96 94       	lsr	r9
    3ce0:	87 94       	ror	r8
    3ce2:	b4 01       	movw	r22, r8
    3ce4:	80 e0       	ldi	r24, 0x00	; 0
    3ce6:	90 e0       	ldi	r25, 0x00	; 0
    3ce8:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    3cec:	f2 01       	movw	r30, r4
    3cee:	60 83       	st	Z, r22
    3cf0:	71 83       	std	Z+1, r23	; 0x01
    3cf2:	82 83       	std	Z+2, r24	; 0x02
    3cf4:	93 83       	std	Z+3, r25	; 0x03
    3cf6:	c8 01       	movw	r24, r16
    3cf8:	b7 01       	movw	r22, r14
    3cfa:	20 e0       	ldi	r18, 0x00	; 0
    3cfc:	30 e0       	ldi	r19, 0x00	; 0
    3cfe:	a9 01       	movw	r20, r18
    3d00:	0f 2e       	mov	r0, r31
    3d02:	f0 e0       	ldi	r31, 0x00	; 0
    3d04:	ef 2e       	mov	r14, r31
    3d06:	f0 e0       	ldi	r31, 0x00	; 0
    3d08:	ff 2e       	mov	r15, r31
    3d0a:	f4 e3       	ldi	r31, 0x34	; 52
    3d0c:	0f 2f       	mov	r16, r31
    3d0e:	f3 e4       	ldi	r31, 0x43	; 67
    3d10:	1f 2f       	mov	r17, r31
    3d12:	f0 2d       	mov	r31, r0
    3d14:	0e 94 a0 08 	call	0x1140	; 0x1140 <_Z3mapddddd>
    3d18:	0f 90       	pop	r0
    3d1a:	0f 90       	pop	r0
    3d1c:	0f 90       	pop	r0
    3d1e:	0f 90       	pop	r0
        OCR4C=ICR4-vAl;
    3d20:	c0 91 a6 00 	lds	r28, 0x00A6
    3d24:	d0 91 a7 00 	lds	r29, 0x00A7
      case 7:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
        OCR4B=ICR4-vAl;
        break; 
      case 8:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    3d28:	0e 94 bb 79 	call	0xf376	; 0xf376 <__fixsfsi>
        OCR4C=ICR4-vAl;
    3d2c:	c6 1b       	sub	r28, r22
    3d2e:	d7 0b       	sbc	r29, r23
    3d30:	d0 93 ad 00 	sts	0x00AD, r29
    3d34:	c0 93 ac 00 	sts	0x00AC, r28
    3d38:	f8 c0       	rjmp	.+496    	; 0x3f2a <_Z6angle2i+0x894>
        break;
      case 46:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    3d3a:	e6 e8       	ldi	r30, 0x86	; 134
    3d3c:	f0 e0       	ldi	r31, 0x00	; 0
    3d3e:	a0 80       	ld	r10, Z
    3d40:	b1 80       	ldd	r11, Z+1	; 0x01
    3d42:	80 80       	ld	r8, Z
    3d44:	91 80       	ldd	r9, Z+1	; 0x01
    3d46:	00 d0       	rcall	.+0      	; 0x3d48 <_Z6angle2i+0x6b2>
    3d48:	0f 92       	push	r0
    3d4a:	4d b6       	in	r4, 0x3d	; 61
    3d4c:	5e b6       	in	r5, 0x3e	; 62
    3d4e:	08 94       	sec
    3d50:	41 1c       	adc	r4, r1
    3d52:	51 1c       	adc	r5, r1
    3d54:	be 01       	movw	r22, r28
    3d56:	88 27       	eor	r24, r24
    3d58:	77 fd       	sbrc	r23, 7
    3d5a:	80 95       	com	r24
    3d5c:	98 2f       	mov	r25, r24
    3d5e:	0e 94 ee 79 	call	0xf3dc	; 0xf3dc <__floatsisf>
    3d62:	7b 01       	movw	r14, r22
    3d64:	8c 01       	movw	r16, r24
    3d66:	c5 01       	movw	r24, r10
    3d68:	68 e2       	ldi	r22, 0x28	; 40
    3d6a:	70 e0       	ldi	r23, 0x00	; 0
    3d6c:	0e 94 05 7b 	call	0xf60a	; 0xf60a <__udivmodhi4>
    3d70:	80 e0       	ldi	r24, 0x00	; 0
    3d72:	90 e0       	ldi	r25, 0x00	; 0
    3d74:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    3d78:	5b 01       	movw	r10, r22
    3d7a:	6c 01       	movw	r12, r24
    3d7c:	96 94       	lsr	r9
    3d7e:	87 94       	ror	r8
    3d80:	96 94       	lsr	r9
    3d82:	87 94       	ror	r8
    3d84:	96 94       	lsr	r9
    3d86:	87 94       	ror	r8
    3d88:	b4 01       	movw	r22, r8
    3d8a:	80 e0       	ldi	r24, 0x00	; 0
    3d8c:	90 e0       	ldi	r25, 0x00	; 0
    3d8e:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    3d92:	f2 01       	movw	r30, r4
    3d94:	60 83       	st	Z, r22
    3d96:	71 83       	std	Z+1, r23	; 0x01
    3d98:	82 83       	std	Z+2, r24	; 0x02
    3d9a:	93 83       	std	Z+3, r25	; 0x03
    3d9c:	c8 01       	movw	r24, r16
    3d9e:	b7 01       	movw	r22, r14
    3da0:	20 e0       	ldi	r18, 0x00	; 0
    3da2:	30 e0       	ldi	r19, 0x00	; 0
    3da4:	a9 01       	movw	r20, r18
    3da6:	0f 2e       	mov	r0, r31
    3da8:	f0 e0       	ldi	r31, 0x00	; 0
    3daa:	ef 2e       	mov	r14, r31
    3dac:	f0 e0       	ldi	r31, 0x00	; 0
    3dae:	ff 2e       	mov	r15, r31
    3db0:	f4 e3       	ldi	r31, 0x34	; 52
    3db2:	0f 2f       	mov	r16, r31
    3db4:	f3 e4       	ldi	r31, 0x43	; 67
    3db6:	1f 2f       	mov	r17, r31
    3db8:	f0 2d       	mov	r31, r0
    3dba:	0e 94 a0 08 	call	0x1140	; 0x1140 <_Z3mapddddd>
    3dbe:	0f 90       	pop	r0
    3dc0:	0f 90       	pop	r0
    3dc2:	0f 90       	pop	r0
    3dc4:	0f 90       	pop	r0
        OCR5A=ICR5-vAl;
    3dc6:	c0 91 26 01 	lds	r28, 0x0126
    3dca:	d0 91 27 01 	lds	r29, 0x0127
      case 8:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
        OCR4C=ICR4-vAl;
        break;
      case 46:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    3dce:	0e 94 bb 79 	call	0xf376	; 0xf376 <__fixsfsi>
        OCR5A=ICR5-vAl;
    3dd2:	c6 1b       	sub	r28, r22
    3dd4:	d7 0b       	sbc	r29, r23
    3dd6:	d0 93 29 01 	sts	0x0129, r29
    3dda:	c0 93 28 01 	sts	0x0128, r28
    3dde:	a5 c0       	rjmp	.+330    	; 0x3f2a <_Z6angle2i+0x894>
        break;
      case 45:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    3de0:	e6 e8       	ldi	r30, 0x86	; 134
    3de2:	f0 e0       	ldi	r31, 0x00	; 0
    3de4:	a0 80       	ld	r10, Z
    3de6:	b1 80       	ldd	r11, Z+1	; 0x01
    3de8:	80 80       	ld	r8, Z
    3dea:	91 80       	ldd	r9, Z+1	; 0x01
    3dec:	00 d0       	rcall	.+0      	; 0x3dee <_Z6angle2i+0x758>
    3dee:	0f 92       	push	r0
    3df0:	4d b6       	in	r4, 0x3d	; 61
    3df2:	5e b6       	in	r5, 0x3e	; 62
    3df4:	08 94       	sec
    3df6:	41 1c       	adc	r4, r1
    3df8:	51 1c       	adc	r5, r1
    3dfa:	be 01       	movw	r22, r28
    3dfc:	88 27       	eor	r24, r24
    3dfe:	77 fd       	sbrc	r23, 7
    3e00:	80 95       	com	r24
    3e02:	98 2f       	mov	r25, r24
    3e04:	0e 94 ee 79 	call	0xf3dc	; 0xf3dc <__floatsisf>
    3e08:	7b 01       	movw	r14, r22
    3e0a:	8c 01       	movw	r16, r24
    3e0c:	c5 01       	movw	r24, r10
    3e0e:	68 e2       	ldi	r22, 0x28	; 40
    3e10:	70 e0       	ldi	r23, 0x00	; 0
    3e12:	0e 94 05 7b 	call	0xf60a	; 0xf60a <__udivmodhi4>
    3e16:	80 e0       	ldi	r24, 0x00	; 0
    3e18:	90 e0       	ldi	r25, 0x00	; 0
    3e1a:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    3e1e:	5b 01       	movw	r10, r22
    3e20:	6c 01       	movw	r12, r24
    3e22:	96 94       	lsr	r9
    3e24:	87 94       	ror	r8
    3e26:	96 94       	lsr	r9
    3e28:	87 94       	ror	r8
    3e2a:	96 94       	lsr	r9
    3e2c:	87 94       	ror	r8
    3e2e:	b4 01       	movw	r22, r8
    3e30:	80 e0       	ldi	r24, 0x00	; 0
    3e32:	90 e0       	ldi	r25, 0x00	; 0
    3e34:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    3e38:	f2 01       	movw	r30, r4
    3e3a:	60 83       	st	Z, r22
    3e3c:	71 83       	std	Z+1, r23	; 0x01
    3e3e:	82 83       	std	Z+2, r24	; 0x02
    3e40:	93 83       	std	Z+3, r25	; 0x03
    3e42:	c8 01       	movw	r24, r16
    3e44:	b7 01       	movw	r22, r14
    3e46:	20 e0       	ldi	r18, 0x00	; 0
    3e48:	30 e0       	ldi	r19, 0x00	; 0
    3e4a:	a9 01       	movw	r20, r18
    3e4c:	0f 2e       	mov	r0, r31
    3e4e:	f0 e0       	ldi	r31, 0x00	; 0
    3e50:	ef 2e       	mov	r14, r31
    3e52:	f0 e0       	ldi	r31, 0x00	; 0
    3e54:	ff 2e       	mov	r15, r31
    3e56:	f4 e3       	ldi	r31, 0x34	; 52
    3e58:	0f 2f       	mov	r16, r31
    3e5a:	f3 e4       	ldi	r31, 0x43	; 67
    3e5c:	1f 2f       	mov	r17, r31
    3e5e:	f0 2d       	mov	r31, r0
    3e60:	0e 94 a0 08 	call	0x1140	; 0x1140 <_Z3mapddddd>
    3e64:	0f 90       	pop	r0
    3e66:	0f 90       	pop	r0
    3e68:	0f 90       	pop	r0
    3e6a:	0f 90       	pop	r0
        OCR5B=ICR5-vAl;
    3e6c:	c0 91 26 01 	lds	r28, 0x0126
    3e70:	d0 91 27 01 	lds	r29, 0x0127
      case 46:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
        OCR5A=ICR5-vAl;
        break;
      case 45:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    3e74:	0e 94 bb 79 	call	0xf376	; 0xf376 <__fixsfsi>
        OCR5B=ICR5-vAl;
    3e78:	c6 1b       	sub	r28, r22
    3e7a:	d7 0b       	sbc	r29, r23
    3e7c:	d0 93 2b 01 	sts	0x012B, r29
    3e80:	c0 93 2a 01 	sts	0x012A, r28
    3e84:	52 c0       	rjmp	.+164    	; 0x3f2a <_Z6angle2i+0x894>
        break;
      case 44:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    3e86:	e6 e8       	ldi	r30, 0x86	; 134
    3e88:	f0 e0       	ldi	r31, 0x00	; 0
    3e8a:	a0 80       	ld	r10, Z
    3e8c:	b1 80       	ldd	r11, Z+1	; 0x01
    3e8e:	80 80       	ld	r8, Z
    3e90:	91 80       	ldd	r9, Z+1	; 0x01
    3e92:	00 d0       	rcall	.+0      	; 0x3e94 <_Z6angle2i+0x7fe>
    3e94:	0f 92       	push	r0
    3e96:	4d b6       	in	r4, 0x3d	; 61
    3e98:	5e b6       	in	r5, 0x3e	; 62
    3e9a:	08 94       	sec
    3e9c:	41 1c       	adc	r4, r1
    3e9e:	51 1c       	adc	r5, r1
    3ea0:	be 01       	movw	r22, r28
    3ea2:	88 27       	eor	r24, r24
    3ea4:	77 fd       	sbrc	r23, 7
    3ea6:	80 95       	com	r24
    3ea8:	98 2f       	mov	r25, r24
    3eaa:	0e 94 ee 79 	call	0xf3dc	; 0xf3dc <__floatsisf>
    3eae:	7b 01       	movw	r14, r22
    3eb0:	8c 01       	movw	r16, r24
    3eb2:	c5 01       	movw	r24, r10
    3eb4:	68 e2       	ldi	r22, 0x28	; 40
    3eb6:	70 e0       	ldi	r23, 0x00	; 0
    3eb8:	0e 94 05 7b 	call	0xf60a	; 0xf60a <__udivmodhi4>
    3ebc:	80 e0       	ldi	r24, 0x00	; 0
    3ebe:	90 e0       	ldi	r25, 0x00	; 0
    3ec0:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    3ec4:	5b 01       	movw	r10, r22
    3ec6:	6c 01       	movw	r12, r24
    3ec8:	96 94       	lsr	r9
    3eca:	87 94       	ror	r8
    3ecc:	96 94       	lsr	r9
    3ece:	87 94       	ror	r8
    3ed0:	96 94       	lsr	r9
    3ed2:	87 94       	ror	r8
    3ed4:	b4 01       	movw	r22, r8
    3ed6:	80 e0       	ldi	r24, 0x00	; 0
    3ed8:	90 e0       	ldi	r25, 0x00	; 0
    3eda:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    3ede:	f2 01       	movw	r30, r4
    3ee0:	60 83       	st	Z, r22
    3ee2:	71 83       	std	Z+1, r23	; 0x01
    3ee4:	82 83       	std	Z+2, r24	; 0x02
    3ee6:	93 83       	std	Z+3, r25	; 0x03
    3ee8:	c8 01       	movw	r24, r16
    3eea:	b7 01       	movw	r22, r14
    3eec:	20 e0       	ldi	r18, 0x00	; 0
    3eee:	30 e0       	ldi	r19, 0x00	; 0
    3ef0:	a9 01       	movw	r20, r18
    3ef2:	0f 2e       	mov	r0, r31
    3ef4:	f0 e0       	ldi	r31, 0x00	; 0
    3ef6:	ef 2e       	mov	r14, r31
    3ef8:	f0 e0       	ldi	r31, 0x00	; 0
    3efa:	ff 2e       	mov	r15, r31
    3efc:	f4 e3       	ldi	r31, 0x34	; 52
    3efe:	0f 2f       	mov	r16, r31
    3f00:	f3 e4       	ldi	r31, 0x43	; 67
    3f02:	1f 2f       	mov	r17, r31
    3f04:	f0 2d       	mov	r31, r0
    3f06:	0e 94 a0 08 	call	0x1140	; 0x1140 <_Z3mapddddd>
    3f0a:	0f 90       	pop	r0
    3f0c:	0f 90       	pop	r0
    3f0e:	0f 90       	pop	r0
    3f10:	0f 90       	pop	r0
        OCR5C=ICR5-vAl;
    3f12:	c0 91 26 01 	lds	r28, 0x0126
    3f16:	d0 91 27 01 	lds	r29, 0x0127
      case 45:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
        OCR5B=ICR5-vAl;
        break;
      case 44:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    3f1a:	0e 94 bb 79 	call	0xf376	; 0xf376 <__fixsfsi>
        OCR5C=ICR5-vAl;
    3f1e:	c6 1b       	sub	r28, r22
    3f20:	d7 0b       	sbc	r29, r23
    3f22:	d0 93 2d 01 	sts	0x012D, r29
    3f26:	c0 93 2c 01 	sts	0x012C, r28

		p.write(v);
		q.write(y);
    3f2a:	60 91 cc 02 	lds	r22, 0x02CC
    3f2e:	70 91 cd 02 	lds	r23, 0x02CD
     }
  }

  void write(int vAl)           //PIN=servo pin no. on mega,vAl=angle F_CPU for the servo at pin
  {
    switch(pIn)
    3f32:	80 91 d5 02 	lds	r24, 0x02D5
    3f36:	88 30       	cpi	r24, 0x08	; 8
    3f38:	09 f4       	brne	.+2      	; 0x3f3c <_Z6angle2i+0x8a6>
    3f3a:	63 c2       	rjmp	.+1222   	; 0x4402 <_Z6angle2i+0xd6c>
    3f3c:	89 30       	cpi	r24, 0x09	; 9
    3f3e:	98 f4       	brcc	.+38     	; 0x3f66 <_Z6angle2i+0x8d0>
    3f40:	85 30       	cpi	r24, 0x05	; 5
    3f42:	09 f4       	brne	.+2      	; 0x3f46 <_Z6angle2i+0x8b0>
    3f44:	c4 c0       	rjmp	.+392    	; 0x40ce <_Z6angle2i+0xa38>
    3f46:	86 30       	cpi	r24, 0x06	; 6
    3f48:	38 f4       	brcc	.+14     	; 0x3f58 <_Z6angle2i+0x8c2>
    3f4a:	82 30       	cpi	r24, 0x02	; 2
    3f4c:	09 f4       	brne	.+2      	; 0x3f50 <_Z6angle2i+0x8ba>
    3f4e:	11 c1       	rjmp	.+546    	; 0x4172 <_Z6angle2i+0xadc>
    3f50:	83 30       	cpi	r24, 0x03	; 3
    3f52:	09 f0       	breq	.+2      	; 0x3f56 <_Z6angle2i+0x8c0>
    3f54:	9d c3       	rjmp	.+1850   	; 0x4690 <_Z6angle2i+0xffa>
    3f56:	5f c1       	rjmp	.+702    	; 0x4216 <_Z6angle2i+0xb80>
    3f58:	86 30       	cpi	r24, 0x06	; 6
    3f5a:	09 f4       	brne	.+2      	; 0x3f5e <_Z6angle2i+0x8c8>
    3f5c:	ae c1       	rjmp	.+860    	; 0x42ba <_Z6angle2i+0xc24>
    3f5e:	87 30       	cpi	r24, 0x07	; 7
    3f60:	09 f0       	breq	.+2      	; 0x3f64 <_Z6angle2i+0x8ce>
    3f62:	96 c3       	rjmp	.+1836   	; 0x4690 <_Z6angle2i+0xffa>
    3f64:	fc c1       	rjmp	.+1016   	; 0x435e <_Z6angle2i+0xcc8>
    3f66:	8c 32       	cpi	r24, 0x2C	; 44
    3f68:	09 f4       	brne	.+2      	; 0x3f6c <_Z6angle2i+0x8d6>
    3f6a:	41 c3       	rjmp	.+1666   	; 0x45ee <_Z6angle2i+0xf58>
    3f6c:	8d 32       	cpi	r24, 0x2D	; 45
    3f6e:	30 f4       	brcc	.+12     	; 0x3f7c <_Z6angle2i+0x8e6>
    3f70:	8b 30       	cpi	r24, 0x0B	; 11
    3f72:	59 f0       	breq	.+22     	; 0x3f8a <_Z6angle2i+0x8f4>
    3f74:	8c 30       	cpi	r24, 0x0C	; 12
    3f76:	09 f0       	breq	.+2      	; 0x3f7a <_Z6angle2i+0x8e4>
    3f78:	8b c3       	rjmp	.+1814   	; 0x4690 <_Z6angle2i+0xffa>
    3f7a:	58 c0       	rjmp	.+176    	; 0x402c <_Z6angle2i+0x996>
    3f7c:	8d 32       	cpi	r24, 0x2D	; 45
    3f7e:	09 f4       	brne	.+2      	; 0x3f82 <_Z6angle2i+0x8ec>
    3f80:	e4 c2       	rjmp	.+1480   	; 0x454a <_Z6angle2i+0xeb4>
    3f82:	8e 32       	cpi	r24, 0x2E	; 46
    3f84:	09 f0       	breq	.+2      	; 0x3f88 <_Z6angle2i+0x8f2>
    3f86:	84 c3       	rjmp	.+1800   	; 0x4690 <_Z6angle2i+0xffa>
    3f88:	8e c2       	rjmp	.+1308   	; 0x44a6 <_Z6angle2i+0xe10>
    {
     case 11:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    3f8a:	c6 e8       	ldi	r28, 0x86	; 134
    3f8c:	d0 e0       	ldi	r29, 0x00	; 0
    3f8e:	08 81       	ld	r16, Y
    3f90:	19 81       	ldd	r17, Y+1	; 0x01
    3f92:	e8 80       	ld	r14, Y
    3f94:	f9 80       	ldd	r15, Y+1	; 0x01
    3f96:	00 d0       	rcall	.+0      	; 0x3f98 <_Z6angle2i+0x902>
    3f98:	0f 92       	push	r0
    3f9a:	8d b6       	in	r8, 0x3d	; 61
    3f9c:	9e b6       	in	r9, 0x3e	; 62
    3f9e:	08 94       	sec
    3fa0:	81 1c       	adc	r8, r1
    3fa2:	91 1c       	adc	r9, r1
    3fa4:	88 27       	eor	r24, r24
    3fa6:	77 fd       	sbrc	r23, 7
    3fa8:	80 95       	com	r24
    3faa:	98 2f       	mov	r25, r24
    3fac:	0e 94 ee 79 	call	0xf3dc	; 0xf3dc <__floatsisf>
    3fb0:	2b 01       	movw	r4, r22
    3fb2:	3c 01       	movw	r6, r24
    3fb4:	c8 01       	movw	r24, r16
    3fb6:	68 e2       	ldi	r22, 0x28	; 40
    3fb8:	70 e0       	ldi	r23, 0x00	; 0
    3fba:	0e 94 05 7b 	call	0xf60a	; 0xf60a <__udivmodhi4>
    3fbe:	80 e0       	ldi	r24, 0x00	; 0
    3fc0:	90 e0       	ldi	r25, 0x00	; 0
    3fc2:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    3fc6:	5b 01       	movw	r10, r22
    3fc8:	6c 01       	movw	r12, r24
    3fca:	f6 94       	lsr	r15
    3fcc:	e7 94       	ror	r14
    3fce:	f6 94       	lsr	r15
    3fd0:	e7 94       	ror	r14
    3fd2:	f6 94       	lsr	r15
    3fd4:	e7 94       	ror	r14
    3fd6:	b7 01       	movw	r22, r14
    3fd8:	80 e0       	ldi	r24, 0x00	; 0
    3fda:	90 e0       	ldi	r25, 0x00	; 0
    3fdc:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    3fe0:	f4 01       	movw	r30, r8
    3fe2:	60 83       	st	Z, r22
    3fe4:	71 83       	std	Z+1, r23	; 0x01
    3fe6:	82 83       	std	Z+2, r24	; 0x02
    3fe8:	93 83       	std	Z+3, r25	; 0x03
    3fea:	c3 01       	movw	r24, r6
    3fec:	b2 01       	movw	r22, r4
    3fee:	20 e0       	ldi	r18, 0x00	; 0
    3ff0:	30 e0       	ldi	r19, 0x00	; 0
    3ff2:	a9 01       	movw	r20, r18
    3ff4:	0f 2e       	mov	r0, r31
    3ff6:	f0 e0       	ldi	r31, 0x00	; 0
    3ff8:	ef 2e       	mov	r14, r31
    3ffa:	f0 e0       	ldi	r31, 0x00	; 0
    3ffc:	ff 2e       	mov	r15, r31
    3ffe:	f4 e3       	ldi	r31, 0x34	; 52
    4000:	0f 2f       	mov	r16, r31
    4002:	f3 e4       	ldi	r31, 0x43	; 67
    4004:	1f 2f       	mov	r17, r31
    4006:	f0 2d       	mov	r31, r0
    4008:	0e 94 a0 08 	call	0x1140	; 0x1140 <_Z3mapddddd>
    400c:	0f 90       	pop	r0
    400e:	0f 90       	pop	r0
    4010:	0f 90       	pop	r0
    4012:	0f 90       	pop	r0
        OCR1A=ICR1-vAl;
    4014:	09 90       	ld	r0, Y+
    4016:	d8 81       	ld	r29, Y
    4018:	c0 2d       	mov	r28, r0
  void write(int vAl)           //PIN=servo pin no. on mega,vAl=angle F_CPU for the servo at pin
  {
    switch(pIn)
    {
     case 11:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    401a:	0e 94 bb 79 	call	0xf376	; 0xf376 <__fixsfsi>
        OCR1A=ICR1-vAl;
    401e:	c6 1b       	sub	r28, r22
    4020:	d7 0b       	sbc	r29, r23
    4022:	d0 93 89 00 	sts	0x0089, r29
    4026:	c0 93 88 00 	sts	0x0088, r28
    402a:	32 c3       	rjmp	.+1636   	; 0x4690 <_Z6angle2i+0xffa>
        break;
      case 12:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    402c:	c6 e8       	ldi	r28, 0x86	; 134
    402e:	d0 e0       	ldi	r29, 0x00	; 0
    4030:	08 81       	ld	r16, Y
    4032:	19 81       	ldd	r17, Y+1	; 0x01
    4034:	e8 80       	ld	r14, Y
    4036:	f9 80       	ldd	r15, Y+1	; 0x01
    4038:	00 d0       	rcall	.+0      	; 0x403a <_Z6angle2i+0x9a4>
    403a:	0f 92       	push	r0
    403c:	8d b6       	in	r8, 0x3d	; 61
    403e:	9e b6       	in	r9, 0x3e	; 62
    4040:	08 94       	sec
    4042:	81 1c       	adc	r8, r1
    4044:	91 1c       	adc	r9, r1
    4046:	88 27       	eor	r24, r24
    4048:	77 fd       	sbrc	r23, 7
    404a:	80 95       	com	r24
    404c:	98 2f       	mov	r25, r24
    404e:	0e 94 ee 79 	call	0xf3dc	; 0xf3dc <__floatsisf>
    4052:	2b 01       	movw	r4, r22
    4054:	3c 01       	movw	r6, r24
    4056:	c8 01       	movw	r24, r16
    4058:	68 e2       	ldi	r22, 0x28	; 40
    405a:	70 e0       	ldi	r23, 0x00	; 0
    405c:	0e 94 05 7b 	call	0xf60a	; 0xf60a <__udivmodhi4>
    4060:	80 e0       	ldi	r24, 0x00	; 0
    4062:	90 e0       	ldi	r25, 0x00	; 0
    4064:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    4068:	5b 01       	movw	r10, r22
    406a:	6c 01       	movw	r12, r24
    406c:	f6 94       	lsr	r15
    406e:	e7 94       	ror	r14
    4070:	f6 94       	lsr	r15
    4072:	e7 94       	ror	r14
    4074:	f6 94       	lsr	r15
    4076:	e7 94       	ror	r14
    4078:	b7 01       	movw	r22, r14
    407a:	80 e0       	ldi	r24, 0x00	; 0
    407c:	90 e0       	ldi	r25, 0x00	; 0
    407e:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    4082:	f4 01       	movw	r30, r8
    4084:	60 83       	st	Z, r22
    4086:	71 83       	std	Z+1, r23	; 0x01
    4088:	82 83       	std	Z+2, r24	; 0x02
    408a:	93 83       	std	Z+3, r25	; 0x03
    408c:	c3 01       	movw	r24, r6
    408e:	b2 01       	movw	r22, r4
    4090:	20 e0       	ldi	r18, 0x00	; 0
    4092:	30 e0       	ldi	r19, 0x00	; 0
    4094:	a9 01       	movw	r20, r18
    4096:	0f 2e       	mov	r0, r31
    4098:	f0 e0       	ldi	r31, 0x00	; 0
    409a:	ef 2e       	mov	r14, r31
    409c:	f0 e0       	ldi	r31, 0x00	; 0
    409e:	ff 2e       	mov	r15, r31
    40a0:	f4 e3       	ldi	r31, 0x34	; 52
    40a2:	0f 2f       	mov	r16, r31
    40a4:	f3 e4       	ldi	r31, 0x43	; 67
    40a6:	1f 2f       	mov	r17, r31
    40a8:	f0 2d       	mov	r31, r0
    40aa:	0e 94 a0 08 	call	0x1140	; 0x1140 <_Z3mapddddd>
    40ae:	0f 90       	pop	r0
    40b0:	0f 90       	pop	r0
    40b2:	0f 90       	pop	r0
    40b4:	0f 90       	pop	r0
        OCR1B=ICR1-vAl;
    40b6:	09 90       	ld	r0, Y+
    40b8:	d8 81       	ld	r29, Y
    40ba:	c0 2d       	mov	r28, r0
     case 11:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
        OCR1A=ICR1-vAl;
        break;
      case 12:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    40bc:	0e 94 bb 79 	call	0xf376	; 0xf376 <__fixsfsi>
        OCR1B=ICR1-vAl;
    40c0:	c6 1b       	sub	r28, r22
    40c2:	d7 0b       	sbc	r29, r23
    40c4:	d0 93 8b 00 	sts	0x008B, r29
    40c8:	c0 93 8a 00 	sts	0x008A, r28
    40cc:	e1 c2       	rjmp	.+1474   	; 0x4690 <_Z6angle2i+0xffa>
        break;
      case 5:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    40ce:	e6 e8       	ldi	r30, 0x86	; 134
    40d0:	f0 e0       	ldi	r31, 0x00	; 0
    40d2:	c0 81       	ld	r28, Z
    40d4:	d1 81       	ldd	r29, Z+1	; 0x01
    40d6:	80 80       	ld	r8, Z
    40d8:	91 80       	ldd	r9, Z+1	; 0x01
    40da:	00 d0       	rcall	.+0      	; 0x40dc <_Z6angle2i+0xa46>
    40dc:	0f 92       	push	r0
    40de:	4d b6       	in	r4, 0x3d	; 61
    40e0:	5e b6       	in	r5, 0x3e	; 62
    40e2:	08 94       	sec
    40e4:	41 1c       	adc	r4, r1
    40e6:	51 1c       	adc	r5, r1
    40e8:	88 27       	eor	r24, r24
    40ea:	77 fd       	sbrc	r23, 7
    40ec:	80 95       	com	r24
    40ee:	98 2f       	mov	r25, r24
    40f0:	0e 94 ee 79 	call	0xf3dc	; 0xf3dc <__floatsisf>
    40f4:	7b 01       	movw	r14, r22
    40f6:	8c 01       	movw	r16, r24
    40f8:	ce 01       	movw	r24, r28
    40fa:	68 e2       	ldi	r22, 0x28	; 40
    40fc:	70 e0       	ldi	r23, 0x00	; 0
    40fe:	0e 94 05 7b 	call	0xf60a	; 0xf60a <__udivmodhi4>
    4102:	80 e0       	ldi	r24, 0x00	; 0
    4104:	90 e0       	ldi	r25, 0x00	; 0
    4106:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    410a:	5b 01       	movw	r10, r22
    410c:	6c 01       	movw	r12, r24
    410e:	96 94       	lsr	r9
    4110:	87 94       	ror	r8
    4112:	96 94       	lsr	r9
    4114:	87 94       	ror	r8
    4116:	96 94       	lsr	r9
    4118:	87 94       	ror	r8
    411a:	b4 01       	movw	r22, r8
    411c:	80 e0       	ldi	r24, 0x00	; 0
    411e:	90 e0       	ldi	r25, 0x00	; 0
    4120:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    4124:	f2 01       	movw	r30, r4
    4126:	60 83       	st	Z, r22
    4128:	71 83       	std	Z+1, r23	; 0x01
    412a:	82 83       	std	Z+2, r24	; 0x02
    412c:	93 83       	std	Z+3, r25	; 0x03
    412e:	c8 01       	movw	r24, r16
    4130:	b7 01       	movw	r22, r14
    4132:	20 e0       	ldi	r18, 0x00	; 0
    4134:	30 e0       	ldi	r19, 0x00	; 0
    4136:	a9 01       	movw	r20, r18
    4138:	0f 2e       	mov	r0, r31
    413a:	f0 e0       	ldi	r31, 0x00	; 0
    413c:	ef 2e       	mov	r14, r31
    413e:	f0 e0       	ldi	r31, 0x00	; 0
    4140:	ff 2e       	mov	r15, r31
    4142:	f4 e3       	ldi	r31, 0x34	; 52
    4144:	0f 2f       	mov	r16, r31
    4146:	f3 e4       	ldi	r31, 0x43	; 67
    4148:	1f 2f       	mov	r17, r31
    414a:	f0 2d       	mov	r31, r0
    414c:	0e 94 a0 08 	call	0x1140	; 0x1140 <_Z3mapddddd>
    4150:	0f 90       	pop	r0
    4152:	0f 90       	pop	r0
    4154:	0f 90       	pop	r0
    4156:	0f 90       	pop	r0
        OCR3A=ICR3-vAl;
    4158:	c0 91 96 00 	lds	r28, 0x0096
    415c:	d0 91 97 00 	lds	r29, 0x0097
      case 12:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
        OCR1B=ICR1-vAl;
        break;
      case 5:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    4160:	0e 94 bb 79 	call	0xf376	; 0xf376 <__fixsfsi>
        OCR3A=ICR3-vAl;
    4164:	c6 1b       	sub	r28, r22
    4166:	d7 0b       	sbc	r29, r23
    4168:	d0 93 99 00 	sts	0x0099, r29
    416c:	c0 93 98 00 	sts	0x0098, r28
    4170:	8f c2       	rjmp	.+1310   	; 0x4690 <_Z6angle2i+0xffa>
        break;
      case 2:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    4172:	e6 e8       	ldi	r30, 0x86	; 134
    4174:	f0 e0       	ldi	r31, 0x00	; 0
    4176:	c0 81       	ld	r28, Z
    4178:	d1 81       	ldd	r29, Z+1	; 0x01
    417a:	80 80       	ld	r8, Z
    417c:	91 80       	ldd	r9, Z+1	; 0x01
    417e:	00 d0       	rcall	.+0      	; 0x4180 <_Z6angle2i+0xaea>
    4180:	0f 92       	push	r0
    4182:	4d b6       	in	r4, 0x3d	; 61
    4184:	5e b6       	in	r5, 0x3e	; 62
    4186:	08 94       	sec
    4188:	41 1c       	adc	r4, r1
    418a:	51 1c       	adc	r5, r1
    418c:	88 27       	eor	r24, r24
    418e:	77 fd       	sbrc	r23, 7
    4190:	80 95       	com	r24
    4192:	98 2f       	mov	r25, r24
    4194:	0e 94 ee 79 	call	0xf3dc	; 0xf3dc <__floatsisf>
    4198:	7b 01       	movw	r14, r22
    419a:	8c 01       	movw	r16, r24
    419c:	ce 01       	movw	r24, r28
    419e:	68 e2       	ldi	r22, 0x28	; 40
    41a0:	70 e0       	ldi	r23, 0x00	; 0
    41a2:	0e 94 05 7b 	call	0xf60a	; 0xf60a <__udivmodhi4>
    41a6:	80 e0       	ldi	r24, 0x00	; 0
    41a8:	90 e0       	ldi	r25, 0x00	; 0
    41aa:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    41ae:	5b 01       	movw	r10, r22
    41b0:	6c 01       	movw	r12, r24
    41b2:	96 94       	lsr	r9
    41b4:	87 94       	ror	r8
    41b6:	96 94       	lsr	r9
    41b8:	87 94       	ror	r8
    41ba:	96 94       	lsr	r9
    41bc:	87 94       	ror	r8
    41be:	b4 01       	movw	r22, r8
    41c0:	80 e0       	ldi	r24, 0x00	; 0
    41c2:	90 e0       	ldi	r25, 0x00	; 0
    41c4:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    41c8:	f2 01       	movw	r30, r4
    41ca:	60 83       	st	Z, r22
    41cc:	71 83       	std	Z+1, r23	; 0x01
    41ce:	82 83       	std	Z+2, r24	; 0x02
    41d0:	93 83       	std	Z+3, r25	; 0x03
    41d2:	c8 01       	movw	r24, r16
    41d4:	b7 01       	movw	r22, r14
    41d6:	20 e0       	ldi	r18, 0x00	; 0
    41d8:	30 e0       	ldi	r19, 0x00	; 0
    41da:	a9 01       	movw	r20, r18
    41dc:	0f 2e       	mov	r0, r31
    41de:	f0 e0       	ldi	r31, 0x00	; 0
    41e0:	ef 2e       	mov	r14, r31
    41e2:	f0 e0       	ldi	r31, 0x00	; 0
    41e4:	ff 2e       	mov	r15, r31
    41e6:	f4 e3       	ldi	r31, 0x34	; 52
    41e8:	0f 2f       	mov	r16, r31
    41ea:	f3 e4       	ldi	r31, 0x43	; 67
    41ec:	1f 2f       	mov	r17, r31
    41ee:	f0 2d       	mov	r31, r0
    41f0:	0e 94 a0 08 	call	0x1140	; 0x1140 <_Z3mapddddd>
    41f4:	0f 90       	pop	r0
    41f6:	0f 90       	pop	r0
    41f8:	0f 90       	pop	r0
    41fa:	0f 90       	pop	r0
        OCR3B=ICR3-vAl;
    41fc:	c0 91 96 00 	lds	r28, 0x0096
    4200:	d0 91 97 00 	lds	r29, 0x0097
      case 5:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
        OCR3A=ICR3-vAl;
        break;
      case 2:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    4204:	0e 94 bb 79 	call	0xf376	; 0xf376 <__fixsfsi>
        OCR3B=ICR3-vAl;
    4208:	c6 1b       	sub	r28, r22
    420a:	d7 0b       	sbc	r29, r23
    420c:	d0 93 9b 00 	sts	0x009B, r29
    4210:	c0 93 9a 00 	sts	0x009A, r28
    4214:	3d c2       	rjmp	.+1146   	; 0x4690 <_Z6angle2i+0xffa>
        break;
      case 3:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    4216:	e6 e8       	ldi	r30, 0x86	; 134
    4218:	f0 e0       	ldi	r31, 0x00	; 0
    421a:	c0 81       	ld	r28, Z
    421c:	d1 81       	ldd	r29, Z+1	; 0x01
    421e:	80 80       	ld	r8, Z
    4220:	91 80       	ldd	r9, Z+1	; 0x01
    4222:	00 d0       	rcall	.+0      	; 0x4224 <_Z6angle2i+0xb8e>
    4224:	0f 92       	push	r0
    4226:	4d b6       	in	r4, 0x3d	; 61
    4228:	5e b6       	in	r5, 0x3e	; 62
    422a:	08 94       	sec
    422c:	41 1c       	adc	r4, r1
    422e:	51 1c       	adc	r5, r1
    4230:	88 27       	eor	r24, r24
    4232:	77 fd       	sbrc	r23, 7
    4234:	80 95       	com	r24
    4236:	98 2f       	mov	r25, r24
    4238:	0e 94 ee 79 	call	0xf3dc	; 0xf3dc <__floatsisf>
    423c:	7b 01       	movw	r14, r22
    423e:	8c 01       	movw	r16, r24
    4240:	ce 01       	movw	r24, r28
    4242:	68 e2       	ldi	r22, 0x28	; 40
    4244:	70 e0       	ldi	r23, 0x00	; 0
    4246:	0e 94 05 7b 	call	0xf60a	; 0xf60a <__udivmodhi4>
    424a:	80 e0       	ldi	r24, 0x00	; 0
    424c:	90 e0       	ldi	r25, 0x00	; 0
    424e:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    4252:	5b 01       	movw	r10, r22
    4254:	6c 01       	movw	r12, r24
    4256:	96 94       	lsr	r9
    4258:	87 94       	ror	r8
    425a:	96 94       	lsr	r9
    425c:	87 94       	ror	r8
    425e:	96 94       	lsr	r9
    4260:	87 94       	ror	r8
    4262:	b4 01       	movw	r22, r8
    4264:	80 e0       	ldi	r24, 0x00	; 0
    4266:	90 e0       	ldi	r25, 0x00	; 0
    4268:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    426c:	f2 01       	movw	r30, r4
    426e:	60 83       	st	Z, r22
    4270:	71 83       	std	Z+1, r23	; 0x01
    4272:	82 83       	std	Z+2, r24	; 0x02
    4274:	93 83       	std	Z+3, r25	; 0x03
    4276:	c8 01       	movw	r24, r16
    4278:	b7 01       	movw	r22, r14
    427a:	20 e0       	ldi	r18, 0x00	; 0
    427c:	30 e0       	ldi	r19, 0x00	; 0
    427e:	a9 01       	movw	r20, r18
    4280:	0f 2e       	mov	r0, r31
    4282:	f0 e0       	ldi	r31, 0x00	; 0
    4284:	ef 2e       	mov	r14, r31
    4286:	f0 e0       	ldi	r31, 0x00	; 0
    4288:	ff 2e       	mov	r15, r31
    428a:	f4 e3       	ldi	r31, 0x34	; 52
    428c:	0f 2f       	mov	r16, r31
    428e:	f3 e4       	ldi	r31, 0x43	; 67
    4290:	1f 2f       	mov	r17, r31
    4292:	f0 2d       	mov	r31, r0
    4294:	0e 94 a0 08 	call	0x1140	; 0x1140 <_Z3mapddddd>
    4298:	0f 90       	pop	r0
    429a:	0f 90       	pop	r0
    429c:	0f 90       	pop	r0
    429e:	0f 90       	pop	r0
        OCR3C=ICR3-vAl;
    42a0:	c0 91 96 00 	lds	r28, 0x0096
    42a4:	d0 91 97 00 	lds	r29, 0x0097
      case 2:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
        OCR3B=ICR3-vAl;
        break;
      case 3:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    42a8:	0e 94 bb 79 	call	0xf376	; 0xf376 <__fixsfsi>
        OCR3C=ICR3-vAl;
    42ac:	c6 1b       	sub	r28, r22
    42ae:	d7 0b       	sbc	r29, r23
    42b0:	d0 93 9d 00 	sts	0x009D, r29
    42b4:	c0 93 9c 00 	sts	0x009C, r28
    42b8:	eb c1       	rjmp	.+982    	; 0x4690 <_Z6angle2i+0xffa>
        break;
      case 6:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    42ba:	e6 e8       	ldi	r30, 0x86	; 134
    42bc:	f0 e0       	ldi	r31, 0x00	; 0
    42be:	c0 81       	ld	r28, Z
    42c0:	d1 81       	ldd	r29, Z+1	; 0x01
    42c2:	80 80       	ld	r8, Z
    42c4:	91 80       	ldd	r9, Z+1	; 0x01
    42c6:	00 d0       	rcall	.+0      	; 0x42c8 <_Z6angle2i+0xc32>
    42c8:	0f 92       	push	r0
    42ca:	4d b6       	in	r4, 0x3d	; 61
    42cc:	5e b6       	in	r5, 0x3e	; 62
    42ce:	08 94       	sec
    42d0:	41 1c       	adc	r4, r1
    42d2:	51 1c       	adc	r5, r1
    42d4:	88 27       	eor	r24, r24
    42d6:	77 fd       	sbrc	r23, 7
    42d8:	80 95       	com	r24
    42da:	98 2f       	mov	r25, r24
    42dc:	0e 94 ee 79 	call	0xf3dc	; 0xf3dc <__floatsisf>
    42e0:	7b 01       	movw	r14, r22
    42e2:	8c 01       	movw	r16, r24
    42e4:	ce 01       	movw	r24, r28
    42e6:	68 e2       	ldi	r22, 0x28	; 40
    42e8:	70 e0       	ldi	r23, 0x00	; 0
    42ea:	0e 94 05 7b 	call	0xf60a	; 0xf60a <__udivmodhi4>
    42ee:	80 e0       	ldi	r24, 0x00	; 0
    42f0:	90 e0       	ldi	r25, 0x00	; 0
    42f2:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    42f6:	5b 01       	movw	r10, r22
    42f8:	6c 01       	movw	r12, r24
    42fa:	96 94       	lsr	r9
    42fc:	87 94       	ror	r8
    42fe:	96 94       	lsr	r9
    4300:	87 94       	ror	r8
    4302:	96 94       	lsr	r9
    4304:	87 94       	ror	r8
    4306:	b4 01       	movw	r22, r8
    4308:	80 e0       	ldi	r24, 0x00	; 0
    430a:	90 e0       	ldi	r25, 0x00	; 0
    430c:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    4310:	f2 01       	movw	r30, r4
    4312:	60 83       	st	Z, r22
    4314:	71 83       	std	Z+1, r23	; 0x01
    4316:	82 83       	std	Z+2, r24	; 0x02
    4318:	93 83       	std	Z+3, r25	; 0x03
    431a:	c8 01       	movw	r24, r16
    431c:	b7 01       	movw	r22, r14
    431e:	20 e0       	ldi	r18, 0x00	; 0
    4320:	30 e0       	ldi	r19, 0x00	; 0
    4322:	a9 01       	movw	r20, r18
    4324:	0f 2e       	mov	r0, r31
    4326:	f0 e0       	ldi	r31, 0x00	; 0
    4328:	ef 2e       	mov	r14, r31
    432a:	f0 e0       	ldi	r31, 0x00	; 0
    432c:	ff 2e       	mov	r15, r31
    432e:	f4 e3       	ldi	r31, 0x34	; 52
    4330:	0f 2f       	mov	r16, r31
    4332:	f3 e4       	ldi	r31, 0x43	; 67
    4334:	1f 2f       	mov	r17, r31
    4336:	f0 2d       	mov	r31, r0
    4338:	0e 94 a0 08 	call	0x1140	; 0x1140 <_Z3mapddddd>
    433c:	0f 90       	pop	r0
    433e:	0f 90       	pop	r0
    4340:	0f 90       	pop	r0
    4342:	0f 90       	pop	r0
        OCR4A=ICR4-vAl;
    4344:	c0 91 a6 00 	lds	r28, 0x00A6
    4348:	d0 91 a7 00 	lds	r29, 0x00A7
      case 3:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
        OCR3C=ICR3-vAl;
        break;
      case 6:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    434c:	0e 94 bb 79 	call	0xf376	; 0xf376 <__fixsfsi>
        OCR4A=ICR4-vAl;
    4350:	c6 1b       	sub	r28, r22
    4352:	d7 0b       	sbc	r29, r23
    4354:	d0 93 a9 00 	sts	0x00A9, r29
    4358:	c0 93 a8 00 	sts	0x00A8, r28
    435c:	99 c1       	rjmp	.+818    	; 0x4690 <_Z6angle2i+0xffa>
        break;
      case 7:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    435e:	e6 e8       	ldi	r30, 0x86	; 134
    4360:	f0 e0       	ldi	r31, 0x00	; 0
    4362:	c0 81       	ld	r28, Z
    4364:	d1 81       	ldd	r29, Z+1	; 0x01
    4366:	80 80       	ld	r8, Z
    4368:	91 80       	ldd	r9, Z+1	; 0x01
    436a:	00 d0       	rcall	.+0      	; 0x436c <_Z6angle2i+0xcd6>
    436c:	0f 92       	push	r0
    436e:	4d b6       	in	r4, 0x3d	; 61
    4370:	5e b6       	in	r5, 0x3e	; 62
    4372:	08 94       	sec
    4374:	41 1c       	adc	r4, r1
    4376:	51 1c       	adc	r5, r1
    4378:	88 27       	eor	r24, r24
    437a:	77 fd       	sbrc	r23, 7
    437c:	80 95       	com	r24
    437e:	98 2f       	mov	r25, r24
    4380:	0e 94 ee 79 	call	0xf3dc	; 0xf3dc <__floatsisf>
    4384:	7b 01       	movw	r14, r22
    4386:	8c 01       	movw	r16, r24
    4388:	ce 01       	movw	r24, r28
    438a:	68 e2       	ldi	r22, 0x28	; 40
    438c:	70 e0       	ldi	r23, 0x00	; 0
    438e:	0e 94 05 7b 	call	0xf60a	; 0xf60a <__udivmodhi4>
    4392:	80 e0       	ldi	r24, 0x00	; 0
    4394:	90 e0       	ldi	r25, 0x00	; 0
    4396:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    439a:	5b 01       	movw	r10, r22
    439c:	6c 01       	movw	r12, r24
    439e:	96 94       	lsr	r9
    43a0:	87 94       	ror	r8
    43a2:	96 94       	lsr	r9
    43a4:	87 94       	ror	r8
    43a6:	96 94       	lsr	r9
    43a8:	87 94       	ror	r8
    43aa:	b4 01       	movw	r22, r8
    43ac:	80 e0       	ldi	r24, 0x00	; 0
    43ae:	90 e0       	ldi	r25, 0x00	; 0
    43b0:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    43b4:	f2 01       	movw	r30, r4
    43b6:	60 83       	st	Z, r22
    43b8:	71 83       	std	Z+1, r23	; 0x01
    43ba:	82 83       	std	Z+2, r24	; 0x02
    43bc:	93 83       	std	Z+3, r25	; 0x03
    43be:	c8 01       	movw	r24, r16
    43c0:	b7 01       	movw	r22, r14
    43c2:	20 e0       	ldi	r18, 0x00	; 0
    43c4:	30 e0       	ldi	r19, 0x00	; 0
    43c6:	a9 01       	movw	r20, r18
    43c8:	0f 2e       	mov	r0, r31
    43ca:	f0 e0       	ldi	r31, 0x00	; 0
    43cc:	ef 2e       	mov	r14, r31
    43ce:	f0 e0       	ldi	r31, 0x00	; 0
    43d0:	ff 2e       	mov	r15, r31
    43d2:	f4 e3       	ldi	r31, 0x34	; 52
    43d4:	0f 2f       	mov	r16, r31
    43d6:	f3 e4       	ldi	r31, 0x43	; 67
    43d8:	1f 2f       	mov	r17, r31
    43da:	f0 2d       	mov	r31, r0
    43dc:	0e 94 a0 08 	call	0x1140	; 0x1140 <_Z3mapddddd>
    43e0:	0f 90       	pop	r0
    43e2:	0f 90       	pop	r0
    43e4:	0f 90       	pop	r0
    43e6:	0f 90       	pop	r0
        OCR4B=ICR4-vAl;
    43e8:	c0 91 a6 00 	lds	r28, 0x00A6
    43ec:	d0 91 a7 00 	lds	r29, 0x00A7
      case 6:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
        OCR4A=ICR4-vAl;
        break;
      case 7:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    43f0:	0e 94 bb 79 	call	0xf376	; 0xf376 <__fixsfsi>
        OCR4B=ICR4-vAl;
    43f4:	c6 1b       	sub	r28, r22
    43f6:	d7 0b       	sbc	r29, r23
    43f8:	d0 93 ab 00 	sts	0x00AB, r29
    43fc:	c0 93 aa 00 	sts	0x00AA, r28
    4400:	47 c1       	rjmp	.+654    	; 0x4690 <_Z6angle2i+0xffa>
        break; 
      case 8:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    4402:	e6 e8       	ldi	r30, 0x86	; 134
    4404:	f0 e0       	ldi	r31, 0x00	; 0
    4406:	c0 81       	ld	r28, Z
    4408:	d1 81       	ldd	r29, Z+1	; 0x01
    440a:	80 80       	ld	r8, Z
    440c:	91 80       	ldd	r9, Z+1	; 0x01
    440e:	00 d0       	rcall	.+0      	; 0x4410 <_Z6angle2i+0xd7a>
    4410:	0f 92       	push	r0
    4412:	4d b6       	in	r4, 0x3d	; 61
    4414:	5e b6       	in	r5, 0x3e	; 62
    4416:	08 94       	sec
    4418:	41 1c       	adc	r4, r1
    441a:	51 1c       	adc	r5, r1
    441c:	88 27       	eor	r24, r24
    441e:	77 fd       	sbrc	r23, 7
    4420:	80 95       	com	r24
    4422:	98 2f       	mov	r25, r24
    4424:	0e 94 ee 79 	call	0xf3dc	; 0xf3dc <__floatsisf>
    4428:	7b 01       	movw	r14, r22
    442a:	8c 01       	movw	r16, r24
    442c:	ce 01       	movw	r24, r28
    442e:	68 e2       	ldi	r22, 0x28	; 40
    4430:	70 e0       	ldi	r23, 0x00	; 0
    4432:	0e 94 05 7b 	call	0xf60a	; 0xf60a <__udivmodhi4>
    4436:	80 e0       	ldi	r24, 0x00	; 0
    4438:	90 e0       	ldi	r25, 0x00	; 0
    443a:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    443e:	5b 01       	movw	r10, r22
    4440:	6c 01       	movw	r12, r24
    4442:	96 94       	lsr	r9
    4444:	87 94       	ror	r8
    4446:	96 94       	lsr	r9
    4448:	87 94       	ror	r8
    444a:	96 94       	lsr	r9
    444c:	87 94       	ror	r8
    444e:	b4 01       	movw	r22, r8
    4450:	80 e0       	ldi	r24, 0x00	; 0
    4452:	90 e0       	ldi	r25, 0x00	; 0
    4454:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    4458:	f2 01       	movw	r30, r4
    445a:	60 83       	st	Z, r22
    445c:	71 83       	std	Z+1, r23	; 0x01
    445e:	82 83       	std	Z+2, r24	; 0x02
    4460:	93 83       	std	Z+3, r25	; 0x03
    4462:	c8 01       	movw	r24, r16
    4464:	b7 01       	movw	r22, r14
    4466:	20 e0       	ldi	r18, 0x00	; 0
    4468:	30 e0       	ldi	r19, 0x00	; 0
    446a:	a9 01       	movw	r20, r18
    446c:	0f 2e       	mov	r0, r31
    446e:	f0 e0       	ldi	r31, 0x00	; 0
    4470:	ef 2e       	mov	r14, r31
    4472:	f0 e0       	ldi	r31, 0x00	; 0
    4474:	ff 2e       	mov	r15, r31
    4476:	f4 e3       	ldi	r31, 0x34	; 52
    4478:	0f 2f       	mov	r16, r31
    447a:	f3 e4       	ldi	r31, 0x43	; 67
    447c:	1f 2f       	mov	r17, r31
    447e:	f0 2d       	mov	r31, r0
    4480:	0e 94 a0 08 	call	0x1140	; 0x1140 <_Z3mapddddd>
    4484:	0f 90       	pop	r0
    4486:	0f 90       	pop	r0
    4488:	0f 90       	pop	r0
    448a:	0f 90       	pop	r0
        OCR4C=ICR4-vAl;
    448c:	c0 91 a6 00 	lds	r28, 0x00A6
    4490:	d0 91 a7 00 	lds	r29, 0x00A7
      case 7:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
        OCR4B=ICR4-vAl;
        break; 
      case 8:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    4494:	0e 94 bb 79 	call	0xf376	; 0xf376 <__fixsfsi>
        OCR4C=ICR4-vAl;
    4498:	c6 1b       	sub	r28, r22
    449a:	d7 0b       	sbc	r29, r23
    449c:	d0 93 ad 00 	sts	0x00AD, r29
    44a0:	c0 93 ac 00 	sts	0x00AC, r28
    44a4:	f5 c0       	rjmp	.+490    	; 0x4690 <_Z6angle2i+0xffa>
        break;
      case 46:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    44a6:	e6 e8       	ldi	r30, 0x86	; 134
    44a8:	f0 e0       	ldi	r31, 0x00	; 0
    44aa:	c0 81       	ld	r28, Z
    44ac:	d1 81       	ldd	r29, Z+1	; 0x01
    44ae:	80 80       	ld	r8, Z
    44b0:	91 80       	ldd	r9, Z+1	; 0x01
    44b2:	00 d0       	rcall	.+0      	; 0x44b4 <_Z6angle2i+0xe1e>
    44b4:	0f 92       	push	r0
    44b6:	4d b6       	in	r4, 0x3d	; 61
    44b8:	5e b6       	in	r5, 0x3e	; 62
    44ba:	08 94       	sec
    44bc:	41 1c       	adc	r4, r1
    44be:	51 1c       	adc	r5, r1
    44c0:	88 27       	eor	r24, r24
    44c2:	77 fd       	sbrc	r23, 7
    44c4:	80 95       	com	r24
    44c6:	98 2f       	mov	r25, r24
    44c8:	0e 94 ee 79 	call	0xf3dc	; 0xf3dc <__floatsisf>
    44cc:	7b 01       	movw	r14, r22
    44ce:	8c 01       	movw	r16, r24
    44d0:	ce 01       	movw	r24, r28
    44d2:	68 e2       	ldi	r22, 0x28	; 40
    44d4:	70 e0       	ldi	r23, 0x00	; 0
    44d6:	0e 94 05 7b 	call	0xf60a	; 0xf60a <__udivmodhi4>
    44da:	80 e0       	ldi	r24, 0x00	; 0
    44dc:	90 e0       	ldi	r25, 0x00	; 0
    44de:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    44e2:	5b 01       	movw	r10, r22
    44e4:	6c 01       	movw	r12, r24
    44e6:	96 94       	lsr	r9
    44e8:	87 94       	ror	r8
    44ea:	96 94       	lsr	r9
    44ec:	87 94       	ror	r8
    44ee:	96 94       	lsr	r9
    44f0:	87 94       	ror	r8
    44f2:	b4 01       	movw	r22, r8
    44f4:	80 e0       	ldi	r24, 0x00	; 0
    44f6:	90 e0       	ldi	r25, 0x00	; 0
    44f8:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    44fc:	f2 01       	movw	r30, r4
    44fe:	60 83       	st	Z, r22
    4500:	71 83       	std	Z+1, r23	; 0x01
    4502:	82 83       	std	Z+2, r24	; 0x02
    4504:	93 83       	std	Z+3, r25	; 0x03
    4506:	c8 01       	movw	r24, r16
    4508:	b7 01       	movw	r22, r14
    450a:	20 e0       	ldi	r18, 0x00	; 0
    450c:	30 e0       	ldi	r19, 0x00	; 0
    450e:	a9 01       	movw	r20, r18
    4510:	0f 2e       	mov	r0, r31
    4512:	f0 e0       	ldi	r31, 0x00	; 0
    4514:	ef 2e       	mov	r14, r31
    4516:	f0 e0       	ldi	r31, 0x00	; 0
    4518:	ff 2e       	mov	r15, r31
    451a:	f4 e3       	ldi	r31, 0x34	; 52
    451c:	0f 2f       	mov	r16, r31
    451e:	f3 e4       	ldi	r31, 0x43	; 67
    4520:	1f 2f       	mov	r17, r31
    4522:	f0 2d       	mov	r31, r0
    4524:	0e 94 a0 08 	call	0x1140	; 0x1140 <_Z3mapddddd>
    4528:	0f 90       	pop	r0
    452a:	0f 90       	pop	r0
    452c:	0f 90       	pop	r0
    452e:	0f 90       	pop	r0
        OCR5A=ICR5-vAl;
    4530:	c0 91 26 01 	lds	r28, 0x0126
    4534:	d0 91 27 01 	lds	r29, 0x0127
      case 8:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
        OCR4C=ICR4-vAl;
        break;
      case 46:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    4538:	0e 94 bb 79 	call	0xf376	; 0xf376 <__fixsfsi>
        OCR5A=ICR5-vAl;
    453c:	c6 1b       	sub	r28, r22
    453e:	d7 0b       	sbc	r29, r23
    4540:	d0 93 29 01 	sts	0x0129, r29
    4544:	c0 93 28 01 	sts	0x0128, r28
    4548:	a3 c0       	rjmp	.+326    	; 0x4690 <_Z6angle2i+0xffa>
        break;
      case 45:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    454a:	e6 e8       	ldi	r30, 0x86	; 134
    454c:	f0 e0       	ldi	r31, 0x00	; 0
    454e:	c0 81       	ld	r28, Z
    4550:	d1 81       	ldd	r29, Z+1	; 0x01
    4552:	80 80       	ld	r8, Z
    4554:	91 80       	ldd	r9, Z+1	; 0x01
    4556:	00 d0       	rcall	.+0      	; 0x4558 <_Z6angle2i+0xec2>
    4558:	0f 92       	push	r0
    455a:	4d b6       	in	r4, 0x3d	; 61
    455c:	5e b6       	in	r5, 0x3e	; 62
    455e:	08 94       	sec
    4560:	41 1c       	adc	r4, r1
    4562:	51 1c       	adc	r5, r1
    4564:	88 27       	eor	r24, r24
    4566:	77 fd       	sbrc	r23, 7
    4568:	80 95       	com	r24
    456a:	98 2f       	mov	r25, r24
    456c:	0e 94 ee 79 	call	0xf3dc	; 0xf3dc <__floatsisf>
    4570:	7b 01       	movw	r14, r22
    4572:	8c 01       	movw	r16, r24
    4574:	ce 01       	movw	r24, r28
    4576:	68 e2       	ldi	r22, 0x28	; 40
    4578:	70 e0       	ldi	r23, 0x00	; 0
    457a:	0e 94 05 7b 	call	0xf60a	; 0xf60a <__udivmodhi4>
    457e:	80 e0       	ldi	r24, 0x00	; 0
    4580:	90 e0       	ldi	r25, 0x00	; 0
    4582:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    4586:	5b 01       	movw	r10, r22
    4588:	6c 01       	movw	r12, r24
    458a:	96 94       	lsr	r9
    458c:	87 94       	ror	r8
    458e:	96 94       	lsr	r9
    4590:	87 94       	ror	r8
    4592:	96 94       	lsr	r9
    4594:	87 94       	ror	r8
    4596:	b4 01       	movw	r22, r8
    4598:	80 e0       	ldi	r24, 0x00	; 0
    459a:	90 e0       	ldi	r25, 0x00	; 0
    459c:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    45a0:	f2 01       	movw	r30, r4
    45a2:	60 83       	st	Z, r22
    45a4:	71 83       	std	Z+1, r23	; 0x01
    45a6:	82 83       	std	Z+2, r24	; 0x02
    45a8:	93 83       	std	Z+3, r25	; 0x03
    45aa:	c8 01       	movw	r24, r16
    45ac:	b7 01       	movw	r22, r14
    45ae:	20 e0       	ldi	r18, 0x00	; 0
    45b0:	30 e0       	ldi	r19, 0x00	; 0
    45b2:	a9 01       	movw	r20, r18
    45b4:	0f 2e       	mov	r0, r31
    45b6:	f0 e0       	ldi	r31, 0x00	; 0
    45b8:	ef 2e       	mov	r14, r31
    45ba:	f0 e0       	ldi	r31, 0x00	; 0
    45bc:	ff 2e       	mov	r15, r31
    45be:	f4 e3       	ldi	r31, 0x34	; 52
    45c0:	0f 2f       	mov	r16, r31
    45c2:	f3 e4       	ldi	r31, 0x43	; 67
    45c4:	1f 2f       	mov	r17, r31
    45c6:	f0 2d       	mov	r31, r0
    45c8:	0e 94 a0 08 	call	0x1140	; 0x1140 <_Z3mapddddd>
    45cc:	0f 90       	pop	r0
    45ce:	0f 90       	pop	r0
    45d0:	0f 90       	pop	r0
    45d2:	0f 90       	pop	r0
        OCR5B=ICR5-vAl;
    45d4:	c0 91 26 01 	lds	r28, 0x0126
    45d8:	d0 91 27 01 	lds	r29, 0x0127
      case 46:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
        OCR5A=ICR5-vAl;
        break;
      case 45:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    45dc:	0e 94 bb 79 	call	0xf376	; 0xf376 <__fixsfsi>
        OCR5B=ICR5-vAl;
    45e0:	c6 1b       	sub	r28, r22
    45e2:	d7 0b       	sbc	r29, r23
    45e4:	d0 93 2b 01 	sts	0x012B, r29
    45e8:	c0 93 2a 01 	sts	0x012A, r28
    45ec:	51 c0       	rjmp	.+162    	; 0x4690 <_Z6angle2i+0xffa>
        break;
      case 44:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    45ee:	e6 e8       	ldi	r30, 0x86	; 134
    45f0:	f0 e0       	ldi	r31, 0x00	; 0
    45f2:	c0 81       	ld	r28, Z
    45f4:	d1 81       	ldd	r29, Z+1	; 0x01
    45f6:	80 80       	ld	r8, Z
    45f8:	91 80       	ldd	r9, Z+1	; 0x01
    45fa:	00 d0       	rcall	.+0      	; 0x45fc <_Z6angle2i+0xf66>
    45fc:	0f 92       	push	r0
    45fe:	4d b6       	in	r4, 0x3d	; 61
    4600:	5e b6       	in	r5, 0x3e	; 62
    4602:	08 94       	sec
    4604:	41 1c       	adc	r4, r1
    4606:	51 1c       	adc	r5, r1
    4608:	88 27       	eor	r24, r24
    460a:	77 fd       	sbrc	r23, 7
    460c:	80 95       	com	r24
    460e:	98 2f       	mov	r25, r24
    4610:	0e 94 ee 79 	call	0xf3dc	; 0xf3dc <__floatsisf>
    4614:	7b 01       	movw	r14, r22
    4616:	8c 01       	movw	r16, r24
    4618:	ce 01       	movw	r24, r28
    461a:	68 e2       	ldi	r22, 0x28	; 40
    461c:	70 e0       	ldi	r23, 0x00	; 0
    461e:	0e 94 05 7b 	call	0xf60a	; 0xf60a <__udivmodhi4>
    4622:	80 e0       	ldi	r24, 0x00	; 0
    4624:	90 e0       	ldi	r25, 0x00	; 0
    4626:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    462a:	5b 01       	movw	r10, r22
    462c:	6c 01       	movw	r12, r24
    462e:	96 94       	lsr	r9
    4630:	87 94       	ror	r8
    4632:	96 94       	lsr	r9
    4634:	87 94       	ror	r8
    4636:	96 94       	lsr	r9
    4638:	87 94       	ror	r8
    463a:	b4 01       	movw	r22, r8
    463c:	80 e0       	ldi	r24, 0x00	; 0
    463e:	90 e0       	ldi	r25, 0x00	; 0
    4640:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    4644:	f2 01       	movw	r30, r4
    4646:	60 83       	st	Z, r22
    4648:	71 83       	std	Z+1, r23	; 0x01
    464a:	82 83       	std	Z+2, r24	; 0x02
    464c:	93 83       	std	Z+3, r25	; 0x03
    464e:	c8 01       	movw	r24, r16
    4650:	b7 01       	movw	r22, r14
    4652:	20 e0       	ldi	r18, 0x00	; 0
    4654:	30 e0       	ldi	r19, 0x00	; 0
    4656:	a9 01       	movw	r20, r18
    4658:	0f 2e       	mov	r0, r31
    465a:	f0 e0       	ldi	r31, 0x00	; 0
    465c:	ef 2e       	mov	r14, r31
    465e:	f0 e0       	ldi	r31, 0x00	; 0
    4660:	ff 2e       	mov	r15, r31
    4662:	f4 e3       	ldi	r31, 0x34	; 52
    4664:	0f 2f       	mov	r16, r31
    4666:	f3 e4       	ldi	r31, 0x43	; 67
    4668:	1f 2f       	mov	r17, r31
    466a:	f0 2d       	mov	r31, r0
    466c:	0e 94 a0 08 	call	0x1140	; 0x1140 <_Z3mapddddd>
    4670:	0f 90       	pop	r0
    4672:	0f 90       	pop	r0
    4674:	0f 90       	pop	r0
    4676:	0f 90       	pop	r0
        OCR5C=ICR5-vAl;
    4678:	c0 91 26 01 	lds	r28, 0x0126
    467c:	d0 91 27 01 	lds	r29, 0x0127
      case 45:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
        OCR5B=ICR5-vAl;
        break;
      case 44:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    4680:	0e 94 bb 79 	call	0xf376	; 0xf376 <__fixsfsi>
        OCR5C=ICR5-vAl;
    4684:	c6 1b       	sub	r28, r22
    4686:	d7 0b       	sbc	r29, r23
    4688:	d0 93 2d 01 	sts	0x012D, r29
    468c:	c0 93 2c 01 	sts	0x012C, r28
		r.write(z);
    4690:	60 91 ce 02 	lds	r22, 0x02CE
    4694:	70 91 cf 02 	lds	r23, 0x02CF
     }
  }

  void write(int vAl)           //PIN=servo pin no. on mega,vAl=angle F_CPU for the servo at pin
  {
    switch(pIn)
    4698:	80 91 d6 02 	lds	r24, 0x02D6
    469c:	88 30       	cpi	r24, 0x08	; 8
    469e:	09 f4       	brne	.+2      	; 0x46a2 <_Z6angle2i+0x100c>
    46a0:	63 c2       	rjmp	.+1222   	; 0x4b68 <_Z6angle2i+0x14d2>
    46a2:	89 30       	cpi	r24, 0x09	; 9
    46a4:	98 f4       	brcc	.+38     	; 0x46cc <_Z6angle2i+0x1036>
    46a6:	85 30       	cpi	r24, 0x05	; 5
    46a8:	09 f4       	brne	.+2      	; 0x46ac <_Z6angle2i+0x1016>
    46aa:	c4 c0       	rjmp	.+392    	; 0x4834 <_Z6angle2i+0x119e>
    46ac:	86 30       	cpi	r24, 0x06	; 6
    46ae:	38 f4       	brcc	.+14     	; 0x46be <_Z6angle2i+0x1028>
    46b0:	82 30       	cpi	r24, 0x02	; 2
    46b2:	09 f4       	brne	.+2      	; 0x46b6 <_Z6angle2i+0x1020>
    46b4:	11 c1       	rjmp	.+546    	; 0x48d8 <_Z6angle2i+0x1242>
    46b6:	83 30       	cpi	r24, 0x03	; 3
    46b8:	09 f0       	breq	.+2      	; 0x46bc <_Z6angle2i+0x1026>
    46ba:	9d c3       	rjmp	.+1850   	; 0x4df6 <_Z6angle2i+0x1760>
    46bc:	5f c1       	rjmp	.+702    	; 0x497c <_Z6angle2i+0x12e6>
    46be:	86 30       	cpi	r24, 0x06	; 6
    46c0:	09 f4       	brne	.+2      	; 0x46c4 <_Z6angle2i+0x102e>
    46c2:	ae c1       	rjmp	.+860    	; 0x4a20 <_Z6angle2i+0x138a>
    46c4:	87 30       	cpi	r24, 0x07	; 7
    46c6:	09 f0       	breq	.+2      	; 0x46ca <_Z6angle2i+0x1034>
    46c8:	96 c3       	rjmp	.+1836   	; 0x4df6 <_Z6angle2i+0x1760>
    46ca:	fc c1       	rjmp	.+1016   	; 0x4ac4 <_Z6angle2i+0x142e>
    46cc:	8c 32       	cpi	r24, 0x2C	; 44
    46ce:	09 f4       	brne	.+2      	; 0x46d2 <_Z6angle2i+0x103c>
    46d0:	41 c3       	rjmp	.+1666   	; 0x4d54 <_Z6angle2i+0x16be>
    46d2:	8d 32       	cpi	r24, 0x2D	; 45
    46d4:	30 f4       	brcc	.+12     	; 0x46e2 <_Z6angle2i+0x104c>
    46d6:	8b 30       	cpi	r24, 0x0B	; 11
    46d8:	59 f0       	breq	.+22     	; 0x46f0 <_Z6angle2i+0x105a>
    46da:	8c 30       	cpi	r24, 0x0C	; 12
    46dc:	09 f0       	breq	.+2      	; 0x46e0 <_Z6angle2i+0x104a>
    46de:	8b c3       	rjmp	.+1814   	; 0x4df6 <_Z6angle2i+0x1760>
    46e0:	58 c0       	rjmp	.+176    	; 0x4792 <_Z6angle2i+0x10fc>
    46e2:	8d 32       	cpi	r24, 0x2D	; 45
    46e4:	09 f4       	brne	.+2      	; 0x46e8 <_Z6angle2i+0x1052>
    46e6:	e4 c2       	rjmp	.+1480   	; 0x4cb0 <_Z6angle2i+0x161a>
    46e8:	8e 32       	cpi	r24, 0x2E	; 46
    46ea:	09 f0       	breq	.+2      	; 0x46ee <_Z6angle2i+0x1058>
    46ec:	84 c3       	rjmp	.+1800   	; 0x4df6 <_Z6angle2i+0x1760>
    46ee:	8e c2       	rjmp	.+1308   	; 0x4c0c <_Z6angle2i+0x1576>
    {
     case 11:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    46f0:	c6 e8       	ldi	r28, 0x86	; 134
    46f2:	d0 e0       	ldi	r29, 0x00	; 0
    46f4:	08 81       	ld	r16, Y
    46f6:	19 81       	ldd	r17, Y+1	; 0x01
    46f8:	e8 80       	ld	r14, Y
    46fa:	f9 80       	ldd	r15, Y+1	; 0x01
    46fc:	00 d0       	rcall	.+0      	; 0x46fe <_Z6angle2i+0x1068>
    46fe:	0f 92       	push	r0
    4700:	8d b6       	in	r8, 0x3d	; 61
    4702:	9e b6       	in	r9, 0x3e	; 62
    4704:	08 94       	sec
    4706:	81 1c       	adc	r8, r1
    4708:	91 1c       	adc	r9, r1
    470a:	88 27       	eor	r24, r24
    470c:	77 fd       	sbrc	r23, 7
    470e:	80 95       	com	r24
    4710:	98 2f       	mov	r25, r24
    4712:	0e 94 ee 79 	call	0xf3dc	; 0xf3dc <__floatsisf>
    4716:	2b 01       	movw	r4, r22
    4718:	3c 01       	movw	r6, r24
    471a:	c8 01       	movw	r24, r16
    471c:	68 e2       	ldi	r22, 0x28	; 40
    471e:	70 e0       	ldi	r23, 0x00	; 0
    4720:	0e 94 05 7b 	call	0xf60a	; 0xf60a <__udivmodhi4>
    4724:	80 e0       	ldi	r24, 0x00	; 0
    4726:	90 e0       	ldi	r25, 0x00	; 0
    4728:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    472c:	5b 01       	movw	r10, r22
    472e:	6c 01       	movw	r12, r24
    4730:	f6 94       	lsr	r15
    4732:	e7 94       	ror	r14
    4734:	f6 94       	lsr	r15
    4736:	e7 94       	ror	r14
    4738:	f6 94       	lsr	r15
    473a:	e7 94       	ror	r14
    473c:	b7 01       	movw	r22, r14
    473e:	80 e0       	ldi	r24, 0x00	; 0
    4740:	90 e0       	ldi	r25, 0x00	; 0
    4742:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    4746:	f4 01       	movw	r30, r8
    4748:	60 83       	st	Z, r22
    474a:	71 83       	std	Z+1, r23	; 0x01
    474c:	82 83       	std	Z+2, r24	; 0x02
    474e:	93 83       	std	Z+3, r25	; 0x03
    4750:	c3 01       	movw	r24, r6
    4752:	b2 01       	movw	r22, r4
    4754:	20 e0       	ldi	r18, 0x00	; 0
    4756:	30 e0       	ldi	r19, 0x00	; 0
    4758:	a9 01       	movw	r20, r18
    475a:	0f 2e       	mov	r0, r31
    475c:	f0 e0       	ldi	r31, 0x00	; 0
    475e:	ef 2e       	mov	r14, r31
    4760:	f0 e0       	ldi	r31, 0x00	; 0
    4762:	ff 2e       	mov	r15, r31
    4764:	f4 e3       	ldi	r31, 0x34	; 52
    4766:	0f 2f       	mov	r16, r31
    4768:	f3 e4       	ldi	r31, 0x43	; 67
    476a:	1f 2f       	mov	r17, r31
    476c:	f0 2d       	mov	r31, r0
    476e:	0e 94 a0 08 	call	0x1140	; 0x1140 <_Z3mapddddd>
    4772:	0f 90       	pop	r0
    4774:	0f 90       	pop	r0
    4776:	0f 90       	pop	r0
    4778:	0f 90       	pop	r0
        OCR1A=ICR1-vAl;
    477a:	09 90       	ld	r0, Y+
    477c:	d8 81       	ld	r29, Y
    477e:	c0 2d       	mov	r28, r0
  void write(int vAl)           //PIN=servo pin no. on mega,vAl=angle F_CPU for the servo at pin
  {
    switch(pIn)
    {
     case 11:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    4780:	0e 94 bb 79 	call	0xf376	; 0xf376 <__fixsfsi>
        OCR1A=ICR1-vAl;
    4784:	c6 1b       	sub	r28, r22
    4786:	d7 0b       	sbc	r29, r23
    4788:	d0 93 89 00 	sts	0x0089, r29
    478c:	c0 93 88 00 	sts	0x0088, r28
    4790:	32 c3       	rjmp	.+1636   	; 0x4df6 <_Z6angle2i+0x1760>
        break;
      case 12:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    4792:	c6 e8       	ldi	r28, 0x86	; 134
    4794:	d0 e0       	ldi	r29, 0x00	; 0
    4796:	08 81       	ld	r16, Y
    4798:	19 81       	ldd	r17, Y+1	; 0x01
    479a:	e8 80       	ld	r14, Y
    479c:	f9 80       	ldd	r15, Y+1	; 0x01
    479e:	00 d0       	rcall	.+0      	; 0x47a0 <_Z6angle2i+0x110a>
    47a0:	0f 92       	push	r0
    47a2:	8d b6       	in	r8, 0x3d	; 61
    47a4:	9e b6       	in	r9, 0x3e	; 62
    47a6:	08 94       	sec
    47a8:	81 1c       	adc	r8, r1
    47aa:	91 1c       	adc	r9, r1
    47ac:	88 27       	eor	r24, r24
    47ae:	77 fd       	sbrc	r23, 7
    47b0:	80 95       	com	r24
    47b2:	98 2f       	mov	r25, r24
    47b4:	0e 94 ee 79 	call	0xf3dc	; 0xf3dc <__floatsisf>
    47b8:	2b 01       	movw	r4, r22
    47ba:	3c 01       	movw	r6, r24
    47bc:	c8 01       	movw	r24, r16
    47be:	68 e2       	ldi	r22, 0x28	; 40
    47c0:	70 e0       	ldi	r23, 0x00	; 0
    47c2:	0e 94 05 7b 	call	0xf60a	; 0xf60a <__udivmodhi4>
    47c6:	80 e0       	ldi	r24, 0x00	; 0
    47c8:	90 e0       	ldi	r25, 0x00	; 0
    47ca:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    47ce:	5b 01       	movw	r10, r22
    47d0:	6c 01       	movw	r12, r24
    47d2:	f6 94       	lsr	r15
    47d4:	e7 94       	ror	r14
    47d6:	f6 94       	lsr	r15
    47d8:	e7 94       	ror	r14
    47da:	f6 94       	lsr	r15
    47dc:	e7 94       	ror	r14
    47de:	b7 01       	movw	r22, r14
    47e0:	80 e0       	ldi	r24, 0x00	; 0
    47e2:	90 e0       	ldi	r25, 0x00	; 0
    47e4:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    47e8:	f4 01       	movw	r30, r8
    47ea:	60 83       	st	Z, r22
    47ec:	71 83       	std	Z+1, r23	; 0x01
    47ee:	82 83       	std	Z+2, r24	; 0x02
    47f0:	93 83       	std	Z+3, r25	; 0x03
    47f2:	c3 01       	movw	r24, r6
    47f4:	b2 01       	movw	r22, r4
    47f6:	20 e0       	ldi	r18, 0x00	; 0
    47f8:	30 e0       	ldi	r19, 0x00	; 0
    47fa:	a9 01       	movw	r20, r18
    47fc:	0f 2e       	mov	r0, r31
    47fe:	f0 e0       	ldi	r31, 0x00	; 0
    4800:	ef 2e       	mov	r14, r31
    4802:	f0 e0       	ldi	r31, 0x00	; 0
    4804:	ff 2e       	mov	r15, r31
    4806:	f4 e3       	ldi	r31, 0x34	; 52
    4808:	0f 2f       	mov	r16, r31
    480a:	f3 e4       	ldi	r31, 0x43	; 67
    480c:	1f 2f       	mov	r17, r31
    480e:	f0 2d       	mov	r31, r0
    4810:	0e 94 a0 08 	call	0x1140	; 0x1140 <_Z3mapddddd>
    4814:	0f 90       	pop	r0
    4816:	0f 90       	pop	r0
    4818:	0f 90       	pop	r0
    481a:	0f 90       	pop	r0
        OCR1B=ICR1-vAl;
    481c:	09 90       	ld	r0, Y+
    481e:	d8 81       	ld	r29, Y
    4820:	c0 2d       	mov	r28, r0
     case 11:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
        OCR1A=ICR1-vAl;
        break;
      case 12:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    4822:	0e 94 bb 79 	call	0xf376	; 0xf376 <__fixsfsi>
        OCR1B=ICR1-vAl;
    4826:	c6 1b       	sub	r28, r22
    4828:	d7 0b       	sbc	r29, r23
    482a:	d0 93 8b 00 	sts	0x008B, r29
    482e:	c0 93 8a 00 	sts	0x008A, r28
    4832:	e1 c2       	rjmp	.+1474   	; 0x4df6 <_Z6angle2i+0x1760>
        break;
      case 5:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    4834:	e6 e8       	ldi	r30, 0x86	; 134
    4836:	f0 e0       	ldi	r31, 0x00	; 0
    4838:	c0 81       	ld	r28, Z
    483a:	d1 81       	ldd	r29, Z+1	; 0x01
    483c:	80 80       	ld	r8, Z
    483e:	91 80       	ldd	r9, Z+1	; 0x01
    4840:	00 d0       	rcall	.+0      	; 0x4842 <_Z6angle2i+0x11ac>
    4842:	0f 92       	push	r0
    4844:	4d b6       	in	r4, 0x3d	; 61
    4846:	5e b6       	in	r5, 0x3e	; 62
    4848:	08 94       	sec
    484a:	41 1c       	adc	r4, r1
    484c:	51 1c       	adc	r5, r1
    484e:	88 27       	eor	r24, r24
    4850:	77 fd       	sbrc	r23, 7
    4852:	80 95       	com	r24
    4854:	98 2f       	mov	r25, r24
    4856:	0e 94 ee 79 	call	0xf3dc	; 0xf3dc <__floatsisf>
    485a:	7b 01       	movw	r14, r22
    485c:	8c 01       	movw	r16, r24
    485e:	ce 01       	movw	r24, r28
    4860:	68 e2       	ldi	r22, 0x28	; 40
    4862:	70 e0       	ldi	r23, 0x00	; 0
    4864:	0e 94 05 7b 	call	0xf60a	; 0xf60a <__udivmodhi4>
    4868:	80 e0       	ldi	r24, 0x00	; 0
    486a:	90 e0       	ldi	r25, 0x00	; 0
    486c:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    4870:	5b 01       	movw	r10, r22
    4872:	6c 01       	movw	r12, r24
    4874:	96 94       	lsr	r9
    4876:	87 94       	ror	r8
    4878:	96 94       	lsr	r9
    487a:	87 94       	ror	r8
    487c:	96 94       	lsr	r9
    487e:	87 94       	ror	r8
    4880:	b4 01       	movw	r22, r8
    4882:	80 e0       	ldi	r24, 0x00	; 0
    4884:	90 e0       	ldi	r25, 0x00	; 0
    4886:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    488a:	f2 01       	movw	r30, r4
    488c:	60 83       	st	Z, r22
    488e:	71 83       	std	Z+1, r23	; 0x01
    4890:	82 83       	std	Z+2, r24	; 0x02
    4892:	93 83       	std	Z+3, r25	; 0x03
    4894:	c8 01       	movw	r24, r16
    4896:	b7 01       	movw	r22, r14
    4898:	20 e0       	ldi	r18, 0x00	; 0
    489a:	30 e0       	ldi	r19, 0x00	; 0
    489c:	a9 01       	movw	r20, r18
    489e:	0f 2e       	mov	r0, r31
    48a0:	f0 e0       	ldi	r31, 0x00	; 0
    48a2:	ef 2e       	mov	r14, r31
    48a4:	f0 e0       	ldi	r31, 0x00	; 0
    48a6:	ff 2e       	mov	r15, r31
    48a8:	f4 e3       	ldi	r31, 0x34	; 52
    48aa:	0f 2f       	mov	r16, r31
    48ac:	f3 e4       	ldi	r31, 0x43	; 67
    48ae:	1f 2f       	mov	r17, r31
    48b0:	f0 2d       	mov	r31, r0
    48b2:	0e 94 a0 08 	call	0x1140	; 0x1140 <_Z3mapddddd>
    48b6:	0f 90       	pop	r0
    48b8:	0f 90       	pop	r0
    48ba:	0f 90       	pop	r0
    48bc:	0f 90       	pop	r0
        OCR3A=ICR3-vAl;
    48be:	c0 91 96 00 	lds	r28, 0x0096
    48c2:	d0 91 97 00 	lds	r29, 0x0097
      case 12:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
        OCR1B=ICR1-vAl;
        break;
      case 5:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    48c6:	0e 94 bb 79 	call	0xf376	; 0xf376 <__fixsfsi>
        OCR3A=ICR3-vAl;
    48ca:	c6 1b       	sub	r28, r22
    48cc:	d7 0b       	sbc	r29, r23
    48ce:	d0 93 99 00 	sts	0x0099, r29
    48d2:	c0 93 98 00 	sts	0x0098, r28
    48d6:	8f c2       	rjmp	.+1310   	; 0x4df6 <_Z6angle2i+0x1760>
        break;
      case 2:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    48d8:	e6 e8       	ldi	r30, 0x86	; 134
    48da:	f0 e0       	ldi	r31, 0x00	; 0
    48dc:	c0 81       	ld	r28, Z
    48de:	d1 81       	ldd	r29, Z+1	; 0x01
    48e0:	80 80       	ld	r8, Z
    48e2:	91 80       	ldd	r9, Z+1	; 0x01
    48e4:	00 d0       	rcall	.+0      	; 0x48e6 <_Z6angle2i+0x1250>
    48e6:	0f 92       	push	r0
    48e8:	4d b6       	in	r4, 0x3d	; 61
    48ea:	5e b6       	in	r5, 0x3e	; 62
    48ec:	08 94       	sec
    48ee:	41 1c       	adc	r4, r1
    48f0:	51 1c       	adc	r5, r1
    48f2:	88 27       	eor	r24, r24
    48f4:	77 fd       	sbrc	r23, 7
    48f6:	80 95       	com	r24
    48f8:	98 2f       	mov	r25, r24
    48fa:	0e 94 ee 79 	call	0xf3dc	; 0xf3dc <__floatsisf>
    48fe:	7b 01       	movw	r14, r22
    4900:	8c 01       	movw	r16, r24
    4902:	ce 01       	movw	r24, r28
    4904:	68 e2       	ldi	r22, 0x28	; 40
    4906:	70 e0       	ldi	r23, 0x00	; 0
    4908:	0e 94 05 7b 	call	0xf60a	; 0xf60a <__udivmodhi4>
    490c:	80 e0       	ldi	r24, 0x00	; 0
    490e:	90 e0       	ldi	r25, 0x00	; 0
    4910:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    4914:	5b 01       	movw	r10, r22
    4916:	6c 01       	movw	r12, r24
    4918:	96 94       	lsr	r9
    491a:	87 94       	ror	r8
    491c:	96 94       	lsr	r9
    491e:	87 94       	ror	r8
    4920:	96 94       	lsr	r9
    4922:	87 94       	ror	r8
    4924:	b4 01       	movw	r22, r8
    4926:	80 e0       	ldi	r24, 0x00	; 0
    4928:	90 e0       	ldi	r25, 0x00	; 0
    492a:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    492e:	f2 01       	movw	r30, r4
    4930:	60 83       	st	Z, r22
    4932:	71 83       	std	Z+1, r23	; 0x01
    4934:	82 83       	std	Z+2, r24	; 0x02
    4936:	93 83       	std	Z+3, r25	; 0x03
    4938:	c8 01       	movw	r24, r16
    493a:	b7 01       	movw	r22, r14
    493c:	20 e0       	ldi	r18, 0x00	; 0
    493e:	30 e0       	ldi	r19, 0x00	; 0
    4940:	a9 01       	movw	r20, r18
    4942:	0f 2e       	mov	r0, r31
    4944:	f0 e0       	ldi	r31, 0x00	; 0
    4946:	ef 2e       	mov	r14, r31
    4948:	f0 e0       	ldi	r31, 0x00	; 0
    494a:	ff 2e       	mov	r15, r31
    494c:	f4 e3       	ldi	r31, 0x34	; 52
    494e:	0f 2f       	mov	r16, r31
    4950:	f3 e4       	ldi	r31, 0x43	; 67
    4952:	1f 2f       	mov	r17, r31
    4954:	f0 2d       	mov	r31, r0
    4956:	0e 94 a0 08 	call	0x1140	; 0x1140 <_Z3mapddddd>
    495a:	0f 90       	pop	r0
    495c:	0f 90       	pop	r0
    495e:	0f 90       	pop	r0
    4960:	0f 90       	pop	r0
        OCR3B=ICR3-vAl;
    4962:	c0 91 96 00 	lds	r28, 0x0096
    4966:	d0 91 97 00 	lds	r29, 0x0097
      case 5:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
        OCR3A=ICR3-vAl;
        break;
      case 2:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    496a:	0e 94 bb 79 	call	0xf376	; 0xf376 <__fixsfsi>
        OCR3B=ICR3-vAl;
    496e:	c6 1b       	sub	r28, r22
    4970:	d7 0b       	sbc	r29, r23
    4972:	d0 93 9b 00 	sts	0x009B, r29
    4976:	c0 93 9a 00 	sts	0x009A, r28
    497a:	3d c2       	rjmp	.+1146   	; 0x4df6 <_Z6angle2i+0x1760>
        break;
      case 3:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    497c:	e6 e8       	ldi	r30, 0x86	; 134
    497e:	f0 e0       	ldi	r31, 0x00	; 0
    4980:	c0 81       	ld	r28, Z
    4982:	d1 81       	ldd	r29, Z+1	; 0x01
    4984:	80 80       	ld	r8, Z
    4986:	91 80       	ldd	r9, Z+1	; 0x01
    4988:	00 d0       	rcall	.+0      	; 0x498a <_Z6angle2i+0x12f4>
    498a:	0f 92       	push	r0
    498c:	4d b6       	in	r4, 0x3d	; 61
    498e:	5e b6       	in	r5, 0x3e	; 62
    4990:	08 94       	sec
    4992:	41 1c       	adc	r4, r1
    4994:	51 1c       	adc	r5, r1
    4996:	88 27       	eor	r24, r24
    4998:	77 fd       	sbrc	r23, 7
    499a:	80 95       	com	r24
    499c:	98 2f       	mov	r25, r24
    499e:	0e 94 ee 79 	call	0xf3dc	; 0xf3dc <__floatsisf>
    49a2:	7b 01       	movw	r14, r22
    49a4:	8c 01       	movw	r16, r24
    49a6:	ce 01       	movw	r24, r28
    49a8:	68 e2       	ldi	r22, 0x28	; 40
    49aa:	70 e0       	ldi	r23, 0x00	; 0
    49ac:	0e 94 05 7b 	call	0xf60a	; 0xf60a <__udivmodhi4>
    49b0:	80 e0       	ldi	r24, 0x00	; 0
    49b2:	90 e0       	ldi	r25, 0x00	; 0
    49b4:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    49b8:	5b 01       	movw	r10, r22
    49ba:	6c 01       	movw	r12, r24
    49bc:	96 94       	lsr	r9
    49be:	87 94       	ror	r8
    49c0:	96 94       	lsr	r9
    49c2:	87 94       	ror	r8
    49c4:	96 94       	lsr	r9
    49c6:	87 94       	ror	r8
    49c8:	b4 01       	movw	r22, r8
    49ca:	80 e0       	ldi	r24, 0x00	; 0
    49cc:	90 e0       	ldi	r25, 0x00	; 0
    49ce:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    49d2:	f2 01       	movw	r30, r4
    49d4:	60 83       	st	Z, r22
    49d6:	71 83       	std	Z+1, r23	; 0x01
    49d8:	82 83       	std	Z+2, r24	; 0x02
    49da:	93 83       	std	Z+3, r25	; 0x03
    49dc:	c8 01       	movw	r24, r16
    49de:	b7 01       	movw	r22, r14
    49e0:	20 e0       	ldi	r18, 0x00	; 0
    49e2:	30 e0       	ldi	r19, 0x00	; 0
    49e4:	a9 01       	movw	r20, r18
    49e6:	0f 2e       	mov	r0, r31
    49e8:	f0 e0       	ldi	r31, 0x00	; 0
    49ea:	ef 2e       	mov	r14, r31
    49ec:	f0 e0       	ldi	r31, 0x00	; 0
    49ee:	ff 2e       	mov	r15, r31
    49f0:	f4 e3       	ldi	r31, 0x34	; 52
    49f2:	0f 2f       	mov	r16, r31
    49f4:	f3 e4       	ldi	r31, 0x43	; 67
    49f6:	1f 2f       	mov	r17, r31
    49f8:	f0 2d       	mov	r31, r0
    49fa:	0e 94 a0 08 	call	0x1140	; 0x1140 <_Z3mapddddd>
    49fe:	0f 90       	pop	r0
    4a00:	0f 90       	pop	r0
    4a02:	0f 90       	pop	r0
    4a04:	0f 90       	pop	r0
        OCR3C=ICR3-vAl;
    4a06:	c0 91 96 00 	lds	r28, 0x0096
    4a0a:	d0 91 97 00 	lds	r29, 0x0097
      case 2:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
        OCR3B=ICR3-vAl;
        break;
      case 3:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    4a0e:	0e 94 bb 79 	call	0xf376	; 0xf376 <__fixsfsi>
        OCR3C=ICR3-vAl;
    4a12:	c6 1b       	sub	r28, r22
    4a14:	d7 0b       	sbc	r29, r23
    4a16:	d0 93 9d 00 	sts	0x009D, r29
    4a1a:	c0 93 9c 00 	sts	0x009C, r28
    4a1e:	eb c1       	rjmp	.+982    	; 0x4df6 <_Z6angle2i+0x1760>
        break;
      case 6:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    4a20:	e6 e8       	ldi	r30, 0x86	; 134
    4a22:	f0 e0       	ldi	r31, 0x00	; 0
    4a24:	c0 81       	ld	r28, Z
    4a26:	d1 81       	ldd	r29, Z+1	; 0x01
    4a28:	80 80       	ld	r8, Z
    4a2a:	91 80       	ldd	r9, Z+1	; 0x01
    4a2c:	00 d0       	rcall	.+0      	; 0x4a2e <_Z6angle2i+0x1398>
    4a2e:	0f 92       	push	r0
    4a30:	4d b6       	in	r4, 0x3d	; 61
    4a32:	5e b6       	in	r5, 0x3e	; 62
    4a34:	08 94       	sec
    4a36:	41 1c       	adc	r4, r1
    4a38:	51 1c       	adc	r5, r1
    4a3a:	88 27       	eor	r24, r24
    4a3c:	77 fd       	sbrc	r23, 7
    4a3e:	80 95       	com	r24
    4a40:	98 2f       	mov	r25, r24
    4a42:	0e 94 ee 79 	call	0xf3dc	; 0xf3dc <__floatsisf>
    4a46:	7b 01       	movw	r14, r22
    4a48:	8c 01       	movw	r16, r24
    4a4a:	ce 01       	movw	r24, r28
    4a4c:	68 e2       	ldi	r22, 0x28	; 40
    4a4e:	70 e0       	ldi	r23, 0x00	; 0
    4a50:	0e 94 05 7b 	call	0xf60a	; 0xf60a <__udivmodhi4>
    4a54:	80 e0       	ldi	r24, 0x00	; 0
    4a56:	90 e0       	ldi	r25, 0x00	; 0
    4a58:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    4a5c:	5b 01       	movw	r10, r22
    4a5e:	6c 01       	movw	r12, r24
    4a60:	96 94       	lsr	r9
    4a62:	87 94       	ror	r8
    4a64:	96 94       	lsr	r9
    4a66:	87 94       	ror	r8
    4a68:	96 94       	lsr	r9
    4a6a:	87 94       	ror	r8
    4a6c:	b4 01       	movw	r22, r8
    4a6e:	80 e0       	ldi	r24, 0x00	; 0
    4a70:	90 e0       	ldi	r25, 0x00	; 0
    4a72:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    4a76:	f2 01       	movw	r30, r4
    4a78:	60 83       	st	Z, r22
    4a7a:	71 83       	std	Z+1, r23	; 0x01
    4a7c:	82 83       	std	Z+2, r24	; 0x02
    4a7e:	93 83       	std	Z+3, r25	; 0x03
    4a80:	c8 01       	movw	r24, r16
    4a82:	b7 01       	movw	r22, r14
    4a84:	20 e0       	ldi	r18, 0x00	; 0
    4a86:	30 e0       	ldi	r19, 0x00	; 0
    4a88:	a9 01       	movw	r20, r18
    4a8a:	0f 2e       	mov	r0, r31
    4a8c:	f0 e0       	ldi	r31, 0x00	; 0
    4a8e:	ef 2e       	mov	r14, r31
    4a90:	f0 e0       	ldi	r31, 0x00	; 0
    4a92:	ff 2e       	mov	r15, r31
    4a94:	f4 e3       	ldi	r31, 0x34	; 52
    4a96:	0f 2f       	mov	r16, r31
    4a98:	f3 e4       	ldi	r31, 0x43	; 67
    4a9a:	1f 2f       	mov	r17, r31
    4a9c:	f0 2d       	mov	r31, r0
    4a9e:	0e 94 a0 08 	call	0x1140	; 0x1140 <_Z3mapddddd>
    4aa2:	0f 90       	pop	r0
    4aa4:	0f 90       	pop	r0
    4aa6:	0f 90       	pop	r0
    4aa8:	0f 90       	pop	r0
        OCR4A=ICR4-vAl;
    4aaa:	c0 91 a6 00 	lds	r28, 0x00A6
    4aae:	d0 91 a7 00 	lds	r29, 0x00A7
      case 3:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
        OCR3C=ICR3-vAl;
        break;
      case 6:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    4ab2:	0e 94 bb 79 	call	0xf376	; 0xf376 <__fixsfsi>
        OCR4A=ICR4-vAl;
    4ab6:	c6 1b       	sub	r28, r22
    4ab8:	d7 0b       	sbc	r29, r23
    4aba:	d0 93 a9 00 	sts	0x00A9, r29
    4abe:	c0 93 a8 00 	sts	0x00A8, r28
    4ac2:	99 c1       	rjmp	.+818    	; 0x4df6 <_Z6angle2i+0x1760>
        break;
      case 7:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    4ac4:	e6 e8       	ldi	r30, 0x86	; 134
    4ac6:	f0 e0       	ldi	r31, 0x00	; 0
    4ac8:	c0 81       	ld	r28, Z
    4aca:	d1 81       	ldd	r29, Z+1	; 0x01
    4acc:	80 80       	ld	r8, Z
    4ace:	91 80       	ldd	r9, Z+1	; 0x01
    4ad0:	00 d0       	rcall	.+0      	; 0x4ad2 <_Z6angle2i+0x143c>
    4ad2:	0f 92       	push	r0
    4ad4:	4d b6       	in	r4, 0x3d	; 61
    4ad6:	5e b6       	in	r5, 0x3e	; 62
    4ad8:	08 94       	sec
    4ada:	41 1c       	adc	r4, r1
    4adc:	51 1c       	adc	r5, r1
    4ade:	88 27       	eor	r24, r24
    4ae0:	77 fd       	sbrc	r23, 7
    4ae2:	80 95       	com	r24
    4ae4:	98 2f       	mov	r25, r24
    4ae6:	0e 94 ee 79 	call	0xf3dc	; 0xf3dc <__floatsisf>
    4aea:	7b 01       	movw	r14, r22
    4aec:	8c 01       	movw	r16, r24
    4aee:	ce 01       	movw	r24, r28
    4af0:	68 e2       	ldi	r22, 0x28	; 40
    4af2:	70 e0       	ldi	r23, 0x00	; 0
    4af4:	0e 94 05 7b 	call	0xf60a	; 0xf60a <__udivmodhi4>
    4af8:	80 e0       	ldi	r24, 0x00	; 0
    4afa:	90 e0       	ldi	r25, 0x00	; 0
    4afc:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    4b00:	5b 01       	movw	r10, r22
    4b02:	6c 01       	movw	r12, r24
    4b04:	96 94       	lsr	r9
    4b06:	87 94       	ror	r8
    4b08:	96 94       	lsr	r9
    4b0a:	87 94       	ror	r8
    4b0c:	96 94       	lsr	r9
    4b0e:	87 94       	ror	r8
    4b10:	b4 01       	movw	r22, r8
    4b12:	80 e0       	ldi	r24, 0x00	; 0
    4b14:	90 e0       	ldi	r25, 0x00	; 0
    4b16:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    4b1a:	f2 01       	movw	r30, r4
    4b1c:	60 83       	st	Z, r22
    4b1e:	71 83       	std	Z+1, r23	; 0x01
    4b20:	82 83       	std	Z+2, r24	; 0x02
    4b22:	93 83       	std	Z+3, r25	; 0x03
    4b24:	c8 01       	movw	r24, r16
    4b26:	b7 01       	movw	r22, r14
    4b28:	20 e0       	ldi	r18, 0x00	; 0
    4b2a:	30 e0       	ldi	r19, 0x00	; 0
    4b2c:	a9 01       	movw	r20, r18
    4b2e:	0f 2e       	mov	r0, r31
    4b30:	f0 e0       	ldi	r31, 0x00	; 0
    4b32:	ef 2e       	mov	r14, r31
    4b34:	f0 e0       	ldi	r31, 0x00	; 0
    4b36:	ff 2e       	mov	r15, r31
    4b38:	f4 e3       	ldi	r31, 0x34	; 52
    4b3a:	0f 2f       	mov	r16, r31
    4b3c:	f3 e4       	ldi	r31, 0x43	; 67
    4b3e:	1f 2f       	mov	r17, r31
    4b40:	f0 2d       	mov	r31, r0
    4b42:	0e 94 a0 08 	call	0x1140	; 0x1140 <_Z3mapddddd>
    4b46:	0f 90       	pop	r0
    4b48:	0f 90       	pop	r0
    4b4a:	0f 90       	pop	r0
    4b4c:	0f 90       	pop	r0
        OCR4B=ICR4-vAl;
    4b4e:	c0 91 a6 00 	lds	r28, 0x00A6
    4b52:	d0 91 a7 00 	lds	r29, 0x00A7
      case 6:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
        OCR4A=ICR4-vAl;
        break;
      case 7:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    4b56:	0e 94 bb 79 	call	0xf376	; 0xf376 <__fixsfsi>
        OCR4B=ICR4-vAl;
    4b5a:	c6 1b       	sub	r28, r22
    4b5c:	d7 0b       	sbc	r29, r23
    4b5e:	d0 93 ab 00 	sts	0x00AB, r29
    4b62:	c0 93 aa 00 	sts	0x00AA, r28
    4b66:	47 c1       	rjmp	.+654    	; 0x4df6 <_Z6angle2i+0x1760>
        break; 
      case 8:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    4b68:	e6 e8       	ldi	r30, 0x86	; 134
    4b6a:	f0 e0       	ldi	r31, 0x00	; 0
    4b6c:	c0 81       	ld	r28, Z
    4b6e:	d1 81       	ldd	r29, Z+1	; 0x01
    4b70:	80 80       	ld	r8, Z
    4b72:	91 80       	ldd	r9, Z+1	; 0x01
    4b74:	00 d0       	rcall	.+0      	; 0x4b76 <_Z6angle2i+0x14e0>
    4b76:	0f 92       	push	r0
    4b78:	4d b6       	in	r4, 0x3d	; 61
    4b7a:	5e b6       	in	r5, 0x3e	; 62
    4b7c:	08 94       	sec
    4b7e:	41 1c       	adc	r4, r1
    4b80:	51 1c       	adc	r5, r1
    4b82:	88 27       	eor	r24, r24
    4b84:	77 fd       	sbrc	r23, 7
    4b86:	80 95       	com	r24
    4b88:	98 2f       	mov	r25, r24
    4b8a:	0e 94 ee 79 	call	0xf3dc	; 0xf3dc <__floatsisf>
    4b8e:	7b 01       	movw	r14, r22
    4b90:	8c 01       	movw	r16, r24
    4b92:	ce 01       	movw	r24, r28
    4b94:	68 e2       	ldi	r22, 0x28	; 40
    4b96:	70 e0       	ldi	r23, 0x00	; 0
    4b98:	0e 94 05 7b 	call	0xf60a	; 0xf60a <__udivmodhi4>
    4b9c:	80 e0       	ldi	r24, 0x00	; 0
    4b9e:	90 e0       	ldi	r25, 0x00	; 0
    4ba0:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    4ba4:	5b 01       	movw	r10, r22
    4ba6:	6c 01       	movw	r12, r24
    4ba8:	96 94       	lsr	r9
    4baa:	87 94       	ror	r8
    4bac:	96 94       	lsr	r9
    4bae:	87 94       	ror	r8
    4bb0:	96 94       	lsr	r9
    4bb2:	87 94       	ror	r8
    4bb4:	b4 01       	movw	r22, r8
    4bb6:	80 e0       	ldi	r24, 0x00	; 0
    4bb8:	90 e0       	ldi	r25, 0x00	; 0
    4bba:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    4bbe:	f2 01       	movw	r30, r4
    4bc0:	60 83       	st	Z, r22
    4bc2:	71 83       	std	Z+1, r23	; 0x01
    4bc4:	82 83       	std	Z+2, r24	; 0x02
    4bc6:	93 83       	std	Z+3, r25	; 0x03
    4bc8:	c8 01       	movw	r24, r16
    4bca:	b7 01       	movw	r22, r14
    4bcc:	20 e0       	ldi	r18, 0x00	; 0
    4bce:	30 e0       	ldi	r19, 0x00	; 0
    4bd0:	a9 01       	movw	r20, r18
    4bd2:	0f 2e       	mov	r0, r31
    4bd4:	f0 e0       	ldi	r31, 0x00	; 0
    4bd6:	ef 2e       	mov	r14, r31
    4bd8:	f0 e0       	ldi	r31, 0x00	; 0
    4bda:	ff 2e       	mov	r15, r31
    4bdc:	f4 e3       	ldi	r31, 0x34	; 52
    4bde:	0f 2f       	mov	r16, r31
    4be0:	f3 e4       	ldi	r31, 0x43	; 67
    4be2:	1f 2f       	mov	r17, r31
    4be4:	f0 2d       	mov	r31, r0
    4be6:	0e 94 a0 08 	call	0x1140	; 0x1140 <_Z3mapddddd>
    4bea:	0f 90       	pop	r0
    4bec:	0f 90       	pop	r0
    4bee:	0f 90       	pop	r0
    4bf0:	0f 90       	pop	r0
        OCR4C=ICR4-vAl;
    4bf2:	c0 91 a6 00 	lds	r28, 0x00A6
    4bf6:	d0 91 a7 00 	lds	r29, 0x00A7
      case 7:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
        OCR4B=ICR4-vAl;
        break; 
      case 8:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    4bfa:	0e 94 bb 79 	call	0xf376	; 0xf376 <__fixsfsi>
        OCR4C=ICR4-vAl;
    4bfe:	c6 1b       	sub	r28, r22
    4c00:	d7 0b       	sbc	r29, r23
    4c02:	d0 93 ad 00 	sts	0x00AD, r29
    4c06:	c0 93 ac 00 	sts	0x00AC, r28
    4c0a:	f5 c0       	rjmp	.+490    	; 0x4df6 <_Z6angle2i+0x1760>
        break;
      case 46:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    4c0c:	e6 e8       	ldi	r30, 0x86	; 134
    4c0e:	f0 e0       	ldi	r31, 0x00	; 0
    4c10:	c0 81       	ld	r28, Z
    4c12:	d1 81       	ldd	r29, Z+1	; 0x01
    4c14:	80 80       	ld	r8, Z
    4c16:	91 80       	ldd	r9, Z+1	; 0x01
    4c18:	00 d0       	rcall	.+0      	; 0x4c1a <_Z6angle2i+0x1584>
    4c1a:	0f 92       	push	r0
    4c1c:	4d b6       	in	r4, 0x3d	; 61
    4c1e:	5e b6       	in	r5, 0x3e	; 62
    4c20:	08 94       	sec
    4c22:	41 1c       	adc	r4, r1
    4c24:	51 1c       	adc	r5, r1
    4c26:	88 27       	eor	r24, r24
    4c28:	77 fd       	sbrc	r23, 7
    4c2a:	80 95       	com	r24
    4c2c:	98 2f       	mov	r25, r24
    4c2e:	0e 94 ee 79 	call	0xf3dc	; 0xf3dc <__floatsisf>
    4c32:	7b 01       	movw	r14, r22
    4c34:	8c 01       	movw	r16, r24
    4c36:	ce 01       	movw	r24, r28
    4c38:	68 e2       	ldi	r22, 0x28	; 40
    4c3a:	70 e0       	ldi	r23, 0x00	; 0
    4c3c:	0e 94 05 7b 	call	0xf60a	; 0xf60a <__udivmodhi4>
    4c40:	80 e0       	ldi	r24, 0x00	; 0
    4c42:	90 e0       	ldi	r25, 0x00	; 0
    4c44:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    4c48:	5b 01       	movw	r10, r22
    4c4a:	6c 01       	movw	r12, r24
    4c4c:	96 94       	lsr	r9
    4c4e:	87 94       	ror	r8
    4c50:	96 94       	lsr	r9
    4c52:	87 94       	ror	r8
    4c54:	96 94       	lsr	r9
    4c56:	87 94       	ror	r8
    4c58:	b4 01       	movw	r22, r8
    4c5a:	80 e0       	ldi	r24, 0x00	; 0
    4c5c:	90 e0       	ldi	r25, 0x00	; 0
    4c5e:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    4c62:	f2 01       	movw	r30, r4
    4c64:	60 83       	st	Z, r22
    4c66:	71 83       	std	Z+1, r23	; 0x01
    4c68:	82 83       	std	Z+2, r24	; 0x02
    4c6a:	93 83       	std	Z+3, r25	; 0x03
    4c6c:	c8 01       	movw	r24, r16
    4c6e:	b7 01       	movw	r22, r14
    4c70:	20 e0       	ldi	r18, 0x00	; 0
    4c72:	30 e0       	ldi	r19, 0x00	; 0
    4c74:	a9 01       	movw	r20, r18
    4c76:	0f 2e       	mov	r0, r31
    4c78:	f0 e0       	ldi	r31, 0x00	; 0
    4c7a:	ef 2e       	mov	r14, r31
    4c7c:	f0 e0       	ldi	r31, 0x00	; 0
    4c7e:	ff 2e       	mov	r15, r31
    4c80:	f4 e3       	ldi	r31, 0x34	; 52
    4c82:	0f 2f       	mov	r16, r31
    4c84:	f3 e4       	ldi	r31, 0x43	; 67
    4c86:	1f 2f       	mov	r17, r31
    4c88:	f0 2d       	mov	r31, r0
    4c8a:	0e 94 a0 08 	call	0x1140	; 0x1140 <_Z3mapddddd>
    4c8e:	0f 90       	pop	r0
    4c90:	0f 90       	pop	r0
    4c92:	0f 90       	pop	r0
    4c94:	0f 90       	pop	r0
        OCR5A=ICR5-vAl;
    4c96:	c0 91 26 01 	lds	r28, 0x0126
    4c9a:	d0 91 27 01 	lds	r29, 0x0127
      case 8:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
        OCR4C=ICR4-vAl;
        break;
      case 46:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    4c9e:	0e 94 bb 79 	call	0xf376	; 0xf376 <__fixsfsi>
        OCR5A=ICR5-vAl;
    4ca2:	c6 1b       	sub	r28, r22
    4ca4:	d7 0b       	sbc	r29, r23
    4ca6:	d0 93 29 01 	sts	0x0129, r29
    4caa:	c0 93 28 01 	sts	0x0128, r28
    4cae:	a3 c0       	rjmp	.+326    	; 0x4df6 <_Z6angle2i+0x1760>
        break;
      case 45:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    4cb0:	e6 e8       	ldi	r30, 0x86	; 134
    4cb2:	f0 e0       	ldi	r31, 0x00	; 0
    4cb4:	c0 81       	ld	r28, Z
    4cb6:	d1 81       	ldd	r29, Z+1	; 0x01
    4cb8:	80 80       	ld	r8, Z
    4cba:	91 80       	ldd	r9, Z+1	; 0x01
    4cbc:	00 d0       	rcall	.+0      	; 0x4cbe <_Z6angle2i+0x1628>
    4cbe:	0f 92       	push	r0
    4cc0:	4d b6       	in	r4, 0x3d	; 61
    4cc2:	5e b6       	in	r5, 0x3e	; 62
    4cc4:	08 94       	sec
    4cc6:	41 1c       	adc	r4, r1
    4cc8:	51 1c       	adc	r5, r1
    4cca:	88 27       	eor	r24, r24
    4ccc:	77 fd       	sbrc	r23, 7
    4cce:	80 95       	com	r24
    4cd0:	98 2f       	mov	r25, r24
    4cd2:	0e 94 ee 79 	call	0xf3dc	; 0xf3dc <__floatsisf>
    4cd6:	7b 01       	movw	r14, r22
    4cd8:	8c 01       	movw	r16, r24
    4cda:	ce 01       	movw	r24, r28
    4cdc:	68 e2       	ldi	r22, 0x28	; 40
    4cde:	70 e0       	ldi	r23, 0x00	; 0
    4ce0:	0e 94 05 7b 	call	0xf60a	; 0xf60a <__udivmodhi4>
    4ce4:	80 e0       	ldi	r24, 0x00	; 0
    4ce6:	90 e0       	ldi	r25, 0x00	; 0
    4ce8:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    4cec:	5b 01       	movw	r10, r22
    4cee:	6c 01       	movw	r12, r24
    4cf0:	96 94       	lsr	r9
    4cf2:	87 94       	ror	r8
    4cf4:	96 94       	lsr	r9
    4cf6:	87 94       	ror	r8
    4cf8:	96 94       	lsr	r9
    4cfa:	87 94       	ror	r8
    4cfc:	b4 01       	movw	r22, r8
    4cfe:	80 e0       	ldi	r24, 0x00	; 0
    4d00:	90 e0       	ldi	r25, 0x00	; 0
    4d02:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    4d06:	f2 01       	movw	r30, r4
    4d08:	60 83       	st	Z, r22
    4d0a:	71 83       	std	Z+1, r23	; 0x01
    4d0c:	82 83       	std	Z+2, r24	; 0x02
    4d0e:	93 83       	std	Z+3, r25	; 0x03
    4d10:	c8 01       	movw	r24, r16
    4d12:	b7 01       	movw	r22, r14
    4d14:	20 e0       	ldi	r18, 0x00	; 0
    4d16:	30 e0       	ldi	r19, 0x00	; 0
    4d18:	a9 01       	movw	r20, r18
    4d1a:	0f 2e       	mov	r0, r31
    4d1c:	f0 e0       	ldi	r31, 0x00	; 0
    4d1e:	ef 2e       	mov	r14, r31
    4d20:	f0 e0       	ldi	r31, 0x00	; 0
    4d22:	ff 2e       	mov	r15, r31
    4d24:	f4 e3       	ldi	r31, 0x34	; 52
    4d26:	0f 2f       	mov	r16, r31
    4d28:	f3 e4       	ldi	r31, 0x43	; 67
    4d2a:	1f 2f       	mov	r17, r31
    4d2c:	f0 2d       	mov	r31, r0
    4d2e:	0e 94 a0 08 	call	0x1140	; 0x1140 <_Z3mapddddd>
    4d32:	0f 90       	pop	r0
    4d34:	0f 90       	pop	r0
    4d36:	0f 90       	pop	r0
    4d38:	0f 90       	pop	r0
        OCR5B=ICR5-vAl;
    4d3a:	c0 91 26 01 	lds	r28, 0x0126
    4d3e:	d0 91 27 01 	lds	r29, 0x0127
      case 46:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
        OCR5A=ICR5-vAl;
        break;
      case 45:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    4d42:	0e 94 bb 79 	call	0xf376	; 0xf376 <__fixsfsi>
        OCR5B=ICR5-vAl;
    4d46:	c6 1b       	sub	r28, r22
    4d48:	d7 0b       	sbc	r29, r23
    4d4a:	d0 93 2b 01 	sts	0x012B, r29
    4d4e:	c0 93 2a 01 	sts	0x012A, r28
    4d52:	51 c0       	rjmp	.+162    	; 0x4df6 <_Z6angle2i+0x1760>
        break;
      case 44:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    4d54:	e6 e8       	ldi	r30, 0x86	; 134
    4d56:	f0 e0       	ldi	r31, 0x00	; 0
    4d58:	c0 81       	ld	r28, Z
    4d5a:	d1 81       	ldd	r29, Z+1	; 0x01
    4d5c:	80 80       	ld	r8, Z
    4d5e:	91 80       	ldd	r9, Z+1	; 0x01
    4d60:	00 d0       	rcall	.+0      	; 0x4d62 <_Z6angle2i+0x16cc>
    4d62:	0f 92       	push	r0
    4d64:	4d b6       	in	r4, 0x3d	; 61
    4d66:	5e b6       	in	r5, 0x3e	; 62
    4d68:	08 94       	sec
    4d6a:	41 1c       	adc	r4, r1
    4d6c:	51 1c       	adc	r5, r1
    4d6e:	88 27       	eor	r24, r24
    4d70:	77 fd       	sbrc	r23, 7
    4d72:	80 95       	com	r24
    4d74:	98 2f       	mov	r25, r24
    4d76:	0e 94 ee 79 	call	0xf3dc	; 0xf3dc <__floatsisf>
    4d7a:	7b 01       	movw	r14, r22
    4d7c:	8c 01       	movw	r16, r24
    4d7e:	ce 01       	movw	r24, r28
    4d80:	68 e2       	ldi	r22, 0x28	; 40
    4d82:	70 e0       	ldi	r23, 0x00	; 0
    4d84:	0e 94 05 7b 	call	0xf60a	; 0xf60a <__udivmodhi4>
    4d88:	80 e0       	ldi	r24, 0x00	; 0
    4d8a:	90 e0       	ldi	r25, 0x00	; 0
    4d8c:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    4d90:	5b 01       	movw	r10, r22
    4d92:	6c 01       	movw	r12, r24
    4d94:	96 94       	lsr	r9
    4d96:	87 94       	ror	r8
    4d98:	96 94       	lsr	r9
    4d9a:	87 94       	ror	r8
    4d9c:	96 94       	lsr	r9
    4d9e:	87 94       	ror	r8
    4da0:	b4 01       	movw	r22, r8
    4da2:	80 e0       	ldi	r24, 0x00	; 0
    4da4:	90 e0       	ldi	r25, 0x00	; 0
    4da6:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    4daa:	f2 01       	movw	r30, r4
    4dac:	60 83       	st	Z, r22
    4dae:	71 83       	std	Z+1, r23	; 0x01
    4db0:	82 83       	std	Z+2, r24	; 0x02
    4db2:	93 83       	std	Z+3, r25	; 0x03
    4db4:	c8 01       	movw	r24, r16
    4db6:	b7 01       	movw	r22, r14
    4db8:	20 e0       	ldi	r18, 0x00	; 0
    4dba:	30 e0       	ldi	r19, 0x00	; 0
    4dbc:	a9 01       	movw	r20, r18
    4dbe:	0f 2e       	mov	r0, r31
    4dc0:	f0 e0       	ldi	r31, 0x00	; 0
    4dc2:	ef 2e       	mov	r14, r31
    4dc4:	f0 e0       	ldi	r31, 0x00	; 0
    4dc6:	ff 2e       	mov	r15, r31
    4dc8:	f4 e3       	ldi	r31, 0x34	; 52
    4dca:	0f 2f       	mov	r16, r31
    4dcc:	f3 e4       	ldi	r31, 0x43	; 67
    4dce:	1f 2f       	mov	r17, r31
    4dd0:	f0 2d       	mov	r31, r0
    4dd2:	0e 94 a0 08 	call	0x1140	; 0x1140 <_Z3mapddddd>
    4dd6:	0f 90       	pop	r0
    4dd8:	0f 90       	pop	r0
    4dda:	0f 90       	pop	r0
    4ddc:	0f 90       	pop	r0
        OCR5C=ICR5-vAl;
    4dde:	c0 91 26 01 	lds	r28, 0x0126
    4de2:	d0 91 27 01 	lds	r29, 0x0127
      case 45:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
        OCR5B=ICR5-vAl;
        break;
      case 44:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    4de6:	0e 94 bb 79 	call	0xf376	; 0xf376 <__fixsfsi>
        OCR5C=ICR5-vAl;
    4dea:	c6 1b       	sub	r28, r22
    4dec:	d7 0b       	sbc	r29, r23
    4dee:	d0 93 2d 01 	sts	0x012D, r29
    4df2:	c0 93 2c 01 	sts	0x012C, r28
		s.write(w);
    4df6:	60 91 d0 02 	lds	r22, 0x02D0
    4dfa:	70 91 d1 02 	lds	r23, 0x02D1
     }
  }

  void write(int vAl)           //PIN=servo pin no. on mega,vAl=angle F_CPU for the servo at pin
  {
    switch(pIn)
    4dfe:	80 91 d7 02 	lds	r24, 0x02D7
    4e02:	88 30       	cpi	r24, 0x08	; 8
    4e04:	09 f4       	brne	.+2      	; 0x4e08 <_Z6angle2i+0x1772>
    4e06:	63 c2       	rjmp	.+1222   	; 0x52ce <_Z6angle2i+0x1c38>
    4e08:	89 30       	cpi	r24, 0x09	; 9
    4e0a:	98 f4       	brcc	.+38     	; 0x4e32 <_Z6angle2i+0x179c>
    4e0c:	85 30       	cpi	r24, 0x05	; 5
    4e0e:	09 f4       	brne	.+2      	; 0x4e12 <_Z6angle2i+0x177c>
    4e10:	c4 c0       	rjmp	.+392    	; 0x4f9a <_Z6angle2i+0x1904>
    4e12:	86 30       	cpi	r24, 0x06	; 6
    4e14:	38 f4       	brcc	.+14     	; 0x4e24 <_Z6angle2i+0x178e>
    4e16:	82 30       	cpi	r24, 0x02	; 2
    4e18:	09 f4       	brne	.+2      	; 0x4e1c <_Z6angle2i+0x1786>
    4e1a:	11 c1       	rjmp	.+546    	; 0x503e <_Z6angle2i+0x19a8>
    4e1c:	83 30       	cpi	r24, 0x03	; 3
    4e1e:	09 f0       	breq	.+2      	; 0x4e22 <_Z6angle2i+0x178c>
    4e20:	9d c3       	rjmp	.+1850   	; 0x555c <_Z6angle2i+0x1ec6>
    4e22:	5f c1       	rjmp	.+702    	; 0x50e2 <_Z6angle2i+0x1a4c>
    4e24:	86 30       	cpi	r24, 0x06	; 6
    4e26:	09 f4       	brne	.+2      	; 0x4e2a <_Z6angle2i+0x1794>
    4e28:	ae c1       	rjmp	.+860    	; 0x5186 <_Z6angle2i+0x1af0>
    4e2a:	87 30       	cpi	r24, 0x07	; 7
    4e2c:	09 f0       	breq	.+2      	; 0x4e30 <_Z6angle2i+0x179a>
    4e2e:	96 c3       	rjmp	.+1836   	; 0x555c <_Z6angle2i+0x1ec6>
    4e30:	fc c1       	rjmp	.+1016   	; 0x522a <_Z6angle2i+0x1b94>
    4e32:	8c 32       	cpi	r24, 0x2C	; 44
    4e34:	09 f4       	brne	.+2      	; 0x4e38 <_Z6angle2i+0x17a2>
    4e36:	41 c3       	rjmp	.+1666   	; 0x54ba <_Z6angle2i+0x1e24>
    4e38:	8d 32       	cpi	r24, 0x2D	; 45
    4e3a:	30 f4       	brcc	.+12     	; 0x4e48 <_Z6angle2i+0x17b2>
    4e3c:	8b 30       	cpi	r24, 0x0B	; 11
    4e3e:	59 f0       	breq	.+22     	; 0x4e56 <_Z6angle2i+0x17c0>
    4e40:	8c 30       	cpi	r24, 0x0C	; 12
    4e42:	09 f0       	breq	.+2      	; 0x4e46 <_Z6angle2i+0x17b0>
    4e44:	8b c3       	rjmp	.+1814   	; 0x555c <_Z6angle2i+0x1ec6>
    4e46:	58 c0       	rjmp	.+176    	; 0x4ef8 <_Z6angle2i+0x1862>
    4e48:	8d 32       	cpi	r24, 0x2D	; 45
    4e4a:	09 f4       	brne	.+2      	; 0x4e4e <_Z6angle2i+0x17b8>
    4e4c:	e4 c2       	rjmp	.+1480   	; 0x5416 <_Z6angle2i+0x1d80>
    4e4e:	8e 32       	cpi	r24, 0x2E	; 46
    4e50:	09 f0       	breq	.+2      	; 0x4e54 <_Z6angle2i+0x17be>
    4e52:	84 c3       	rjmp	.+1800   	; 0x555c <_Z6angle2i+0x1ec6>
    4e54:	8e c2       	rjmp	.+1308   	; 0x5372 <_Z6angle2i+0x1cdc>
    {
     case 11:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    4e56:	c6 e8       	ldi	r28, 0x86	; 134
    4e58:	d0 e0       	ldi	r29, 0x00	; 0
    4e5a:	08 81       	ld	r16, Y
    4e5c:	19 81       	ldd	r17, Y+1	; 0x01
    4e5e:	e8 80       	ld	r14, Y
    4e60:	f9 80       	ldd	r15, Y+1	; 0x01
    4e62:	00 d0       	rcall	.+0      	; 0x4e64 <_Z6angle2i+0x17ce>
    4e64:	0f 92       	push	r0
    4e66:	8d b6       	in	r8, 0x3d	; 61
    4e68:	9e b6       	in	r9, 0x3e	; 62
    4e6a:	08 94       	sec
    4e6c:	81 1c       	adc	r8, r1
    4e6e:	91 1c       	adc	r9, r1
    4e70:	88 27       	eor	r24, r24
    4e72:	77 fd       	sbrc	r23, 7
    4e74:	80 95       	com	r24
    4e76:	98 2f       	mov	r25, r24
    4e78:	0e 94 ee 79 	call	0xf3dc	; 0xf3dc <__floatsisf>
    4e7c:	2b 01       	movw	r4, r22
    4e7e:	3c 01       	movw	r6, r24
    4e80:	c8 01       	movw	r24, r16
    4e82:	68 e2       	ldi	r22, 0x28	; 40
    4e84:	70 e0       	ldi	r23, 0x00	; 0
    4e86:	0e 94 05 7b 	call	0xf60a	; 0xf60a <__udivmodhi4>
    4e8a:	80 e0       	ldi	r24, 0x00	; 0
    4e8c:	90 e0       	ldi	r25, 0x00	; 0
    4e8e:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    4e92:	5b 01       	movw	r10, r22
    4e94:	6c 01       	movw	r12, r24
    4e96:	f6 94       	lsr	r15
    4e98:	e7 94       	ror	r14
    4e9a:	f6 94       	lsr	r15
    4e9c:	e7 94       	ror	r14
    4e9e:	f6 94       	lsr	r15
    4ea0:	e7 94       	ror	r14
    4ea2:	b7 01       	movw	r22, r14
    4ea4:	80 e0       	ldi	r24, 0x00	; 0
    4ea6:	90 e0       	ldi	r25, 0x00	; 0
    4ea8:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    4eac:	f4 01       	movw	r30, r8
    4eae:	60 83       	st	Z, r22
    4eb0:	71 83       	std	Z+1, r23	; 0x01
    4eb2:	82 83       	std	Z+2, r24	; 0x02
    4eb4:	93 83       	std	Z+3, r25	; 0x03
    4eb6:	c3 01       	movw	r24, r6
    4eb8:	b2 01       	movw	r22, r4
    4eba:	20 e0       	ldi	r18, 0x00	; 0
    4ebc:	30 e0       	ldi	r19, 0x00	; 0
    4ebe:	a9 01       	movw	r20, r18
    4ec0:	0f 2e       	mov	r0, r31
    4ec2:	f0 e0       	ldi	r31, 0x00	; 0
    4ec4:	ef 2e       	mov	r14, r31
    4ec6:	f0 e0       	ldi	r31, 0x00	; 0
    4ec8:	ff 2e       	mov	r15, r31
    4eca:	f4 e3       	ldi	r31, 0x34	; 52
    4ecc:	0f 2f       	mov	r16, r31
    4ece:	f3 e4       	ldi	r31, 0x43	; 67
    4ed0:	1f 2f       	mov	r17, r31
    4ed2:	f0 2d       	mov	r31, r0
    4ed4:	0e 94 a0 08 	call	0x1140	; 0x1140 <_Z3mapddddd>
    4ed8:	0f 90       	pop	r0
    4eda:	0f 90       	pop	r0
    4edc:	0f 90       	pop	r0
    4ede:	0f 90       	pop	r0
        OCR1A=ICR1-vAl;
    4ee0:	09 90       	ld	r0, Y+
    4ee2:	d8 81       	ld	r29, Y
    4ee4:	c0 2d       	mov	r28, r0
  void write(int vAl)           //PIN=servo pin no. on mega,vAl=angle F_CPU for the servo at pin
  {
    switch(pIn)
    {
     case 11:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    4ee6:	0e 94 bb 79 	call	0xf376	; 0xf376 <__fixsfsi>
        OCR1A=ICR1-vAl;
    4eea:	c6 1b       	sub	r28, r22
    4eec:	d7 0b       	sbc	r29, r23
    4eee:	d0 93 89 00 	sts	0x0089, r29
    4ef2:	c0 93 88 00 	sts	0x0088, r28
    4ef6:	32 c3       	rjmp	.+1636   	; 0x555c <_Z6angle2i+0x1ec6>
        break;
      case 12:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    4ef8:	c6 e8       	ldi	r28, 0x86	; 134
    4efa:	d0 e0       	ldi	r29, 0x00	; 0
    4efc:	08 81       	ld	r16, Y
    4efe:	19 81       	ldd	r17, Y+1	; 0x01
    4f00:	e8 80       	ld	r14, Y
    4f02:	f9 80       	ldd	r15, Y+1	; 0x01
    4f04:	00 d0       	rcall	.+0      	; 0x4f06 <_Z6angle2i+0x1870>
    4f06:	0f 92       	push	r0
    4f08:	8d b6       	in	r8, 0x3d	; 61
    4f0a:	9e b6       	in	r9, 0x3e	; 62
    4f0c:	08 94       	sec
    4f0e:	81 1c       	adc	r8, r1
    4f10:	91 1c       	adc	r9, r1
    4f12:	88 27       	eor	r24, r24
    4f14:	77 fd       	sbrc	r23, 7
    4f16:	80 95       	com	r24
    4f18:	98 2f       	mov	r25, r24
    4f1a:	0e 94 ee 79 	call	0xf3dc	; 0xf3dc <__floatsisf>
    4f1e:	2b 01       	movw	r4, r22
    4f20:	3c 01       	movw	r6, r24
    4f22:	c8 01       	movw	r24, r16
    4f24:	68 e2       	ldi	r22, 0x28	; 40
    4f26:	70 e0       	ldi	r23, 0x00	; 0
    4f28:	0e 94 05 7b 	call	0xf60a	; 0xf60a <__udivmodhi4>
    4f2c:	80 e0       	ldi	r24, 0x00	; 0
    4f2e:	90 e0       	ldi	r25, 0x00	; 0
    4f30:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    4f34:	5b 01       	movw	r10, r22
    4f36:	6c 01       	movw	r12, r24
    4f38:	f6 94       	lsr	r15
    4f3a:	e7 94       	ror	r14
    4f3c:	f6 94       	lsr	r15
    4f3e:	e7 94       	ror	r14
    4f40:	f6 94       	lsr	r15
    4f42:	e7 94       	ror	r14
    4f44:	b7 01       	movw	r22, r14
    4f46:	80 e0       	ldi	r24, 0x00	; 0
    4f48:	90 e0       	ldi	r25, 0x00	; 0
    4f4a:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    4f4e:	f4 01       	movw	r30, r8
    4f50:	60 83       	st	Z, r22
    4f52:	71 83       	std	Z+1, r23	; 0x01
    4f54:	82 83       	std	Z+2, r24	; 0x02
    4f56:	93 83       	std	Z+3, r25	; 0x03
    4f58:	c3 01       	movw	r24, r6
    4f5a:	b2 01       	movw	r22, r4
    4f5c:	20 e0       	ldi	r18, 0x00	; 0
    4f5e:	30 e0       	ldi	r19, 0x00	; 0
    4f60:	a9 01       	movw	r20, r18
    4f62:	0f 2e       	mov	r0, r31
    4f64:	f0 e0       	ldi	r31, 0x00	; 0
    4f66:	ef 2e       	mov	r14, r31
    4f68:	f0 e0       	ldi	r31, 0x00	; 0
    4f6a:	ff 2e       	mov	r15, r31
    4f6c:	f4 e3       	ldi	r31, 0x34	; 52
    4f6e:	0f 2f       	mov	r16, r31
    4f70:	f3 e4       	ldi	r31, 0x43	; 67
    4f72:	1f 2f       	mov	r17, r31
    4f74:	f0 2d       	mov	r31, r0
    4f76:	0e 94 a0 08 	call	0x1140	; 0x1140 <_Z3mapddddd>
    4f7a:	0f 90       	pop	r0
    4f7c:	0f 90       	pop	r0
    4f7e:	0f 90       	pop	r0
    4f80:	0f 90       	pop	r0
        OCR1B=ICR1-vAl;
    4f82:	09 90       	ld	r0, Y+
    4f84:	d8 81       	ld	r29, Y
    4f86:	c0 2d       	mov	r28, r0
     case 11:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
        OCR1A=ICR1-vAl;
        break;
      case 12:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    4f88:	0e 94 bb 79 	call	0xf376	; 0xf376 <__fixsfsi>
        OCR1B=ICR1-vAl;
    4f8c:	c6 1b       	sub	r28, r22
    4f8e:	d7 0b       	sbc	r29, r23
    4f90:	d0 93 8b 00 	sts	0x008B, r29
    4f94:	c0 93 8a 00 	sts	0x008A, r28
    4f98:	e1 c2       	rjmp	.+1474   	; 0x555c <_Z6angle2i+0x1ec6>
        break;
      case 5:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    4f9a:	e6 e8       	ldi	r30, 0x86	; 134
    4f9c:	f0 e0       	ldi	r31, 0x00	; 0
    4f9e:	c0 81       	ld	r28, Z
    4fa0:	d1 81       	ldd	r29, Z+1	; 0x01
    4fa2:	80 80       	ld	r8, Z
    4fa4:	91 80       	ldd	r9, Z+1	; 0x01
    4fa6:	00 d0       	rcall	.+0      	; 0x4fa8 <_Z6angle2i+0x1912>
    4fa8:	0f 92       	push	r0
    4faa:	4d b6       	in	r4, 0x3d	; 61
    4fac:	5e b6       	in	r5, 0x3e	; 62
    4fae:	08 94       	sec
    4fb0:	41 1c       	adc	r4, r1
    4fb2:	51 1c       	adc	r5, r1
    4fb4:	88 27       	eor	r24, r24
    4fb6:	77 fd       	sbrc	r23, 7
    4fb8:	80 95       	com	r24
    4fba:	98 2f       	mov	r25, r24
    4fbc:	0e 94 ee 79 	call	0xf3dc	; 0xf3dc <__floatsisf>
    4fc0:	7b 01       	movw	r14, r22
    4fc2:	8c 01       	movw	r16, r24
    4fc4:	ce 01       	movw	r24, r28
    4fc6:	68 e2       	ldi	r22, 0x28	; 40
    4fc8:	70 e0       	ldi	r23, 0x00	; 0
    4fca:	0e 94 05 7b 	call	0xf60a	; 0xf60a <__udivmodhi4>
    4fce:	80 e0       	ldi	r24, 0x00	; 0
    4fd0:	90 e0       	ldi	r25, 0x00	; 0
    4fd2:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    4fd6:	5b 01       	movw	r10, r22
    4fd8:	6c 01       	movw	r12, r24
    4fda:	96 94       	lsr	r9
    4fdc:	87 94       	ror	r8
    4fde:	96 94       	lsr	r9
    4fe0:	87 94       	ror	r8
    4fe2:	96 94       	lsr	r9
    4fe4:	87 94       	ror	r8
    4fe6:	b4 01       	movw	r22, r8
    4fe8:	80 e0       	ldi	r24, 0x00	; 0
    4fea:	90 e0       	ldi	r25, 0x00	; 0
    4fec:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    4ff0:	f2 01       	movw	r30, r4
    4ff2:	60 83       	st	Z, r22
    4ff4:	71 83       	std	Z+1, r23	; 0x01
    4ff6:	82 83       	std	Z+2, r24	; 0x02
    4ff8:	93 83       	std	Z+3, r25	; 0x03
    4ffa:	c8 01       	movw	r24, r16
    4ffc:	b7 01       	movw	r22, r14
    4ffe:	20 e0       	ldi	r18, 0x00	; 0
    5000:	30 e0       	ldi	r19, 0x00	; 0
    5002:	a9 01       	movw	r20, r18
    5004:	0f 2e       	mov	r0, r31
    5006:	f0 e0       	ldi	r31, 0x00	; 0
    5008:	ef 2e       	mov	r14, r31
    500a:	f0 e0       	ldi	r31, 0x00	; 0
    500c:	ff 2e       	mov	r15, r31
    500e:	f4 e3       	ldi	r31, 0x34	; 52
    5010:	0f 2f       	mov	r16, r31
    5012:	f3 e4       	ldi	r31, 0x43	; 67
    5014:	1f 2f       	mov	r17, r31
    5016:	f0 2d       	mov	r31, r0
    5018:	0e 94 a0 08 	call	0x1140	; 0x1140 <_Z3mapddddd>
    501c:	0f 90       	pop	r0
    501e:	0f 90       	pop	r0
    5020:	0f 90       	pop	r0
    5022:	0f 90       	pop	r0
        OCR3A=ICR3-vAl;
    5024:	c0 91 96 00 	lds	r28, 0x0096
    5028:	d0 91 97 00 	lds	r29, 0x0097
      case 12:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
        OCR1B=ICR1-vAl;
        break;
      case 5:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    502c:	0e 94 bb 79 	call	0xf376	; 0xf376 <__fixsfsi>
        OCR3A=ICR3-vAl;
    5030:	c6 1b       	sub	r28, r22
    5032:	d7 0b       	sbc	r29, r23
    5034:	d0 93 99 00 	sts	0x0099, r29
    5038:	c0 93 98 00 	sts	0x0098, r28
    503c:	8f c2       	rjmp	.+1310   	; 0x555c <_Z6angle2i+0x1ec6>
        break;
      case 2:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    503e:	e6 e8       	ldi	r30, 0x86	; 134
    5040:	f0 e0       	ldi	r31, 0x00	; 0
    5042:	c0 81       	ld	r28, Z
    5044:	d1 81       	ldd	r29, Z+1	; 0x01
    5046:	80 80       	ld	r8, Z
    5048:	91 80       	ldd	r9, Z+1	; 0x01
    504a:	00 d0       	rcall	.+0      	; 0x504c <_Z6angle2i+0x19b6>
    504c:	0f 92       	push	r0
    504e:	4d b6       	in	r4, 0x3d	; 61
    5050:	5e b6       	in	r5, 0x3e	; 62
    5052:	08 94       	sec
    5054:	41 1c       	adc	r4, r1
    5056:	51 1c       	adc	r5, r1
    5058:	88 27       	eor	r24, r24
    505a:	77 fd       	sbrc	r23, 7
    505c:	80 95       	com	r24
    505e:	98 2f       	mov	r25, r24
    5060:	0e 94 ee 79 	call	0xf3dc	; 0xf3dc <__floatsisf>
    5064:	7b 01       	movw	r14, r22
    5066:	8c 01       	movw	r16, r24
    5068:	ce 01       	movw	r24, r28
    506a:	68 e2       	ldi	r22, 0x28	; 40
    506c:	70 e0       	ldi	r23, 0x00	; 0
    506e:	0e 94 05 7b 	call	0xf60a	; 0xf60a <__udivmodhi4>
    5072:	80 e0       	ldi	r24, 0x00	; 0
    5074:	90 e0       	ldi	r25, 0x00	; 0
    5076:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    507a:	5b 01       	movw	r10, r22
    507c:	6c 01       	movw	r12, r24
    507e:	96 94       	lsr	r9
    5080:	87 94       	ror	r8
    5082:	96 94       	lsr	r9
    5084:	87 94       	ror	r8
    5086:	96 94       	lsr	r9
    5088:	87 94       	ror	r8
    508a:	b4 01       	movw	r22, r8
    508c:	80 e0       	ldi	r24, 0x00	; 0
    508e:	90 e0       	ldi	r25, 0x00	; 0
    5090:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    5094:	f2 01       	movw	r30, r4
    5096:	60 83       	st	Z, r22
    5098:	71 83       	std	Z+1, r23	; 0x01
    509a:	82 83       	std	Z+2, r24	; 0x02
    509c:	93 83       	std	Z+3, r25	; 0x03
    509e:	c8 01       	movw	r24, r16
    50a0:	b7 01       	movw	r22, r14
    50a2:	20 e0       	ldi	r18, 0x00	; 0
    50a4:	30 e0       	ldi	r19, 0x00	; 0
    50a6:	a9 01       	movw	r20, r18
    50a8:	0f 2e       	mov	r0, r31
    50aa:	f0 e0       	ldi	r31, 0x00	; 0
    50ac:	ef 2e       	mov	r14, r31
    50ae:	f0 e0       	ldi	r31, 0x00	; 0
    50b0:	ff 2e       	mov	r15, r31
    50b2:	f4 e3       	ldi	r31, 0x34	; 52
    50b4:	0f 2f       	mov	r16, r31
    50b6:	f3 e4       	ldi	r31, 0x43	; 67
    50b8:	1f 2f       	mov	r17, r31
    50ba:	f0 2d       	mov	r31, r0
    50bc:	0e 94 a0 08 	call	0x1140	; 0x1140 <_Z3mapddddd>
    50c0:	0f 90       	pop	r0
    50c2:	0f 90       	pop	r0
    50c4:	0f 90       	pop	r0
    50c6:	0f 90       	pop	r0
        OCR3B=ICR3-vAl;
    50c8:	c0 91 96 00 	lds	r28, 0x0096
    50cc:	d0 91 97 00 	lds	r29, 0x0097
      case 5:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
        OCR3A=ICR3-vAl;
        break;
      case 2:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    50d0:	0e 94 bb 79 	call	0xf376	; 0xf376 <__fixsfsi>
        OCR3B=ICR3-vAl;
    50d4:	c6 1b       	sub	r28, r22
    50d6:	d7 0b       	sbc	r29, r23
    50d8:	d0 93 9b 00 	sts	0x009B, r29
    50dc:	c0 93 9a 00 	sts	0x009A, r28
    50e0:	3d c2       	rjmp	.+1146   	; 0x555c <_Z6angle2i+0x1ec6>
        break;
      case 3:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    50e2:	e6 e8       	ldi	r30, 0x86	; 134
    50e4:	f0 e0       	ldi	r31, 0x00	; 0
    50e6:	c0 81       	ld	r28, Z
    50e8:	d1 81       	ldd	r29, Z+1	; 0x01
    50ea:	80 80       	ld	r8, Z
    50ec:	91 80       	ldd	r9, Z+1	; 0x01
    50ee:	00 d0       	rcall	.+0      	; 0x50f0 <_Z6angle2i+0x1a5a>
    50f0:	0f 92       	push	r0
    50f2:	4d b6       	in	r4, 0x3d	; 61
    50f4:	5e b6       	in	r5, 0x3e	; 62
    50f6:	08 94       	sec
    50f8:	41 1c       	adc	r4, r1
    50fa:	51 1c       	adc	r5, r1
    50fc:	88 27       	eor	r24, r24
    50fe:	77 fd       	sbrc	r23, 7
    5100:	80 95       	com	r24
    5102:	98 2f       	mov	r25, r24
    5104:	0e 94 ee 79 	call	0xf3dc	; 0xf3dc <__floatsisf>
    5108:	7b 01       	movw	r14, r22
    510a:	8c 01       	movw	r16, r24
    510c:	ce 01       	movw	r24, r28
    510e:	68 e2       	ldi	r22, 0x28	; 40
    5110:	70 e0       	ldi	r23, 0x00	; 0
    5112:	0e 94 05 7b 	call	0xf60a	; 0xf60a <__udivmodhi4>
    5116:	80 e0       	ldi	r24, 0x00	; 0
    5118:	90 e0       	ldi	r25, 0x00	; 0
    511a:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    511e:	5b 01       	movw	r10, r22
    5120:	6c 01       	movw	r12, r24
    5122:	96 94       	lsr	r9
    5124:	87 94       	ror	r8
    5126:	96 94       	lsr	r9
    5128:	87 94       	ror	r8
    512a:	96 94       	lsr	r9
    512c:	87 94       	ror	r8
    512e:	b4 01       	movw	r22, r8
    5130:	80 e0       	ldi	r24, 0x00	; 0
    5132:	90 e0       	ldi	r25, 0x00	; 0
    5134:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    5138:	f2 01       	movw	r30, r4
    513a:	60 83       	st	Z, r22
    513c:	71 83       	std	Z+1, r23	; 0x01
    513e:	82 83       	std	Z+2, r24	; 0x02
    5140:	93 83       	std	Z+3, r25	; 0x03
    5142:	c8 01       	movw	r24, r16
    5144:	b7 01       	movw	r22, r14
    5146:	20 e0       	ldi	r18, 0x00	; 0
    5148:	30 e0       	ldi	r19, 0x00	; 0
    514a:	a9 01       	movw	r20, r18
    514c:	0f 2e       	mov	r0, r31
    514e:	f0 e0       	ldi	r31, 0x00	; 0
    5150:	ef 2e       	mov	r14, r31
    5152:	f0 e0       	ldi	r31, 0x00	; 0
    5154:	ff 2e       	mov	r15, r31
    5156:	f4 e3       	ldi	r31, 0x34	; 52
    5158:	0f 2f       	mov	r16, r31
    515a:	f3 e4       	ldi	r31, 0x43	; 67
    515c:	1f 2f       	mov	r17, r31
    515e:	f0 2d       	mov	r31, r0
    5160:	0e 94 a0 08 	call	0x1140	; 0x1140 <_Z3mapddddd>
    5164:	0f 90       	pop	r0
    5166:	0f 90       	pop	r0
    5168:	0f 90       	pop	r0
    516a:	0f 90       	pop	r0
        OCR3C=ICR3-vAl;
    516c:	c0 91 96 00 	lds	r28, 0x0096
    5170:	d0 91 97 00 	lds	r29, 0x0097
      case 2:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
        OCR3B=ICR3-vAl;
        break;
      case 3:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    5174:	0e 94 bb 79 	call	0xf376	; 0xf376 <__fixsfsi>
        OCR3C=ICR3-vAl;
    5178:	c6 1b       	sub	r28, r22
    517a:	d7 0b       	sbc	r29, r23
    517c:	d0 93 9d 00 	sts	0x009D, r29
    5180:	c0 93 9c 00 	sts	0x009C, r28
    5184:	eb c1       	rjmp	.+982    	; 0x555c <_Z6angle2i+0x1ec6>
        break;
      case 6:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    5186:	e6 e8       	ldi	r30, 0x86	; 134
    5188:	f0 e0       	ldi	r31, 0x00	; 0
    518a:	c0 81       	ld	r28, Z
    518c:	d1 81       	ldd	r29, Z+1	; 0x01
    518e:	80 80       	ld	r8, Z
    5190:	91 80       	ldd	r9, Z+1	; 0x01
    5192:	00 d0       	rcall	.+0      	; 0x5194 <_Z6angle2i+0x1afe>
    5194:	0f 92       	push	r0
    5196:	4d b6       	in	r4, 0x3d	; 61
    5198:	5e b6       	in	r5, 0x3e	; 62
    519a:	08 94       	sec
    519c:	41 1c       	adc	r4, r1
    519e:	51 1c       	adc	r5, r1
    51a0:	88 27       	eor	r24, r24
    51a2:	77 fd       	sbrc	r23, 7
    51a4:	80 95       	com	r24
    51a6:	98 2f       	mov	r25, r24
    51a8:	0e 94 ee 79 	call	0xf3dc	; 0xf3dc <__floatsisf>
    51ac:	7b 01       	movw	r14, r22
    51ae:	8c 01       	movw	r16, r24
    51b0:	ce 01       	movw	r24, r28
    51b2:	68 e2       	ldi	r22, 0x28	; 40
    51b4:	70 e0       	ldi	r23, 0x00	; 0
    51b6:	0e 94 05 7b 	call	0xf60a	; 0xf60a <__udivmodhi4>
    51ba:	80 e0       	ldi	r24, 0x00	; 0
    51bc:	90 e0       	ldi	r25, 0x00	; 0
    51be:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    51c2:	5b 01       	movw	r10, r22
    51c4:	6c 01       	movw	r12, r24
    51c6:	96 94       	lsr	r9
    51c8:	87 94       	ror	r8
    51ca:	96 94       	lsr	r9
    51cc:	87 94       	ror	r8
    51ce:	96 94       	lsr	r9
    51d0:	87 94       	ror	r8
    51d2:	b4 01       	movw	r22, r8
    51d4:	80 e0       	ldi	r24, 0x00	; 0
    51d6:	90 e0       	ldi	r25, 0x00	; 0
    51d8:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    51dc:	f2 01       	movw	r30, r4
    51de:	60 83       	st	Z, r22
    51e0:	71 83       	std	Z+1, r23	; 0x01
    51e2:	82 83       	std	Z+2, r24	; 0x02
    51e4:	93 83       	std	Z+3, r25	; 0x03
    51e6:	c8 01       	movw	r24, r16
    51e8:	b7 01       	movw	r22, r14
    51ea:	20 e0       	ldi	r18, 0x00	; 0
    51ec:	30 e0       	ldi	r19, 0x00	; 0
    51ee:	a9 01       	movw	r20, r18
    51f0:	0f 2e       	mov	r0, r31
    51f2:	f0 e0       	ldi	r31, 0x00	; 0
    51f4:	ef 2e       	mov	r14, r31
    51f6:	f0 e0       	ldi	r31, 0x00	; 0
    51f8:	ff 2e       	mov	r15, r31
    51fa:	f4 e3       	ldi	r31, 0x34	; 52
    51fc:	0f 2f       	mov	r16, r31
    51fe:	f3 e4       	ldi	r31, 0x43	; 67
    5200:	1f 2f       	mov	r17, r31
    5202:	f0 2d       	mov	r31, r0
    5204:	0e 94 a0 08 	call	0x1140	; 0x1140 <_Z3mapddddd>
    5208:	0f 90       	pop	r0
    520a:	0f 90       	pop	r0
    520c:	0f 90       	pop	r0
    520e:	0f 90       	pop	r0
        OCR4A=ICR4-vAl;
    5210:	c0 91 a6 00 	lds	r28, 0x00A6
    5214:	d0 91 a7 00 	lds	r29, 0x00A7
      case 3:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
        OCR3C=ICR3-vAl;
        break;
      case 6:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    5218:	0e 94 bb 79 	call	0xf376	; 0xf376 <__fixsfsi>
        OCR4A=ICR4-vAl;
    521c:	c6 1b       	sub	r28, r22
    521e:	d7 0b       	sbc	r29, r23
    5220:	d0 93 a9 00 	sts	0x00A9, r29
    5224:	c0 93 a8 00 	sts	0x00A8, r28
    5228:	99 c1       	rjmp	.+818    	; 0x555c <_Z6angle2i+0x1ec6>
        break;
      case 7:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    522a:	e6 e8       	ldi	r30, 0x86	; 134
    522c:	f0 e0       	ldi	r31, 0x00	; 0
    522e:	c0 81       	ld	r28, Z
    5230:	d1 81       	ldd	r29, Z+1	; 0x01
    5232:	80 80       	ld	r8, Z
    5234:	91 80       	ldd	r9, Z+1	; 0x01
    5236:	00 d0       	rcall	.+0      	; 0x5238 <_Z6angle2i+0x1ba2>
    5238:	0f 92       	push	r0
    523a:	4d b6       	in	r4, 0x3d	; 61
    523c:	5e b6       	in	r5, 0x3e	; 62
    523e:	08 94       	sec
    5240:	41 1c       	adc	r4, r1
    5242:	51 1c       	adc	r5, r1
    5244:	88 27       	eor	r24, r24
    5246:	77 fd       	sbrc	r23, 7
    5248:	80 95       	com	r24
    524a:	98 2f       	mov	r25, r24
    524c:	0e 94 ee 79 	call	0xf3dc	; 0xf3dc <__floatsisf>
    5250:	7b 01       	movw	r14, r22
    5252:	8c 01       	movw	r16, r24
    5254:	ce 01       	movw	r24, r28
    5256:	68 e2       	ldi	r22, 0x28	; 40
    5258:	70 e0       	ldi	r23, 0x00	; 0
    525a:	0e 94 05 7b 	call	0xf60a	; 0xf60a <__udivmodhi4>
    525e:	80 e0       	ldi	r24, 0x00	; 0
    5260:	90 e0       	ldi	r25, 0x00	; 0
    5262:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    5266:	5b 01       	movw	r10, r22
    5268:	6c 01       	movw	r12, r24
    526a:	96 94       	lsr	r9
    526c:	87 94       	ror	r8
    526e:	96 94       	lsr	r9
    5270:	87 94       	ror	r8
    5272:	96 94       	lsr	r9
    5274:	87 94       	ror	r8
    5276:	b4 01       	movw	r22, r8
    5278:	80 e0       	ldi	r24, 0x00	; 0
    527a:	90 e0       	ldi	r25, 0x00	; 0
    527c:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    5280:	f2 01       	movw	r30, r4
    5282:	60 83       	st	Z, r22
    5284:	71 83       	std	Z+1, r23	; 0x01
    5286:	82 83       	std	Z+2, r24	; 0x02
    5288:	93 83       	std	Z+3, r25	; 0x03
    528a:	c8 01       	movw	r24, r16
    528c:	b7 01       	movw	r22, r14
    528e:	20 e0       	ldi	r18, 0x00	; 0
    5290:	30 e0       	ldi	r19, 0x00	; 0
    5292:	a9 01       	movw	r20, r18
    5294:	0f 2e       	mov	r0, r31
    5296:	f0 e0       	ldi	r31, 0x00	; 0
    5298:	ef 2e       	mov	r14, r31
    529a:	f0 e0       	ldi	r31, 0x00	; 0
    529c:	ff 2e       	mov	r15, r31
    529e:	f4 e3       	ldi	r31, 0x34	; 52
    52a0:	0f 2f       	mov	r16, r31
    52a2:	f3 e4       	ldi	r31, 0x43	; 67
    52a4:	1f 2f       	mov	r17, r31
    52a6:	f0 2d       	mov	r31, r0
    52a8:	0e 94 a0 08 	call	0x1140	; 0x1140 <_Z3mapddddd>
    52ac:	0f 90       	pop	r0
    52ae:	0f 90       	pop	r0
    52b0:	0f 90       	pop	r0
    52b2:	0f 90       	pop	r0
        OCR4B=ICR4-vAl;
    52b4:	c0 91 a6 00 	lds	r28, 0x00A6
    52b8:	d0 91 a7 00 	lds	r29, 0x00A7
      case 6:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
        OCR4A=ICR4-vAl;
        break;
      case 7:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    52bc:	0e 94 bb 79 	call	0xf376	; 0xf376 <__fixsfsi>
        OCR4B=ICR4-vAl;
    52c0:	c6 1b       	sub	r28, r22
    52c2:	d7 0b       	sbc	r29, r23
    52c4:	d0 93 ab 00 	sts	0x00AB, r29
    52c8:	c0 93 aa 00 	sts	0x00AA, r28
    52cc:	47 c1       	rjmp	.+654    	; 0x555c <_Z6angle2i+0x1ec6>
        break; 
      case 8:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    52ce:	e6 e8       	ldi	r30, 0x86	; 134
    52d0:	f0 e0       	ldi	r31, 0x00	; 0
    52d2:	c0 81       	ld	r28, Z
    52d4:	d1 81       	ldd	r29, Z+1	; 0x01
    52d6:	80 80       	ld	r8, Z
    52d8:	91 80       	ldd	r9, Z+1	; 0x01
    52da:	00 d0       	rcall	.+0      	; 0x52dc <_Z6angle2i+0x1c46>
    52dc:	0f 92       	push	r0
    52de:	4d b6       	in	r4, 0x3d	; 61
    52e0:	5e b6       	in	r5, 0x3e	; 62
    52e2:	08 94       	sec
    52e4:	41 1c       	adc	r4, r1
    52e6:	51 1c       	adc	r5, r1
    52e8:	88 27       	eor	r24, r24
    52ea:	77 fd       	sbrc	r23, 7
    52ec:	80 95       	com	r24
    52ee:	98 2f       	mov	r25, r24
    52f0:	0e 94 ee 79 	call	0xf3dc	; 0xf3dc <__floatsisf>
    52f4:	7b 01       	movw	r14, r22
    52f6:	8c 01       	movw	r16, r24
    52f8:	ce 01       	movw	r24, r28
    52fa:	68 e2       	ldi	r22, 0x28	; 40
    52fc:	70 e0       	ldi	r23, 0x00	; 0
    52fe:	0e 94 05 7b 	call	0xf60a	; 0xf60a <__udivmodhi4>
    5302:	80 e0       	ldi	r24, 0x00	; 0
    5304:	90 e0       	ldi	r25, 0x00	; 0
    5306:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    530a:	5b 01       	movw	r10, r22
    530c:	6c 01       	movw	r12, r24
    530e:	96 94       	lsr	r9
    5310:	87 94       	ror	r8
    5312:	96 94       	lsr	r9
    5314:	87 94       	ror	r8
    5316:	96 94       	lsr	r9
    5318:	87 94       	ror	r8
    531a:	b4 01       	movw	r22, r8
    531c:	80 e0       	ldi	r24, 0x00	; 0
    531e:	90 e0       	ldi	r25, 0x00	; 0
    5320:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    5324:	f2 01       	movw	r30, r4
    5326:	60 83       	st	Z, r22
    5328:	71 83       	std	Z+1, r23	; 0x01
    532a:	82 83       	std	Z+2, r24	; 0x02
    532c:	93 83       	std	Z+3, r25	; 0x03
    532e:	c8 01       	movw	r24, r16
    5330:	b7 01       	movw	r22, r14
    5332:	20 e0       	ldi	r18, 0x00	; 0
    5334:	30 e0       	ldi	r19, 0x00	; 0
    5336:	a9 01       	movw	r20, r18
    5338:	0f 2e       	mov	r0, r31
    533a:	f0 e0       	ldi	r31, 0x00	; 0
    533c:	ef 2e       	mov	r14, r31
    533e:	f0 e0       	ldi	r31, 0x00	; 0
    5340:	ff 2e       	mov	r15, r31
    5342:	f4 e3       	ldi	r31, 0x34	; 52
    5344:	0f 2f       	mov	r16, r31
    5346:	f3 e4       	ldi	r31, 0x43	; 67
    5348:	1f 2f       	mov	r17, r31
    534a:	f0 2d       	mov	r31, r0
    534c:	0e 94 a0 08 	call	0x1140	; 0x1140 <_Z3mapddddd>
    5350:	0f 90       	pop	r0
    5352:	0f 90       	pop	r0
    5354:	0f 90       	pop	r0
    5356:	0f 90       	pop	r0
        OCR4C=ICR4-vAl;
    5358:	c0 91 a6 00 	lds	r28, 0x00A6
    535c:	d0 91 a7 00 	lds	r29, 0x00A7
      case 7:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
        OCR4B=ICR4-vAl;
        break; 
      case 8:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    5360:	0e 94 bb 79 	call	0xf376	; 0xf376 <__fixsfsi>
        OCR4C=ICR4-vAl;
    5364:	c6 1b       	sub	r28, r22
    5366:	d7 0b       	sbc	r29, r23
    5368:	d0 93 ad 00 	sts	0x00AD, r29
    536c:	c0 93 ac 00 	sts	0x00AC, r28
    5370:	f5 c0       	rjmp	.+490    	; 0x555c <_Z6angle2i+0x1ec6>
        break;
      case 46:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    5372:	e6 e8       	ldi	r30, 0x86	; 134
    5374:	f0 e0       	ldi	r31, 0x00	; 0
    5376:	c0 81       	ld	r28, Z
    5378:	d1 81       	ldd	r29, Z+1	; 0x01
    537a:	80 80       	ld	r8, Z
    537c:	91 80       	ldd	r9, Z+1	; 0x01
    537e:	00 d0       	rcall	.+0      	; 0x5380 <_Z6angle2i+0x1cea>
    5380:	0f 92       	push	r0
    5382:	4d b6       	in	r4, 0x3d	; 61
    5384:	5e b6       	in	r5, 0x3e	; 62
    5386:	08 94       	sec
    5388:	41 1c       	adc	r4, r1
    538a:	51 1c       	adc	r5, r1
    538c:	88 27       	eor	r24, r24
    538e:	77 fd       	sbrc	r23, 7
    5390:	80 95       	com	r24
    5392:	98 2f       	mov	r25, r24
    5394:	0e 94 ee 79 	call	0xf3dc	; 0xf3dc <__floatsisf>
    5398:	7b 01       	movw	r14, r22
    539a:	8c 01       	movw	r16, r24
    539c:	ce 01       	movw	r24, r28
    539e:	68 e2       	ldi	r22, 0x28	; 40
    53a0:	70 e0       	ldi	r23, 0x00	; 0
    53a2:	0e 94 05 7b 	call	0xf60a	; 0xf60a <__udivmodhi4>
    53a6:	80 e0       	ldi	r24, 0x00	; 0
    53a8:	90 e0       	ldi	r25, 0x00	; 0
    53aa:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    53ae:	5b 01       	movw	r10, r22
    53b0:	6c 01       	movw	r12, r24
    53b2:	96 94       	lsr	r9
    53b4:	87 94       	ror	r8
    53b6:	96 94       	lsr	r9
    53b8:	87 94       	ror	r8
    53ba:	96 94       	lsr	r9
    53bc:	87 94       	ror	r8
    53be:	b4 01       	movw	r22, r8
    53c0:	80 e0       	ldi	r24, 0x00	; 0
    53c2:	90 e0       	ldi	r25, 0x00	; 0
    53c4:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    53c8:	f2 01       	movw	r30, r4
    53ca:	60 83       	st	Z, r22
    53cc:	71 83       	std	Z+1, r23	; 0x01
    53ce:	82 83       	std	Z+2, r24	; 0x02
    53d0:	93 83       	std	Z+3, r25	; 0x03
    53d2:	c8 01       	movw	r24, r16
    53d4:	b7 01       	movw	r22, r14
    53d6:	20 e0       	ldi	r18, 0x00	; 0
    53d8:	30 e0       	ldi	r19, 0x00	; 0
    53da:	a9 01       	movw	r20, r18
    53dc:	0f 2e       	mov	r0, r31
    53de:	f0 e0       	ldi	r31, 0x00	; 0
    53e0:	ef 2e       	mov	r14, r31
    53e2:	f0 e0       	ldi	r31, 0x00	; 0
    53e4:	ff 2e       	mov	r15, r31
    53e6:	f4 e3       	ldi	r31, 0x34	; 52
    53e8:	0f 2f       	mov	r16, r31
    53ea:	f3 e4       	ldi	r31, 0x43	; 67
    53ec:	1f 2f       	mov	r17, r31
    53ee:	f0 2d       	mov	r31, r0
    53f0:	0e 94 a0 08 	call	0x1140	; 0x1140 <_Z3mapddddd>
    53f4:	0f 90       	pop	r0
    53f6:	0f 90       	pop	r0
    53f8:	0f 90       	pop	r0
    53fa:	0f 90       	pop	r0
        OCR5A=ICR5-vAl;
    53fc:	c0 91 26 01 	lds	r28, 0x0126
    5400:	d0 91 27 01 	lds	r29, 0x0127
      case 8:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
        OCR4C=ICR4-vAl;
        break;
      case 46:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    5404:	0e 94 bb 79 	call	0xf376	; 0xf376 <__fixsfsi>
        OCR5A=ICR5-vAl;
    5408:	c6 1b       	sub	r28, r22
    540a:	d7 0b       	sbc	r29, r23
    540c:	d0 93 29 01 	sts	0x0129, r29
    5410:	c0 93 28 01 	sts	0x0128, r28
    5414:	a3 c0       	rjmp	.+326    	; 0x555c <_Z6angle2i+0x1ec6>
        break;
      case 45:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    5416:	e6 e8       	ldi	r30, 0x86	; 134
    5418:	f0 e0       	ldi	r31, 0x00	; 0
    541a:	c0 81       	ld	r28, Z
    541c:	d1 81       	ldd	r29, Z+1	; 0x01
    541e:	80 80       	ld	r8, Z
    5420:	91 80       	ldd	r9, Z+1	; 0x01
    5422:	00 d0       	rcall	.+0      	; 0x5424 <_Z6angle2i+0x1d8e>
    5424:	0f 92       	push	r0
    5426:	4d b6       	in	r4, 0x3d	; 61
    5428:	5e b6       	in	r5, 0x3e	; 62
    542a:	08 94       	sec
    542c:	41 1c       	adc	r4, r1
    542e:	51 1c       	adc	r5, r1
    5430:	88 27       	eor	r24, r24
    5432:	77 fd       	sbrc	r23, 7
    5434:	80 95       	com	r24
    5436:	98 2f       	mov	r25, r24
    5438:	0e 94 ee 79 	call	0xf3dc	; 0xf3dc <__floatsisf>
    543c:	7b 01       	movw	r14, r22
    543e:	8c 01       	movw	r16, r24
    5440:	ce 01       	movw	r24, r28
    5442:	68 e2       	ldi	r22, 0x28	; 40
    5444:	70 e0       	ldi	r23, 0x00	; 0
    5446:	0e 94 05 7b 	call	0xf60a	; 0xf60a <__udivmodhi4>
    544a:	80 e0       	ldi	r24, 0x00	; 0
    544c:	90 e0       	ldi	r25, 0x00	; 0
    544e:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    5452:	5b 01       	movw	r10, r22
    5454:	6c 01       	movw	r12, r24
    5456:	96 94       	lsr	r9
    5458:	87 94       	ror	r8
    545a:	96 94       	lsr	r9
    545c:	87 94       	ror	r8
    545e:	96 94       	lsr	r9
    5460:	87 94       	ror	r8
    5462:	b4 01       	movw	r22, r8
    5464:	80 e0       	ldi	r24, 0x00	; 0
    5466:	90 e0       	ldi	r25, 0x00	; 0
    5468:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    546c:	f2 01       	movw	r30, r4
    546e:	60 83       	st	Z, r22
    5470:	71 83       	std	Z+1, r23	; 0x01
    5472:	82 83       	std	Z+2, r24	; 0x02
    5474:	93 83       	std	Z+3, r25	; 0x03
    5476:	c8 01       	movw	r24, r16
    5478:	b7 01       	movw	r22, r14
    547a:	20 e0       	ldi	r18, 0x00	; 0
    547c:	30 e0       	ldi	r19, 0x00	; 0
    547e:	a9 01       	movw	r20, r18
    5480:	0f 2e       	mov	r0, r31
    5482:	f0 e0       	ldi	r31, 0x00	; 0
    5484:	ef 2e       	mov	r14, r31
    5486:	f0 e0       	ldi	r31, 0x00	; 0
    5488:	ff 2e       	mov	r15, r31
    548a:	f4 e3       	ldi	r31, 0x34	; 52
    548c:	0f 2f       	mov	r16, r31
    548e:	f3 e4       	ldi	r31, 0x43	; 67
    5490:	1f 2f       	mov	r17, r31
    5492:	f0 2d       	mov	r31, r0
    5494:	0e 94 a0 08 	call	0x1140	; 0x1140 <_Z3mapddddd>
    5498:	0f 90       	pop	r0
    549a:	0f 90       	pop	r0
    549c:	0f 90       	pop	r0
    549e:	0f 90       	pop	r0
        OCR5B=ICR5-vAl;
    54a0:	c0 91 26 01 	lds	r28, 0x0126
    54a4:	d0 91 27 01 	lds	r29, 0x0127
      case 46:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
        OCR5A=ICR5-vAl;
        break;
      case 45:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    54a8:	0e 94 bb 79 	call	0xf376	; 0xf376 <__fixsfsi>
        OCR5B=ICR5-vAl;
    54ac:	c6 1b       	sub	r28, r22
    54ae:	d7 0b       	sbc	r29, r23
    54b0:	d0 93 2b 01 	sts	0x012B, r29
    54b4:	c0 93 2a 01 	sts	0x012A, r28
    54b8:	51 c0       	rjmp	.+162    	; 0x555c <_Z6angle2i+0x1ec6>
        break;
      case 44:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    54ba:	e6 e8       	ldi	r30, 0x86	; 134
    54bc:	f0 e0       	ldi	r31, 0x00	; 0
    54be:	c0 81       	ld	r28, Z
    54c0:	d1 81       	ldd	r29, Z+1	; 0x01
    54c2:	80 80       	ld	r8, Z
    54c4:	91 80       	ldd	r9, Z+1	; 0x01
    54c6:	00 d0       	rcall	.+0      	; 0x54c8 <_Z6angle2i+0x1e32>
    54c8:	0f 92       	push	r0
    54ca:	4d b6       	in	r4, 0x3d	; 61
    54cc:	5e b6       	in	r5, 0x3e	; 62
    54ce:	08 94       	sec
    54d0:	41 1c       	adc	r4, r1
    54d2:	51 1c       	adc	r5, r1
    54d4:	88 27       	eor	r24, r24
    54d6:	77 fd       	sbrc	r23, 7
    54d8:	80 95       	com	r24
    54da:	98 2f       	mov	r25, r24
    54dc:	0e 94 ee 79 	call	0xf3dc	; 0xf3dc <__floatsisf>
    54e0:	7b 01       	movw	r14, r22
    54e2:	8c 01       	movw	r16, r24
    54e4:	ce 01       	movw	r24, r28
    54e6:	68 e2       	ldi	r22, 0x28	; 40
    54e8:	70 e0       	ldi	r23, 0x00	; 0
    54ea:	0e 94 05 7b 	call	0xf60a	; 0xf60a <__udivmodhi4>
    54ee:	80 e0       	ldi	r24, 0x00	; 0
    54f0:	90 e0       	ldi	r25, 0x00	; 0
    54f2:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    54f6:	5b 01       	movw	r10, r22
    54f8:	6c 01       	movw	r12, r24
    54fa:	96 94       	lsr	r9
    54fc:	87 94       	ror	r8
    54fe:	96 94       	lsr	r9
    5500:	87 94       	ror	r8
    5502:	96 94       	lsr	r9
    5504:	87 94       	ror	r8
    5506:	b4 01       	movw	r22, r8
    5508:	80 e0       	ldi	r24, 0x00	; 0
    550a:	90 e0       	ldi	r25, 0x00	; 0
    550c:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    5510:	f2 01       	movw	r30, r4
    5512:	60 83       	st	Z, r22
    5514:	71 83       	std	Z+1, r23	; 0x01
    5516:	82 83       	std	Z+2, r24	; 0x02
    5518:	93 83       	std	Z+3, r25	; 0x03
    551a:	c8 01       	movw	r24, r16
    551c:	b7 01       	movw	r22, r14
    551e:	20 e0       	ldi	r18, 0x00	; 0
    5520:	30 e0       	ldi	r19, 0x00	; 0
    5522:	a9 01       	movw	r20, r18
    5524:	0f 2e       	mov	r0, r31
    5526:	f0 e0       	ldi	r31, 0x00	; 0
    5528:	ef 2e       	mov	r14, r31
    552a:	f0 e0       	ldi	r31, 0x00	; 0
    552c:	ff 2e       	mov	r15, r31
    552e:	f4 e3       	ldi	r31, 0x34	; 52
    5530:	0f 2f       	mov	r16, r31
    5532:	f3 e4       	ldi	r31, 0x43	; 67
    5534:	1f 2f       	mov	r17, r31
    5536:	f0 2d       	mov	r31, r0
    5538:	0e 94 a0 08 	call	0x1140	; 0x1140 <_Z3mapddddd>
    553c:	0f 90       	pop	r0
    553e:	0f 90       	pop	r0
    5540:	0f 90       	pop	r0
    5542:	0f 90       	pop	r0
        OCR5C=ICR5-vAl;
    5544:	c0 91 26 01 	lds	r28, 0x0126
    5548:	d0 91 27 01 	lds	r29, 0x0127
      case 45:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
        OCR5B=ICR5-vAl;
        break;
      case 44:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    554c:	0e 94 bb 79 	call	0xf376	; 0xf376 <__fixsfsi>
        OCR5C=ICR5-vAl;
    5550:	c6 1b       	sub	r28, r22
    5552:	d7 0b       	sbc	r29, r23
    5554:	d0 93 2d 01 	sts	0x012D, r29
    5558:	c0 93 2c 01 	sts	0x012C, r28
	}
    555c:	df 91       	pop	r29
    555e:	cf 91       	pop	r28
    5560:	1f 91       	pop	r17
    5562:	0f 91       	pop	r16
    5564:	ff 90       	pop	r15
    5566:	ef 90       	pop	r14
    5568:	df 90       	pop	r13
    556a:	cf 90       	pop	r12
    556c:	bf 90       	pop	r11
    556e:	af 90       	pop	r10
    5570:	9f 90       	pop	r9
    5572:	8f 90       	pop	r8
    5574:	7f 90       	pop	r7
    5576:	6f 90       	pop	r6
    5578:	5f 90       	pop	r5
    557a:	4f 90       	pop	r4
    557c:	3f 90       	pop	r3
    557e:	2f 90       	pop	r2
    5580:	08 95       	ret

00005582 <_Z6angle3i>:
	void angle3(int dist)
	{
    5582:	2f 92       	push	r2
    5584:	3f 92       	push	r3
    5586:	4f 92       	push	r4
    5588:	5f 92       	push	r5
    558a:	6f 92       	push	r6
    558c:	7f 92       	push	r7
    558e:	8f 92       	push	r8
    5590:	9f 92       	push	r9
    5592:	af 92       	push	r10
    5594:	bf 92       	push	r11
    5596:	cf 92       	push	r12
    5598:	df 92       	push	r13
    559a:	ef 92       	push	r14
    559c:	ff 92       	push	r15
    559e:	0f 93       	push	r16
    55a0:	1f 93       	push	r17
    55a2:	cf 93       	push	r28
    55a4:	df 93       	push	r29
		v=(ang1+90)-(dist-2750)*k;
    55a6:	bc 01       	movw	r22, r24
    55a8:	6e 5b       	subi	r22, 0xBE	; 190
    55aa:	7a 40       	sbci	r23, 0x0A	; 10
    55ac:	88 27       	eor	r24, r24
    55ae:	77 fd       	sbrc	r23, 7
    55b0:	80 95       	com	r24
    55b2:	98 2f       	mov	r25, r24
    55b4:	0e 94 ee 79 	call	0xf3dc	; 0xf3dc <__floatsisf>
    55b8:	20 91 b4 02 	lds	r18, 0x02B4
    55bc:	30 91 b5 02 	lds	r19, 0x02B5
    55c0:	40 91 b6 02 	lds	r20, 0x02B6
    55c4:	50 91 b7 02 	lds	r21, 0x02B7
    55c8:	0e 94 a2 7a 	call	0xf544	; 0xf544 <__mulsf3>
    55cc:	f6 2e       	mov	r15, r22
    55ce:	07 2f       	mov	r16, r23
    55d0:	18 2f       	mov	r17, r24
    55d2:	e9 2e       	mov	r14, r25
    55d4:	60 91 b8 02 	lds	r22, 0x02B8
    55d8:	70 91 b9 02 	lds	r23, 0x02B9
    55dc:	66 5a       	subi	r22, 0xA6	; 166
    55de:	7f 4f       	sbci	r23, 0xFF	; 255
    55e0:	88 27       	eor	r24, r24
    55e2:	77 fd       	sbrc	r23, 7
    55e4:	80 95       	com	r24
    55e6:	98 2f       	mov	r25, r24
    55e8:	0e 94 ee 79 	call	0xf3dc	; 0xf3dc <__floatsisf>
    55ec:	2f 2d       	mov	r18, r15
    55ee:	30 2f       	mov	r19, r16
    55f0:	41 2f       	mov	r20, r17
    55f2:	5e 2d       	mov	r21, r14
    55f4:	0e 94 ea 78 	call	0xf1d4	; 0xf1d4 <__subsf3>
    55f8:	0e 94 bb 79 	call	0xf376	; 0xf376 <__fixsfsi>
    55fc:	eb 01       	movw	r28, r22
    55fe:	70 93 cb 02 	sts	0x02CB, r23
    5602:	60 93 ca 02 	sts	0x02CA, r22
		y=(ang2+90)-(dist-2750)*k;
    5606:	60 91 ba 02 	lds	r22, 0x02BA
    560a:	70 91 bb 02 	lds	r23, 0x02BB
    560e:	66 5a       	subi	r22, 0xA6	; 166
    5610:	7f 4f       	sbci	r23, 0xFF	; 255
    5612:	88 27       	eor	r24, r24
    5614:	77 fd       	sbrc	r23, 7
    5616:	80 95       	com	r24
    5618:	98 2f       	mov	r25, r24
    561a:	0e 94 ee 79 	call	0xf3dc	; 0xf3dc <__floatsisf>
    561e:	2f 2d       	mov	r18, r15
    5620:	30 2f       	mov	r19, r16
    5622:	41 2f       	mov	r20, r17
    5624:	5e 2d       	mov	r21, r14
    5626:	0e 94 ea 78 	call	0xf1d4	; 0xf1d4 <__subsf3>
    562a:	0e 94 bb 79 	call	0xf376	; 0xf376 <__fixsfsi>
    562e:	70 93 cd 02 	sts	0x02CD, r23
    5632:	60 93 cc 02 	sts	0x02CC, r22
		z=(ang3+90)-(dist-2750)*k;
    5636:	60 91 bc 02 	lds	r22, 0x02BC
    563a:	70 91 bd 02 	lds	r23, 0x02BD
    563e:	66 5a       	subi	r22, 0xA6	; 166
    5640:	7f 4f       	sbci	r23, 0xFF	; 255
    5642:	88 27       	eor	r24, r24
    5644:	77 fd       	sbrc	r23, 7
    5646:	80 95       	com	r24
    5648:	98 2f       	mov	r25, r24
    564a:	0e 94 ee 79 	call	0xf3dc	; 0xf3dc <__floatsisf>
    564e:	2f 2d       	mov	r18, r15
    5650:	30 2f       	mov	r19, r16
    5652:	41 2f       	mov	r20, r17
    5654:	5e 2d       	mov	r21, r14
    5656:	0e 94 ea 78 	call	0xf1d4	; 0xf1d4 <__subsf3>
    565a:	0e 94 bb 79 	call	0xf376	; 0xf376 <__fixsfsi>
    565e:	70 93 cf 02 	sts	0x02CF, r23
    5662:	60 93 ce 02 	sts	0x02CE, r22
		w=(ang4+90)-(dist-2750)*k;
    5666:	60 91 be 02 	lds	r22, 0x02BE
    566a:	70 91 bf 02 	lds	r23, 0x02BF
    566e:	66 5a       	subi	r22, 0xA6	; 166
    5670:	7f 4f       	sbci	r23, 0xFF	; 255
    5672:	88 27       	eor	r24, r24
    5674:	77 fd       	sbrc	r23, 7
    5676:	80 95       	com	r24
    5678:	98 2f       	mov	r25, r24
    567a:	0e 94 ee 79 	call	0xf3dc	; 0xf3dc <__floatsisf>
    567e:	2f 2d       	mov	r18, r15
    5680:	30 2f       	mov	r19, r16
    5682:	41 2f       	mov	r20, r17
    5684:	5e 2d       	mov	r21, r14
    5686:	0e 94 ea 78 	call	0xf1d4	; 0xf1d4 <__subsf3>
    568a:	0e 94 bb 79 	call	0xf376	; 0xf376 <__fixsfsi>
    568e:	70 93 d1 02 	sts	0x02D1, r23
    5692:	60 93 d0 02 	sts	0x02D0, r22
     }
  }

  void write(int vAl)           //PIN=servo pin no. on mega,vAl=angle F_CPU for the servo at pin
  {
    switch(pIn)
    5696:	80 91 d4 02 	lds	r24, 0x02D4
    569a:	88 30       	cpi	r24, 0x08	; 8
    569c:	09 f4       	brne	.+2      	; 0x56a0 <_Z6angle3i+0x11e>
    569e:	72 c2       	rjmp	.+1252   	; 0x5b84 <_Z6angle3i+0x602>
    56a0:	89 30       	cpi	r24, 0x09	; 9
    56a2:	98 f4       	brcc	.+38     	; 0x56ca <_Z6angle3i+0x148>
    56a4:	85 30       	cpi	r24, 0x05	; 5
    56a6:	09 f4       	brne	.+2      	; 0x56aa <_Z6angle3i+0x128>
    56a8:	ce c0       	rjmp	.+412    	; 0x5846 <_Z6angle3i+0x2c4>
    56aa:	86 30       	cpi	r24, 0x06	; 6
    56ac:	38 f4       	brcc	.+14     	; 0x56bc <_Z6angle3i+0x13a>
    56ae:	82 30       	cpi	r24, 0x02	; 2
    56b0:	09 f4       	brne	.+2      	; 0x56b4 <_Z6angle3i+0x132>
    56b2:	1c c1       	rjmp	.+568    	; 0x58ec <_Z6angle3i+0x36a>
    56b4:	83 30       	cpi	r24, 0x03	; 3
    56b6:	09 f0       	breq	.+2      	; 0x56ba <_Z6angle3i+0x138>
    56b8:	b0 c3       	rjmp	.+1888   	; 0x5e1a <_Z6angle3i+0x898>
    56ba:	6b c1       	rjmp	.+726    	; 0x5992 <_Z6angle3i+0x410>
    56bc:	86 30       	cpi	r24, 0x06	; 6
    56be:	09 f4       	brne	.+2      	; 0x56c2 <_Z6angle3i+0x140>
    56c0:	bb c1       	rjmp	.+886    	; 0x5a38 <_Z6angle3i+0x4b6>
    56c2:	87 30       	cpi	r24, 0x07	; 7
    56c4:	09 f0       	breq	.+2      	; 0x56c8 <_Z6angle3i+0x146>
    56c6:	a9 c3       	rjmp	.+1874   	; 0x5e1a <_Z6angle3i+0x898>
    56c8:	0a c2       	rjmp	.+1044   	; 0x5ade <_Z6angle3i+0x55c>
    56ca:	8c 32       	cpi	r24, 0x2C	; 44
    56cc:	09 f4       	brne	.+2      	; 0x56d0 <_Z6angle3i+0x14e>
    56ce:	53 c3       	rjmp	.+1702   	; 0x5d76 <_Z6angle3i+0x7f4>
    56d0:	8d 32       	cpi	r24, 0x2D	; 45
    56d2:	30 f4       	brcc	.+12     	; 0x56e0 <_Z6angle3i+0x15e>
    56d4:	8b 30       	cpi	r24, 0x0B	; 11
    56d6:	59 f0       	breq	.+22     	; 0x56ee <_Z6angle3i+0x16c>
    56d8:	8c 30       	cpi	r24, 0x0C	; 12
    56da:	09 f0       	breq	.+2      	; 0x56de <_Z6angle3i+0x15c>
    56dc:	9e c3       	rjmp	.+1852   	; 0x5e1a <_Z6angle3i+0x898>
    56de:	5d c0       	rjmp	.+186    	; 0x579a <_Z6angle3i+0x218>
    56e0:	8d 32       	cpi	r24, 0x2D	; 45
    56e2:	09 f4       	brne	.+2      	; 0x56e6 <_Z6angle3i+0x164>
    56e4:	f5 c2       	rjmp	.+1514   	; 0x5cd0 <_Z6angle3i+0x74e>
    56e6:	8e 32       	cpi	r24, 0x2E	; 46
    56e8:	09 f0       	breq	.+2      	; 0x56ec <_Z6angle3i+0x16a>
    56ea:	97 c3       	rjmp	.+1838   	; 0x5e1a <_Z6angle3i+0x898>
    56ec:	9e c2       	rjmp	.+1340   	; 0x5c2a <_Z6angle3i+0x6a8>
    {
     case 11:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    56ee:	0f 2e       	mov	r0, r31
    56f0:	f6 e8       	ldi	r31, 0x86	; 134
    56f2:	8f 2e       	mov	r8, r31
    56f4:	99 24       	eor	r9, r9
    56f6:	f0 2d       	mov	r31, r0
    56f8:	f4 01       	movw	r30, r8
    56fa:	00 81       	ld	r16, Z
    56fc:	11 81       	ldd	r17, Z+1	; 0x01
    56fe:	e0 80       	ld	r14, Z
    5700:	f1 80       	ldd	r15, Z+1	; 0x01
    5702:	00 d0       	rcall	.+0      	; 0x5704 <_Z6angle3i+0x182>
    5704:	0f 92       	push	r0
    5706:	2d b6       	in	r2, 0x3d	; 61
    5708:	3e b6       	in	r3, 0x3e	; 62
    570a:	08 94       	sec
    570c:	21 1c       	adc	r2, r1
    570e:	31 1c       	adc	r3, r1
    5710:	be 01       	movw	r22, r28
    5712:	88 27       	eor	r24, r24
    5714:	77 fd       	sbrc	r23, 7
    5716:	80 95       	com	r24
    5718:	98 2f       	mov	r25, r24
    571a:	0e 94 ee 79 	call	0xf3dc	; 0xf3dc <__floatsisf>
    571e:	2b 01       	movw	r4, r22
    5720:	3c 01       	movw	r6, r24
    5722:	c8 01       	movw	r24, r16
    5724:	68 e2       	ldi	r22, 0x28	; 40
    5726:	70 e0       	ldi	r23, 0x00	; 0
    5728:	0e 94 05 7b 	call	0xf60a	; 0xf60a <__udivmodhi4>
    572c:	80 e0       	ldi	r24, 0x00	; 0
    572e:	90 e0       	ldi	r25, 0x00	; 0
    5730:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    5734:	5b 01       	movw	r10, r22
    5736:	6c 01       	movw	r12, r24
    5738:	f6 94       	lsr	r15
    573a:	e7 94       	ror	r14
    573c:	f6 94       	lsr	r15
    573e:	e7 94       	ror	r14
    5740:	f6 94       	lsr	r15
    5742:	e7 94       	ror	r14
    5744:	b7 01       	movw	r22, r14
    5746:	80 e0       	ldi	r24, 0x00	; 0
    5748:	90 e0       	ldi	r25, 0x00	; 0
    574a:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    574e:	f1 01       	movw	r30, r2
    5750:	60 83       	st	Z, r22
    5752:	71 83       	std	Z+1, r23	; 0x01
    5754:	82 83       	std	Z+2, r24	; 0x02
    5756:	93 83       	std	Z+3, r25	; 0x03
    5758:	c3 01       	movw	r24, r6
    575a:	b2 01       	movw	r22, r4
    575c:	20 e0       	ldi	r18, 0x00	; 0
    575e:	30 e0       	ldi	r19, 0x00	; 0
    5760:	a9 01       	movw	r20, r18
    5762:	0f 2e       	mov	r0, r31
    5764:	f0 e0       	ldi	r31, 0x00	; 0
    5766:	ef 2e       	mov	r14, r31
    5768:	f0 e0       	ldi	r31, 0x00	; 0
    576a:	ff 2e       	mov	r15, r31
    576c:	f4 e3       	ldi	r31, 0x34	; 52
    576e:	0f 2f       	mov	r16, r31
    5770:	f3 e4       	ldi	r31, 0x43	; 67
    5772:	1f 2f       	mov	r17, r31
    5774:	f0 2d       	mov	r31, r0
    5776:	0e 94 a0 08 	call	0x1140	; 0x1140 <_Z3mapddddd>
    577a:	0f 90       	pop	r0
    577c:	0f 90       	pop	r0
    577e:	0f 90       	pop	r0
    5780:	0f 90       	pop	r0
        OCR1A=ICR1-vAl;
    5782:	f4 01       	movw	r30, r8
    5784:	c0 81       	ld	r28, Z
    5786:	d1 81       	ldd	r29, Z+1	; 0x01
  void write(int vAl)           //PIN=servo pin no. on mega,vAl=angle F_CPU for the servo at pin
  {
    switch(pIn)
    {
     case 11:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    5788:	0e 94 bb 79 	call	0xf376	; 0xf376 <__fixsfsi>
        OCR1A=ICR1-vAl;
    578c:	c6 1b       	sub	r28, r22
    578e:	d7 0b       	sbc	r29, r23
    5790:	d0 93 89 00 	sts	0x0089, r29
    5794:	c0 93 88 00 	sts	0x0088, r28
    5798:	40 c3       	rjmp	.+1664   	; 0x5e1a <_Z6angle3i+0x898>
        break;
      case 12:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    579a:	0f 2e       	mov	r0, r31
    579c:	f6 e8       	ldi	r31, 0x86	; 134
    579e:	8f 2e       	mov	r8, r31
    57a0:	99 24       	eor	r9, r9
    57a2:	f0 2d       	mov	r31, r0
    57a4:	f4 01       	movw	r30, r8
    57a6:	00 81       	ld	r16, Z
    57a8:	11 81       	ldd	r17, Z+1	; 0x01
    57aa:	e0 80       	ld	r14, Z
    57ac:	f1 80       	ldd	r15, Z+1	; 0x01
    57ae:	00 d0       	rcall	.+0      	; 0x57b0 <_Z6angle3i+0x22e>
    57b0:	0f 92       	push	r0
    57b2:	2d b6       	in	r2, 0x3d	; 61
    57b4:	3e b6       	in	r3, 0x3e	; 62
    57b6:	08 94       	sec
    57b8:	21 1c       	adc	r2, r1
    57ba:	31 1c       	adc	r3, r1
    57bc:	be 01       	movw	r22, r28
    57be:	88 27       	eor	r24, r24
    57c0:	77 fd       	sbrc	r23, 7
    57c2:	80 95       	com	r24
    57c4:	98 2f       	mov	r25, r24
    57c6:	0e 94 ee 79 	call	0xf3dc	; 0xf3dc <__floatsisf>
    57ca:	2b 01       	movw	r4, r22
    57cc:	3c 01       	movw	r6, r24
    57ce:	c8 01       	movw	r24, r16
    57d0:	68 e2       	ldi	r22, 0x28	; 40
    57d2:	70 e0       	ldi	r23, 0x00	; 0
    57d4:	0e 94 05 7b 	call	0xf60a	; 0xf60a <__udivmodhi4>
    57d8:	80 e0       	ldi	r24, 0x00	; 0
    57da:	90 e0       	ldi	r25, 0x00	; 0
    57dc:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    57e0:	5b 01       	movw	r10, r22
    57e2:	6c 01       	movw	r12, r24
    57e4:	f6 94       	lsr	r15
    57e6:	e7 94       	ror	r14
    57e8:	f6 94       	lsr	r15
    57ea:	e7 94       	ror	r14
    57ec:	f6 94       	lsr	r15
    57ee:	e7 94       	ror	r14
    57f0:	b7 01       	movw	r22, r14
    57f2:	80 e0       	ldi	r24, 0x00	; 0
    57f4:	90 e0       	ldi	r25, 0x00	; 0
    57f6:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    57fa:	f1 01       	movw	r30, r2
    57fc:	60 83       	st	Z, r22
    57fe:	71 83       	std	Z+1, r23	; 0x01
    5800:	82 83       	std	Z+2, r24	; 0x02
    5802:	93 83       	std	Z+3, r25	; 0x03
    5804:	c3 01       	movw	r24, r6
    5806:	b2 01       	movw	r22, r4
    5808:	20 e0       	ldi	r18, 0x00	; 0
    580a:	30 e0       	ldi	r19, 0x00	; 0
    580c:	a9 01       	movw	r20, r18
    580e:	0f 2e       	mov	r0, r31
    5810:	f0 e0       	ldi	r31, 0x00	; 0
    5812:	ef 2e       	mov	r14, r31
    5814:	f0 e0       	ldi	r31, 0x00	; 0
    5816:	ff 2e       	mov	r15, r31
    5818:	f4 e3       	ldi	r31, 0x34	; 52
    581a:	0f 2f       	mov	r16, r31
    581c:	f3 e4       	ldi	r31, 0x43	; 67
    581e:	1f 2f       	mov	r17, r31
    5820:	f0 2d       	mov	r31, r0
    5822:	0e 94 a0 08 	call	0x1140	; 0x1140 <_Z3mapddddd>
    5826:	0f 90       	pop	r0
    5828:	0f 90       	pop	r0
    582a:	0f 90       	pop	r0
    582c:	0f 90       	pop	r0
        OCR1B=ICR1-vAl;
    582e:	f4 01       	movw	r30, r8
    5830:	c0 81       	ld	r28, Z
    5832:	d1 81       	ldd	r29, Z+1	; 0x01
     case 11:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
        OCR1A=ICR1-vAl;
        break;
      case 12:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    5834:	0e 94 bb 79 	call	0xf376	; 0xf376 <__fixsfsi>
        OCR1B=ICR1-vAl;
    5838:	c6 1b       	sub	r28, r22
    583a:	d7 0b       	sbc	r29, r23
    583c:	d0 93 8b 00 	sts	0x008B, r29
    5840:	c0 93 8a 00 	sts	0x008A, r28
    5844:	ea c2       	rjmp	.+1492   	; 0x5e1a <_Z6angle3i+0x898>
        break;
      case 5:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    5846:	e6 e8       	ldi	r30, 0x86	; 134
    5848:	f0 e0       	ldi	r31, 0x00	; 0
    584a:	a0 80       	ld	r10, Z
    584c:	b1 80       	ldd	r11, Z+1	; 0x01
    584e:	80 80       	ld	r8, Z
    5850:	91 80       	ldd	r9, Z+1	; 0x01
    5852:	00 d0       	rcall	.+0      	; 0x5854 <_Z6angle3i+0x2d2>
    5854:	0f 92       	push	r0
    5856:	4d b6       	in	r4, 0x3d	; 61
    5858:	5e b6       	in	r5, 0x3e	; 62
    585a:	08 94       	sec
    585c:	41 1c       	adc	r4, r1
    585e:	51 1c       	adc	r5, r1
    5860:	be 01       	movw	r22, r28
    5862:	88 27       	eor	r24, r24
    5864:	77 fd       	sbrc	r23, 7
    5866:	80 95       	com	r24
    5868:	98 2f       	mov	r25, r24
    586a:	0e 94 ee 79 	call	0xf3dc	; 0xf3dc <__floatsisf>
    586e:	7b 01       	movw	r14, r22
    5870:	8c 01       	movw	r16, r24
    5872:	c5 01       	movw	r24, r10
    5874:	68 e2       	ldi	r22, 0x28	; 40
    5876:	70 e0       	ldi	r23, 0x00	; 0
    5878:	0e 94 05 7b 	call	0xf60a	; 0xf60a <__udivmodhi4>
    587c:	80 e0       	ldi	r24, 0x00	; 0
    587e:	90 e0       	ldi	r25, 0x00	; 0
    5880:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    5884:	5b 01       	movw	r10, r22
    5886:	6c 01       	movw	r12, r24
    5888:	96 94       	lsr	r9
    588a:	87 94       	ror	r8
    588c:	96 94       	lsr	r9
    588e:	87 94       	ror	r8
    5890:	96 94       	lsr	r9
    5892:	87 94       	ror	r8
    5894:	b4 01       	movw	r22, r8
    5896:	80 e0       	ldi	r24, 0x00	; 0
    5898:	90 e0       	ldi	r25, 0x00	; 0
    589a:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    589e:	f2 01       	movw	r30, r4
    58a0:	60 83       	st	Z, r22
    58a2:	71 83       	std	Z+1, r23	; 0x01
    58a4:	82 83       	std	Z+2, r24	; 0x02
    58a6:	93 83       	std	Z+3, r25	; 0x03
    58a8:	c8 01       	movw	r24, r16
    58aa:	b7 01       	movw	r22, r14
    58ac:	20 e0       	ldi	r18, 0x00	; 0
    58ae:	30 e0       	ldi	r19, 0x00	; 0
    58b0:	a9 01       	movw	r20, r18
    58b2:	0f 2e       	mov	r0, r31
    58b4:	f0 e0       	ldi	r31, 0x00	; 0
    58b6:	ef 2e       	mov	r14, r31
    58b8:	f0 e0       	ldi	r31, 0x00	; 0
    58ba:	ff 2e       	mov	r15, r31
    58bc:	f4 e3       	ldi	r31, 0x34	; 52
    58be:	0f 2f       	mov	r16, r31
    58c0:	f3 e4       	ldi	r31, 0x43	; 67
    58c2:	1f 2f       	mov	r17, r31
    58c4:	f0 2d       	mov	r31, r0
    58c6:	0e 94 a0 08 	call	0x1140	; 0x1140 <_Z3mapddddd>
    58ca:	0f 90       	pop	r0
    58cc:	0f 90       	pop	r0
    58ce:	0f 90       	pop	r0
    58d0:	0f 90       	pop	r0
        OCR3A=ICR3-vAl;
    58d2:	c0 91 96 00 	lds	r28, 0x0096
    58d6:	d0 91 97 00 	lds	r29, 0x0097
      case 12:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
        OCR1B=ICR1-vAl;
        break;
      case 5:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    58da:	0e 94 bb 79 	call	0xf376	; 0xf376 <__fixsfsi>
        OCR3A=ICR3-vAl;
    58de:	c6 1b       	sub	r28, r22
    58e0:	d7 0b       	sbc	r29, r23
    58e2:	d0 93 99 00 	sts	0x0099, r29
    58e6:	c0 93 98 00 	sts	0x0098, r28
    58ea:	97 c2       	rjmp	.+1326   	; 0x5e1a <_Z6angle3i+0x898>
        break;
      case 2:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    58ec:	e6 e8       	ldi	r30, 0x86	; 134
    58ee:	f0 e0       	ldi	r31, 0x00	; 0
    58f0:	a0 80       	ld	r10, Z
    58f2:	b1 80       	ldd	r11, Z+1	; 0x01
    58f4:	80 80       	ld	r8, Z
    58f6:	91 80       	ldd	r9, Z+1	; 0x01
    58f8:	00 d0       	rcall	.+0      	; 0x58fa <_Z6angle3i+0x378>
    58fa:	0f 92       	push	r0
    58fc:	4d b6       	in	r4, 0x3d	; 61
    58fe:	5e b6       	in	r5, 0x3e	; 62
    5900:	08 94       	sec
    5902:	41 1c       	adc	r4, r1
    5904:	51 1c       	adc	r5, r1
    5906:	be 01       	movw	r22, r28
    5908:	88 27       	eor	r24, r24
    590a:	77 fd       	sbrc	r23, 7
    590c:	80 95       	com	r24
    590e:	98 2f       	mov	r25, r24
    5910:	0e 94 ee 79 	call	0xf3dc	; 0xf3dc <__floatsisf>
    5914:	7b 01       	movw	r14, r22
    5916:	8c 01       	movw	r16, r24
    5918:	c5 01       	movw	r24, r10
    591a:	68 e2       	ldi	r22, 0x28	; 40
    591c:	70 e0       	ldi	r23, 0x00	; 0
    591e:	0e 94 05 7b 	call	0xf60a	; 0xf60a <__udivmodhi4>
    5922:	80 e0       	ldi	r24, 0x00	; 0
    5924:	90 e0       	ldi	r25, 0x00	; 0
    5926:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    592a:	5b 01       	movw	r10, r22
    592c:	6c 01       	movw	r12, r24
    592e:	96 94       	lsr	r9
    5930:	87 94       	ror	r8
    5932:	96 94       	lsr	r9
    5934:	87 94       	ror	r8
    5936:	96 94       	lsr	r9
    5938:	87 94       	ror	r8
    593a:	b4 01       	movw	r22, r8
    593c:	80 e0       	ldi	r24, 0x00	; 0
    593e:	90 e0       	ldi	r25, 0x00	; 0
    5940:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    5944:	f2 01       	movw	r30, r4
    5946:	60 83       	st	Z, r22
    5948:	71 83       	std	Z+1, r23	; 0x01
    594a:	82 83       	std	Z+2, r24	; 0x02
    594c:	93 83       	std	Z+3, r25	; 0x03
    594e:	c8 01       	movw	r24, r16
    5950:	b7 01       	movw	r22, r14
    5952:	20 e0       	ldi	r18, 0x00	; 0
    5954:	30 e0       	ldi	r19, 0x00	; 0
    5956:	a9 01       	movw	r20, r18
    5958:	0f 2e       	mov	r0, r31
    595a:	f0 e0       	ldi	r31, 0x00	; 0
    595c:	ef 2e       	mov	r14, r31
    595e:	f0 e0       	ldi	r31, 0x00	; 0
    5960:	ff 2e       	mov	r15, r31
    5962:	f4 e3       	ldi	r31, 0x34	; 52
    5964:	0f 2f       	mov	r16, r31
    5966:	f3 e4       	ldi	r31, 0x43	; 67
    5968:	1f 2f       	mov	r17, r31
    596a:	f0 2d       	mov	r31, r0
    596c:	0e 94 a0 08 	call	0x1140	; 0x1140 <_Z3mapddddd>
    5970:	0f 90       	pop	r0
    5972:	0f 90       	pop	r0
    5974:	0f 90       	pop	r0
    5976:	0f 90       	pop	r0
        OCR3B=ICR3-vAl;
    5978:	c0 91 96 00 	lds	r28, 0x0096
    597c:	d0 91 97 00 	lds	r29, 0x0097
      case 5:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
        OCR3A=ICR3-vAl;
        break;
      case 2:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    5980:	0e 94 bb 79 	call	0xf376	; 0xf376 <__fixsfsi>
        OCR3B=ICR3-vAl;
    5984:	c6 1b       	sub	r28, r22
    5986:	d7 0b       	sbc	r29, r23
    5988:	d0 93 9b 00 	sts	0x009B, r29
    598c:	c0 93 9a 00 	sts	0x009A, r28
    5990:	44 c2       	rjmp	.+1160   	; 0x5e1a <_Z6angle3i+0x898>
        break;
      case 3:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    5992:	e6 e8       	ldi	r30, 0x86	; 134
    5994:	f0 e0       	ldi	r31, 0x00	; 0
    5996:	a0 80       	ld	r10, Z
    5998:	b1 80       	ldd	r11, Z+1	; 0x01
    599a:	80 80       	ld	r8, Z
    599c:	91 80       	ldd	r9, Z+1	; 0x01
    599e:	00 d0       	rcall	.+0      	; 0x59a0 <_Z6angle3i+0x41e>
    59a0:	0f 92       	push	r0
    59a2:	4d b6       	in	r4, 0x3d	; 61
    59a4:	5e b6       	in	r5, 0x3e	; 62
    59a6:	08 94       	sec
    59a8:	41 1c       	adc	r4, r1
    59aa:	51 1c       	adc	r5, r1
    59ac:	be 01       	movw	r22, r28
    59ae:	88 27       	eor	r24, r24
    59b0:	77 fd       	sbrc	r23, 7
    59b2:	80 95       	com	r24
    59b4:	98 2f       	mov	r25, r24
    59b6:	0e 94 ee 79 	call	0xf3dc	; 0xf3dc <__floatsisf>
    59ba:	7b 01       	movw	r14, r22
    59bc:	8c 01       	movw	r16, r24
    59be:	c5 01       	movw	r24, r10
    59c0:	68 e2       	ldi	r22, 0x28	; 40
    59c2:	70 e0       	ldi	r23, 0x00	; 0
    59c4:	0e 94 05 7b 	call	0xf60a	; 0xf60a <__udivmodhi4>
    59c8:	80 e0       	ldi	r24, 0x00	; 0
    59ca:	90 e0       	ldi	r25, 0x00	; 0
    59cc:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    59d0:	5b 01       	movw	r10, r22
    59d2:	6c 01       	movw	r12, r24
    59d4:	96 94       	lsr	r9
    59d6:	87 94       	ror	r8
    59d8:	96 94       	lsr	r9
    59da:	87 94       	ror	r8
    59dc:	96 94       	lsr	r9
    59de:	87 94       	ror	r8
    59e0:	b4 01       	movw	r22, r8
    59e2:	80 e0       	ldi	r24, 0x00	; 0
    59e4:	90 e0       	ldi	r25, 0x00	; 0
    59e6:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    59ea:	f2 01       	movw	r30, r4
    59ec:	60 83       	st	Z, r22
    59ee:	71 83       	std	Z+1, r23	; 0x01
    59f0:	82 83       	std	Z+2, r24	; 0x02
    59f2:	93 83       	std	Z+3, r25	; 0x03
    59f4:	c8 01       	movw	r24, r16
    59f6:	b7 01       	movw	r22, r14
    59f8:	20 e0       	ldi	r18, 0x00	; 0
    59fa:	30 e0       	ldi	r19, 0x00	; 0
    59fc:	a9 01       	movw	r20, r18
    59fe:	0f 2e       	mov	r0, r31
    5a00:	f0 e0       	ldi	r31, 0x00	; 0
    5a02:	ef 2e       	mov	r14, r31
    5a04:	f0 e0       	ldi	r31, 0x00	; 0
    5a06:	ff 2e       	mov	r15, r31
    5a08:	f4 e3       	ldi	r31, 0x34	; 52
    5a0a:	0f 2f       	mov	r16, r31
    5a0c:	f3 e4       	ldi	r31, 0x43	; 67
    5a0e:	1f 2f       	mov	r17, r31
    5a10:	f0 2d       	mov	r31, r0
    5a12:	0e 94 a0 08 	call	0x1140	; 0x1140 <_Z3mapddddd>
    5a16:	0f 90       	pop	r0
    5a18:	0f 90       	pop	r0
    5a1a:	0f 90       	pop	r0
    5a1c:	0f 90       	pop	r0
        OCR3C=ICR3-vAl;
    5a1e:	c0 91 96 00 	lds	r28, 0x0096
    5a22:	d0 91 97 00 	lds	r29, 0x0097
      case 2:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
        OCR3B=ICR3-vAl;
        break;
      case 3:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    5a26:	0e 94 bb 79 	call	0xf376	; 0xf376 <__fixsfsi>
        OCR3C=ICR3-vAl;
    5a2a:	c6 1b       	sub	r28, r22
    5a2c:	d7 0b       	sbc	r29, r23
    5a2e:	d0 93 9d 00 	sts	0x009D, r29
    5a32:	c0 93 9c 00 	sts	0x009C, r28
    5a36:	f1 c1       	rjmp	.+994    	; 0x5e1a <_Z6angle3i+0x898>
        break;
      case 6:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    5a38:	e6 e8       	ldi	r30, 0x86	; 134
    5a3a:	f0 e0       	ldi	r31, 0x00	; 0
    5a3c:	a0 80       	ld	r10, Z
    5a3e:	b1 80       	ldd	r11, Z+1	; 0x01
    5a40:	80 80       	ld	r8, Z
    5a42:	91 80       	ldd	r9, Z+1	; 0x01
    5a44:	00 d0       	rcall	.+0      	; 0x5a46 <_Z6angle3i+0x4c4>
    5a46:	0f 92       	push	r0
    5a48:	4d b6       	in	r4, 0x3d	; 61
    5a4a:	5e b6       	in	r5, 0x3e	; 62
    5a4c:	08 94       	sec
    5a4e:	41 1c       	adc	r4, r1
    5a50:	51 1c       	adc	r5, r1
    5a52:	be 01       	movw	r22, r28
    5a54:	88 27       	eor	r24, r24
    5a56:	77 fd       	sbrc	r23, 7
    5a58:	80 95       	com	r24
    5a5a:	98 2f       	mov	r25, r24
    5a5c:	0e 94 ee 79 	call	0xf3dc	; 0xf3dc <__floatsisf>
    5a60:	7b 01       	movw	r14, r22
    5a62:	8c 01       	movw	r16, r24
    5a64:	c5 01       	movw	r24, r10
    5a66:	68 e2       	ldi	r22, 0x28	; 40
    5a68:	70 e0       	ldi	r23, 0x00	; 0
    5a6a:	0e 94 05 7b 	call	0xf60a	; 0xf60a <__udivmodhi4>
    5a6e:	80 e0       	ldi	r24, 0x00	; 0
    5a70:	90 e0       	ldi	r25, 0x00	; 0
    5a72:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    5a76:	5b 01       	movw	r10, r22
    5a78:	6c 01       	movw	r12, r24
    5a7a:	96 94       	lsr	r9
    5a7c:	87 94       	ror	r8
    5a7e:	96 94       	lsr	r9
    5a80:	87 94       	ror	r8
    5a82:	96 94       	lsr	r9
    5a84:	87 94       	ror	r8
    5a86:	b4 01       	movw	r22, r8
    5a88:	80 e0       	ldi	r24, 0x00	; 0
    5a8a:	90 e0       	ldi	r25, 0x00	; 0
    5a8c:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    5a90:	f2 01       	movw	r30, r4
    5a92:	60 83       	st	Z, r22
    5a94:	71 83       	std	Z+1, r23	; 0x01
    5a96:	82 83       	std	Z+2, r24	; 0x02
    5a98:	93 83       	std	Z+3, r25	; 0x03
    5a9a:	c8 01       	movw	r24, r16
    5a9c:	b7 01       	movw	r22, r14
    5a9e:	20 e0       	ldi	r18, 0x00	; 0
    5aa0:	30 e0       	ldi	r19, 0x00	; 0
    5aa2:	a9 01       	movw	r20, r18
    5aa4:	0f 2e       	mov	r0, r31
    5aa6:	f0 e0       	ldi	r31, 0x00	; 0
    5aa8:	ef 2e       	mov	r14, r31
    5aaa:	f0 e0       	ldi	r31, 0x00	; 0
    5aac:	ff 2e       	mov	r15, r31
    5aae:	f4 e3       	ldi	r31, 0x34	; 52
    5ab0:	0f 2f       	mov	r16, r31
    5ab2:	f3 e4       	ldi	r31, 0x43	; 67
    5ab4:	1f 2f       	mov	r17, r31
    5ab6:	f0 2d       	mov	r31, r0
    5ab8:	0e 94 a0 08 	call	0x1140	; 0x1140 <_Z3mapddddd>
    5abc:	0f 90       	pop	r0
    5abe:	0f 90       	pop	r0
    5ac0:	0f 90       	pop	r0
    5ac2:	0f 90       	pop	r0
        OCR4A=ICR4-vAl;
    5ac4:	c0 91 a6 00 	lds	r28, 0x00A6
    5ac8:	d0 91 a7 00 	lds	r29, 0x00A7
      case 3:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
        OCR3C=ICR3-vAl;
        break;
      case 6:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    5acc:	0e 94 bb 79 	call	0xf376	; 0xf376 <__fixsfsi>
        OCR4A=ICR4-vAl;
    5ad0:	c6 1b       	sub	r28, r22
    5ad2:	d7 0b       	sbc	r29, r23
    5ad4:	d0 93 a9 00 	sts	0x00A9, r29
    5ad8:	c0 93 a8 00 	sts	0x00A8, r28
    5adc:	9e c1       	rjmp	.+828    	; 0x5e1a <_Z6angle3i+0x898>
        break;
      case 7:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    5ade:	e6 e8       	ldi	r30, 0x86	; 134
    5ae0:	f0 e0       	ldi	r31, 0x00	; 0
    5ae2:	a0 80       	ld	r10, Z
    5ae4:	b1 80       	ldd	r11, Z+1	; 0x01
    5ae6:	80 80       	ld	r8, Z
    5ae8:	91 80       	ldd	r9, Z+1	; 0x01
    5aea:	00 d0       	rcall	.+0      	; 0x5aec <_Z6angle3i+0x56a>
    5aec:	0f 92       	push	r0
    5aee:	4d b6       	in	r4, 0x3d	; 61
    5af0:	5e b6       	in	r5, 0x3e	; 62
    5af2:	08 94       	sec
    5af4:	41 1c       	adc	r4, r1
    5af6:	51 1c       	adc	r5, r1
    5af8:	be 01       	movw	r22, r28
    5afa:	88 27       	eor	r24, r24
    5afc:	77 fd       	sbrc	r23, 7
    5afe:	80 95       	com	r24
    5b00:	98 2f       	mov	r25, r24
    5b02:	0e 94 ee 79 	call	0xf3dc	; 0xf3dc <__floatsisf>
    5b06:	7b 01       	movw	r14, r22
    5b08:	8c 01       	movw	r16, r24
    5b0a:	c5 01       	movw	r24, r10
    5b0c:	68 e2       	ldi	r22, 0x28	; 40
    5b0e:	70 e0       	ldi	r23, 0x00	; 0
    5b10:	0e 94 05 7b 	call	0xf60a	; 0xf60a <__udivmodhi4>
    5b14:	80 e0       	ldi	r24, 0x00	; 0
    5b16:	90 e0       	ldi	r25, 0x00	; 0
    5b18:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    5b1c:	5b 01       	movw	r10, r22
    5b1e:	6c 01       	movw	r12, r24
    5b20:	96 94       	lsr	r9
    5b22:	87 94       	ror	r8
    5b24:	96 94       	lsr	r9
    5b26:	87 94       	ror	r8
    5b28:	96 94       	lsr	r9
    5b2a:	87 94       	ror	r8
    5b2c:	b4 01       	movw	r22, r8
    5b2e:	80 e0       	ldi	r24, 0x00	; 0
    5b30:	90 e0       	ldi	r25, 0x00	; 0
    5b32:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    5b36:	f2 01       	movw	r30, r4
    5b38:	60 83       	st	Z, r22
    5b3a:	71 83       	std	Z+1, r23	; 0x01
    5b3c:	82 83       	std	Z+2, r24	; 0x02
    5b3e:	93 83       	std	Z+3, r25	; 0x03
    5b40:	c8 01       	movw	r24, r16
    5b42:	b7 01       	movw	r22, r14
    5b44:	20 e0       	ldi	r18, 0x00	; 0
    5b46:	30 e0       	ldi	r19, 0x00	; 0
    5b48:	a9 01       	movw	r20, r18
    5b4a:	0f 2e       	mov	r0, r31
    5b4c:	f0 e0       	ldi	r31, 0x00	; 0
    5b4e:	ef 2e       	mov	r14, r31
    5b50:	f0 e0       	ldi	r31, 0x00	; 0
    5b52:	ff 2e       	mov	r15, r31
    5b54:	f4 e3       	ldi	r31, 0x34	; 52
    5b56:	0f 2f       	mov	r16, r31
    5b58:	f3 e4       	ldi	r31, 0x43	; 67
    5b5a:	1f 2f       	mov	r17, r31
    5b5c:	f0 2d       	mov	r31, r0
    5b5e:	0e 94 a0 08 	call	0x1140	; 0x1140 <_Z3mapddddd>
    5b62:	0f 90       	pop	r0
    5b64:	0f 90       	pop	r0
    5b66:	0f 90       	pop	r0
    5b68:	0f 90       	pop	r0
        OCR4B=ICR4-vAl;
    5b6a:	c0 91 a6 00 	lds	r28, 0x00A6
    5b6e:	d0 91 a7 00 	lds	r29, 0x00A7
      case 6:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
        OCR4A=ICR4-vAl;
        break;
      case 7:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    5b72:	0e 94 bb 79 	call	0xf376	; 0xf376 <__fixsfsi>
        OCR4B=ICR4-vAl;
    5b76:	c6 1b       	sub	r28, r22
    5b78:	d7 0b       	sbc	r29, r23
    5b7a:	d0 93 ab 00 	sts	0x00AB, r29
    5b7e:	c0 93 aa 00 	sts	0x00AA, r28
    5b82:	4b c1       	rjmp	.+662    	; 0x5e1a <_Z6angle3i+0x898>
        break; 
      case 8:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    5b84:	e6 e8       	ldi	r30, 0x86	; 134
    5b86:	f0 e0       	ldi	r31, 0x00	; 0
    5b88:	a0 80       	ld	r10, Z
    5b8a:	b1 80       	ldd	r11, Z+1	; 0x01
    5b8c:	80 80       	ld	r8, Z
    5b8e:	91 80       	ldd	r9, Z+1	; 0x01
    5b90:	00 d0       	rcall	.+0      	; 0x5b92 <_Z6angle3i+0x610>
    5b92:	0f 92       	push	r0
    5b94:	4d b6       	in	r4, 0x3d	; 61
    5b96:	5e b6       	in	r5, 0x3e	; 62
    5b98:	08 94       	sec
    5b9a:	41 1c       	adc	r4, r1
    5b9c:	51 1c       	adc	r5, r1
    5b9e:	be 01       	movw	r22, r28
    5ba0:	88 27       	eor	r24, r24
    5ba2:	77 fd       	sbrc	r23, 7
    5ba4:	80 95       	com	r24
    5ba6:	98 2f       	mov	r25, r24
    5ba8:	0e 94 ee 79 	call	0xf3dc	; 0xf3dc <__floatsisf>
    5bac:	7b 01       	movw	r14, r22
    5bae:	8c 01       	movw	r16, r24
    5bb0:	c5 01       	movw	r24, r10
    5bb2:	68 e2       	ldi	r22, 0x28	; 40
    5bb4:	70 e0       	ldi	r23, 0x00	; 0
    5bb6:	0e 94 05 7b 	call	0xf60a	; 0xf60a <__udivmodhi4>
    5bba:	80 e0       	ldi	r24, 0x00	; 0
    5bbc:	90 e0       	ldi	r25, 0x00	; 0
    5bbe:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    5bc2:	5b 01       	movw	r10, r22
    5bc4:	6c 01       	movw	r12, r24
    5bc6:	96 94       	lsr	r9
    5bc8:	87 94       	ror	r8
    5bca:	96 94       	lsr	r9
    5bcc:	87 94       	ror	r8
    5bce:	96 94       	lsr	r9
    5bd0:	87 94       	ror	r8
    5bd2:	b4 01       	movw	r22, r8
    5bd4:	80 e0       	ldi	r24, 0x00	; 0
    5bd6:	90 e0       	ldi	r25, 0x00	; 0
    5bd8:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    5bdc:	f2 01       	movw	r30, r4
    5bde:	60 83       	st	Z, r22
    5be0:	71 83       	std	Z+1, r23	; 0x01
    5be2:	82 83       	std	Z+2, r24	; 0x02
    5be4:	93 83       	std	Z+3, r25	; 0x03
    5be6:	c8 01       	movw	r24, r16
    5be8:	b7 01       	movw	r22, r14
    5bea:	20 e0       	ldi	r18, 0x00	; 0
    5bec:	30 e0       	ldi	r19, 0x00	; 0
    5bee:	a9 01       	movw	r20, r18
    5bf0:	0f 2e       	mov	r0, r31
    5bf2:	f0 e0       	ldi	r31, 0x00	; 0
    5bf4:	ef 2e       	mov	r14, r31
    5bf6:	f0 e0       	ldi	r31, 0x00	; 0
    5bf8:	ff 2e       	mov	r15, r31
    5bfa:	f4 e3       	ldi	r31, 0x34	; 52
    5bfc:	0f 2f       	mov	r16, r31
    5bfe:	f3 e4       	ldi	r31, 0x43	; 67
    5c00:	1f 2f       	mov	r17, r31
    5c02:	f0 2d       	mov	r31, r0
    5c04:	0e 94 a0 08 	call	0x1140	; 0x1140 <_Z3mapddddd>
    5c08:	0f 90       	pop	r0
    5c0a:	0f 90       	pop	r0
    5c0c:	0f 90       	pop	r0
    5c0e:	0f 90       	pop	r0
        OCR4C=ICR4-vAl;
    5c10:	c0 91 a6 00 	lds	r28, 0x00A6
    5c14:	d0 91 a7 00 	lds	r29, 0x00A7
      case 7:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
        OCR4B=ICR4-vAl;
        break; 
      case 8:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    5c18:	0e 94 bb 79 	call	0xf376	; 0xf376 <__fixsfsi>
        OCR4C=ICR4-vAl;
    5c1c:	c6 1b       	sub	r28, r22
    5c1e:	d7 0b       	sbc	r29, r23
    5c20:	d0 93 ad 00 	sts	0x00AD, r29
    5c24:	c0 93 ac 00 	sts	0x00AC, r28
    5c28:	f8 c0       	rjmp	.+496    	; 0x5e1a <_Z6angle3i+0x898>
        break;
      case 46:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    5c2a:	e6 e8       	ldi	r30, 0x86	; 134
    5c2c:	f0 e0       	ldi	r31, 0x00	; 0
    5c2e:	a0 80       	ld	r10, Z
    5c30:	b1 80       	ldd	r11, Z+1	; 0x01
    5c32:	80 80       	ld	r8, Z
    5c34:	91 80       	ldd	r9, Z+1	; 0x01
    5c36:	00 d0       	rcall	.+0      	; 0x5c38 <_Z6angle3i+0x6b6>
    5c38:	0f 92       	push	r0
    5c3a:	4d b6       	in	r4, 0x3d	; 61
    5c3c:	5e b6       	in	r5, 0x3e	; 62
    5c3e:	08 94       	sec
    5c40:	41 1c       	adc	r4, r1
    5c42:	51 1c       	adc	r5, r1
    5c44:	be 01       	movw	r22, r28
    5c46:	88 27       	eor	r24, r24
    5c48:	77 fd       	sbrc	r23, 7
    5c4a:	80 95       	com	r24
    5c4c:	98 2f       	mov	r25, r24
    5c4e:	0e 94 ee 79 	call	0xf3dc	; 0xf3dc <__floatsisf>
    5c52:	7b 01       	movw	r14, r22
    5c54:	8c 01       	movw	r16, r24
    5c56:	c5 01       	movw	r24, r10
    5c58:	68 e2       	ldi	r22, 0x28	; 40
    5c5a:	70 e0       	ldi	r23, 0x00	; 0
    5c5c:	0e 94 05 7b 	call	0xf60a	; 0xf60a <__udivmodhi4>
    5c60:	80 e0       	ldi	r24, 0x00	; 0
    5c62:	90 e0       	ldi	r25, 0x00	; 0
    5c64:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    5c68:	5b 01       	movw	r10, r22
    5c6a:	6c 01       	movw	r12, r24
    5c6c:	96 94       	lsr	r9
    5c6e:	87 94       	ror	r8
    5c70:	96 94       	lsr	r9
    5c72:	87 94       	ror	r8
    5c74:	96 94       	lsr	r9
    5c76:	87 94       	ror	r8
    5c78:	b4 01       	movw	r22, r8
    5c7a:	80 e0       	ldi	r24, 0x00	; 0
    5c7c:	90 e0       	ldi	r25, 0x00	; 0
    5c7e:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    5c82:	f2 01       	movw	r30, r4
    5c84:	60 83       	st	Z, r22
    5c86:	71 83       	std	Z+1, r23	; 0x01
    5c88:	82 83       	std	Z+2, r24	; 0x02
    5c8a:	93 83       	std	Z+3, r25	; 0x03
    5c8c:	c8 01       	movw	r24, r16
    5c8e:	b7 01       	movw	r22, r14
    5c90:	20 e0       	ldi	r18, 0x00	; 0
    5c92:	30 e0       	ldi	r19, 0x00	; 0
    5c94:	a9 01       	movw	r20, r18
    5c96:	0f 2e       	mov	r0, r31
    5c98:	f0 e0       	ldi	r31, 0x00	; 0
    5c9a:	ef 2e       	mov	r14, r31
    5c9c:	f0 e0       	ldi	r31, 0x00	; 0
    5c9e:	ff 2e       	mov	r15, r31
    5ca0:	f4 e3       	ldi	r31, 0x34	; 52
    5ca2:	0f 2f       	mov	r16, r31
    5ca4:	f3 e4       	ldi	r31, 0x43	; 67
    5ca6:	1f 2f       	mov	r17, r31
    5ca8:	f0 2d       	mov	r31, r0
    5caa:	0e 94 a0 08 	call	0x1140	; 0x1140 <_Z3mapddddd>
    5cae:	0f 90       	pop	r0
    5cb0:	0f 90       	pop	r0
    5cb2:	0f 90       	pop	r0
    5cb4:	0f 90       	pop	r0
        OCR5A=ICR5-vAl;
    5cb6:	c0 91 26 01 	lds	r28, 0x0126
    5cba:	d0 91 27 01 	lds	r29, 0x0127
      case 8:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
        OCR4C=ICR4-vAl;
        break;
      case 46:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    5cbe:	0e 94 bb 79 	call	0xf376	; 0xf376 <__fixsfsi>
        OCR5A=ICR5-vAl;
    5cc2:	c6 1b       	sub	r28, r22
    5cc4:	d7 0b       	sbc	r29, r23
    5cc6:	d0 93 29 01 	sts	0x0129, r29
    5cca:	c0 93 28 01 	sts	0x0128, r28
    5cce:	a5 c0       	rjmp	.+330    	; 0x5e1a <_Z6angle3i+0x898>
        break;
      case 45:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    5cd0:	e6 e8       	ldi	r30, 0x86	; 134
    5cd2:	f0 e0       	ldi	r31, 0x00	; 0
    5cd4:	a0 80       	ld	r10, Z
    5cd6:	b1 80       	ldd	r11, Z+1	; 0x01
    5cd8:	80 80       	ld	r8, Z
    5cda:	91 80       	ldd	r9, Z+1	; 0x01
    5cdc:	00 d0       	rcall	.+0      	; 0x5cde <_Z6angle3i+0x75c>
    5cde:	0f 92       	push	r0
    5ce0:	4d b6       	in	r4, 0x3d	; 61
    5ce2:	5e b6       	in	r5, 0x3e	; 62
    5ce4:	08 94       	sec
    5ce6:	41 1c       	adc	r4, r1
    5ce8:	51 1c       	adc	r5, r1
    5cea:	be 01       	movw	r22, r28
    5cec:	88 27       	eor	r24, r24
    5cee:	77 fd       	sbrc	r23, 7
    5cf0:	80 95       	com	r24
    5cf2:	98 2f       	mov	r25, r24
    5cf4:	0e 94 ee 79 	call	0xf3dc	; 0xf3dc <__floatsisf>
    5cf8:	7b 01       	movw	r14, r22
    5cfa:	8c 01       	movw	r16, r24
    5cfc:	c5 01       	movw	r24, r10
    5cfe:	68 e2       	ldi	r22, 0x28	; 40
    5d00:	70 e0       	ldi	r23, 0x00	; 0
    5d02:	0e 94 05 7b 	call	0xf60a	; 0xf60a <__udivmodhi4>
    5d06:	80 e0       	ldi	r24, 0x00	; 0
    5d08:	90 e0       	ldi	r25, 0x00	; 0
    5d0a:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    5d0e:	5b 01       	movw	r10, r22
    5d10:	6c 01       	movw	r12, r24
    5d12:	96 94       	lsr	r9
    5d14:	87 94       	ror	r8
    5d16:	96 94       	lsr	r9
    5d18:	87 94       	ror	r8
    5d1a:	96 94       	lsr	r9
    5d1c:	87 94       	ror	r8
    5d1e:	b4 01       	movw	r22, r8
    5d20:	80 e0       	ldi	r24, 0x00	; 0
    5d22:	90 e0       	ldi	r25, 0x00	; 0
    5d24:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    5d28:	f2 01       	movw	r30, r4
    5d2a:	60 83       	st	Z, r22
    5d2c:	71 83       	std	Z+1, r23	; 0x01
    5d2e:	82 83       	std	Z+2, r24	; 0x02
    5d30:	93 83       	std	Z+3, r25	; 0x03
    5d32:	c8 01       	movw	r24, r16
    5d34:	b7 01       	movw	r22, r14
    5d36:	20 e0       	ldi	r18, 0x00	; 0
    5d38:	30 e0       	ldi	r19, 0x00	; 0
    5d3a:	a9 01       	movw	r20, r18
    5d3c:	0f 2e       	mov	r0, r31
    5d3e:	f0 e0       	ldi	r31, 0x00	; 0
    5d40:	ef 2e       	mov	r14, r31
    5d42:	f0 e0       	ldi	r31, 0x00	; 0
    5d44:	ff 2e       	mov	r15, r31
    5d46:	f4 e3       	ldi	r31, 0x34	; 52
    5d48:	0f 2f       	mov	r16, r31
    5d4a:	f3 e4       	ldi	r31, 0x43	; 67
    5d4c:	1f 2f       	mov	r17, r31
    5d4e:	f0 2d       	mov	r31, r0
    5d50:	0e 94 a0 08 	call	0x1140	; 0x1140 <_Z3mapddddd>
    5d54:	0f 90       	pop	r0
    5d56:	0f 90       	pop	r0
    5d58:	0f 90       	pop	r0
    5d5a:	0f 90       	pop	r0
        OCR5B=ICR5-vAl;
    5d5c:	c0 91 26 01 	lds	r28, 0x0126
    5d60:	d0 91 27 01 	lds	r29, 0x0127
      case 46:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
        OCR5A=ICR5-vAl;
        break;
      case 45:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    5d64:	0e 94 bb 79 	call	0xf376	; 0xf376 <__fixsfsi>
        OCR5B=ICR5-vAl;
    5d68:	c6 1b       	sub	r28, r22
    5d6a:	d7 0b       	sbc	r29, r23
    5d6c:	d0 93 2b 01 	sts	0x012B, r29
    5d70:	c0 93 2a 01 	sts	0x012A, r28
    5d74:	52 c0       	rjmp	.+164    	; 0x5e1a <_Z6angle3i+0x898>
        break;
      case 44:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    5d76:	e6 e8       	ldi	r30, 0x86	; 134
    5d78:	f0 e0       	ldi	r31, 0x00	; 0
    5d7a:	a0 80       	ld	r10, Z
    5d7c:	b1 80       	ldd	r11, Z+1	; 0x01
    5d7e:	80 80       	ld	r8, Z
    5d80:	91 80       	ldd	r9, Z+1	; 0x01
    5d82:	00 d0       	rcall	.+0      	; 0x5d84 <_Z6angle3i+0x802>
    5d84:	0f 92       	push	r0
    5d86:	4d b6       	in	r4, 0x3d	; 61
    5d88:	5e b6       	in	r5, 0x3e	; 62
    5d8a:	08 94       	sec
    5d8c:	41 1c       	adc	r4, r1
    5d8e:	51 1c       	adc	r5, r1
    5d90:	be 01       	movw	r22, r28
    5d92:	88 27       	eor	r24, r24
    5d94:	77 fd       	sbrc	r23, 7
    5d96:	80 95       	com	r24
    5d98:	98 2f       	mov	r25, r24
    5d9a:	0e 94 ee 79 	call	0xf3dc	; 0xf3dc <__floatsisf>
    5d9e:	7b 01       	movw	r14, r22
    5da0:	8c 01       	movw	r16, r24
    5da2:	c5 01       	movw	r24, r10
    5da4:	68 e2       	ldi	r22, 0x28	; 40
    5da6:	70 e0       	ldi	r23, 0x00	; 0
    5da8:	0e 94 05 7b 	call	0xf60a	; 0xf60a <__udivmodhi4>
    5dac:	80 e0       	ldi	r24, 0x00	; 0
    5dae:	90 e0       	ldi	r25, 0x00	; 0
    5db0:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    5db4:	5b 01       	movw	r10, r22
    5db6:	6c 01       	movw	r12, r24
    5db8:	96 94       	lsr	r9
    5dba:	87 94       	ror	r8
    5dbc:	96 94       	lsr	r9
    5dbe:	87 94       	ror	r8
    5dc0:	96 94       	lsr	r9
    5dc2:	87 94       	ror	r8
    5dc4:	b4 01       	movw	r22, r8
    5dc6:	80 e0       	ldi	r24, 0x00	; 0
    5dc8:	90 e0       	ldi	r25, 0x00	; 0
    5dca:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    5dce:	f2 01       	movw	r30, r4
    5dd0:	60 83       	st	Z, r22
    5dd2:	71 83       	std	Z+1, r23	; 0x01
    5dd4:	82 83       	std	Z+2, r24	; 0x02
    5dd6:	93 83       	std	Z+3, r25	; 0x03
    5dd8:	c8 01       	movw	r24, r16
    5dda:	b7 01       	movw	r22, r14
    5ddc:	20 e0       	ldi	r18, 0x00	; 0
    5dde:	30 e0       	ldi	r19, 0x00	; 0
    5de0:	a9 01       	movw	r20, r18
    5de2:	0f 2e       	mov	r0, r31
    5de4:	f0 e0       	ldi	r31, 0x00	; 0
    5de6:	ef 2e       	mov	r14, r31
    5de8:	f0 e0       	ldi	r31, 0x00	; 0
    5dea:	ff 2e       	mov	r15, r31
    5dec:	f4 e3       	ldi	r31, 0x34	; 52
    5dee:	0f 2f       	mov	r16, r31
    5df0:	f3 e4       	ldi	r31, 0x43	; 67
    5df2:	1f 2f       	mov	r17, r31
    5df4:	f0 2d       	mov	r31, r0
    5df6:	0e 94 a0 08 	call	0x1140	; 0x1140 <_Z3mapddddd>
    5dfa:	0f 90       	pop	r0
    5dfc:	0f 90       	pop	r0
    5dfe:	0f 90       	pop	r0
    5e00:	0f 90       	pop	r0
        OCR5C=ICR5-vAl;
    5e02:	c0 91 26 01 	lds	r28, 0x0126
    5e06:	d0 91 27 01 	lds	r29, 0x0127
      case 45:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
        OCR5B=ICR5-vAl;
        break;
      case 44:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    5e0a:	0e 94 bb 79 	call	0xf376	; 0xf376 <__fixsfsi>
        OCR5C=ICR5-vAl;
    5e0e:	c6 1b       	sub	r28, r22
    5e10:	d7 0b       	sbc	r29, r23
    5e12:	d0 93 2d 01 	sts	0x012D, r29
    5e16:	c0 93 2c 01 	sts	0x012C, r28

		p.write(v);
		q.write(y);
    5e1a:	60 91 cc 02 	lds	r22, 0x02CC
    5e1e:	70 91 cd 02 	lds	r23, 0x02CD
     }
  }

  void write(int vAl)           //PIN=servo pin no. on mega,vAl=angle F_CPU for the servo at pin
  {
    switch(pIn)
    5e22:	80 91 d5 02 	lds	r24, 0x02D5
    5e26:	88 30       	cpi	r24, 0x08	; 8
    5e28:	09 f4       	brne	.+2      	; 0x5e2c <_Z6angle3i+0x8aa>
    5e2a:	63 c2       	rjmp	.+1222   	; 0x62f2 <_Z6angle3i+0xd70>
    5e2c:	89 30       	cpi	r24, 0x09	; 9
    5e2e:	98 f4       	brcc	.+38     	; 0x5e56 <_Z6angle3i+0x8d4>
    5e30:	85 30       	cpi	r24, 0x05	; 5
    5e32:	09 f4       	brne	.+2      	; 0x5e36 <_Z6angle3i+0x8b4>
    5e34:	c4 c0       	rjmp	.+392    	; 0x5fbe <_Z6angle3i+0xa3c>
    5e36:	86 30       	cpi	r24, 0x06	; 6
    5e38:	38 f4       	brcc	.+14     	; 0x5e48 <_Z6angle3i+0x8c6>
    5e3a:	82 30       	cpi	r24, 0x02	; 2
    5e3c:	09 f4       	brne	.+2      	; 0x5e40 <_Z6angle3i+0x8be>
    5e3e:	11 c1       	rjmp	.+546    	; 0x6062 <_Z6angle3i+0xae0>
    5e40:	83 30       	cpi	r24, 0x03	; 3
    5e42:	09 f0       	breq	.+2      	; 0x5e46 <_Z6angle3i+0x8c4>
    5e44:	9d c3       	rjmp	.+1850   	; 0x6580 <_Z6angle3i+0xffe>
    5e46:	5f c1       	rjmp	.+702    	; 0x6106 <_Z6angle3i+0xb84>
    5e48:	86 30       	cpi	r24, 0x06	; 6
    5e4a:	09 f4       	brne	.+2      	; 0x5e4e <_Z6angle3i+0x8cc>
    5e4c:	ae c1       	rjmp	.+860    	; 0x61aa <_Z6angle3i+0xc28>
    5e4e:	87 30       	cpi	r24, 0x07	; 7
    5e50:	09 f0       	breq	.+2      	; 0x5e54 <_Z6angle3i+0x8d2>
    5e52:	96 c3       	rjmp	.+1836   	; 0x6580 <_Z6angle3i+0xffe>
    5e54:	fc c1       	rjmp	.+1016   	; 0x624e <_Z6angle3i+0xccc>
    5e56:	8c 32       	cpi	r24, 0x2C	; 44
    5e58:	09 f4       	brne	.+2      	; 0x5e5c <_Z6angle3i+0x8da>
    5e5a:	41 c3       	rjmp	.+1666   	; 0x64de <_Z6angle3i+0xf5c>
    5e5c:	8d 32       	cpi	r24, 0x2D	; 45
    5e5e:	30 f4       	brcc	.+12     	; 0x5e6c <_Z6angle3i+0x8ea>
    5e60:	8b 30       	cpi	r24, 0x0B	; 11
    5e62:	59 f0       	breq	.+22     	; 0x5e7a <_Z6angle3i+0x8f8>
    5e64:	8c 30       	cpi	r24, 0x0C	; 12
    5e66:	09 f0       	breq	.+2      	; 0x5e6a <_Z6angle3i+0x8e8>
    5e68:	8b c3       	rjmp	.+1814   	; 0x6580 <_Z6angle3i+0xffe>
    5e6a:	58 c0       	rjmp	.+176    	; 0x5f1c <_Z6angle3i+0x99a>
    5e6c:	8d 32       	cpi	r24, 0x2D	; 45
    5e6e:	09 f4       	brne	.+2      	; 0x5e72 <_Z6angle3i+0x8f0>
    5e70:	e4 c2       	rjmp	.+1480   	; 0x643a <_Z6angle3i+0xeb8>
    5e72:	8e 32       	cpi	r24, 0x2E	; 46
    5e74:	09 f0       	breq	.+2      	; 0x5e78 <_Z6angle3i+0x8f6>
    5e76:	84 c3       	rjmp	.+1800   	; 0x6580 <_Z6angle3i+0xffe>
    5e78:	8e c2       	rjmp	.+1308   	; 0x6396 <_Z6angle3i+0xe14>
    {
     case 11:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    5e7a:	c6 e8       	ldi	r28, 0x86	; 134
    5e7c:	d0 e0       	ldi	r29, 0x00	; 0
    5e7e:	08 81       	ld	r16, Y
    5e80:	19 81       	ldd	r17, Y+1	; 0x01
    5e82:	e8 80       	ld	r14, Y
    5e84:	f9 80       	ldd	r15, Y+1	; 0x01
    5e86:	00 d0       	rcall	.+0      	; 0x5e88 <_Z6angle3i+0x906>
    5e88:	0f 92       	push	r0
    5e8a:	8d b6       	in	r8, 0x3d	; 61
    5e8c:	9e b6       	in	r9, 0x3e	; 62
    5e8e:	08 94       	sec
    5e90:	81 1c       	adc	r8, r1
    5e92:	91 1c       	adc	r9, r1
    5e94:	88 27       	eor	r24, r24
    5e96:	77 fd       	sbrc	r23, 7
    5e98:	80 95       	com	r24
    5e9a:	98 2f       	mov	r25, r24
    5e9c:	0e 94 ee 79 	call	0xf3dc	; 0xf3dc <__floatsisf>
    5ea0:	2b 01       	movw	r4, r22
    5ea2:	3c 01       	movw	r6, r24
    5ea4:	c8 01       	movw	r24, r16
    5ea6:	68 e2       	ldi	r22, 0x28	; 40
    5ea8:	70 e0       	ldi	r23, 0x00	; 0
    5eaa:	0e 94 05 7b 	call	0xf60a	; 0xf60a <__udivmodhi4>
    5eae:	80 e0       	ldi	r24, 0x00	; 0
    5eb0:	90 e0       	ldi	r25, 0x00	; 0
    5eb2:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    5eb6:	5b 01       	movw	r10, r22
    5eb8:	6c 01       	movw	r12, r24
    5eba:	f6 94       	lsr	r15
    5ebc:	e7 94       	ror	r14
    5ebe:	f6 94       	lsr	r15
    5ec0:	e7 94       	ror	r14
    5ec2:	f6 94       	lsr	r15
    5ec4:	e7 94       	ror	r14
    5ec6:	b7 01       	movw	r22, r14
    5ec8:	80 e0       	ldi	r24, 0x00	; 0
    5eca:	90 e0       	ldi	r25, 0x00	; 0
    5ecc:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    5ed0:	f4 01       	movw	r30, r8
    5ed2:	60 83       	st	Z, r22
    5ed4:	71 83       	std	Z+1, r23	; 0x01
    5ed6:	82 83       	std	Z+2, r24	; 0x02
    5ed8:	93 83       	std	Z+3, r25	; 0x03
    5eda:	c3 01       	movw	r24, r6
    5edc:	b2 01       	movw	r22, r4
    5ede:	20 e0       	ldi	r18, 0x00	; 0
    5ee0:	30 e0       	ldi	r19, 0x00	; 0
    5ee2:	a9 01       	movw	r20, r18
    5ee4:	0f 2e       	mov	r0, r31
    5ee6:	f0 e0       	ldi	r31, 0x00	; 0
    5ee8:	ef 2e       	mov	r14, r31
    5eea:	f0 e0       	ldi	r31, 0x00	; 0
    5eec:	ff 2e       	mov	r15, r31
    5eee:	f4 e3       	ldi	r31, 0x34	; 52
    5ef0:	0f 2f       	mov	r16, r31
    5ef2:	f3 e4       	ldi	r31, 0x43	; 67
    5ef4:	1f 2f       	mov	r17, r31
    5ef6:	f0 2d       	mov	r31, r0
    5ef8:	0e 94 a0 08 	call	0x1140	; 0x1140 <_Z3mapddddd>
    5efc:	0f 90       	pop	r0
    5efe:	0f 90       	pop	r0
    5f00:	0f 90       	pop	r0
    5f02:	0f 90       	pop	r0
        OCR1A=ICR1-vAl;
    5f04:	09 90       	ld	r0, Y+
    5f06:	d8 81       	ld	r29, Y
    5f08:	c0 2d       	mov	r28, r0
  void write(int vAl)           //PIN=servo pin no. on mega,vAl=angle F_CPU for the servo at pin
  {
    switch(pIn)
    {
     case 11:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    5f0a:	0e 94 bb 79 	call	0xf376	; 0xf376 <__fixsfsi>
        OCR1A=ICR1-vAl;
    5f0e:	c6 1b       	sub	r28, r22
    5f10:	d7 0b       	sbc	r29, r23
    5f12:	d0 93 89 00 	sts	0x0089, r29
    5f16:	c0 93 88 00 	sts	0x0088, r28
    5f1a:	32 c3       	rjmp	.+1636   	; 0x6580 <_Z6angle3i+0xffe>
        break;
      case 12:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    5f1c:	c6 e8       	ldi	r28, 0x86	; 134
    5f1e:	d0 e0       	ldi	r29, 0x00	; 0
    5f20:	08 81       	ld	r16, Y
    5f22:	19 81       	ldd	r17, Y+1	; 0x01
    5f24:	e8 80       	ld	r14, Y
    5f26:	f9 80       	ldd	r15, Y+1	; 0x01
    5f28:	00 d0       	rcall	.+0      	; 0x5f2a <_Z6angle3i+0x9a8>
    5f2a:	0f 92       	push	r0
    5f2c:	8d b6       	in	r8, 0x3d	; 61
    5f2e:	9e b6       	in	r9, 0x3e	; 62
    5f30:	08 94       	sec
    5f32:	81 1c       	adc	r8, r1
    5f34:	91 1c       	adc	r9, r1
    5f36:	88 27       	eor	r24, r24
    5f38:	77 fd       	sbrc	r23, 7
    5f3a:	80 95       	com	r24
    5f3c:	98 2f       	mov	r25, r24
    5f3e:	0e 94 ee 79 	call	0xf3dc	; 0xf3dc <__floatsisf>
    5f42:	2b 01       	movw	r4, r22
    5f44:	3c 01       	movw	r6, r24
    5f46:	c8 01       	movw	r24, r16
    5f48:	68 e2       	ldi	r22, 0x28	; 40
    5f4a:	70 e0       	ldi	r23, 0x00	; 0
    5f4c:	0e 94 05 7b 	call	0xf60a	; 0xf60a <__udivmodhi4>
    5f50:	80 e0       	ldi	r24, 0x00	; 0
    5f52:	90 e0       	ldi	r25, 0x00	; 0
    5f54:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    5f58:	5b 01       	movw	r10, r22
    5f5a:	6c 01       	movw	r12, r24
    5f5c:	f6 94       	lsr	r15
    5f5e:	e7 94       	ror	r14
    5f60:	f6 94       	lsr	r15
    5f62:	e7 94       	ror	r14
    5f64:	f6 94       	lsr	r15
    5f66:	e7 94       	ror	r14
    5f68:	b7 01       	movw	r22, r14
    5f6a:	80 e0       	ldi	r24, 0x00	; 0
    5f6c:	90 e0       	ldi	r25, 0x00	; 0
    5f6e:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    5f72:	f4 01       	movw	r30, r8
    5f74:	60 83       	st	Z, r22
    5f76:	71 83       	std	Z+1, r23	; 0x01
    5f78:	82 83       	std	Z+2, r24	; 0x02
    5f7a:	93 83       	std	Z+3, r25	; 0x03
    5f7c:	c3 01       	movw	r24, r6
    5f7e:	b2 01       	movw	r22, r4
    5f80:	20 e0       	ldi	r18, 0x00	; 0
    5f82:	30 e0       	ldi	r19, 0x00	; 0
    5f84:	a9 01       	movw	r20, r18
    5f86:	0f 2e       	mov	r0, r31
    5f88:	f0 e0       	ldi	r31, 0x00	; 0
    5f8a:	ef 2e       	mov	r14, r31
    5f8c:	f0 e0       	ldi	r31, 0x00	; 0
    5f8e:	ff 2e       	mov	r15, r31
    5f90:	f4 e3       	ldi	r31, 0x34	; 52
    5f92:	0f 2f       	mov	r16, r31
    5f94:	f3 e4       	ldi	r31, 0x43	; 67
    5f96:	1f 2f       	mov	r17, r31
    5f98:	f0 2d       	mov	r31, r0
    5f9a:	0e 94 a0 08 	call	0x1140	; 0x1140 <_Z3mapddddd>
    5f9e:	0f 90       	pop	r0
    5fa0:	0f 90       	pop	r0
    5fa2:	0f 90       	pop	r0
    5fa4:	0f 90       	pop	r0
        OCR1B=ICR1-vAl;
    5fa6:	09 90       	ld	r0, Y+
    5fa8:	d8 81       	ld	r29, Y
    5faa:	c0 2d       	mov	r28, r0
     case 11:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
        OCR1A=ICR1-vAl;
        break;
      case 12:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    5fac:	0e 94 bb 79 	call	0xf376	; 0xf376 <__fixsfsi>
        OCR1B=ICR1-vAl;
    5fb0:	c6 1b       	sub	r28, r22
    5fb2:	d7 0b       	sbc	r29, r23
    5fb4:	d0 93 8b 00 	sts	0x008B, r29
    5fb8:	c0 93 8a 00 	sts	0x008A, r28
    5fbc:	e1 c2       	rjmp	.+1474   	; 0x6580 <_Z6angle3i+0xffe>
        break;
      case 5:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    5fbe:	e6 e8       	ldi	r30, 0x86	; 134
    5fc0:	f0 e0       	ldi	r31, 0x00	; 0
    5fc2:	c0 81       	ld	r28, Z
    5fc4:	d1 81       	ldd	r29, Z+1	; 0x01
    5fc6:	80 80       	ld	r8, Z
    5fc8:	91 80       	ldd	r9, Z+1	; 0x01
    5fca:	00 d0       	rcall	.+0      	; 0x5fcc <_Z6angle3i+0xa4a>
    5fcc:	0f 92       	push	r0
    5fce:	4d b6       	in	r4, 0x3d	; 61
    5fd0:	5e b6       	in	r5, 0x3e	; 62
    5fd2:	08 94       	sec
    5fd4:	41 1c       	adc	r4, r1
    5fd6:	51 1c       	adc	r5, r1
    5fd8:	88 27       	eor	r24, r24
    5fda:	77 fd       	sbrc	r23, 7
    5fdc:	80 95       	com	r24
    5fde:	98 2f       	mov	r25, r24
    5fe0:	0e 94 ee 79 	call	0xf3dc	; 0xf3dc <__floatsisf>
    5fe4:	7b 01       	movw	r14, r22
    5fe6:	8c 01       	movw	r16, r24
    5fe8:	ce 01       	movw	r24, r28
    5fea:	68 e2       	ldi	r22, 0x28	; 40
    5fec:	70 e0       	ldi	r23, 0x00	; 0
    5fee:	0e 94 05 7b 	call	0xf60a	; 0xf60a <__udivmodhi4>
    5ff2:	80 e0       	ldi	r24, 0x00	; 0
    5ff4:	90 e0       	ldi	r25, 0x00	; 0
    5ff6:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    5ffa:	5b 01       	movw	r10, r22
    5ffc:	6c 01       	movw	r12, r24
    5ffe:	96 94       	lsr	r9
    6000:	87 94       	ror	r8
    6002:	96 94       	lsr	r9
    6004:	87 94       	ror	r8
    6006:	96 94       	lsr	r9
    6008:	87 94       	ror	r8
    600a:	b4 01       	movw	r22, r8
    600c:	80 e0       	ldi	r24, 0x00	; 0
    600e:	90 e0       	ldi	r25, 0x00	; 0
    6010:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    6014:	f2 01       	movw	r30, r4
    6016:	60 83       	st	Z, r22
    6018:	71 83       	std	Z+1, r23	; 0x01
    601a:	82 83       	std	Z+2, r24	; 0x02
    601c:	93 83       	std	Z+3, r25	; 0x03
    601e:	c8 01       	movw	r24, r16
    6020:	b7 01       	movw	r22, r14
    6022:	20 e0       	ldi	r18, 0x00	; 0
    6024:	30 e0       	ldi	r19, 0x00	; 0
    6026:	a9 01       	movw	r20, r18
    6028:	0f 2e       	mov	r0, r31
    602a:	f0 e0       	ldi	r31, 0x00	; 0
    602c:	ef 2e       	mov	r14, r31
    602e:	f0 e0       	ldi	r31, 0x00	; 0
    6030:	ff 2e       	mov	r15, r31
    6032:	f4 e3       	ldi	r31, 0x34	; 52
    6034:	0f 2f       	mov	r16, r31
    6036:	f3 e4       	ldi	r31, 0x43	; 67
    6038:	1f 2f       	mov	r17, r31
    603a:	f0 2d       	mov	r31, r0
    603c:	0e 94 a0 08 	call	0x1140	; 0x1140 <_Z3mapddddd>
    6040:	0f 90       	pop	r0
    6042:	0f 90       	pop	r0
    6044:	0f 90       	pop	r0
    6046:	0f 90       	pop	r0
        OCR3A=ICR3-vAl;
    6048:	c0 91 96 00 	lds	r28, 0x0096
    604c:	d0 91 97 00 	lds	r29, 0x0097
      case 12:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
        OCR1B=ICR1-vAl;
        break;
      case 5:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    6050:	0e 94 bb 79 	call	0xf376	; 0xf376 <__fixsfsi>
        OCR3A=ICR3-vAl;
    6054:	c6 1b       	sub	r28, r22
    6056:	d7 0b       	sbc	r29, r23
    6058:	d0 93 99 00 	sts	0x0099, r29
    605c:	c0 93 98 00 	sts	0x0098, r28
    6060:	8f c2       	rjmp	.+1310   	; 0x6580 <_Z6angle3i+0xffe>
        break;
      case 2:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    6062:	e6 e8       	ldi	r30, 0x86	; 134
    6064:	f0 e0       	ldi	r31, 0x00	; 0
    6066:	c0 81       	ld	r28, Z
    6068:	d1 81       	ldd	r29, Z+1	; 0x01
    606a:	80 80       	ld	r8, Z
    606c:	91 80       	ldd	r9, Z+1	; 0x01
    606e:	00 d0       	rcall	.+0      	; 0x6070 <_Z6angle3i+0xaee>
    6070:	0f 92       	push	r0
    6072:	4d b6       	in	r4, 0x3d	; 61
    6074:	5e b6       	in	r5, 0x3e	; 62
    6076:	08 94       	sec
    6078:	41 1c       	adc	r4, r1
    607a:	51 1c       	adc	r5, r1
    607c:	88 27       	eor	r24, r24
    607e:	77 fd       	sbrc	r23, 7
    6080:	80 95       	com	r24
    6082:	98 2f       	mov	r25, r24
    6084:	0e 94 ee 79 	call	0xf3dc	; 0xf3dc <__floatsisf>
    6088:	7b 01       	movw	r14, r22
    608a:	8c 01       	movw	r16, r24
    608c:	ce 01       	movw	r24, r28
    608e:	68 e2       	ldi	r22, 0x28	; 40
    6090:	70 e0       	ldi	r23, 0x00	; 0
    6092:	0e 94 05 7b 	call	0xf60a	; 0xf60a <__udivmodhi4>
    6096:	80 e0       	ldi	r24, 0x00	; 0
    6098:	90 e0       	ldi	r25, 0x00	; 0
    609a:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    609e:	5b 01       	movw	r10, r22
    60a0:	6c 01       	movw	r12, r24
    60a2:	96 94       	lsr	r9
    60a4:	87 94       	ror	r8
    60a6:	96 94       	lsr	r9
    60a8:	87 94       	ror	r8
    60aa:	96 94       	lsr	r9
    60ac:	87 94       	ror	r8
    60ae:	b4 01       	movw	r22, r8
    60b0:	80 e0       	ldi	r24, 0x00	; 0
    60b2:	90 e0       	ldi	r25, 0x00	; 0
    60b4:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    60b8:	f2 01       	movw	r30, r4
    60ba:	60 83       	st	Z, r22
    60bc:	71 83       	std	Z+1, r23	; 0x01
    60be:	82 83       	std	Z+2, r24	; 0x02
    60c0:	93 83       	std	Z+3, r25	; 0x03
    60c2:	c8 01       	movw	r24, r16
    60c4:	b7 01       	movw	r22, r14
    60c6:	20 e0       	ldi	r18, 0x00	; 0
    60c8:	30 e0       	ldi	r19, 0x00	; 0
    60ca:	a9 01       	movw	r20, r18
    60cc:	0f 2e       	mov	r0, r31
    60ce:	f0 e0       	ldi	r31, 0x00	; 0
    60d0:	ef 2e       	mov	r14, r31
    60d2:	f0 e0       	ldi	r31, 0x00	; 0
    60d4:	ff 2e       	mov	r15, r31
    60d6:	f4 e3       	ldi	r31, 0x34	; 52
    60d8:	0f 2f       	mov	r16, r31
    60da:	f3 e4       	ldi	r31, 0x43	; 67
    60dc:	1f 2f       	mov	r17, r31
    60de:	f0 2d       	mov	r31, r0
    60e0:	0e 94 a0 08 	call	0x1140	; 0x1140 <_Z3mapddddd>
    60e4:	0f 90       	pop	r0
    60e6:	0f 90       	pop	r0
    60e8:	0f 90       	pop	r0
    60ea:	0f 90       	pop	r0
        OCR3B=ICR3-vAl;
    60ec:	c0 91 96 00 	lds	r28, 0x0096
    60f0:	d0 91 97 00 	lds	r29, 0x0097
      case 5:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
        OCR3A=ICR3-vAl;
        break;
      case 2:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    60f4:	0e 94 bb 79 	call	0xf376	; 0xf376 <__fixsfsi>
        OCR3B=ICR3-vAl;
    60f8:	c6 1b       	sub	r28, r22
    60fa:	d7 0b       	sbc	r29, r23
    60fc:	d0 93 9b 00 	sts	0x009B, r29
    6100:	c0 93 9a 00 	sts	0x009A, r28
    6104:	3d c2       	rjmp	.+1146   	; 0x6580 <_Z6angle3i+0xffe>
        break;
      case 3:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    6106:	e6 e8       	ldi	r30, 0x86	; 134
    6108:	f0 e0       	ldi	r31, 0x00	; 0
    610a:	c0 81       	ld	r28, Z
    610c:	d1 81       	ldd	r29, Z+1	; 0x01
    610e:	80 80       	ld	r8, Z
    6110:	91 80       	ldd	r9, Z+1	; 0x01
    6112:	00 d0       	rcall	.+0      	; 0x6114 <_Z6angle3i+0xb92>
    6114:	0f 92       	push	r0
    6116:	4d b6       	in	r4, 0x3d	; 61
    6118:	5e b6       	in	r5, 0x3e	; 62
    611a:	08 94       	sec
    611c:	41 1c       	adc	r4, r1
    611e:	51 1c       	adc	r5, r1
    6120:	88 27       	eor	r24, r24
    6122:	77 fd       	sbrc	r23, 7
    6124:	80 95       	com	r24
    6126:	98 2f       	mov	r25, r24
    6128:	0e 94 ee 79 	call	0xf3dc	; 0xf3dc <__floatsisf>
    612c:	7b 01       	movw	r14, r22
    612e:	8c 01       	movw	r16, r24
    6130:	ce 01       	movw	r24, r28
    6132:	68 e2       	ldi	r22, 0x28	; 40
    6134:	70 e0       	ldi	r23, 0x00	; 0
    6136:	0e 94 05 7b 	call	0xf60a	; 0xf60a <__udivmodhi4>
    613a:	80 e0       	ldi	r24, 0x00	; 0
    613c:	90 e0       	ldi	r25, 0x00	; 0
    613e:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    6142:	5b 01       	movw	r10, r22
    6144:	6c 01       	movw	r12, r24
    6146:	96 94       	lsr	r9
    6148:	87 94       	ror	r8
    614a:	96 94       	lsr	r9
    614c:	87 94       	ror	r8
    614e:	96 94       	lsr	r9
    6150:	87 94       	ror	r8
    6152:	b4 01       	movw	r22, r8
    6154:	80 e0       	ldi	r24, 0x00	; 0
    6156:	90 e0       	ldi	r25, 0x00	; 0
    6158:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    615c:	f2 01       	movw	r30, r4
    615e:	60 83       	st	Z, r22
    6160:	71 83       	std	Z+1, r23	; 0x01
    6162:	82 83       	std	Z+2, r24	; 0x02
    6164:	93 83       	std	Z+3, r25	; 0x03
    6166:	c8 01       	movw	r24, r16
    6168:	b7 01       	movw	r22, r14
    616a:	20 e0       	ldi	r18, 0x00	; 0
    616c:	30 e0       	ldi	r19, 0x00	; 0
    616e:	a9 01       	movw	r20, r18
    6170:	0f 2e       	mov	r0, r31
    6172:	f0 e0       	ldi	r31, 0x00	; 0
    6174:	ef 2e       	mov	r14, r31
    6176:	f0 e0       	ldi	r31, 0x00	; 0
    6178:	ff 2e       	mov	r15, r31
    617a:	f4 e3       	ldi	r31, 0x34	; 52
    617c:	0f 2f       	mov	r16, r31
    617e:	f3 e4       	ldi	r31, 0x43	; 67
    6180:	1f 2f       	mov	r17, r31
    6182:	f0 2d       	mov	r31, r0
    6184:	0e 94 a0 08 	call	0x1140	; 0x1140 <_Z3mapddddd>
    6188:	0f 90       	pop	r0
    618a:	0f 90       	pop	r0
    618c:	0f 90       	pop	r0
    618e:	0f 90       	pop	r0
        OCR3C=ICR3-vAl;
    6190:	c0 91 96 00 	lds	r28, 0x0096
    6194:	d0 91 97 00 	lds	r29, 0x0097
      case 2:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
        OCR3B=ICR3-vAl;
        break;
      case 3:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    6198:	0e 94 bb 79 	call	0xf376	; 0xf376 <__fixsfsi>
        OCR3C=ICR3-vAl;
    619c:	c6 1b       	sub	r28, r22
    619e:	d7 0b       	sbc	r29, r23
    61a0:	d0 93 9d 00 	sts	0x009D, r29
    61a4:	c0 93 9c 00 	sts	0x009C, r28
    61a8:	eb c1       	rjmp	.+982    	; 0x6580 <_Z6angle3i+0xffe>
        break;
      case 6:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    61aa:	e6 e8       	ldi	r30, 0x86	; 134
    61ac:	f0 e0       	ldi	r31, 0x00	; 0
    61ae:	c0 81       	ld	r28, Z
    61b0:	d1 81       	ldd	r29, Z+1	; 0x01
    61b2:	80 80       	ld	r8, Z
    61b4:	91 80       	ldd	r9, Z+1	; 0x01
    61b6:	00 d0       	rcall	.+0      	; 0x61b8 <_Z6angle3i+0xc36>
    61b8:	0f 92       	push	r0
    61ba:	4d b6       	in	r4, 0x3d	; 61
    61bc:	5e b6       	in	r5, 0x3e	; 62
    61be:	08 94       	sec
    61c0:	41 1c       	adc	r4, r1
    61c2:	51 1c       	adc	r5, r1
    61c4:	88 27       	eor	r24, r24
    61c6:	77 fd       	sbrc	r23, 7
    61c8:	80 95       	com	r24
    61ca:	98 2f       	mov	r25, r24
    61cc:	0e 94 ee 79 	call	0xf3dc	; 0xf3dc <__floatsisf>
    61d0:	7b 01       	movw	r14, r22
    61d2:	8c 01       	movw	r16, r24
    61d4:	ce 01       	movw	r24, r28
    61d6:	68 e2       	ldi	r22, 0x28	; 40
    61d8:	70 e0       	ldi	r23, 0x00	; 0
    61da:	0e 94 05 7b 	call	0xf60a	; 0xf60a <__udivmodhi4>
    61de:	80 e0       	ldi	r24, 0x00	; 0
    61e0:	90 e0       	ldi	r25, 0x00	; 0
    61e2:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    61e6:	5b 01       	movw	r10, r22
    61e8:	6c 01       	movw	r12, r24
    61ea:	96 94       	lsr	r9
    61ec:	87 94       	ror	r8
    61ee:	96 94       	lsr	r9
    61f0:	87 94       	ror	r8
    61f2:	96 94       	lsr	r9
    61f4:	87 94       	ror	r8
    61f6:	b4 01       	movw	r22, r8
    61f8:	80 e0       	ldi	r24, 0x00	; 0
    61fa:	90 e0       	ldi	r25, 0x00	; 0
    61fc:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    6200:	f2 01       	movw	r30, r4
    6202:	60 83       	st	Z, r22
    6204:	71 83       	std	Z+1, r23	; 0x01
    6206:	82 83       	std	Z+2, r24	; 0x02
    6208:	93 83       	std	Z+3, r25	; 0x03
    620a:	c8 01       	movw	r24, r16
    620c:	b7 01       	movw	r22, r14
    620e:	20 e0       	ldi	r18, 0x00	; 0
    6210:	30 e0       	ldi	r19, 0x00	; 0
    6212:	a9 01       	movw	r20, r18
    6214:	0f 2e       	mov	r0, r31
    6216:	f0 e0       	ldi	r31, 0x00	; 0
    6218:	ef 2e       	mov	r14, r31
    621a:	f0 e0       	ldi	r31, 0x00	; 0
    621c:	ff 2e       	mov	r15, r31
    621e:	f4 e3       	ldi	r31, 0x34	; 52
    6220:	0f 2f       	mov	r16, r31
    6222:	f3 e4       	ldi	r31, 0x43	; 67
    6224:	1f 2f       	mov	r17, r31
    6226:	f0 2d       	mov	r31, r0
    6228:	0e 94 a0 08 	call	0x1140	; 0x1140 <_Z3mapddddd>
    622c:	0f 90       	pop	r0
    622e:	0f 90       	pop	r0
    6230:	0f 90       	pop	r0
    6232:	0f 90       	pop	r0
        OCR4A=ICR4-vAl;
    6234:	c0 91 a6 00 	lds	r28, 0x00A6
    6238:	d0 91 a7 00 	lds	r29, 0x00A7
      case 3:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
        OCR3C=ICR3-vAl;
        break;
      case 6:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    623c:	0e 94 bb 79 	call	0xf376	; 0xf376 <__fixsfsi>
        OCR4A=ICR4-vAl;
    6240:	c6 1b       	sub	r28, r22
    6242:	d7 0b       	sbc	r29, r23
    6244:	d0 93 a9 00 	sts	0x00A9, r29
    6248:	c0 93 a8 00 	sts	0x00A8, r28
    624c:	99 c1       	rjmp	.+818    	; 0x6580 <_Z6angle3i+0xffe>
        break;
      case 7:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    624e:	e6 e8       	ldi	r30, 0x86	; 134
    6250:	f0 e0       	ldi	r31, 0x00	; 0
    6252:	c0 81       	ld	r28, Z
    6254:	d1 81       	ldd	r29, Z+1	; 0x01
    6256:	80 80       	ld	r8, Z
    6258:	91 80       	ldd	r9, Z+1	; 0x01
    625a:	00 d0       	rcall	.+0      	; 0x625c <_Z6angle3i+0xcda>
    625c:	0f 92       	push	r0
    625e:	4d b6       	in	r4, 0x3d	; 61
    6260:	5e b6       	in	r5, 0x3e	; 62
    6262:	08 94       	sec
    6264:	41 1c       	adc	r4, r1
    6266:	51 1c       	adc	r5, r1
    6268:	88 27       	eor	r24, r24
    626a:	77 fd       	sbrc	r23, 7
    626c:	80 95       	com	r24
    626e:	98 2f       	mov	r25, r24
    6270:	0e 94 ee 79 	call	0xf3dc	; 0xf3dc <__floatsisf>
    6274:	7b 01       	movw	r14, r22
    6276:	8c 01       	movw	r16, r24
    6278:	ce 01       	movw	r24, r28
    627a:	68 e2       	ldi	r22, 0x28	; 40
    627c:	70 e0       	ldi	r23, 0x00	; 0
    627e:	0e 94 05 7b 	call	0xf60a	; 0xf60a <__udivmodhi4>
    6282:	80 e0       	ldi	r24, 0x00	; 0
    6284:	90 e0       	ldi	r25, 0x00	; 0
    6286:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    628a:	5b 01       	movw	r10, r22
    628c:	6c 01       	movw	r12, r24
    628e:	96 94       	lsr	r9
    6290:	87 94       	ror	r8
    6292:	96 94       	lsr	r9
    6294:	87 94       	ror	r8
    6296:	96 94       	lsr	r9
    6298:	87 94       	ror	r8
    629a:	b4 01       	movw	r22, r8
    629c:	80 e0       	ldi	r24, 0x00	; 0
    629e:	90 e0       	ldi	r25, 0x00	; 0
    62a0:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    62a4:	f2 01       	movw	r30, r4
    62a6:	60 83       	st	Z, r22
    62a8:	71 83       	std	Z+1, r23	; 0x01
    62aa:	82 83       	std	Z+2, r24	; 0x02
    62ac:	93 83       	std	Z+3, r25	; 0x03
    62ae:	c8 01       	movw	r24, r16
    62b0:	b7 01       	movw	r22, r14
    62b2:	20 e0       	ldi	r18, 0x00	; 0
    62b4:	30 e0       	ldi	r19, 0x00	; 0
    62b6:	a9 01       	movw	r20, r18
    62b8:	0f 2e       	mov	r0, r31
    62ba:	f0 e0       	ldi	r31, 0x00	; 0
    62bc:	ef 2e       	mov	r14, r31
    62be:	f0 e0       	ldi	r31, 0x00	; 0
    62c0:	ff 2e       	mov	r15, r31
    62c2:	f4 e3       	ldi	r31, 0x34	; 52
    62c4:	0f 2f       	mov	r16, r31
    62c6:	f3 e4       	ldi	r31, 0x43	; 67
    62c8:	1f 2f       	mov	r17, r31
    62ca:	f0 2d       	mov	r31, r0
    62cc:	0e 94 a0 08 	call	0x1140	; 0x1140 <_Z3mapddddd>
    62d0:	0f 90       	pop	r0
    62d2:	0f 90       	pop	r0
    62d4:	0f 90       	pop	r0
    62d6:	0f 90       	pop	r0
        OCR4B=ICR4-vAl;
    62d8:	c0 91 a6 00 	lds	r28, 0x00A6
    62dc:	d0 91 a7 00 	lds	r29, 0x00A7
      case 6:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
        OCR4A=ICR4-vAl;
        break;
      case 7:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    62e0:	0e 94 bb 79 	call	0xf376	; 0xf376 <__fixsfsi>
        OCR4B=ICR4-vAl;
    62e4:	c6 1b       	sub	r28, r22
    62e6:	d7 0b       	sbc	r29, r23
    62e8:	d0 93 ab 00 	sts	0x00AB, r29
    62ec:	c0 93 aa 00 	sts	0x00AA, r28
    62f0:	47 c1       	rjmp	.+654    	; 0x6580 <_Z6angle3i+0xffe>
        break; 
      case 8:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    62f2:	e6 e8       	ldi	r30, 0x86	; 134
    62f4:	f0 e0       	ldi	r31, 0x00	; 0
    62f6:	c0 81       	ld	r28, Z
    62f8:	d1 81       	ldd	r29, Z+1	; 0x01
    62fa:	80 80       	ld	r8, Z
    62fc:	91 80       	ldd	r9, Z+1	; 0x01
    62fe:	00 d0       	rcall	.+0      	; 0x6300 <_Z6angle3i+0xd7e>
    6300:	0f 92       	push	r0
    6302:	4d b6       	in	r4, 0x3d	; 61
    6304:	5e b6       	in	r5, 0x3e	; 62
    6306:	08 94       	sec
    6308:	41 1c       	adc	r4, r1
    630a:	51 1c       	adc	r5, r1
    630c:	88 27       	eor	r24, r24
    630e:	77 fd       	sbrc	r23, 7
    6310:	80 95       	com	r24
    6312:	98 2f       	mov	r25, r24
    6314:	0e 94 ee 79 	call	0xf3dc	; 0xf3dc <__floatsisf>
    6318:	7b 01       	movw	r14, r22
    631a:	8c 01       	movw	r16, r24
    631c:	ce 01       	movw	r24, r28
    631e:	68 e2       	ldi	r22, 0x28	; 40
    6320:	70 e0       	ldi	r23, 0x00	; 0
    6322:	0e 94 05 7b 	call	0xf60a	; 0xf60a <__udivmodhi4>
    6326:	80 e0       	ldi	r24, 0x00	; 0
    6328:	90 e0       	ldi	r25, 0x00	; 0
    632a:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    632e:	5b 01       	movw	r10, r22
    6330:	6c 01       	movw	r12, r24
    6332:	96 94       	lsr	r9
    6334:	87 94       	ror	r8
    6336:	96 94       	lsr	r9
    6338:	87 94       	ror	r8
    633a:	96 94       	lsr	r9
    633c:	87 94       	ror	r8
    633e:	b4 01       	movw	r22, r8
    6340:	80 e0       	ldi	r24, 0x00	; 0
    6342:	90 e0       	ldi	r25, 0x00	; 0
    6344:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    6348:	f2 01       	movw	r30, r4
    634a:	60 83       	st	Z, r22
    634c:	71 83       	std	Z+1, r23	; 0x01
    634e:	82 83       	std	Z+2, r24	; 0x02
    6350:	93 83       	std	Z+3, r25	; 0x03
    6352:	c8 01       	movw	r24, r16
    6354:	b7 01       	movw	r22, r14
    6356:	20 e0       	ldi	r18, 0x00	; 0
    6358:	30 e0       	ldi	r19, 0x00	; 0
    635a:	a9 01       	movw	r20, r18
    635c:	0f 2e       	mov	r0, r31
    635e:	f0 e0       	ldi	r31, 0x00	; 0
    6360:	ef 2e       	mov	r14, r31
    6362:	f0 e0       	ldi	r31, 0x00	; 0
    6364:	ff 2e       	mov	r15, r31
    6366:	f4 e3       	ldi	r31, 0x34	; 52
    6368:	0f 2f       	mov	r16, r31
    636a:	f3 e4       	ldi	r31, 0x43	; 67
    636c:	1f 2f       	mov	r17, r31
    636e:	f0 2d       	mov	r31, r0
    6370:	0e 94 a0 08 	call	0x1140	; 0x1140 <_Z3mapddddd>
    6374:	0f 90       	pop	r0
    6376:	0f 90       	pop	r0
    6378:	0f 90       	pop	r0
    637a:	0f 90       	pop	r0
        OCR4C=ICR4-vAl;
    637c:	c0 91 a6 00 	lds	r28, 0x00A6
    6380:	d0 91 a7 00 	lds	r29, 0x00A7
      case 7:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
        OCR4B=ICR4-vAl;
        break; 
      case 8:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    6384:	0e 94 bb 79 	call	0xf376	; 0xf376 <__fixsfsi>
        OCR4C=ICR4-vAl;
    6388:	c6 1b       	sub	r28, r22
    638a:	d7 0b       	sbc	r29, r23
    638c:	d0 93 ad 00 	sts	0x00AD, r29
    6390:	c0 93 ac 00 	sts	0x00AC, r28
    6394:	f5 c0       	rjmp	.+490    	; 0x6580 <_Z6angle3i+0xffe>
        break;
      case 46:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    6396:	e6 e8       	ldi	r30, 0x86	; 134
    6398:	f0 e0       	ldi	r31, 0x00	; 0
    639a:	c0 81       	ld	r28, Z
    639c:	d1 81       	ldd	r29, Z+1	; 0x01
    639e:	80 80       	ld	r8, Z
    63a0:	91 80       	ldd	r9, Z+1	; 0x01
    63a2:	00 d0       	rcall	.+0      	; 0x63a4 <_Z6angle3i+0xe22>
    63a4:	0f 92       	push	r0
    63a6:	4d b6       	in	r4, 0x3d	; 61
    63a8:	5e b6       	in	r5, 0x3e	; 62
    63aa:	08 94       	sec
    63ac:	41 1c       	adc	r4, r1
    63ae:	51 1c       	adc	r5, r1
    63b0:	88 27       	eor	r24, r24
    63b2:	77 fd       	sbrc	r23, 7
    63b4:	80 95       	com	r24
    63b6:	98 2f       	mov	r25, r24
    63b8:	0e 94 ee 79 	call	0xf3dc	; 0xf3dc <__floatsisf>
    63bc:	7b 01       	movw	r14, r22
    63be:	8c 01       	movw	r16, r24
    63c0:	ce 01       	movw	r24, r28
    63c2:	68 e2       	ldi	r22, 0x28	; 40
    63c4:	70 e0       	ldi	r23, 0x00	; 0
    63c6:	0e 94 05 7b 	call	0xf60a	; 0xf60a <__udivmodhi4>
    63ca:	80 e0       	ldi	r24, 0x00	; 0
    63cc:	90 e0       	ldi	r25, 0x00	; 0
    63ce:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    63d2:	5b 01       	movw	r10, r22
    63d4:	6c 01       	movw	r12, r24
    63d6:	96 94       	lsr	r9
    63d8:	87 94       	ror	r8
    63da:	96 94       	lsr	r9
    63dc:	87 94       	ror	r8
    63de:	96 94       	lsr	r9
    63e0:	87 94       	ror	r8
    63e2:	b4 01       	movw	r22, r8
    63e4:	80 e0       	ldi	r24, 0x00	; 0
    63e6:	90 e0       	ldi	r25, 0x00	; 0
    63e8:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    63ec:	f2 01       	movw	r30, r4
    63ee:	60 83       	st	Z, r22
    63f0:	71 83       	std	Z+1, r23	; 0x01
    63f2:	82 83       	std	Z+2, r24	; 0x02
    63f4:	93 83       	std	Z+3, r25	; 0x03
    63f6:	c8 01       	movw	r24, r16
    63f8:	b7 01       	movw	r22, r14
    63fa:	20 e0       	ldi	r18, 0x00	; 0
    63fc:	30 e0       	ldi	r19, 0x00	; 0
    63fe:	a9 01       	movw	r20, r18
    6400:	0f 2e       	mov	r0, r31
    6402:	f0 e0       	ldi	r31, 0x00	; 0
    6404:	ef 2e       	mov	r14, r31
    6406:	f0 e0       	ldi	r31, 0x00	; 0
    6408:	ff 2e       	mov	r15, r31
    640a:	f4 e3       	ldi	r31, 0x34	; 52
    640c:	0f 2f       	mov	r16, r31
    640e:	f3 e4       	ldi	r31, 0x43	; 67
    6410:	1f 2f       	mov	r17, r31
    6412:	f0 2d       	mov	r31, r0
    6414:	0e 94 a0 08 	call	0x1140	; 0x1140 <_Z3mapddddd>
    6418:	0f 90       	pop	r0
    641a:	0f 90       	pop	r0
    641c:	0f 90       	pop	r0
    641e:	0f 90       	pop	r0
        OCR5A=ICR5-vAl;
    6420:	c0 91 26 01 	lds	r28, 0x0126
    6424:	d0 91 27 01 	lds	r29, 0x0127
      case 8:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
        OCR4C=ICR4-vAl;
        break;
      case 46:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    6428:	0e 94 bb 79 	call	0xf376	; 0xf376 <__fixsfsi>
        OCR5A=ICR5-vAl;
    642c:	c6 1b       	sub	r28, r22
    642e:	d7 0b       	sbc	r29, r23
    6430:	d0 93 29 01 	sts	0x0129, r29
    6434:	c0 93 28 01 	sts	0x0128, r28
    6438:	a3 c0       	rjmp	.+326    	; 0x6580 <_Z6angle3i+0xffe>
        break;
      case 45:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    643a:	e6 e8       	ldi	r30, 0x86	; 134
    643c:	f0 e0       	ldi	r31, 0x00	; 0
    643e:	c0 81       	ld	r28, Z
    6440:	d1 81       	ldd	r29, Z+1	; 0x01
    6442:	80 80       	ld	r8, Z
    6444:	91 80       	ldd	r9, Z+1	; 0x01
    6446:	00 d0       	rcall	.+0      	; 0x6448 <_Z6angle3i+0xec6>
    6448:	0f 92       	push	r0
    644a:	4d b6       	in	r4, 0x3d	; 61
    644c:	5e b6       	in	r5, 0x3e	; 62
    644e:	08 94       	sec
    6450:	41 1c       	adc	r4, r1
    6452:	51 1c       	adc	r5, r1
    6454:	88 27       	eor	r24, r24
    6456:	77 fd       	sbrc	r23, 7
    6458:	80 95       	com	r24
    645a:	98 2f       	mov	r25, r24
    645c:	0e 94 ee 79 	call	0xf3dc	; 0xf3dc <__floatsisf>
    6460:	7b 01       	movw	r14, r22
    6462:	8c 01       	movw	r16, r24
    6464:	ce 01       	movw	r24, r28
    6466:	68 e2       	ldi	r22, 0x28	; 40
    6468:	70 e0       	ldi	r23, 0x00	; 0
    646a:	0e 94 05 7b 	call	0xf60a	; 0xf60a <__udivmodhi4>
    646e:	80 e0       	ldi	r24, 0x00	; 0
    6470:	90 e0       	ldi	r25, 0x00	; 0
    6472:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    6476:	5b 01       	movw	r10, r22
    6478:	6c 01       	movw	r12, r24
    647a:	96 94       	lsr	r9
    647c:	87 94       	ror	r8
    647e:	96 94       	lsr	r9
    6480:	87 94       	ror	r8
    6482:	96 94       	lsr	r9
    6484:	87 94       	ror	r8
    6486:	b4 01       	movw	r22, r8
    6488:	80 e0       	ldi	r24, 0x00	; 0
    648a:	90 e0       	ldi	r25, 0x00	; 0
    648c:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    6490:	f2 01       	movw	r30, r4
    6492:	60 83       	st	Z, r22
    6494:	71 83       	std	Z+1, r23	; 0x01
    6496:	82 83       	std	Z+2, r24	; 0x02
    6498:	93 83       	std	Z+3, r25	; 0x03
    649a:	c8 01       	movw	r24, r16
    649c:	b7 01       	movw	r22, r14
    649e:	20 e0       	ldi	r18, 0x00	; 0
    64a0:	30 e0       	ldi	r19, 0x00	; 0
    64a2:	a9 01       	movw	r20, r18
    64a4:	0f 2e       	mov	r0, r31
    64a6:	f0 e0       	ldi	r31, 0x00	; 0
    64a8:	ef 2e       	mov	r14, r31
    64aa:	f0 e0       	ldi	r31, 0x00	; 0
    64ac:	ff 2e       	mov	r15, r31
    64ae:	f4 e3       	ldi	r31, 0x34	; 52
    64b0:	0f 2f       	mov	r16, r31
    64b2:	f3 e4       	ldi	r31, 0x43	; 67
    64b4:	1f 2f       	mov	r17, r31
    64b6:	f0 2d       	mov	r31, r0
    64b8:	0e 94 a0 08 	call	0x1140	; 0x1140 <_Z3mapddddd>
    64bc:	0f 90       	pop	r0
    64be:	0f 90       	pop	r0
    64c0:	0f 90       	pop	r0
    64c2:	0f 90       	pop	r0
        OCR5B=ICR5-vAl;
    64c4:	c0 91 26 01 	lds	r28, 0x0126
    64c8:	d0 91 27 01 	lds	r29, 0x0127
      case 46:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
        OCR5A=ICR5-vAl;
        break;
      case 45:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    64cc:	0e 94 bb 79 	call	0xf376	; 0xf376 <__fixsfsi>
        OCR5B=ICR5-vAl;
    64d0:	c6 1b       	sub	r28, r22
    64d2:	d7 0b       	sbc	r29, r23
    64d4:	d0 93 2b 01 	sts	0x012B, r29
    64d8:	c0 93 2a 01 	sts	0x012A, r28
    64dc:	51 c0       	rjmp	.+162    	; 0x6580 <_Z6angle3i+0xffe>
        break;
      case 44:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    64de:	e6 e8       	ldi	r30, 0x86	; 134
    64e0:	f0 e0       	ldi	r31, 0x00	; 0
    64e2:	c0 81       	ld	r28, Z
    64e4:	d1 81       	ldd	r29, Z+1	; 0x01
    64e6:	80 80       	ld	r8, Z
    64e8:	91 80       	ldd	r9, Z+1	; 0x01
    64ea:	00 d0       	rcall	.+0      	; 0x64ec <_Z6angle3i+0xf6a>
    64ec:	0f 92       	push	r0
    64ee:	4d b6       	in	r4, 0x3d	; 61
    64f0:	5e b6       	in	r5, 0x3e	; 62
    64f2:	08 94       	sec
    64f4:	41 1c       	adc	r4, r1
    64f6:	51 1c       	adc	r5, r1
    64f8:	88 27       	eor	r24, r24
    64fa:	77 fd       	sbrc	r23, 7
    64fc:	80 95       	com	r24
    64fe:	98 2f       	mov	r25, r24
    6500:	0e 94 ee 79 	call	0xf3dc	; 0xf3dc <__floatsisf>
    6504:	7b 01       	movw	r14, r22
    6506:	8c 01       	movw	r16, r24
    6508:	ce 01       	movw	r24, r28
    650a:	68 e2       	ldi	r22, 0x28	; 40
    650c:	70 e0       	ldi	r23, 0x00	; 0
    650e:	0e 94 05 7b 	call	0xf60a	; 0xf60a <__udivmodhi4>
    6512:	80 e0       	ldi	r24, 0x00	; 0
    6514:	90 e0       	ldi	r25, 0x00	; 0
    6516:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    651a:	5b 01       	movw	r10, r22
    651c:	6c 01       	movw	r12, r24
    651e:	96 94       	lsr	r9
    6520:	87 94       	ror	r8
    6522:	96 94       	lsr	r9
    6524:	87 94       	ror	r8
    6526:	96 94       	lsr	r9
    6528:	87 94       	ror	r8
    652a:	b4 01       	movw	r22, r8
    652c:	80 e0       	ldi	r24, 0x00	; 0
    652e:	90 e0       	ldi	r25, 0x00	; 0
    6530:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    6534:	f2 01       	movw	r30, r4
    6536:	60 83       	st	Z, r22
    6538:	71 83       	std	Z+1, r23	; 0x01
    653a:	82 83       	std	Z+2, r24	; 0x02
    653c:	93 83       	std	Z+3, r25	; 0x03
    653e:	c8 01       	movw	r24, r16
    6540:	b7 01       	movw	r22, r14
    6542:	20 e0       	ldi	r18, 0x00	; 0
    6544:	30 e0       	ldi	r19, 0x00	; 0
    6546:	a9 01       	movw	r20, r18
    6548:	0f 2e       	mov	r0, r31
    654a:	f0 e0       	ldi	r31, 0x00	; 0
    654c:	ef 2e       	mov	r14, r31
    654e:	f0 e0       	ldi	r31, 0x00	; 0
    6550:	ff 2e       	mov	r15, r31
    6552:	f4 e3       	ldi	r31, 0x34	; 52
    6554:	0f 2f       	mov	r16, r31
    6556:	f3 e4       	ldi	r31, 0x43	; 67
    6558:	1f 2f       	mov	r17, r31
    655a:	f0 2d       	mov	r31, r0
    655c:	0e 94 a0 08 	call	0x1140	; 0x1140 <_Z3mapddddd>
    6560:	0f 90       	pop	r0
    6562:	0f 90       	pop	r0
    6564:	0f 90       	pop	r0
    6566:	0f 90       	pop	r0
        OCR5C=ICR5-vAl;
    6568:	c0 91 26 01 	lds	r28, 0x0126
    656c:	d0 91 27 01 	lds	r29, 0x0127
      case 45:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
        OCR5B=ICR5-vAl;
        break;
      case 44:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    6570:	0e 94 bb 79 	call	0xf376	; 0xf376 <__fixsfsi>
        OCR5C=ICR5-vAl;
    6574:	c6 1b       	sub	r28, r22
    6576:	d7 0b       	sbc	r29, r23
    6578:	d0 93 2d 01 	sts	0x012D, r29
    657c:	c0 93 2c 01 	sts	0x012C, r28
		r.write(z);
    6580:	60 91 ce 02 	lds	r22, 0x02CE
    6584:	70 91 cf 02 	lds	r23, 0x02CF
     }
  }

  void write(int vAl)           //PIN=servo pin no. on mega,vAl=angle F_CPU for the servo at pin
  {
    switch(pIn)
    6588:	80 91 d6 02 	lds	r24, 0x02D6
    658c:	88 30       	cpi	r24, 0x08	; 8
    658e:	09 f4       	brne	.+2      	; 0x6592 <_Z6angle3i+0x1010>
    6590:	63 c2       	rjmp	.+1222   	; 0x6a58 <_Z6angle3i+0x14d6>
    6592:	89 30       	cpi	r24, 0x09	; 9
    6594:	98 f4       	brcc	.+38     	; 0x65bc <_Z6angle3i+0x103a>
    6596:	85 30       	cpi	r24, 0x05	; 5
    6598:	09 f4       	brne	.+2      	; 0x659c <_Z6angle3i+0x101a>
    659a:	c4 c0       	rjmp	.+392    	; 0x6724 <_Z6angle3i+0x11a2>
    659c:	86 30       	cpi	r24, 0x06	; 6
    659e:	38 f4       	brcc	.+14     	; 0x65ae <_Z6angle3i+0x102c>
    65a0:	82 30       	cpi	r24, 0x02	; 2
    65a2:	09 f4       	brne	.+2      	; 0x65a6 <_Z6angle3i+0x1024>
    65a4:	11 c1       	rjmp	.+546    	; 0x67c8 <_Z6angle3i+0x1246>
    65a6:	83 30       	cpi	r24, 0x03	; 3
    65a8:	09 f0       	breq	.+2      	; 0x65ac <_Z6angle3i+0x102a>
    65aa:	9d c3       	rjmp	.+1850   	; 0x6ce6 <_Z6angle3i+0x1764>
    65ac:	5f c1       	rjmp	.+702    	; 0x686c <_Z6angle3i+0x12ea>
    65ae:	86 30       	cpi	r24, 0x06	; 6
    65b0:	09 f4       	brne	.+2      	; 0x65b4 <_Z6angle3i+0x1032>
    65b2:	ae c1       	rjmp	.+860    	; 0x6910 <_Z6angle3i+0x138e>
    65b4:	87 30       	cpi	r24, 0x07	; 7
    65b6:	09 f0       	breq	.+2      	; 0x65ba <_Z6angle3i+0x1038>
    65b8:	96 c3       	rjmp	.+1836   	; 0x6ce6 <_Z6angle3i+0x1764>
    65ba:	fc c1       	rjmp	.+1016   	; 0x69b4 <_Z6angle3i+0x1432>
    65bc:	8c 32       	cpi	r24, 0x2C	; 44
    65be:	09 f4       	brne	.+2      	; 0x65c2 <_Z6angle3i+0x1040>
    65c0:	41 c3       	rjmp	.+1666   	; 0x6c44 <_Z6angle3i+0x16c2>
    65c2:	8d 32       	cpi	r24, 0x2D	; 45
    65c4:	30 f4       	brcc	.+12     	; 0x65d2 <_Z6angle3i+0x1050>
    65c6:	8b 30       	cpi	r24, 0x0B	; 11
    65c8:	59 f0       	breq	.+22     	; 0x65e0 <_Z6angle3i+0x105e>
    65ca:	8c 30       	cpi	r24, 0x0C	; 12
    65cc:	09 f0       	breq	.+2      	; 0x65d0 <_Z6angle3i+0x104e>
    65ce:	8b c3       	rjmp	.+1814   	; 0x6ce6 <_Z6angle3i+0x1764>
    65d0:	58 c0       	rjmp	.+176    	; 0x6682 <_Z6angle3i+0x1100>
    65d2:	8d 32       	cpi	r24, 0x2D	; 45
    65d4:	09 f4       	brne	.+2      	; 0x65d8 <_Z6angle3i+0x1056>
    65d6:	e4 c2       	rjmp	.+1480   	; 0x6ba0 <_Z6angle3i+0x161e>
    65d8:	8e 32       	cpi	r24, 0x2E	; 46
    65da:	09 f0       	breq	.+2      	; 0x65de <_Z6angle3i+0x105c>
    65dc:	84 c3       	rjmp	.+1800   	; 0x6ce6 <_Z6angle3i+0x1764>
    65de:	8e c2       	rjmp	.+1308   	; 0x6afc <_Z6angle3i+0x157a>
    {
     case 11:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    65e0:	c6 e8       	ldi	r28, 0x86	; 134
    65e2:	d0 e0       	ldi	r29, 0x00	; 0
    65e4:	08 81       	ld	r16, Y
    65e6:	19 81       	ldd	r17, Y+1	; 0x01
    65e8:	e8 80       	ld	r14, Y
    65ea:	f9 80       	ldd	r15, Y+1	; 0x01
    65ec:	00 d0       	rcall	.+0      	; 0x65ee <_Z6angle3i+0x106c>
    65ee:	0f 92       	push	r0
    65f0:	8d b6       	in	r8, 0x3d	; 61
    65f2:	9e b6       	in	r9, 0x3e	; 62
    65f4:	08 94       	sec
    65f6:	81 1c       	adc	r8, r1
    65f8:	91 1c       	adc	r9, r1
    65fa:	88 27       	eor	r24, r24
    65fc:	77 fd       	sbrc	r23, 7
    65fe:	80 95       	com	r24
    6600:	98 2f       	mov	r25, r24
    6602:	0e 94 ee 79 	call	0xf3dc	; 0xf3dc <__floatsisf>
    6606:	2b 01       	movw	r4, r22
    6608:	3c 01       	movw	r6, r24
    660a:	c8 01       	movw	r24, r16
    660c:	68 e2       	ldi	r22, 0x28	; 40
    660e:	70 e0       	ldi	r23, 0x00	; 0
    6610:	0e 94 05 7b 	call	0xf60a	; 0xf60a <__udivmodhi4>
    6614:	80 e0       	ldi	r24, 0x00	; 0
    6616:	90 e0       	ldi	r25, 0x00	; 0
    6618:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    661c:	5b 01       	movw	r10, r22
    661e:	6c 01       	movw	r12, r24
    6620:	f6 94       	lsr	r15
    6622:	e7 94       	ror	r14
    6624:	f6 94       	lsr	r15
    6626:	e7 94       	ror	r14
    6628:	f6 94       	lsr	r15
    662a:	e7 94       	ror	r14
    662c:	b7 01       	movw	r22, r14
    662e:	80 e0       	ldi	r24, 0x00	; 0
    6630:	90 e0       	ldi	r25, 0x00	; 0
    6632:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    6636:	f4 01       	movw	r30, r8
    6638:	60 83       	st	Z, r22
    663a:	71 83       	std	Z+1, r23	; 0x01
    663c:	82 83       	std	Z+2, r24	; 0x02
    663e:	93 83       	std	Z+3, r25	; 0x03
    6640:	c3 01       	movw	r24, r6
    6642:	b2 01       	movw	r22, r4
    6644:	20 e0       	ldi	r18, 0x00	; 0
    6646:	30 e0       	ldi	r19, 0x00	; 0
    6648:	a9 01       	movw	r20, r18
    664a:	0f 2e       	mov	r0, r31
    664c:	f0 e0       	ldi	r31, 0x00	; 0
    664e:	ef 2e       	mov	r14, r31
    6650:	f0 e0       	ldi	r31, 0x00	; 0
    6652:	ff 2e       	mov	r15, r31
    6654:	f4 e3       	ldi	r31, 0x34	; 52
    6656:	0f 2f       	mov	r16, r31
    6658:	f3 e4       	ldi	r31, 0x43	; 67
    665a:	1f 2f       	mov	r17, r31
    665c:	f0 2d       	mov	r31, r0
    665e:	0e 94 a0 08 	call	0x1140	; 0x1140 <_Z3mapddddd>
    6662:	0f 90       	pop	r0
    6664:	0f 90       	pop	r0
    6666:	0f 90       	pop	r0
    6668:	0f 90       	pop	r0
        OCR1A=ICR1-vAl;
    666a:	09 90       	ld	r0, Y+
    666c:	d8 81       	ld	r29, Y
    666e:	c0 2d       	mov	r28, r0
  void write(int vAl)           //PIN=servo pin no. on mega,vAl=angle F_CPU for the servo at pin
  {
    switch(pIn)
    {
     case 11:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    6670:	0e 94 bb 79 	call	0xf376	; 0xf376 <__fixsfsi>
        OCR1A=ICR1-vAl;
    6674:	c6 1b       	sub	r28, r22
    6676:	d7 0b       	sbc	r29, r23
    6678:	d0 93 89 00 	sts	0x0089, r29
    667c:	c0 93 88 00 	sts	0x0088, r28
    6680:	32 c3       	rjmp	.+1636   	; 0x6ce6 <_Z6angle3i+0x1764>
        break;
      case 12:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    6682:	c6 e8       	ldi	r28, 0x86	; 134
    6684:	d0 e0       	ldi	r29, 0x00	; 0
    6686:	08 81       	ld	r16, Y
    6688:	19 81       	ldd	r17, Y+1	; 0x01
    668a:	e8 80       	ld	r14, Y
    668c:	f9 80       	ldd	r15, Y+1	; 0x01
    668e:	00 d0       	rcall	.+0      	; 0x6690 <_Z6angle3i+0x110e>
    6690:	0f 92       	push	r0
    6692:	8d b6       	in	r8, 0x3d	; 61
    6694:	9e b6       	in	r9, 0x3e	; 62
    6696:	08 94       	sec
    6698:	81 1c       	adc	r8, r1
    669a:	91 1c       	adc	r9, r1
    669c:	88 27       	eor	r24, r24
    669e:	77 fd       	sbrc	r23, 7
    66a0:	80 95       	com	r24
    66a2:	98 2f       	mov	r25, r24
    66a4:	0e 94 ee 79 	call	0xf3dc	; 0xf3dc <__floatsisf>
    66a8:	2b 01       	movw	r4, r22
    66aa:	3c 01       	movw	r6, r24
    66ac:	c8 01       	movw	r24, r16
    66ae:	68 e2       	ldi	r22, 0x28	; 40
    66b0:	70 e0       	ldi	r23, 0x00	; 0
    66b2:	0e 94 05 7b 	call	0xf60a	; 0xf60a <__udivmodhi4>
    66b6:	80 e0       	ldi	r24, 0x00	; 0
    66b8:	90 e0       	ldi	r25, 0x00	; 0
    66ba:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    66be:	5b 01       	movw	r10, r22
    66c0:	6c 01       	movw	r12, r24
    66c2:	f6 94       	lsr	r15
    66c4:	e7 94       	ror	r14
    66c6:	f6 94       	lsr	r15
    66c8:	e7 94       	ror	r14
    66ca:	f6 94       	lsr	r15
    66cc:	e7 94       	ror	r14
    66ce:	b7 01       	movw	r22, r14
    66d0:	80 e0       	ldi	r24, 0x00	; 0
    66d2:	90 e0       	ldi	r25, 0x00	; 0
    66d4:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    66d8:	f4 01       	movw	r30, r8
    66da:	60 83       	st	Z, r22
    66dc:	71 83       	std	Z+1, r23	; 0x01
    66de:	82 83       	std	Z+2, r24	; 0x02
    66e0:	93 83       	std	Z+3, r25	; 0x03
    66e2:	c3 01       	movw	r24, r6
    66e4:	b2 01       	movw	r22, r4
    66e6:	20 e0       	ldi	r18, 0x00	; 0
    66e8:	30 e0       	ldi	r19, 0x00	; 0
    66ea:	a9 01       	movw	r20, r18
    66ec:	0f 2e       	mov	r0, r31
    66ee:	f0 e0       	ldi	r31, 0x00	; 0
    66f0:	ef 2e       	mov	r14, r31
    66f2:	f0 e0       	ldi	r31, 0x00	; 0
    66f4:	ff 2e       	mov	r15, r31
    66f6:	f4 e3       	ldi	r31, 0x34	; 52
    66f8:	0f 2f       	mov	r16, r31
    66fa:	f3 e4       	ldi	r31, 0x43	; 67
    66fc:	1f 2f       	mov	r17, r31
    66fe:	f0 2d       	mov	r31, r0
    6700:	0e 94 a0 08 	call	0x1140	; 0x1140 <_Z3mapddddd>
    6704:	0f 90       	pop	r0
    6706:	0f 90       	pop	r0
    6708:	0f 90       	pop	r0
    670a:	0f 90       	pop	r0
        OCR1B=ICR1-vAl;
    670c:	09 90       	ld	r0, Y+
    670e:	d8 81       	ld	r29, Y
    6710:	c0 2d       	mov	r28, r0
     case 11:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
        OCR1A=ICR1-vAl;
        break;
      case 12:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    6712:	0e 94 bb 79 	call	0xf376	; 0xf376 <__fixsfsi>
        OCR1B=ICR1-vAl;
    6716:	c6 1b       	sub	r28, r22
    6718:	d7 0b       	sbc	r29, r23
    671a:	d0 93 8b 00 	sts	0x008B, r29
    671e:	c0 93 8a 00 	sts	0x008A, r28
    6722:	e1 c2       	rjmp	.+1474   	; 0x6ce6 <_Z6angle3i+0x1764>
        break;
      case 5:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    6724:	e6 e8       	ldi	r30, 0x86	; 134
    6726:	f0 e0       	ldi	r31, 0x00	; 0
    6728:	c0 81       	ld	r28, Z
    672a:	d1 81       	ldd	r29, Z+1	; 0x01
    672c:	80 80       	ld	r8, Z
    672e:	91 80       	ldd	r9, Z+1	; 0x01
    6730:	00 d0       	rcall	.+0      	; 0x6732 <_Z6angle3i+0x11b0>
    6732:	0f 92       	push	r0
    6734:	4d b6       	in	r4, 0x3d	; 61
    6736:	5e b6       	in	r5, 0x3e	; 62
    6738:	08 94       	sec
    673a:	41 1c       	adc	r4, r1
    673c:	51 1c       	adc	r5, r1
    673e:	88 27       	eor	r24, r24
    6740:	77 fd       	sbrc	r23, 7
    6742:	80 95       	com	r24
    6744:	98 2f       	mov	r25, r24
    6746:	0e 94 ee 79 	call	0xf3dc	; 0xf3dc <__floatsisf>
    674a:	7b 01       	movw	r14, r22
    674c:	8c 01       	movw	r16, r24
    674e:	ce 01       	movw	r24, r28
    6750:	68 e2       	ldi	r22, 0x28	; 40
    6752:	70 e0       	ldi	r23, 0x00	; 0
    6754:	0e 94 05 7b 	call	0xf60a	; 0xf60a <__udivmodhi4>
    6758:	80 e0       	ldi	r24, 0x00	; 0
    675a:	90 e0       	ldi	r25, 0x00	; 0
    675c:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    6760:	5b 01       	movw	r10, r22
    6762:	6c 01       	movw	r12, r24
    6764:	96 94       	lsr	r9
    6766:	87 94       	ror	r8
    6768:	96 94       	lsr	r9
    676a:	87 94       	ror	r8
    676c:	96 94       	lsr	r9
    676e:	87 94       	ror	r8
    6770:	b4 01       	movw	r22, r8
    6772:	80 e0       	ldi	r24, 0x00	; 0
    6774:	90 e0       	ldi	r25, 0x00	; 0
    6776:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    677a:	f2 01       	movw	r30, r4
    677c:	60 83       	st	Z, r22
    677e:	71 83       	std	Z+1, r23	; 0x01
    6780:	82 83       	std	Z+2, r24	; 0x02
    6782:	93 83       	std	Z+3, r25	; 0x03
    6784:	c8 01       	movw	r24, r16
    6786:	b7 01       	movw	r22, r14
    6788:	20 e0       	ldi	r18, 0x00	; 0
    678a:	30 e0       	ldi	r19, 0x00	; 0
    678c:	a9 01       	movw	r20, r18
    678e:	0f 2e       	mov	r0, r31
    6790:	f0 e0       	ldi	r31, 0x00	; 0
    6792:	ef 2e       	mov	r14, r31
    6794:	f0 e0       	ldi	r31, 0x00	; 0
    6796:	ff 2e       	mov	r15, r31
    6798:	f4 e3       	ldi	r31, 0x34	; 52
    679a:	0f 2f       	mov	r16, r31
    679c:	f3 e4       	ldi	r31, 0x43	; 67
    679e:	1f 2f       	mov	r17, r31
    67a0:	f0 2d       	mov	r31, r0
    67a2:	0e 94 a0 08 	call	0x1140	; 0x1140 <_Z3mapddddd>
    67a6:	0f 90       	pop	r0
    67a8:	0f 90       	pop	r0
    67aa:	0f 90       	pop	r0
    67ac:	0f 90       	pop	r0
        OCR3A=ICR3-vAl;
    67ae:	c0 91 96 00 	lds	r28, 0x0096
    67b2:	d0 91 97 00 	lds	r29, 0x0097
      case 12:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
        OCR1B=ICR1-vAl;
        break;
      case 5:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    67b6:	0e 94 bb 79 	call	0xf376	; 0xf376 <__fixsfsi>
        OCR3A=ICR3-vAl;
    67ba:	c6 1b       	sub	r28, r22
    67bc:	d7 0b       	sbc	r29, r23
    67be:	d0 93 99 00 	sts	0x0099, r29
    67c2:	c0 93 98 00 	sts	0x0098, r28
    67c6:	8f c2       	rjmp	.+1310   	; 0x6ce6 <_Z6angle3i+0x1764>
        break;
      case 2:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    67c8:	e6 e8       	ldi	r30, 0x86	; 134
    67ca:	f0 e0       	ldi	r31, 0x00	; 0
    67cc:	c0 81       	ld	r28, Z
    67ce:	d1 81       	ldd	r29, Z+1	; 0x01
    67d0:	80 80       	ld	r8, Z
    67d2:	91 80       	ldd	r9, Z+1	; 0x01
    67d4:	00 d0       	rcall	.+0      	; 0x67d6 <_Z6angle3i+0x1254>
    67d6:	0f 92       	push	r0
    67d8:	4d b6       	in	r4, 0x3d	; 61
    67da:	5e b6       	in	r5, 0x3e	; 62
    67dc:	08 94       	sec
    67de:	41 1c       	adc	r4, r1
    67e0:	51 1c       	adc	r5, r1
    67e2:	88 27       	eor	r24, r24
    67e4:	77 fd       	sbrc	r23, 7
    67e6:	80 95       	com	r24
    67e8:	98 2f       	mov	r25, r24
    67ea:	0e 94 ee 79 	call	0xf3dc	; 0xf3dc <__floatsisf>
    67ee:	7b 01       	movw	r14, r22
    67f0:	8c 01       	movw	r16, r24
    67f2:	ce 01       	movw	r24, r28
    67f4:	68 e2       	ldi	r22, 0x28	; 40
    67f6:	70 e0       	ldi	r23, 0x00	; 0
    67f8:	0e 94 05 7b 	call	0xf60a	; 0xf60a <__udivmodhi4>
    67fc:	80 e0       	ldi	r24, 0x00	; 0
    67fe:	90 e0       	ldi	r25, 0x00	; 0
    6800:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    6804:	5b 01       	movw	r10, r22
    6806:	6c 01       	movw	r12, r24
    6808:	96 94       	lsr	r9
    680a:	87 94       	ror	r8
    680c:	96 94       	lsr	r9
    680e:	87 94       	ror	r8
    6810:	96 94       	lsr	r9
    6812:	87 94       	ror	r8
    6814:	b4 01       	movw	r22, r8
    6816:	80 e0       	ldi	r24, 0x00	; 0
    6818:	90 e0       	ldi	r25, 0x00	; 0
    681a:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    681e:	f2 01       	movw	r30, r4
    6820:	60 83       	st	Z, r22
    6822:	71 83       	std	Z+1, r23	; 0x01
    6824:	82 83       	std	Z+2, r24	; 0x02
    6826:	93 83       	std	Z+3, r25	; 0x03
    6828:	c8 01       	movw	r24, r16
    682a:	b7 01       	movw	r22, r14
    682c:	20 e0       	ldi	r18, 0x00	; 0
    682e:	30 e0       	ldi	r19, 0x00	; 0
    6830:	a9 01       	movw	r20, r18
    6832:	0f 2e       	mov	r0, r31
    6834:	f0 e0       	ldi	r31, 0x00	; 0
    6836:	ef 2e       	mov	r14, r31
    6838:	f0 e0       	ldi	r31, 0x00	; 0
    683a:	ff 2e       	mov	r15, r31
    683c:	f4 e3       	ldi	r31, 0x34	; 52
    683e:	0f 2f       	mov	r16, r31
    6840:	f3 e4       	ldi	r31, 0x43	; 67
    6842:	1f 2f       	mov	r17, r31
    6844:	f0 2d       	mov	r31, r0
    6846:	0e 94 a0 08 	call	0x1140	; 0x1140 <_Z3mapddddd>
    684a:	0f 90       	pop	r0
    684c:	0f 90       	pop	r0
    684e:	0f 90       	pop	r0
    6850:	0f 90       	pop	r0
        OCR3B=ICR3-vAl;
    6852:	c0 91 96 00 	lds	r28, 0x0096
    6856:	d0 91 97 00 	lds	r29, 0x0097
      case 5:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
        OCR3A=ICR3-vAl;
        break;
      case 2:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    685a:	0e 94 bb 79 	call	0xf376	; 0xf376 <__fixsfsi>
        OCR3B=ICR3-vAl;
    685e:	c6 1b       	sub	r28, r22
    6860:	d7 0b       	sbc	r29, r23
    6862:	d0 93 9b 00 	sts	0x009B, r29
    6866:	c0 93 9a 00 	sts	0x009A, r28
    686a:	3d c2       	rjmp	.+1146   	; 0x6ce6 <_Z6angle3i+0x1764>
        break;
      case 3:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    686c:	e6 e8       	ldi	r30, 0x86	; 134
    686e:	f0 e0       	ldi	r31, 0x00	; 0
    6870:	c0 81       	ld	r28, Z
    6872:	d1 81       	ldd	r29, Z+1	; 0x01
    6874:	80 80       	ld	r8, Z
    6876:	91 80       	ldd	r9, Z+1	; 0x01
    6878:	00 d0       	rcall	.+0      	; 0x687a <_Z6angle3i+0x12f8>
    687a:	0f 92       	push	r0
    687c:	4d b6       	in	r4, 0x3d	; 61
    687e:	5e b6       	in	r5, 0x3e	; 62
    6880:	08 94       	sec
    6882:	41 1c       	adc	r4, r1
    6884:	51 1c       	adc	r5, r1
    6886:	88 27       	eor	r24, r24
    6888:	77 fd       	sbrc	r23, 7
    688a:	80 95       	com	r24
    688c:	98 2f       	mov	r25, r24
    688e:	0e 94 ee 79 	call	0xf3dc	; 0xf3dc <__floatsisf>
    6892:	7b 01       	movw	r14, r22
    6894:	8c 01       	movw	r16, r24
    6896:	ce 01       	movw	r24, r28
    6898:	68 e2       	ldi	r22, 0x28	; 40
    689a:	70 e0       	ldi	r23, 0x00	; 0
    689c:	0e 94 05 7b 	call	0xf60a	; 0xf60a <__udivmodhi4>
    68a0:	80 e0       	ldi	r24, 0x00	; 0
    68a2:	90 e0       	ldi	r25, 0x00	; 0
    68a4:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    68a8:	5b 01       	movw	r10, r22
    68aa:	6c 01       	movw	r12, r24
    68ac:	96 94       	lsr	r9
    68ae:	87 94       	ror	r8
    68b0:	96 94       	lsr	r9
    68b2:	87 94       	ror	r8
    68b4:	96 94       	lsr	r9
    68b6:	87 94       	ror	r8
    68b8:	b4 01       	movw	r22, r8
    68ba:	80 e0       	ldi	r24, 0x00	; 0
    68bc:	90 e0       	ldi	r25, 0x00	; 0
    68be:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    68c2:	f2 01       	movw	r30, r4
    68c4:	60 83       	st	Z, r22
    68c6:	71 83       	std	Z+1, r23	; 0x01
    68c8:	82 83       	std	Z+2, r24	; 0x02
    68ca:	93 83       	std	Z+3, r25	; 0x03
    68cc:	c8 01       	movw	r24, r16
    68ce:	b7 01       	movw	r22, r14
    68d0:	20 e0       	ldi	r18, 0x00	; 0
    68d2:	30 e0       	ldi	r19, 0x00	; 0
    68d4:	a9 01       	movw	r20, r18
    68d6:	0f 2e       	mov	r0, r31
    68d8:	f0 e0       	ldi	r31, 0x00	; 0
    68da:	ef 2e       	mov	r14, r31
    68dc:	f0 e0       	ldi	r31, 0x00	; 0
    68de:	ff 2e       	mov	r15, r31
    68e0:	f4 e3       	ldi	r31, 0x34	; 52
    68e2:	0f 2f       	mov	r16, r31
    68e4:	f3 e4       	ldi	r31, 0x43	; 67
    68e6:	1f 2f       	mov	r17, r31
    68e8:	f0 2d       	mov	r31, r0
    68ea:	0e 94 a0 08 	call	0x1140	; 0x1140 <_Z3mapddddd>
    68ee:	0f 90       	pop	r0
    68f0:	0f 90       	pop	r0
    68f2:	0f 90       	pop	r0
    68f4:	0f 90       	pop	r0
        OCR3C=ICR3-vAl;
    68f6:	c0 91 96 00 	lds	r28, 0x0096
    68fa:	d0 91 97 00 	lds	r29, 0x0097
      case 2:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
        OCR3B=ICR3-vAl;
        break;
      case 3:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    68fe:	0e 94 bb 79 	call	0xf376	; 0xf376 <__fixsfsi>
        OCR3C=ICR3-vAl;
    6902:	c6 1b       	sub	r28, r22
    6904:	d7 0b       	sbc	r29, r23
    6906:	d0 93 9d 00 	sts	0x009D, r29
    690a:	c0 93 9c 00 	sts	0x009C, r28
    690e:	eb c1       	rjmp	.+982    	; 0x6ce6 <_Z6angle3i+0x1764>
        break;
      case 6:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    6910:	e6 e8       	ldi	r30, 0x86	; 134
    6912:	f0 e0       	ldi	r31, 0x00	; 0
    6914:	c0 81       	ld	r28, Z
    6916:	d1 81       	ldd	r29, Z+1	; 0x01
    6918:	80 80       	ld	r8, Z
    691a:	91 80       	ldd	r9, Z+1	; 0x01
    691c:	00 d0       	rcall	.+0      	; 0x691e <_Z6angle3i+0x139c>
    691e:	0f 92       	push	r0
    6920:	4d b6       	in	r4, 0x3d	; 61
    6922:	5e b6       	in	r5, 0x3e	; 62
    6924:	08 94       	sec
    6926:	41 1c       	adc	r4, r1
    6928:	51 1c       	adc	r5, r1
    692a:	88 27       	eor	r24, r24
    692c:	77 fd       	sbrc	r23, 7
    692e:	80 95       	com	r24
    6930:	98 2f       	mov	r25, r24
    6932:	0e 94 ee 79 	call	0xf3dc	; 0xf3dc <__floatsisf>
    6936:	7b 01       	movw	r14, r22
    6938:	8c 01       	movw	r16, r24
    693a:	ce 01       	movw	r24, r28
    693c:	68 e2       	ldi	r22, 0x28	; 40
    693e:	70 e0       	ldi	r23, 0x00	; 0
    6940:	0e 94 05 7b 	call	0xf60a	; 0xf60a <__udivmodhi4>
    6944:	80 e0       	ldi	r24, 0x00	; 0
    6946:	90 e0       	ldi	r25, 0x00	; 0
    6948:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    694c:	5b 01       	movw	r10, r22
    694e:	6c 01       	movw	r12, r24
    6950:	96 94       	lsr	r9
    6952:	87 94       	ror	r8
    6954:	96 94       	lsr	r9
    6956:	87 94       	ror	r8
    6958:	96 94       	lsr	r9
    695a:	87 94       	ror	r8
    695c:	b4 01       	movw	r22, r8
    695e:	80 e0       	ldi	r24, 0x00	; 0
    6960:	90 e0       	ldi	r25, 0x00	; 0
    6962:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    6966:	f2 01       	movw	r30, r4
    6968:	60 83       	st	Z, r22
    696a:	71 83       	std	Z+1, r23	; 0x01
    696c:	82 83       	std	Z+2, r24	; 0x02
    696e:	93 83       	std	Z+3, r25	; 0x03
    6970:	c8 01       	movw	r24, r16
    6972:	b7 01       	movw	r22, r14
    6974:	20 e0       	ldi	r18, 0x00	; 0
    6976:	30 e0       	ldi	r19, 0x00	; 0
    6978:	a9 01       	movw	r20, r18
    697a:	0f 2e       	mov	r0, r31
    697c:	f0 e0       	ldi	r31, 0x00	; 0
    697e:	ef 2e       	mov	r14, r31
    6980:	f0 e0       	ldi	r31, 0x00	; 0
    6982:	ff 2e       	mov	r15, r31
    6984:	f4 e3       	ldi	r31, 0x34	; 52
    6986:	0f 2f       	mov	r16, r31
    6988:	f3 e4       	ldi	r31, 0x43	; 67
    698a:	1f 2f       	mov	r17, r31
    698c:	f0 2d       	mov	r31, r0
    698e:	0e 94 a0 08 	call	0x1140	; 0x1140 <_Z3mapddddd>
    6992:	0f 90       	pop	r0
    6994:	0f 90       	pop	r0
    6996:	0f 90       	pop	r0
    6998:	0f 90       	pop	r0
        OCR4A=ICR4-vAl;
    699a:	c0 91 a6 00 	lds	r28, 0x00A6
    699e:	d0 91 a7 00 	lds	r29, 0x00A7
      case 3:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
        OCR3C=ICR3-vAl;
        break;
      case 6:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    69a2:	0e 94 bb 79 	call	0xf376	; 0xf376 <__fixsfsi>
        OCR4A=ICR4-vAl;
    69a6:	c6 1b       	sub	r28, r22
    69a8:	d7 0b       	sbc	r29, r23
    69aa:	d0 93 a9 00 	sts	0x00A9, r29
    69ae:	c0 93 a8 00 	sts	0x00A8, r28
    69b2:	99 c1       	rjmp	.+818    	; 0x6ce6 <_Z6angle3i+0x1764>
        break;
      case 7:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    69b4:	e6 e8       	ldi	r30, 0x86	; 134
    69b6:	f0 e0       	ldi	r31, 0x00	; 0
    69b8:	c0 81       	ld	r28, Z
    69ba:	d1 81       	ldd	r29, Z+1	; 0x01
    69bc:	80 80       	ld	r8, Z
    69be:	91 80       	ldd	r9, Z+1	; 0x01
    69c0:	00 d0       	rcall	.+0      	; 0x69c2 <_Z6angle3i+0x1440>
    69c2:	0f 92       	push	r0
    69c4:	4d b6       	in	r4, 0x3d	; 61
    69c6:	5e b6       	in	r5, 0x3e	; 62
    69c8:	08 94       	sec
    69ca:	41 1c       	adc	r4, r1
    69cc:	51 1c       	adc	r5, r1
    69ce:	88 27       	eor	r24, r24
    69d0:	77 fd       	sbrc	r23, 7
    69d2:	80 95       	com	r24
    69d4:	98 2f       	mov	r25, r24
    69d6:	0e 94 ee 79 	call	0xf3dc	; 0xf3dc <__floatsisf>
    69da:	7b 01       	movw	r14, r22
    69dc:	8c 01       	movw	r16, r24
    69de:	ce 01       	movw	r24, r28
    69e0:	68 e2       	ldi	r22, 0x28	; 40
    69e2:	70 e0       	ldi	r23, 0x00	; 0
    69e4:	0e 94 05 7b 	call	0xf60a	; 0xf60a <__udivmodhi4>
    69e8:	80 e0       	ldi	r24, 0x00	; 0
    69ea:	90 e0       	ldi	r25, 0x00	; 0
    69ec:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    69f0:	5b 01       	movw	r10, r22
    69f2:	6c 01       	movw	r12, r24
    69f4:	96 94       	lsr	r9
    69f6:	87 94       	ror	r8
    69f8:	96 94       	lsr	r9
    69fa:	87 94       	ror	r8
    69fc:	96 94       	lsr	r9
    69fe:	87 94       	ror	r8
    6a00:	b4 01       	movw	r22, r8
    6a02:	80 e0       	ldi	r24, 0x00	; 0
    6a04:	90 e0       	ldi	r25, 0x00	; 0
    6a06:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    6a0a:	f2 01       	movw	r30, r4
    6a0c:	60 83       	st	Z, r22
    6a0e:	71 83       	std	Z+1, r23	; 0x01
    6a10:	82 83       	std	Z+2, r24	; 0x02
    6a12:	93 83       	std	Z+3, r25	; 0x03
    6a14:	c8 01       	movw	r24, r16
    6a16:	b7 01       	movw	r22, r14
    6a18:	20 e0       	ldi	r18, 0x00	; 0
    6a1a:	30 e0       	ldi	r19, 0x00	; 0
    6a1c:	a9 01       	movw	r20, r18
    6a1e:	0f 2e       	mov	r0, r31
    6a20:	f0 e0       	ldi	r31, 0x00	; 0
    6a22:	ef 2e       	mov	r14, r31
    6a24:	f0 e0       	ldi	r31, 0x00	; 0
    6a26:	ff 2e       	mov	r15, r31
    6a28:	f4 e3       	ldi	r31, 0x34	; 52
    6a2a:	0f 2f       	mov	r16, r31
    6a2c:	f3 e4       	ldi	r31, 0x43	; 67
    6a2e:	1f 2f       	mov	r17, r31
    6a30:	f0 2d       	mov	r31, r0
    6a32:	0e 94 a0 08 	call	0x1140	; 0x1140 <_Z3mapddddd>
    6a36:	0f 90       	pop	r0
    6a38:	0f 90       	pop	r0
    6a3a:	0f 90       	pop	r0
    6a3c:	0f 90       	pop	r0
        OCR4B=ICR4-vAl;
    6a3e:	c0 91 a6 00 	lds	r28, 0x00A6
    6a42:	d0 91 a7 00 	lds	r29, 0x00A7
      case 6:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
        OCR4A=ICR4-vAl;
        break;
      case 7:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    6a46:	0e 94 bb 79 	call	0xf376	; 0xf376 <__fixsfsi>
        OCR4B=ICR4-vAl;
    6a4a:	c6 1b       	sub	r28, r22
    6a4c:	d7 0b       	sbc	r29, r23
    6a4e:	d0 93 ab 00 	sts	0x00AB, r29
    6a52:	c0 93 aa 00 	sts	0x00AA, r28
    6a56:	47 c1       	rjmp	.+654    	; 0x6ce6 <_Z6angle3i+0x1764>
        break; 
      case 8:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    6a58:	e6 e8       	ldi	r30, 0x86	; 134
    6a5a:	f0 e0       	ldi	r31, 0x00	; 0
    6a5c:	c0 81       	ld	r28, Z
    6a5e:	d1 81       	ldd	r29, Z+1	; 0x01
    6a60:	80 80       	ld	r8, Z
    6a62:	91 80       	ldd	r9, Z+1	; 0x01
    6a64:	00 d0       	rcall	.+0      	; 0x6a66 <_Z6angle3i+0x14e4>
    6a66:	0f 92       	push	r0
    6a68:	4d b6       	in	r4, 0x3d	; 61
    6a6a:	5e b6       	in	r5, 0x3e	; 62
    6a6c:	08 94       	sec
    6a6e:	41 1c       	adc	r4, r1
    6a70:	51 1c       	adc	r5, r1
    6a72:	88 27       	eor	r24, r24
    6a74:	77 fd       	sbrc	r23, 7
    6a76:	80 95       	com	r24
    6a78:	98 2f       	mov	r25, r24
    6a7a:	0e 94 ee 79 	call	0xf3dc	; 0xf3dc <__floatsisf>
    6a7e:	7b 01       	movw	r14, r22
    6a80:	8c 01       	movw	r16, r24
    6a82:	ce 01       	movw	r24, r28
    6a84:	68 e2       	ldi	r22, 0x28	; 40
    6a86:	70 e0       	ldi	r23, 0x00	; 0
    6a88:	0e 94 05 7b 	call	0xf60a	; 0xf60a <__udivmodhi4>
    6a8c:	80 e0       	ldi	r24, 0x00	; 0
    6a8e:	90 e0       	ldi	r25, 0x00	; 0
    6a90:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    6a94:	5b 01       	movw	r10, r22
    6a96:	6c 01       	movw	r12, r24
    6a98:	96 94       	lsr	r9
    6a9a:	87 94       	ror	r8
    6a9c:	96 94       	lsr	r9
    6a9e:	87 94       	ror	r8
    6aa0:	96 94       	lsr	r9
    6aa2:	87 94       	ror	r8
    6aa4:	b4 01       	movw	r22, r8
    6aa6:	80 e0       	ldi	r24, 0x00	; 0
    6aa8:	90 e0       	ldi	r25, 0x00	; 0
    6aaa:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    6aae:	f2 01       	movw	r30, r4
    6ab0:	60 83       	st	Z, r22
    6ab2:	71 83       	std	Z+1, r23	; 0x01
    6ab4:	82 83       	std	Z+2, r24	; 0x02
    6ab6:	93 83       	std	Z+3, r25	; 0x03
    6ab8:	c8 01       	movw	r24, r16
    6aba:	b7 01       	movw	r22, r14
    6abc:	20 e0       	ldi	r18, 0x00	; 0
    6abe:	30 e0       	ldi	r19, 0x00	; 0
    6ac0:	a9 01       	movw	r20, r18
    6ac2:	0f 2e       	mov	r0, r31
    6ac4:	f0 e0       	ldi	r31, 0x00	; 0
    6ac6:	ef 2e       	mov	r14, r31
    6ac8:	f0 e0       	ldi	r31, 0x00	; 0
    6aca:	ff 2e       	mov	r15, r31
    6acc:	f4 e3       	ldi	r31, 0x34	; 52
    6ace:	0f 2f       	mov	r16, r31
    6ad0:	f3 e4       	ldi	r31, 0x43	; 67
    6ad2:	1f 2f       	mov	r17, r31
    6ad4:	f0 2d       	mov	r31, r0
    6ad6:	0e 94 a0 08 	call	0x1140	; 0x1140 <_Z3mapddddd>
    6ada:	0f 90       	pop	r0
    6adc:	0f 90       	pop	r0
    6ade:	0f 90       	pop	r0
    6ae0:	0f 90       	pop	r0
        OCR4C=ICR4-vAl;
    6ae2:	c0 91 a6 00 	lds	r28, 0x00A6
    6ae6:	d0 91 a7 00 	lds	r29, 0x00A7
      case 7:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
        OCR4B=ICR4-vAl;
        break; 
      case 8:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    6aea:	0e 94 bb 79 	call	0xf376	; 0xf376 <__fixsfsi>
        OCR4C=ICR4-vAl;
    6aee:	c6 1b       	sub	r28, r22
    6af0:	d7 0b       	sbc	r29, r23
    6af2:	d0 93 ad 00 	sts	0x00AD, r29
    6af6:	c0 93 ac 00 	sts	0x00AC, r28
    6afa:	f5 c0       	rjmp	.+490    	; 0x6ce6 <_Z6angle3i+0x1764>
        break;
      case 46:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    6afc:	e6 e8       	ldi	r30, 0x86	; 134
    6afe:	f0 e0       	ldi	r31, 0x00	; 0
    6b00:	c0 81       	ld	r28, Z
    6b02:	d1 81       	ldd	r29, Z+1	; 0x01
    6b04:	80 80       	ld	r8, Z
    6b06:	91 80       	ldd	r9, Z+1	; 0x01
    6b08:	00 d0       	rcall	.+0      	; 0x6b0a <_Z6angle3i+0x1588>
    6b0a:	0f 92       	push	r0
    6b0c:	4d b6       	in	r4, 0x3d	; 61
    6b0e:	5e b6       	in	r5, 0x3e	; 62
    6b10:	08 94       	sec
    6b12:	41 1c       	adc	r4, r1
    6b14:	51 1c       	adc	r5, r1
    6b16:	88 27       	eor	r24, r24
    6b18:	77 fd       	sbrc	r23, 7
    6b1a:	80 95       	com	r24
    6b1c:	98 2f       	mov	r25, r24
    6b1e:	0e 94 ee 79 	call	0xf3dc	; 0xf3dc <__floatsisf>
    6b22:	7b 01       	movw	r14, r22
    6b24:	8c 01       	movw	r16, r24
    6b26:	ce 01       	movw	r24, r28
    6b28:	68 e2       	ldi	r22, 0x28	; 40
    6b2a:	70 e0       	ldi	r23, 0x00	; 0
    6b2c:	0e 94 05 7b 	call	0xf60a	; 0xf60a <__udivmodhi4>
    6b30:	80 e0       	ldi	r24, 0x00	; 0
    6b32:	90 e0       	ldi	r25, 0x00	; 0
    6b34:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    6b38:	5b 01       	movw	r10, r22
    6b3a:	6c 01       	movw	r12, r24
    6b3c:	96 94       	lsr	r9
    6b3e:	87 94       	ror	r8
    6b40:	96 94       	lsr	r9
    6b42:	87 94       	ror	r8
    6b44:	96 94       	lsr	r9
    6b46:	87 94       	ror	r8
    6b48:	b4 01       	movw	r22, r8
    6b4a:	80 e0       	ldi	r24, 0x00	; 0
    6b4c:	90 e0       	ldi	r25, 0x00	; 0
    6b4e:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    6b52:	f2 01       	movw	r30, r4
    6b54:	60 83       	st	Z, r22
    6b56:	71 83       	std	Z+1, r23	; 0x01
    6b58:	82 83       	std	Z+2, r24	; 0x02
    6b5a:	93 83       	std	Z+3, r25	; 0x03
    6b5c:	c8 01       	movw	r24, r16
    6b5e:	b7 01       	movw	r22, r14
    6b60:	20 e0       	ldi	r18, 0x00	; 0
    6b62:	30 e0       	ldi	r19, 0x00	; 0
    6b64:	a9 01       	movw	r20, r18
    6b66:	0f 2e       	mov	r0, r31
    6b68:	f0 e0       	ldi	r31, 0x00	; 0
    6b6a:	ef 2e       	mov	r14, r31
    6b6c:	f0 e0       	ldi	r31, 0x00	; 0
    6b6e:	ff 2e       	mov	r15, r31
    6b70:	f4 e3       	ldi	r31, 0x34	; 52
    6b72:	0f 2f       	mov	r16, r31
    6b74:	f3 e4       	ldi	r31, 0x43	; 67
    6b76:	1f 2f       	mov	r17, r31
    6b78:	f0 2d       	mov	r31, r0
    6b7a:	0e 94 a0 08 	call	0x1140	; 0x1140 <_Z3mapddddd>
    6b7e:	0f 90       	pop	r0
    6b80:	0f 90       	pop	r0
    6b82:	0f 90       	pop	r0
    6b84:	0f 90       	pop	r0
        OCR5A=ICR5-vAl;
    6b86:	c0 91 26 01 	lds	r28, 0x0126
    6b8a:	d0 91 27 01 	lds	r29, 0x0127
      case 8:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
        OCR4C=ICR4-vAl;
        break;
      case 46:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    6b8e:	0e 94 bb 79 	call	0xf376	; 0xf376 <__fixsfsi>
        OCR5A=ICR5-vAl;
    6b92:	c6 1b       	sub	r28, r22
    6b94:	d7 0b       	sbc	r29, r23
    6b96:	d0 93 29 01 	sts	0x0129, r29
    6b9a:	c0 93 28 01 	sts	0x0128, r28
    6b9e:	a3 c0       	rjmp	.+326    	; 0x6ce6 <_Z6angle3i+0x1764>
        break;
      case 45:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    6ba0:	e6 e8       	ldi	r30, 0x86	; 134
    6ba2:	f0 e0       	ldi	r31, 0x00	; 0
    6ba4:	c0 81       	ld	r28, Z
    6ba6:	d1 81       	ldd	r29, Z+1	; 0x01
    6ba8:	80 80       	ld	r8, Z
    6baa:	91 80       	ldd	r9, Z+1	; 0x01
    6bac:	00 d0       	rcall	.+0      	; 0x6bae <_Z6angle3i+0x162c>
    6bae:	0f 92       	push	r0
    6bb0:	4d b6       	in	r4, 0x3d	; 61
    6bb2:	5e b6       	in	r5, 0x3e	; 62
    6bb4:	08 94       	sec
    6bb6:	41 1c       	adc	r4, r1
    6bb8:	51 1c       	adc	r5, r1
    6bba:	88 27       	eor	r24, r24
    6bbc:	77 fd       	sbrc	r23, 7
    6bbe:	80 95       	com	r24
    6bc0:	98 2f       	mov	r25, r24
    6bc2:	0e 94 ee 79 	call	0xf3dc	; 0xf3dc <__floatsisf>
    6bc6:	7b 01       	movw	r14, r22
    6bc8:	8c 01       	movw	r16, r24
    6bca:	ce 01       	movw	r24, r28
    6bcc:	68 e2       	ldi	r22, 0x28	; 40
    6bce:	70 e0       	ldi	r23, 0x00	; 0
    6bd0:	0e 94 05 7b 	call	0xf60a	; 0xf60a <__udivmodhi4>
    6bd4:	80 e0       	ldi	r24, 0x00	; 0
    6bd6:	90 e0       	ldi	r25, 0x00	; 0
    6bd8:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    6bdc:	5b 01       	movw	r10, r22
    6bde:	6c 01       	movw	r12, r24
    6be0:	96 94       	lsr	r9
    6be2:	87 94       	ror	r8
    6be4:	96 94       	lsr	r9
    6be6:	87 94       	ror	r8
    6be8:	96 94       	lsr	r9
    6bea:	87 94       	ror	r8
    6bec:	b4 01       	movw	r22, r8
    6bee:	80 e0       	ldi	r24, 0x00	; 0
    6bf0:	90 e0       	ldi	r25, 0x00	; 0
    6bf2:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    6bf6:	f2 01       	movw	r30, r4
    6bf8:	60 83       	st	Z, r22
    6bfa:	71 83       	std	Z+1, r23	; 0x01
    6bfc:	82 83       	std	Z+2, r24	; 0x02
    6bfe:	93 83       	std	Z+3, r25	; 0x03
    6c00:	c8 01       	movw	r24, r16
    6c02:	b7 01       	movw	r22, r14
    6c04:	20 e0       	ldi	r18, 0x00	; 0
    6c06:	30 e0       	ldi	r19, 0x00	; 0
    6c08:	a9 01       	movw	r20, r18
    6c0a:	0f 2e       	mov	r0, r31
    6c0c:	f0 e0       	ldi	r31, 0x00	; 0
    6c0e:	ef 2e       	mov	r14, r31
    6c10:	f0 e0       	ldi	r31, 0x00	; 0
    6c12:	ff 2e       	mov	r15, r31
    6c14:	f4 e3       	ldi	r31, 0x34	; 52
    6c16:	0f 2f       	mov	r16, r31
    6c18:	f3 e4       	ldi	r31, 0x43	; 67
    6c1a:	1f 2f       	mov	r17, r31
    6c1c:	f0 2d       	mov	r31, r0
    6c1e:	0e 94 a0 08 	call	0x1140	; 0x1140 <_Z3mapddddd>
    6c22:	0f 90       	pop	r0
    6c24:	0f 90       	pop	r0
    6c26:	0f 90       	pop	r0
    6c28:	0f 90       	pop	r0
        OCR5B=ICR5-vAl;
    6c2a:	c0 91 26 01 	lds	r28, 0x0126
    6c2e:	d0 91 27 01 	lds	r29, 0x0127
      case 46:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
        OCR5A=ICR5-vAl;
        break;
      case 45:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    6c32:	0e 94 bb 79 	call	0xf376	; 0xf376 <__fixsfsi>
        OCR5B=ICR5-vAl;
    6c36:	c6 1b       	sub	r28, r22
    6c38:	d7 0b       	sbc	r29, r23
    6c3a:	d0 93 2b 01 	sts	0x012B, r29
    6c3e:	c0 93 2a 01 	sts	0x012A, r28
    6c42:	51 c0       	rjmp	.+162    	; 0x6ce6 <_Z6angle3i+0x1764>
        break;
      case 44:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    6c44:	e6 e8       	ldi	r30, 0x86	; 134
    6c46:	f0 e0       	ldi	r31, 0x00	; 0
    6c48:	c0 81       	ld	r28, Z
    6c4a:	d1 81       	ldd	r29, Z+1	; 0x01
    6c4c:	80 80       	ld	r8, Z
    6c4e:	91 80       	ldd	r9, Z+1	; 0x01
    6c50:	00 d0       	rcall	.+0      	; 0x6c52 <_Z6angle3i+0x16d0>
    6c52:	0f 92       	push	r0
    6c54:	4d b6       	in	r4, 0x3d	; 61
    6c56:	5e b6       	in	r5, 0x3e	; 62
    6c58:	08 94       	sec
    6c5a:	41 1c       	adc	r4, r1
    6c5c:	51 1c       	adc	r5, r1
    6c5e:	88 27       	eor	r24, r24
    6c60:	77 fd       	sbrc	r23, 7
    6c62:	80 95       	com	r24
    6c64:	98 2f       	mov	r25, r24
    6c66:	0e 94 ee 79 	call	0xf3dc	; 0xf3dc <__floatsisf>
    6c6a:	7b 01       	movw	r14, r22
    6c6c:	8c 01       	movw	r16, r24
    6c6e:	ce 01       	movw	r24, r28
    6c70:	68 e2       	ldi	r22, 0x28	; 40
    6c72:	70 e0       	ldi	r23, 0x00	; 0
    6c74:	0e 94 05 7b 	call	0xf60a	; 0xf60a <__udivmodhi4>
    6c78:	80 e0       	ldi	r24, 0x00	; 0
    6c7a:	90 e0       	ldi	r25, 0x00	; 0
    6c7c:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    6c80:	5b 01       	movw	r10, r22
    6c82:	6c 01       	movw	r12, r24
    6c84:	96 94       	lsr	r9
    6c86:	87 94       	ror	r8
    6c88:	96 94       	lsr	r9
    6c8a:	87 94       	ror	r8
    6c8c:	96 94       	lsr	r9
    6c8e:	87 94       	ror	r8
    6c90:	b4 01       	movw	r22, r8
    6c92:	80 e0       	ldi	r24, 0x00	; 0
    6c94:	90 e0       	ldi	r25, 0x00	; 0
    6c96:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    6c9a:	f2 01       	movw	r30, r4
    6c9c:	60 83       	st	Z, r22
    6c9e:	71 83       	std	Z+1, r23	; 0x01
    6ca0:	82 83       	std	Z+2, r24	; 0x02
    6ca2:	93 83       	std	Z+3, r25	; 0x03
    6ca4:	c8 01       	movw	r24, r16
    6ca6:	b7 01       	movw	r22, r14
    6ca8:	20 e0       	ldi	r18, 0x00	; 0
    6caa:	30 e0       	ldi	r19, 0x00	; 0
    6cac:	a9 01       	movw	r20, r18
    6cae:	0f 2e       	mov	r0, r31
    6cb0:	f0 e0       	ldi	r31, 0x00	; 0
    6cb2:	ef 2e       	mov	r14, r31
    6cb4:	f0 e0       	ldi	r31, 0x00	; 0
    6cb6:	ff 2e       	mov	r15, r31
    6cb8:	f4 e3       	ldi	r31, 0x34	; 52
    6cba:	0f 2f       	mov	r16, r31
    6cbc:	f3 e4       	ldi	r31, 0x43	; 67
    6cbe:	1f 2f       	mov	r17, r31
    6cc0:	f0 2d       	mov	r31, r0
    6cc2:	0e 94 a0 08 	call	0x1140	; 0x1140 <_Z3mapddddd>
    6cc6:	0f 90       	pop	r0
    6cc8:	0f 90       	pop	r0
    6cca:	0f 90       	pop	r0
    6ccc:	0f 90       	pop	r0
        OCR5C=ICR5-vAl;
    6cce:	c0 91 26 01 	lds	r28, 0x0126
    6cd2:	d0 91 27 01 	lds	r29, 0x0127
      case 45:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
        OCR5B=ICR5-vAl;
        break;
      case 44:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    6cd6:	0e 94 bb 79 	call	0xf376	; 0xf376 <__fixsfsi>
        OCR5C=ICR5-vAl;
    6cda:	c6 1b       	sub	r28, r22
    6cdc:	d7 0b       	sbc	r29, r23
    6cde:	d0 93 2d 01 	sts	0x012D, r29
    6ce2:	c0 93 2c 01 	sts	0x012C, r28
		s.write(w);
    6ce6:	60 91 d0 02 	lds	r22, 0x02D0
    6cea:	70 91 d1 02 	lds	r23, 0x02D1
     }
  }

  void write(int vAl)           //PIN=servo pin no. on mega,vAl=angle F_CPU for the servo at pin
  {
    switch(pIn)
    6cee:	80 91 d7 02 	lds	r24, 0x02D7
    6cf2:	88 30       	cpi	r24, 0x08	; 8
    6cf4:	09 f4       	brne	.+2      	; 0x6cf8 <_Z6angle3i+0x1776>
    6cf6:	63 c2       	rjmp	.+1222   	; 0x71be <_Z6angle3i+0x1c3c>
    6cf8:	89 30       	cpi	r24, 0x09	; 9
    6cfa:	98 f4       	brcc	.+38     	; 0x6d22 <_Z6angle3i+0x17a0>
    6cfc:	85 30       	cpi	r24, 0x05	; 5
    6cfe:	09 f4       	brne	.+2      	; 0x6d02 <_Z6angle3i+0x1780>
    6d00:	c4 c0       	rjmp	.+392    	; 0x6e8a <_Z6angle3i+0x1908>
    6d02:	86 30       	cpi	r24, 0x06	; 6
    6d04:	38 f4       	brcc	.+14     	; 0x6d14 <_Z6angle3i+0x1792>
    6d06:	82 30       	cpi	r24, 0x02	; 2
    6d08:	09 f4       	brne	.+2      	; 0x6d0c <_Z6angle3i+0x178a>
    6d0a:	11 c1       	rjmp	.+546    	; 0x6f2e <_Z6angle3i+0x19ac>
    6d0c:	83 30       	cpi	r24, 0x03	; 3
    6d0e:	09 f0       	breq	.+2      	; 0x6d12 <_Z6angle3i+0x1790>
    6d10:	9d c3       	rjmp	.+1850   	; 0x744c <_Z6angle3i+0x1eca>
    6d12:	5f c1       	rjmp	.+702    	; 0x6fd2 <_Z6angle3i+0x1a50>
    6d14:	86 30       	cpi	r24, 0x06	; 6
    6d16:	09 f4       	brne	.+2      	; 0x6d1a <_Z6angle3i+0x1798>
    6d18:	ae c1       	rjmp	.+860    	; 0x7076 <_Z6angle3i+0x1af4>
    6d1a:	87 30       	cpi	r24, 0x07	; 7
    6d1c:	09 f0       	breq	.+2      	; 0x6d20 <_Z6angle3i+0x179e>
    6d1e:	96 c3       	rjmp	.+1836   	; 0x744c <_Z6angle3i+0x1eca>
    6d20:	fc c1       	rjmp	.+1016   	; 0x711a <_Z6angle3i+0x1b98>
    6d22:	8c 32       	cpi	r24, 0x2C	; 44
    6d24:	09 f4       	brne	.+2      	; 0x6d28 <_Z6angle3i+0x17a6>
    6d26:	41 c3       	rjmp	.+1666   	; 0x73aa <_Z6angle3i+0x1e28>
    6d28:	8d 32       	cpi	r24, 0x2D	; 45
    6d2a:	30 f4       	brcc	.+12     	; 0x6d38 <_Z6angle3i+0x17b6>
    6d2c:	8b 30       	cpi	r24, 0x0B	; 11
    6d2e:	59 f0       	breq	.+22     	; 0x6d46 <_Z6angle3i+0x17c4>
    6d30:	8c 30       	cpi	r24, 0x0C	; 12
    6d32:	09 f0       	breq	.+2      	; 0x6d36 <_Z6angle3i+0x17b4>
    6d34:	8b c3       	rjmp	.+1814   	; 0x744c <_Z6angle3i+0x1eca>
    6d36:	58 c0       	rjmp	.+176    	; 0x6de8 <_Z6angle3i+0x1866>
    6d38:	8d 32       	cpi	r24, 0x2D	; 45
    6d3a:	09 f4       	brne	.+2      	; 0x6d3e <_Z6angle3i+0x17bc>
    6d3c:	e4 c2       	rjmp	.+1480   	; 0x7306 <_Z6angle3i+0x1d84>
    6d3e:	8e 32       	cpi	r24, 0x2E	; 46
    6d40:	09 f0       	breq	.+2      	; 0x6d44 <_Z6angle3i+0x17c2>
    6d42:	84 c3       	rjmp	.+1800   	; 0x744c <_Z6angle3i+0x1eca>
    6d44:	8e c2       	rjmp	.+1308   	; 0x7262 <_Z6angle3i+0x1ce0>
    {
     case 11:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    6d46:	c6 e8       	ldi	r28, 0x86	; 134
    6d48:	d0 e0       	ldi	r29, 0x00	; 0
    6d4a:	08 81       	ld	r16, Y
    6d4c:	19 81       	ldd	r17, Y+1	; 0x01
    6d4e:	e8 80       	ld	r14, Y
    6d50:	f9 80       	ldd	r15, Y+1	; 0x01
    6d52:	00 d0       	rcall	.+0      	; 0x6d54 <_Z6angle3i+0x17d2>
    6d54:	0f 92       	push	r0
    6d56:	8d b6       	in	r8, 0x3d	; 61
    6d58:	9e b6       	in	r9, 0x3e	; 62
    6d5a:	08 94       	sec
    6d5c:	81 1c       	adc	r8, r1
    6d5e:	91 1c       	adc	r9, r1
    6d60:	88 27       	eor	r24, r24
    6d62:	77 fd       	sbrc	r23, 7
    6d64:	80 95       	com	r24
    6d66:	98 2f       	mov	r25, r24
    6d68:	0e 94 ee 79 	call	0xf3dc	; 0xf3dc <__floatsisf>
    6d6c:	2b 01       	movw	r4, r22
    6d6e:	3c 01       	movw	r6, r24
    6d70:	c8 01       	movw	r24, r16
    6d72:	68 e2       	ldi	r22, 0x28	; 40
    6d74:	70 e0       	ldi	r23, 0x00	; 0
    6d76:	0e 94 05 7b 	call	0xf60a	; 0xf60a <__udivmodhi4>
    6d7a:	80 e0       	ldi	r24, 0x00	; 0
    6d7c:	90 e0       	ldi	r25, 0x00	; 0
    6d7e:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    6d82:	5b 01       	movw	r10, r22
    6d84:	6c 01       	movw	r12, r24
    6d86:	f6 94       	lsr	r15
    6d88:	e7 94       	ror	r14
    6d8a:	f6 94       	lsr	r15
    6d8c:	e7 94       	ror	r14
    6d8e:	f6 94       	lsr	r15
    6d90:	e7 94       	ror	r14
    6d92:	b7 01       	movw	r22, r14
    6d94:	80 e0       	ldi	r24, 0x00	; 0
    6d96:	90 e0       	ldi	r25, 0x00	; 0
    6d98:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    6d9c:	f4 01       	movw	r30, r8
    6d9e:	60 83       	st	Z, r22
    6da0:	71 83       	std	Z+1, r23	; 0x01
    6da2:	82 83       	std	Z+2, r24	; 0x02
    6da4:	93 83       	std	Z+3, r25	; 0x03
    6da6:	c3 01       	movw	r24, r6
    6da8:	b2 01       	movw	r22, r4
    6daa:	20 e0       	ldi	r18, 0x00	; 0
    6dac:	30 e0       	ldi	r19, 0x00	; 0
    6dae:	a9 01       	movw	r20, r18
    6db0:	0f 2e       	mov	r0, r31
    6db2:	f0 e0       	ldi	r31, 0x00	; 0
    6db4:	ef 2e       	mov	r14, r31
    6db6:	f0 e0       	ldi	r31, 0x00	; 0
    6db8:	ff 2e       	mov	r15, r31
    6dba:	f4 e3       	ldi	r31, 0x34	; 52
    6dbc:	0f 2f       	mov	r16, r31
    6dbe:	f3 e4       	ldi	r31, 0x43	; 67
    6dc0:	1f 2f       	mov	r17, r31
    6dc2:	f0 2d       	mov	r31, r0
    6dc4:	0e 94 a0 08 	call	0x1140	; 0x1140 <_Z3mapddddd>
    6dc8:	0f 90       	pop	r0
    6dca:	0f 90       	pop	r0
    6dcc:	0f 90       	pop	r0
    6dce:	0f 90       	pop	r0
        OCR1A=ICR1-vAl;
    6dd0:	09 90       	ld	r0, Y+
    6dd2:	d8 81       	ld	r29, Y
    6dd4:	c0 2d       	mov	r28, r0
  void write(int vAl)           //PIN=servo pin no. on mega,vAl=angle F_CPU for the servo at pin
  {
    switch(pIn)
    {
     case 11:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    6dd6:	0e 94 bb 79 	call	0xf376	; 0xf376 <__fixsfsi>
        OCR1A=ICR1-vAl;
    6dda:	c6 1b       	sub	r28, r22
    6ddc:	d7 0b       	sbc	r29, r23
    6dde:	d0 93 89 00 	sts	0x0089, r29
    6de2:	c0 93 88 00 	sts	0x0088, r28
    6de6:	32 c3       	rjmp	.+1636   	; 0x744c <_Z6angle3i+0x1eca>
        break;
      case 12:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    6de8:	c6 e8       	ldi	r28, 0x86	; 134
    6dea:	d0 e0       	ldi	r29, 0x00	; 0
    6dec:	08 81       	ld	r16, Y
    6dee:	19 81       	ldd	r17, Y+1	; 0x01
    6df0:	e8 80       	ld	r14, Y
    6df2:	f9 80       	ldd	r15, Y+1	; 0x01
    6df4:	00 d0       	rcall	.+0      	; 0x6df6 <_Z6angle3i+0x1874>
    6df6:	0f 92       	push	r0
    6df8:	8d b6       	in	r8, 0x3d	; 61
    6dfa:	9e b6       	in	r9, 0x3e	; 62
    6dfc:	08 94       	sec
    6dfe:	81 1c       	adc	r8, r1
    6e00:	91 1c       	adc	r9, r1
    6e02:	88 27       	eor	r24, r24
    6e04:	77 fd       	sbrc	r23, 7
    6e06:	80 95       	com	r24
    6e08:	98 2f       	mov	r25, r24
    6e0a:	0e 94 ee 79 	call	0xf3dc	; 0xf3dc <__floatsisf>
    6e0e:	2b 01       	movw	r4, r22
    6e10:	3c 01       	movw	r6, r24
    6e12:	c8 01       	movw	r24, r16
    6e14:	68 e2       	ldi	r22, 0x28	; 40
    6e16:	70 e0       	ldi	r23, 0x00	; 0
    6e18:	0e 94 05 7b 	call	0xf60a	; 0xf60a <__udivmodhi4>
    6e1c:	80 e0       	ldi	r24, 0x00	; 0
    6e1e:	90 e0       	ldi	r25, 0x00	; 0
    6e20:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    6e24:	5b 01       	movw	r10, r22
    6e26:	6c 01       	movw	r12, r24
    6e28:	f6 94       	lsr	r15
    6e2a:	e7 94       	ror	r14
    6e2c:	f6 94       	lsr	r15
    6e2e:	e7 94       	ror	r14
    6e30:	f6 94       	lsr	r15
    6e32:	e7 94       	ror	r14
    6e34:	b7 01       	movw	r22, r14
    6e36:	80 e0       	ldi	r24, 0x00	; 0
    6e38:	90 e0       	ldi	r25, 0x00	; 0
    6e3a:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    6e3e:	f4 01       	movw	r30, r8
    6e40:	60 83       	st	Z, r22
    6e42:	71 83       	std	Z+1, r23	; 0x01
    6e44:	82 83       	std	Z+2, r24	; 0x02
    6e46:	93 83       	std	Z+3, r25	; 0x03
    6e48:	c3 01       	movw	r24, r6
    6e4a:	b2 01       	movw	r22, r4
    6e4c:	20 e0       	ldi	r18, 0x00	; 0
    6e4e:	30 e0       	ldi	r19, 0x00	; 0
    6e50:	a9 01       	movw	r20, r18
    6e52:	0f 2e       	mov	r0, r31
    6e54:	f0 e0       	ldi	r31, 0x00	; 0
    6e56:	ef 2e       	mov	r14, r31
    6e58:	f0 e0       	ldi	r31, 0x00	; 0
    6e5a:	ff 2e       	mov	r15, r31
    6e5c:	f4 e3       	ldi	r31, 0x34	; 52
    6e5e:	0f 2f       	mov	r16, r31
    6e60:	f3 e4       	ldi	r31, 0x43	; 67
    6e62:	1f 2f       	mov	r17, r31
    6e64:	f0 2d       	mov	r31, r0
    6e66:	0e 94 a0 08 	call	0x1140	; 0x1140 <_Z3mapddddd>
    6e6a:	0f 90       	pop	r0
    6e6c:	0f 90       	pop	r0
    6e6e:	0f 90       	pop	r0
    6e70:	0f 90       	pop	r0
        OCR1B=ICR1-vAl;
    6e72:	09 90       	ld	r0, Y+
    6e74:	d8 81       	ld	r29, Y
    6e76:	c0 2d       	mov	r28, r0
     case 11:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
        OCR1A=ICR1-vAl;
        break;
      case 12:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    6e78:	0e 94 bb 79 	call	0xf376	; 0xf376 <__fixsfsi>
        OCR1B=ICR1-vAl;
    6e7c:	c6 1b       	sub	r28, r22
    6e7e:	d7 0b       	sbc	r29, r23
    6e80:	d0 93 8b 00 	sts	0x008B, r29
    6e84:	c0 93 8a 00 	sts	0x008A, r28
    6e88:	e1 c2       	rjmp	.+1474   	; 0x744c <_Z6angle3i+0x1eca>
        break;
      case 5:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    6e8a:	e6 e8       	ldi	r30, 0x86	; 134
    6e8c:	f0 e0       	ldi	r31, 0x00	; 0
    6e8e:	c0 81       	ld	r28, Z
    6e90:	d1 81       	ldd	r29, Z+1	; 0x01
    6e92:	80 80       	ld	r8, Z
    6e94:	91 80       	ldd	r9, Z+1	; 0x01
    6e96:	00 d0       	rcall	.+0      	; 0x6e98 <_Z6angle3i+0x1916>
    6e98:	0f 92       	push	r0
    6e9a:	4d b6       	in	r4, 0x3d	; 61
    6e9c:	5e b6       	in	r5, 0x3e	; 62
    6e9e:	08 94       	sec
    6ea0:	41 1c       	adc	r4, r1
    6ea2:	51 1c       	adc	r5, r1
    6ea4:	88 27       	eor	r24, r24
    6ea6:	77 fd       	sbrc	r23, 7
    6ea8:	80 95       	com	r24
    6eaa:	98 2f       	mov	r25, r24
    6eac:	0e 94 ee 79 	call	0xf3dc	; 0xf3dc <__floatsisf>
    6eb0:	7b 01       	movw	r14, r22
    6eb2:	8c 01       	movw	r16, r24
    6eb4:	ce 01       	movw	r24, r28
    6eb6:	68 e2       	ldi	r22, 0x28	; 40
    6eb8:	70 e0       	ldi	r23, 0x00	; 0
    6eba:	0e 94 05 7b 	call	0xf60a	; 0xf60a <__udivmodhi4>
    6ebe:	80 e0       	ldi	r24, 0x00	; 0
    6ec0:	90 e0       	ldi	r25, 0x00	; 0
    6ec2:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    6ec6:	5b 01       	movw	r10, r22
    6ec8:	6c 01       	movw	r12, r24
    6eca:	96 94       	lsr	r9
    6ecc:	87 94       	ror	r8
    6ece:	96 94       	lsr	r9
    6ed0:	87 94       	ror	r8
    6ed2:	96 94       	lsr	r9
    6ed4:	87 94       	ror	r8
    6ed6:	b4 01       	movw	r22, r8
    6ed8:	80 e0       	ldi	r24, 0x00	; 0
    6eda:	90 e0       	ldi	r25, 0x00	; 0
    6edc:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    6ee0:	f2 01       	movw	r30, r4
    6ee2:	60 83       	st	Z, r22
    6ee4:	71 83       	std	Z+1, r23	; 0x01
    6ee6:	82 83       	std	Z+2, r24	; 0x02
    6ee8:	93 83       	std	Z+3, r25	; 0x03
    6eea:	c8 01       	movw	r24, r16
    6eec:	b7 01       	movw	r22, r14
    6eee:	20 e0       	ldi	r18, 0x00	; 0
    6ef0:	30 e0       	ldi	r19, 0x00	; 0
    6ef2:	a9 01       	movw	r20, r18
    6ef4:	0f 2e       	mov	r0, r31
    6ef6:	f0 e0       	ldi	r31, 0x00	; 0
    6ef8:	ef 2e       	mov	r14, r31
    6efa:	f0 e0       	ldi	r31, 0x00	; 0
    6efc:	ff 2e       	mov	r15, r31
    6efe:	f4 e3       	ldi	r31, 0x34	; 52
    6f00:	0f 2f       	mov	r16, r31
    6f02:	f3 e4       	ldi	r31, 0x43	; 67
    6f04:	1f 2f       	mov	r17, r31
    6f06:	f0 2d       	mov	r31, r0
    6f08:	0e 94 a0 08 	call	0x1140	; 0x1140 <_Z3mapddddd>
    6f0c:	0f 90       	pop	r0
    6f0e:	0f 90       	pop	r0
    6f10:	0f 90       	pop	r0
    6f12:	0f 90       	pop	r0
        OCR3A=ICR3-vAl;
    6f14:	c0 91 96 00 	lds	r28, 0x0096
    6f18:	d0 91 97 00 	lds	r29, 0x0097
      case 12:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
        OCR1B=ICR1-vAl;
        break;
      case 5:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    6f1c:	0e 94 bb 79 	call	0xf376	; 0xf376 <__fixsfsi>
        OCR3A=ICR3-vAl;
    6f20:	c6 1b       	sub	r28, r22
    6f22:	d7 0b       	sbc	r29, r23
    6f24:	d0 93 99 00 	sts	0x0099, r29
    6f28:	c0 93 98 00 	sts	0x0098, r28
    6f2c:	8f c2       	rjmp	.+1310   	; 0x744c <_Z6angle3i+0x1eca>
        break;
      case 2:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    6f2e:	e6 e8       	ldi	r30, 0x86	; 134
    6f30:	f0 e0       	ldi	r31, 0x00	; 0
    6f32:	c0 81       	ld	r28, Z
    6f34:	d1 81       	ldd	r29, Z+1	; 0x01
    6f36:	80 80       	ld	r8, Z
    6f38:	91 80       	ldd	r9, Z+1	; 0x01
    6f3a:	00 d0       	rcall	.+0      	; 0x6f3c <_Z6angle3i+0x19ba>
    6f3c:	0f 92       	push	r0
    6f3e:	4d b6       	in	r4, 0x3d	; 61
    6f40:	5e b6       	in	r5, 0x3e	; 62
    6f42:	08 94       	sec
    6f44:	41 1c       	adc	r4, r1
    6f46:	51 1c       	adc	r5, r1
    6f48:	88 27       	eor	r24, r24
    6f4a:	77 fd       	sbrc	r23, 7
    6f4c:	80 95       	com	r24
    6f4e:	98 2f       	mov	r25, r24
    6f50:	0e 94 ee 79 	call	0xf3dc	; 0xf3dc <__floatsisf>
    6f54:	7b 01       	movw	r14, r22
    6f56:	8c 01       	movw	r16, r24
    6f58:	ce 01       	movw	r24, r28
    6f5a:	68 e2       	ldi	r22, 0x28	; 40
    6f5c:	70 e0       	ldi	r23, 0x00	; 0
    6f5e:	0e 94 05 7b 	call	0xf60a	; 0xf60a <__udivmodhi4>
    6f62:	80 e0       	ldi	r24, 0x00	; 0
    6f64:	90 e0       	ldi	r25, 0x00	; 0
    6f66:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    6f6a:	5b 01       	movw	r10, r22
    6f6c:	6c 01       	movw	r12, r24
    6f6e:	96 94       	lsr	r9
    6f70:	87 94       	ror	r8
    6f72:	96 94       	lsr	r9
    6f74:	87 94       	ror	r8
    6f76:	96 94       	lsr	r9
    6f78:	87 94       	ror	r8
    6f7a:	b4 01       	movw	r22, r8
    6f7c:	80 e0       	ldi	r24, 0x00	; 0
    6f7e:	90 e0       	ldi	r25, 0x00	; 0
    6f80:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    6f84:	f2 01       	movw	r30, r4
    6f86:	60 83       	st	Z, r22
    6f88:	71 83       	std	Z+1, r23	; 0x01
    6f8a:	82 83       	std	Z+2, r24	; 0x02
    6f8c:	93 83       	std	Z+3, r25	; 0x03
    6f8e:	c8 01       	movw	r24, r16
    6f90:	b7 01       	movw	r22, r14
    6f92:	20 e0       	ldi	r18, 0x00	; 0
    6f94:	30 e0       	ldi	r19, 0x00	; 0
    6f96:	a9 01       	movw	r20, r18
    6f98:	0f 2e       	mov	r0, r31
    6f9a:	f0 e0       	ldi	r31, 0x00	; 0
    6f9c:	ef 2e       	mov	r14, r31
    6f9e:	f0 e0       	ldi	r31, 0x00	; 0
    6fa0:	ff 2e       	mov	r15, r31
    6fa2:	f4 e3       	ldi	r31, 0x34	; 52
    6fa4:	0f 2f       	mov	r16, r31
    6fa6:	f3 e4       	ldi	r31, 0x43	; 67
    6fa8:	1f 2f       	mov	r17, r31
    6faa:	f0 2d       	mov	r31, r0
    6fac:	0e 94 a0 08 	call	0x1140	; 0x1140 <_Z3mapddddd>
    6fb0:	0f 90       	pop	r0
    6fb2:	0f 90       	pop	r0
    6fb4:	0f 90       	pop	r0
    6fb6:	0f 90       	pop	r0
        OCR3B=ICR3-vAl;
    6fb8:	c0 91 96 00 	lds	r28, 0x0096
    6fbc:	d0 91 97 00 	lds	r29, 0x0097
      case 5:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
        OCR3A=ICR3-vAl;
        break;
      case 2:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    6fc0:	0e 94 bb 79 	call	0xf376	; 0xf376 <__fixsfsi>
        OCR3B=ICR3-vAl;
    6fc4:	c6 1b       	sub	r28, r22
    6fc6:	d7 0b       	sbc	r29, r23
    6fc8:	d0 93 9b 00 	sts	0x009B, r29
    6fcc:	c0 93 9a 00 	sts	0x009A, r28
    6fd0:	3d c2       	rjmp	.+1146   	; 0x744c <_Z6angle3i+0x1eca>
        break;
      case 3:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    6fd2:	e6 e8       	ldi	r30, 0x86	; 134
    6fd4:	f0 e0       	ldi	r31, 0x00	; 0
    6fd6:	c0 81       	ld	r28, Z
    6fd8:	d1 81       	ldd	r29, Z+1	; 0x01
    6fda:	80 80       	ld	r8, Z
    6fdc:	91 80       	ldd	r9, Z+1	; 0x01
    6fde:	00 d0       	rcall	.+0      	; 0x6fe0 <_Z6angle3i+0x1a5e>
    6fe0:	0f 92       	push	r0
    6fe2:	4d b6       	in	r4, 0x3d	; 61
    6fe4:	5e b6       	in	r5, 0x3e	; 62
    6fe6:	08 94       	sec
    6fe8:	41 1c       	adc	r4, r1
    6fea:	51 1c       	adc	r5, r1
    6fec:	88 27       	eor	r24, r24
    6fee:	77 fd       	sbrc	r23, 7
    6ff0:	80 95       	com	r24
    6ff2:	98 2f       	mov	r25, r24
    6ff4:	0e 94 ee 79 	call	0xf3dc	; 0xf3dc <__floatsisf>
    6ff8:	7b 01       	movw	r14, r22
    6ffa:	8c 01       	movw	r16, r24
    6ffc:	ce 01       	movw	r24, r28
    6ffe:	68 e2       	ldi	r22, 0x28	; 40
    7000:	70 e0       	ldi	r23, 0x00	; 0
    7002:	0e 94 05 7b 	call	0xf60a	; 0xf60a <__udivmodhi4>
    7006:	80 e0       	ldi	r24, 0x00	; 0
    7008:	90 e0       	ldi	r25, 0x00	; 0
    700a:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    700e:	5b 01       	movw	r10, r22
    7010:	6c 01       	movw	r12, r24
    7012:	96 94       	lsr	r9
    7014:	87 94       	ror	r8
    7016:	96 94       	lsr	r9
    7018:	87 94       	ror	r8
    701a:	96 94       	lsr	r9
    701c:	87 94       	ror	r8
    701e:	b4 01       	movw	r22, r8
    7020:	80 e0       	ldi	r24, 0x00	; 0
    7022:	90 e0       	ldi	r25, 0x00	; 0
    7024:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    7028:	f2 01       	movw	r30, r4
    702a:	60 83       	st	Z, r22
    702c:	71 83       	std	Z+1, r23	; 0x01
    702e:	82 83       	std	Z+2, r24	; 0x02
    7030:	93 83       	std	Z+3, r25	; 0x03
    7032:	c8 01       	movw	r24, r16
    7034:	b7 01       	movw	r22, r14
    7036:	20 e0       	ldi	r18, 0x00	; 0
    7038:	30 e0       	ldi	r19, 0x00	; 0
    703a:	a9 01       	movw	r20, r18
    703c:	0f 2e       	mov	r0, r31
    703e:	f0 e0       	ldi	r31, 0x00	; 0
    7040:	ef 2e       	mov	r14, r31
    7042:	f0 e0       	ldi	r31, 0x00	; 0
    7044:	ff 2e       	mov	r15, r31
    7046:	f4 e3       	ldi	r31, 0x34	; 52
    7048:	0f 2f       	mov	r16, r31
    704a:	f3 e4       	ldi	r31, 0x43	; 67
    704c:	1f 2f       	mov	r17, r31
    704e:	f0 2d       	mov	r31, r0
    7050:	0e 94 a0 08 	call	0x1140	; 0x1140 <_Z3mapddddd>
    7054:	0f 90       	pop	r0
    7056:	0f 90       	pop	r0
    7058:	0f 90       	pop	r0
    705a:	0f 90       	pop	r0
        OCR3C=ICR3-vAl;
    705c:	c0 91 96 00 	lds	r28, 0x0096
    7060:	d0 91 97 00 	lds	r29, 0x0097
      case 2:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
        OCR3B=ICR3-vAl;
        break;
      case 3:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    7064:	0e 94 bb 79 	call	0xf376	; 0xf376 <__fixsfsi>
        OCR3C=ICR3-vAl;
    7068:	c6 1b       	sub	r28, r22
    706a:	d7 0b       	sbc	r29, r23
    706c:	d0 93 9d 00 	sts	0x009D, r29
    7070:	c0 93 9c 00 	sts	0x009C, r28
    7074:	eb c1       	rjmp	.+982    	; 0x744c <_Z6angle3i+0x1eca>
        break;
      case 6:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    7076:	e6 e8       	ldi	r30, 0x86	; 134
    7078:	f0 e0       	ldi	r31, 0x00	; 0
    707a:	c0 81       	ld	r28, Z
    707c:	d1 81       	ldd	r29, Z+1	; 0x01
    707e:	80 80       	ld	r8, Z
    7080:	91 80       	ldd	r9, Z+1	; 0x01
    7082:	00 d0       	rcall	.+0      	; 0x7084 <_Z6angle3i+0x1b02>
    7084:	0f 92       	push	r0
    7086:	4d b6       	in	r4, 0x3d	; 61
    7088:	5e b6       	in	r5, 0x3e	; 62
    708a:	08 94       	sec
    708c:	41 1c       	adc	r4, r1
    708e:	51 1c       	adc	r5, r1
    7090:	88 27       	eor	r24, r24
    7092:	77 fd       	sbrc	r23, 7
    7094:	80 95       	com	r24
    7096:	98 2f       	mov	r25, r24
    7098:	0e 94 ee 79 	call	0xf3dc	; 0xf3dc <__floatsisf>
    709c:	7b 01       	movw	r14, r22
    709e:	8c 01       	movw	r16, r24
    70a0:	ce 01       	movw	r24, r28
    70a2:	68 e2       	ldi	r22, 0x28	; 40
    70a4:	70 e0       	ldi	r23, 0x00	; 0
    70a6:	0e 94 05 7b 	call	0xf60a	; 0xf60a <__udivmodhi4>
    70aa:	80 e0       	ldi	r24, 0x00	; 0
    70ac:	90 e0       	ldi	r25, 0x00	; 0
    70ae:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    70b2:	5b 01       	movw	r10, r22
    70b4:	6c 01       	movw	r12, r24
    70b6:	96 94       	lsr	r9
    70b8:	87 94       	ror	r8
    70ba:	96 94       	lsr	r9
    70bc:	87 94       	ror	r8
    70be:	96 94       	lsr	r9
    70c0:	87 94       	ror	r8
    70c2:	b4 01       	movw	r22, r8
    70c4:	80 e0       	ldi	r24, 0x00	; 0
    70c6:	90 e0       	ldi	r25, 0x00	; 0
    70c8:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    70cc:	f2 01       	movw	r30, r4
    70ce:	60 83       	st	Z, r22
    70d0:	71 83       	std	Z+1, r23	; 0x01
    70d2:	82 83       	std	Z+2, r24	; 0x02
    70d4:	93 83       	std	Z+3, r25	; 0x03
    70d6:	c8 01       	movw	r24, r16
    70d8:	b7 01       	movw	r22, r14
    70da:	20 e0       	ldi	r18, 0x00	; 0
    70dc:	30 e0       	ldi	r19, 0x00	; 0
    70de:	a9 01       	movw	r20, r18
    70e0:	0f 2e       	mov	r0, r31
    70e2:	f0 e0       	ldi	r31, 0x00	; 0
    70e4:	ef 2e       	mov	r14, r31
    70e6:	f0 e0       	ldi	r31, 0x00	; 0
    70e8:	ff 2e       	mov	r15, r31
    70ea:	f4 e3       	ldi	r31, 0x34	; 52
    70ec:	0f 2f       	mov	r16, r31
    70ee:	f3 e4       	ldi	r31, 0x43	; 67
    70f0:	1f 2f       	mov	r17, r31
    70f2:	f0 2d       	mov	r31, r0
    70f4:	0e 94 a0 08 	call	0x1140	; 0x1140 <_Z3mapddddd>
    70f8:	0f 90       	pop	r0
    70fa:	0f 90       	pop	r0
    70fc:	0f 90       	pop	r0
    70fe:	0f 90       	pop	r0
        OCR4A=ICR4-vAl;
    7100:	c0 91 a6 00 	lds	r28, 0x00A6
    7104:	d0 91 a7 00 	lds	r29, 0x00A7
      case 3:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
        OCR3C=ICR3-vAl;
        break;
      case 6:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    7108:	0e 94 bb 79 	call	0xf376	; 0xf376 <__fixsfsi>
        OCR4A=ICR4-vAl;
    710c:	c6 1b       	sub	r28, r22
    710e:	d7 0b       	sbc	r29, r23
    7110:	d0 93 a9 00 	sts	0x00A9, r29
    7114:	c0 93 a8 00 	sts	0x00A8, r28
    7118:	99 c1       	rjmp	.+818    	; 0x744c <_Z6angle3i+0x1eca>
        break;
      case 7:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    711a:	e6 e8       	ldi	r30, 0x86	; 134
    711c:	f0 e0       	ldi	r31, 0x00	; 0
    711e:	c0 81       	ld	r28, Z
    7120:	d1 81       	ldd	r29, Z+1	; 0x01
    7122:	80 80       	ld	r8, Z
    7124:	91 80       	ldd	r9, Z+1	; 0x01
    7126:	00 d0       	rcall	.+0      	; 0x7128 <_Z6angle3i+0x1ba6>
    7128:	0f 92       	push	r0
    712a:	4d b6       	in	r4, 0x3d	; 61
    712c:	5e b6       	in	r5, 0x3e	; 62
    712e:	08 94       	sec
    7130:	41 1c       	adc	r4, r1
    7132:	51 1c       	adc	r5, r1
    7134:	88 27       	eor	r24, r24
    7136:	77 fd       	sbrc	r23, 7
    7138:	80 95       	com	r24
    713a:	98 2f       	mov	r25, r24
    713c:	0e 94 ee 79 	call	0xf3dc	; 0xf3dc <__floatsisf>
    7140:	7b 01       	movw	r14, r22
    7142:	8c 01       	movw	r16, r24
    7144:	ce 01       	movw	r24, r28
    7146:	68 e2       	ldi	r22, 0x28	; 40
    7148:	70 e0       	ldi	r23, 0x00	; 0
    714a:	0e 94 05 7b 	call	0xf60a	; 0xf60a <__udivmodhi4>
    714e:	80 e0       	ldi	r24, 0x00	; 0
    7150:	90 e0       	ldi	r25, 0x00	; 0
    7152:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    7156:	5b 01       	movw	r10, r22
    7158:	6c 01       	movw	r12, r24
    715a:	96 94       	lsr	r9
    715c:	87 94       	ror	r8
    715e:	96 94       	lsr	r9
    7160:	87 94       	ror	r8
    7162:	96 94       	lsr	r9
    7164:	87 94       	ror	r8
    7166:	b4 01       	movw	r22, r8
    7168:	80 e0       	ldi	r24, 0x00	; 0
    716a:	90 e0       	ldi	r25, 0x00	; 0
    716c:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    7170:	f2 01       	movw	r30, r4
    7172:	60 83       	st	Z, r22
    7174:	71 83       	std	Z+1, r23	; 0x01
    7176:	82 83       	std	Z+2, r24	; 0x02
    7178:	93 83       	std	Z+3, r25	; 0x03
    717a:	c8 01       	movw	r24, r16
    717c:	b7 01       	movw	r22, r14
    717e:	20 e0       	ldi	r18, 0x00	; 0
    7180:	30 e0       	ldi	r19, 0x00	; 0
    7182:	a9 01       	movw	r20, r18
    7184:	0f 2e       	mov	r0, r31
    7186:	f0 e0       	ldi	r31, 0x00	; 0
    7188:	ef 2e       	mov	r14, r31
    718a:	f0 e0       	ldi	r31, 0x00	; 0
    718c:	ff 2e       	mov	r15, r31
    718e:	f4 e3       	ldi	r31, 0x34	; 52
    7190:	0f 2f       	mov	r16, r31
    7192:	f3 e4       	ldi	r31, 0x43	; 67
    7194:	1f 2f       	mov	r17, r31
    7196:	f0 2d       	mov	r31, r0
    7198:	0e 94 a0 08 	call	0x1140	; 0x1140 <_Z3mapddddd>
    719c:	0f 90       	pop	r0
    719e:	0f 90       	pop	r0
    71a0:	0f 90       	pop	r0
    71a2:	0f 90       	pop	r0
        OCR4B=ICR4-vAl;
    71a4:	c0 91 a6 00 	lds	r28, 0x00A6
    71a8:	d0 91 a7 00 	lds	r29, 0x00A7
      case 6:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
        OCR4A=ICR4-vAl;
        break;
      case 7:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    71ac:	0e 94 bb 79 	call	0xf376	; 0xf376 <__fixsfsi>
        OCR4B=ICR4-vAl;
    71b0:	c6 1b       	sub	r28, r22
    71b2:	d7 0b       	sbc	r29, r23
    71b4:	d0 93 ab 00 	sts	0x00AB, r29
    71b8:	c0 93 aa 00 	sts	0x00AA, r28
    71bc:	47 c1       	rjmp	.+654    	; 0x744c <_Z6angle3i+0x1eca>
        break; 
      case 8:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    71be:	e6 e8       	ldi	r30, 0x86	; 134
    71c0:	f0 e0       	ldi	r31, 0x00	; 0
    71c2:	c0 81       	ld	r28, Z
    71c4:	d1 81       	ldd	r29, Z+1	; 0x01
    71c6:	80 80       	ld	r8, Z
    71c8:	91 80       	ldd	r9, Z+1	; 0x01
    71ca:	00 d0       	rcall	.+0      	; 0x71cc <_Z6angle3i+0x1c4a>
    71cc:	0f 92       	push	r0
    71ce:	4d b6       	in	r4, 0x3d	; 61
    71d0:	5e b6       	in	r5, 0x3e	; 62
    71d2:	08 94       	sec
    71d4:	41 1c       	adc	r4, r1
    71d6:	51 1c       	adc	r5, r1
    71d8:	88 27       	eor	r24, r24
    71da:	77 fd       	sbrc	r23, 7
    71dc:	80 95       	com	r24
    71de:	98 2f       	mov	r25, r24
    71e0:	0e 94 ee 79 	call	0xf3dc	; 0xf3dc <__floatsisf>
    71e4:	7b 01       	movw	r14, r22
    71e6:	8c 01       	movw	r16, r24
    71e8:	ce 01       	movw	r24, r28
    71ea:	68 e2       	ldi	r22, 0x28	; 40
    71ec:	70 e0       	ldi	r23, 0x00	; 0
    71ee:	0e 94 05 7b 	call	0xf60a	; 0xf60a <__udivmodhi4>
    71f2:	80 e0       	ldi	r24, 0x00	; 0
    71f4:	90 e0       	ldi	r25, 0x00	; 0
    71f6:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    71fa:	5b 01       	movw	r10, r22
    71fc:	6c 01       	movw	r12, r24
    71fe:	96 94       	lsr	r9
    7200:	87 94       	ror	r8
    7202:	96 94       	lsr	r9
    7204:	87 94       	ror	r8
    7206:	96 94       	lsr	r9
    7208:	87 94       	ror	r8
    720a:	b4 01       	movw	r22, r8
    720c:	80 e0       	ldi	r24, 0x00	; 0
    720e:	90 e0       	ldi	r25, 0x00	; 0
    7210:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    7214:	f2 01       	movw	r30, r4
    7216:	60 83       	st	Z, r22
    7218:	71 83       	std	Z+1, r23	; 0x01
    721a:	82 83       	std	Z+2, r24	; 0x02
    721c:	93 83       	std	Z+3, r25	; 0x03
    721e:	c8 01       	movw	r24, r16
    7220:	b7 01       	movw	r22, r14
    7222:	20 e0       	ldi	r18, 0x00	; 0
    7224:	30 e0       	ldi	r19, 0x00	; 0
    7226:	a9 01       	movw	r20, r18
    7228:	0f 2e       	mov	r0, r31
    722a:	f0 e0       	ldi	r31, 0x00	; 0
    722c:	ef 2e       	mov	r14, r31
    722e:	f0 e0       	ldi	r31, 0x00	; 0
    7230:	ff 2e       	mov	r15, r31
    7232:	f4 e3       	ldi	r31, 0x34	; 52
    7234:	0f 2f       	mov	r16, r31
    7236:	f3 e4       	ldi	r31, 0x43	; 67
    7238:	1f 2f       	mov	r17, r31
    723a:	f0 2d       	mov	r31, r0
    723c:	0e 94 a0 08 	call	0x1140	; 0x1140 <_Z3mapddddd>
    7240:	0f 90       	pop	r0
    7242:	0f 90       	pop	r0
    7244:	0f 90       	pop	r0
    7246:	0f 90       	pop	r0
        OCR4C=ICR4-vAl;
    7248:	c0 91 a6 00 	lds	r28, 0x00A6
    724c:	d0 91 a7 00 	lds	r29, 0x00A7
      case 7:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
        OCR4B=ICR4-vAl;
        break; 
      case 8:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    7250:	0e 94 bb 79 	call	0xf376	; 0xf376 <__fixsfsi>
        OCR4C=ICR4-vAl;
    7254:	c6 1b       	sub	r28, r22
    7256:	d7 0b       	sbc	r29, r23
    7258:	d0 93 ad 00 	sts	0x00AD, r29
    725c:	c0 93 ac 00 	sts	0x00AC, r28
    7260:	f5 c0       	rjmp	.+490    	; 0x744c <_Z6angle3i+0x1eca>
        break;
      case 46:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    7262:	e6 e8       	ldi	r30, 0x86	; 134
    7264:	f0 e0       	ldi	r31, 0x00	; 0
    7266:	c0 81       	ld	r28, Z
    7268:	d1 81       	ldd	r29, Z+1	; 0x01
    726a:	80 80       	ld	r8, Z
    726c:	91 80       	ldd	r9, Z+1	; 0x01
    726e:	00 d0       	rcall	.+0      	; 0x7270 <_Z6angle3i+0x1cee>
    7270:	0f 92       	push	r0
    7272:	4d b6       	in	r4, 0x3d	; 61
    7274:	5e b6       	in	r5, 0x3e	; 62
    7276:	08 94       	sec
    7278:	41 1c       	adc	r4, r1
    727a:	51 1c       	adc	r5, r1
    727c:	88 27       	eor	r24, r24
    727e:	77 fd       	sbrc	r23, 7
    7280:	80 95       	com	r24
    7282:	98 2f       	mov	r25, r24
    7284:	0e 94 ee 79 	call	0xf3dc	; 0xf3dc <__floatsisf>
    7288:	7b 01       	movw	r14, r22
    728a:	8c 01       	movw	r16, r24
    728c:	ce 01       	movw	r24, r28
    728e:	68 e2       	ldi	r22, 0x28	; 40
    7290:	70 e0       	ldi	r23, 0x00	; 0
    7292:	0e 94 05 7b 	call	0xf60a	; 0xf60a <__udivmodhi4>
    7296:	80 e0       	ldi	r24, 0x00	; 0
    7298:	90 e0       	ldi	r25, 0x00	; 0
    729a:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    729e:	5b 01       	movw	r10, r22
    72a0:	6c 01       	movw	r12, r24
    72a2:	96 94       	lsr	r9
    72a4:	87 94       	ror	r8
    72a6:	96 94       	lsr	r9
    72a8:	87 94       	ror	r8
    72aa:	96 94       	lsr	r9
    72ac:	87 94       	ror	r8
    72ae:	b4 01       	movw	r22, r8
    72b0:	80 e0       	ldi	r24, 0x00	; 0
    72b2:	90 e0       	ldi	r25, 0x00	; 0
    72b4:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    72b8:	f2 01       	movw	r30, r4
    72ba:	60 83       	st	Z, r22
    72bc:	71 83       	std	Z+1, r23	; 0x01
    72be:	82 83       	std	Z+2, r24	; 0x02
    72c0:	93 83       	std	Z+3, r25	; 0x03
    72c2:	c8 01       	movw	r24, r16
    72c4:	b7 01       	movw	r22, r14
    72c6:	20 e0       	ldi	r18, 0x00	; 0
    72c8:	30 e0       	ldi	r19, 0x00	; 0
    72ca:	a9 01       	movw	r20, r18
    72cc:	0f 2e       	mov	r0, r31
    72ce:	f0 e0       	ldi	r31, 0x00	; 0
    72d0:	ef 2e       	mov	r14, r31
    72d2:	f0 e0       	ldi	r31, 0x00	; 0
    72d4:	ff 2e       	mov	r15, r31
    72d6:	f4 e3       	ldi	r31, 0x34	; 52
    72d8:	0f 2f       	mov	r16, r31
    72da:	f3 e4       	ldi	r31, 0x43	; 67
    72dc:	1f 2f       	mov	r17, r31
    72de:	f0 2d       	mov	r31, r0
    72e0:	0e 94 a0 08 	call	0x1140	; 0x1140 <_Z3mapddddd>
    72e4:	0f 90       	pop	r0
    72e6:	0f 90       	pop	r0
    72e8:	0f 90       	pop	r0
    72ea:	0f 90       	pop	r0
        OCR5A=ICR5-vAl;
    72ec:	c0 91 26 01 	lds	r28, 0x0126
    72f0:	d0 91 27 01 	lds	r29, 0x0127
      case 8:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
        OCR4C=ICR4-vAl;
        break;
      case 46:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    72f4:	0e 94 bb 79 	call	0xf376	; 0xf376 <__fixsfsi>
        OCR5A=ICR5-vAl;
    72f8:	c6 1b       	sub	r28, r22
    72fa:	d7 0b       	sbc	r29, r23
    72fc:	d0 93 29 01 	sts	0x0129, r29
    7300:	c0 93 28 01 	sts	0x0128, r28
    7304:	a3 c0       	rjmp	.+326    	; 0x744c <_Z6angle3i+0x1eca>
        break;
      case 45:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    7306:	e6 e8       	ldi	r30, 0x86	; 134
    7308:	f0 e0       	ldi	r31, 0x00	; 0
    730a:	c0 81       	ld	r28, Z
    730c:	d1 81       	ldd	r29, Z+1	; 0x01
    730e:	80 80       	ld	r8, Z
    7310:	91 80       	ldd	r9, Z+1	; 0x01
    7312:	00 d0       	rcall	.+0      	; 0x7314 <_Z6angle3i+0x1d92>
    7314:	0f 92       	push	r0
    7316:	4d b6       	in	r4, 0x3d	; 61
    7318:	5e b6       	in	r5, 0x3e	; 62
    731a:	08 94       	sec
    731c:	41 1c       	adc	r4, r1
    731e:	51 1c       	adc	r5, r1
    7320:	88 27       	eor	r24, r24
    7322:	77 fd       	sbrc	r23, 7
    7324:	80 95       	com	r24
    7326:	98 2f       	mov	r25, r24
    7328:	0e 94 ee 79 	call	0xf3dc	; 0xf3dc <__floatsisf>
    732c:	7b 01       	movw	r14, r22
    732e:	8c 01       	movw	r16, r24
    7330:	ce 01       	movw	r24, r28
    7332:	68 e2       	ldi	r22, 0x28	; 40
    7334:	70 e0       	ldi	r23, 0x00	; 0
    7336:	0e 94 05 7b 	call	0xf60a	; 0xf60a <__udivmodhi4>
    733a:	80 e0       	ldi	r24, 0x00	; 0
    733c:	90 e0       	ldi	r25, 0x00	; 0
    733e:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    7342:	5b 01       	movw	r10, r22
    7344:	6c 01       	movw	r12, r24
    7346:	96 94       	lsr	r9
    7348:	87 94       	ror	r8
    734a:	96 94       	lsr	r9
    734c:	87 94       	ror	r8
    734e:	96 94       	lsr	r9
    7350:	87 94       	ror	r8
    7352:	b4 01       	movw	r22, r8
    7354:	80 e0       	ldi	r24, 0x00	; 0
    7356:	90 e0       	ldi	r25, 0x00	; 0
    7358:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    735c:	f2 01       	movw	r30, r4
    735e:	60 83       	st	Z, r22
    7360:	71 83       	std	Z+1, r23	; 0x01
    7362:	82 83       	std	Z+2, r24	; 0x02
    7364:	93 83       	std	Z+3, r25	; 0x03
    7366:	c8 01       	movw	r24, r16
    7368:	b7 01       	movw	r22, r14
    736a:	20 e0       	ldi	r18, 0x00	; 0
    736c:	30 e0       	ldi	r19, 0x00	; 0
    736e:	a9 01       	movw	r20, r18
    7370:	0f 2e       	mov	r0, r31
    7372:	f0 e0       	ldi	r31, 0x00	; 0
    7374:	ef 2e       	mov	r14, r31
    7376:	f0 e0       	ldi	r31, 0x00	; 0
    7378:	ff 2e       	mov	r15, r31
    737a:	f4 e3       	ldi	r31, 0x34	; 52
    737c:	0f 2f       	mov	r16, r31
    737e:	f3 e4       	ldi	r31, 0x43	; 67
    7380:	1f 2f       	mov	r17, r31
    7382:	f0 2d       	mov	r31, r0
    7384:	0e 94 a0 08 	call	0x1140	; 0x1140 <_Z3mapddddd>
    7388:	0f 90       	pop	r0
    738a:	0f 90       	pop	r0
    738c:	0f 90       	pop	r0
    738e:	0f 90       	pop	r0
        OCR5B=ICR5-vAl;
    7390:	c0 91 26 01 	lds	r28, 0x0126
    7394:	d0 91 27 01 	lds	r29, 0x0127
      case 46:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
        OCR5A=ICR5-vAl;
        break;
      case 45:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    7398:	0e 94 bb 79 	call	0xf376	; 0xf376 <__fixsfsi>
        OCR5B=ICR5-vAl;
    739c:	c6 1b       	sub	r28, r22
    739e:	d7 0b       	sbc	r29, r23
    73a0:	d0 93 2b 01 	sts	0x012B, r29
    73a4:	c0 93 2a 01 	sts	0x012A, r28
    73a8:	51 c0       	rjmp	.+162    	; 0x744c <_Z6angle3i+0x1eca>
        break;
      case 44:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    73aa:	e6 e8       	ldi	r30, 0x86	; 134
    73ac:	f0 e0       	ldi	r31, 0x00	; 0
    73ae:	c0 81       	ld	r28, Z
    73b0:	d1 81       	ldd	r29, Z+1	; 0x01
    73b2:	80 80       	ld	r8, Z
    73b4:	91 80       	ldd	r9, Z+1	; 0x01
    73b6:	00 d0       	rcall	.+0      	; 0x73b8 <_Z6angle3i+0x1e36>
    73b8:	0f 92       	push	r0
    73ba:	4d b6       	in	r4, 0x3d	; 61
    73bc:	5e b6       	in	r5, 0x3e	; 62
    73be:	08 94       	sec
    73c0:	41 1c       	adc	r4, r1
    73c2:	51 1c       	adc	r5, r1
    73c4:	88 27       	eor	r24, r24
    73c6:	77 fd       	sbrc	r23, 7
    73c8:	80 95       	com	r24
    73ca:	98 2f       	mov	r25, r24
    73cc:	0e 94 ee 79 	call	0xf3dc	; 0xf3dc <__floatsisf>
    73d0:	7b 01       	movw	r14, r22
    73d2:	8c 01       	movw	r16, r24
    73d4:	ce 01       	movw	r24, r28
    73d6:	68 e2       	ldi	r22, 0x28	; 40
    73d8:	70 e0       	ldi	r23, 0x00	; 0
    73da:	0e 94 05 7b 	call	0xf60a	; 0xf60a <__udivmodhi4>
    73de:	80 e0       	ldi	r24, 0x00	; 0
    73e0:	90 e0       	ldi	r25, 0x00	; 0
    73e2:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    73e6:	5b 01       	movw	r10, r22
    73e8:	6c 01       	movw	r12, r24
    73ea:	96 94       	lsr	r9
    73ec:	87 94       	ror	r8
    73ee:	96 94       	lsr	r9
    73f0:	87 94       	ror	r8
    73f2:	96 94       	lsr	r9
    73f4:	87 94       	ror	r8
    73f6:	b4 01       	movw	r22, r8
    73f8:	80 e0       	ldi	r24, 0x00	; 0
    73fa:	90 e0       	ldi	r25, 0x00	; 0
    73fc:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    7400:	f2 01       	movw	r30, r4
    7402:	60 83       	st	Z, r22
    7404:	71 83       	std	Z+1, r23	; 0x01
    7406:	82 83       	std	Z+2, r24	; 0x02
    7408:	93 83       	std	Z+3, r25	; 0x03
    740a:	c8 01       	movw	r24, r16
    740c:	b7 01       	movw	r22, r14
    740e:	20 e0       	ldi	r18, 0x00	; 0
    7410:	30 e0       	ldi	r19, 0x00	; 0
    7412:	a9 01       	movw	r20, r18
    7414:	0f 2e       	mov	r0, r31
    7416:	f0 e0       	ldi	r31, 0x00	; 0
    7418:	ef 2e       	mov	r14, r31
    741a:	f0 e0       	ldi	r31, 0x00	; 0
    741c:	ff 2e       	mov	r15, r31
    741e:	f4 e3       	ldi	r31, 0x34	; 52
    7420:	0f 2f       	mov	r16, r31
    7422:	f3 e4       	ldi	r31, 0x43	; 67
    7424:	1f 2f       	mov	r17, r31
    7426:	f0 2d       	mov	r31, r0
    7428:	0e 94 a0 08 	call	0x1140	; 0x1140 <_Z3mapddddd>
    742c:	0f 90       	pop	r0
    742e:	0f 90       	pop	r0
    7430:	0f 90       	pop	r0
    7432:	0f 90       	pop	r0
        OCR5C=ICR5-vAl;
    7434:	c0 91 26 01 	lds	r28, 0x0126
    7438:	d0 91 27 01 	lds	r29, 0x0127
      case 45:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
        OCR5B=ICR5-vAl;
        break;
      case 44:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    743c:	0e 94 bb 79 	call	0xf376	; 0xf376 <__fixsfsi>
        OCR5C=ICR5-vAl;
    7440:	c6 1b       	sub	r28, r22
    7442:	d7 0b       	sbc	r29, r23
    7444:	d0 93 2d 01 	sts	0x012D, r29
    7448:	c0 93 2c 01 	sts	0x012C, r28
		
	}
    744c:	df 91       	pop	r29
    744e:	cf 91       	pop	r28
    7450:	1f 91       	pop	r17
    7452:	0f 91       	pop	r16
    7454:	ff 90       	pop	r15
    7456:	ef 90       	pop	r14
    7458:	df 90       	pop	r13
    745a:	cf 90       	pop	r12
    745c:	bf 90       	pop	r11
    745e:	af 90       	pop	r10
    7460:	9f 90       	pop	r9
    7462:	8f 90       	pop	r8
    7464:	7f 90       	pop	r7
    7466:	6f 90       	pop	r6
    7468:	5f 90       	pop	r5
    746a:	4f 90       	pop	r4
    746c:	3f 90       	pop	r3
    746e:	2f 90       	pop	r2
    7470:	08 95       	ret

00007472 <_Z6angle4i>:
	void angle4(int dist)
	{
    7472:	2f 92       	push	r2
    7474:	3f 92       	push	r3
    7476:	4f 92       	push	r4
    7478:	5f 92       	push	r5
    747a:	6f 92       	push	r6
    747c:	7f 92       	push	r7
    747e:	8f 92       	push	r8
    7480:	9f 92       	push	r9
    7482:	af 92       	push	r10
    7484:	bf 92       	push	r11
    7486:	cf 92       	push	r12
    7488:	df 92       	push	r13
    748a:	ef 92       	push	r14
    748c:	ff 92       	push	r15
    748e:	0f 93       	push	r16
    7490:	1f 93       	push	r17
    7492:	cf 93       	push	r28
    7494:	df 93       	push	r29
		v=ang1-(dist-500)*k;
    7496:	bc 01       	movw	r22, r24
    7498:	64 5f       	subi	r22, 0xF4	; 244
    749a:	71 40       	sbci	r23, 0x01	; 1
    749c:	88 27       	eor	r24, r24
    749e:	77 fd       	sbrc	r23, 7
    74a0:	80 95       	com	r24
    74a2:	98 2f       	mov	r25, r24
    74a4:	0e 94 ee 79 	call	0xf3dc	; 0xf3dc <__floatsisf>
    74a8:	20 91 b4 02 	lds	r18, 0x02B4
    74ac:	30 91 b5 02 	lds	r19, 0x02B5
    74b0:	40 91 b6 02 	lds	r20, 0x02B6
    74b4:	50 91 b7 02 	lds	r21, 0x02B7
    74b8:	0e 94 a2 7a 	call	0xf544	; 0xf544 <__mulsf3>
    74bc:	f6 2e       	mov	r15, r22
    74be:	07 2f       	mov	r16, r23
    74c0:	18 2f       	mov	r17, r24
    74c2:	e9 2e       	mov	r14, r25
    74c4:	60 91 b8 02 	lds	r22, 0x02B8
    74c8:	70 91 b9 02 	lds	r23, 0x02B9
    74cc:	88 27       	eor	r24, r24
    74ce:	77 fd       	sbrc	r23, 7
    74d0:	80 95       	com	r24
    74d2:	98 2f       	mov	r25, r24
    74d4:	0e 94 ee 79 	call	0xf3dc	; 0xf3dc <__floatsisf>
    74d8:	2f 2d       	mov	r18, r15
    74da:	30 2f       	mov	r19, r16
    74dc:	41 2f       	mov	r20, r17
    74de:	5e 2d       	mov	r21, r14
    74e0:	0e 94 ea 78 	call	0xf1d4	; 0xf1d4 <__subsf3>
    74e4:	0e 94 bb 79 	call	0xf376	; 0xf376 <__fixsfsi>
    74e8:	eb 01       	movw	r28, r22
    74ea:	70 93 cb 02 	sts	0x02CB, r23
    74ee:	60 93 ca 02 	sts	0x02CA, r22
		y=ang2-(dist-500)*k;
    74f2:	60 91 ba 02 	lds	r22, 0x02BA
    74f6:	70 91 bb 02 	lds	r23, 0x02BB
    74fa:	88 27       	eor	r24, r24
    74fc:	77 fd       	sbrc	r23, 7
    74fe:	80 95       	com	r24
    7500:	98 2f       	mov	r25, r24
    7502:	0e 94 ee 79 	call	0xf3dc	; 0xf3dc <__floatsisf>
    7506:	2f 2d       	mov	r18, r15
    7508:	30 2f       	mov	r19, r16
    750a:	41 2f       	mov	r20, r17
    750c:	5e 2d       	mov	r21, r14
    750e:	0e 94 ea 78 	call	0xf1d4	; 0xf1d4 <__subsf3>
    7512:	0e 94 bb 79 	call	0xf376	; 0xf376 <__fixsfsi>
    7516:	70 93 cd 02 	sts	0x02CD, r23
    751a:	60 93 cc 02 	sts	0x02CC, r22
		z=ang3-(dist-500)*k;
    751e:	60 91 bc 02 	lds	r22, 0x02BC
    7522:	70 91 bd 02 	lds	r23, 0x02BD
    7526:	88 27       	eor	r24, r24
    7528:	77 fd       	sbrc	r23, 7
    752a:	80 95       	com	r24
    752c:	98 2f       	mov	r25, r24
    752e:	0e 94 ee 79 	call	0xf3dc	; 0xf3dc <__floatsisf>
    7532:	2f 2d       	mov	r18, r15
    7534:	30 2f       	mov	r19, r16
    7536:	41 2f       	mov	r20, r17
    7538:	5e 2d       	mov	r21, r14
    753a:	0e 94 ea 78 	call	0xf1d4	; 0xf1d4 <__subsf3>
    753e:	0e 94 bb 79 	call	0xf376	; 0xf376 <__fixsfsi>
    7542:	70 93 cf 02 	sts	0x02CF, r23
    7546:	60 93 ce 02 	sts	0x02CE, r22
		w=ang4-(dist-500)*k;
    754a:	60 91 be 02 	lds	r22, 0x02BE
    754e:	70 91 bf 02 	lds	r23, 0x02BF
    7552:	88 27       	eor	r24, r24
    7554:	77 fd       	sbrc	r23, 7
    7556:	80 95       	com	r24
    7558:	98 2f       	mov	r25, r24
    755a:	0e 94 ee 79 	call	0xf3dc	; 0xf3dc <__floatsisf>
    755e:	2f 2d       	mov	r18, r15
    7560:	30 2f       	mov	r19, r16
    7562:	41 2f       	mov	r20, r17
    7564:	5e 2d       	mov	r21, r14
    7566:	0e 94 ea 78 	call	0xf1d4	; 0xf1d4 <__subsf3>
    756a:	0e 94 bb 79 	call	0xf376	; 0xf376 <__fixsfsi>
    756e:	70 93 d1 02 	sts	0x02D1, r23
    7572:	60 93 d0 02 	sts	0x02D0, r22
     }
  }

  void write(int vAl)           //PIN=servo pin no. on mega,vAl=angle F_CPU for the servo at pin
  {
    switch(pIn)
    7576:	80 91 d4 02 	lds	r24, 0x02D4
    757a:	88 30       	cpi	r24, 0x08	; 8
    757c:	09 f4       	brne	.+2      	; 0x7580 <_Z6angle4i+0x10e>
    757e:	72 c2       	rjmp	.+1252   	; 0x7a64 <_Z6angle4i+0x5f2>
    7580:	89 30       	cpi	r24, 0x09	; 9
    7582:	98 f4       	brcc	.+38     	; 0x75aa <_Z6angle4i+0x138>
    7584:	85 30       	cpi	r24, 0x05	; 5
    7586:	09 f4       	brne	.+2      	; 0x758a <_Z6angle4i+0x118>
    7588:	ce c0       	rjmp	.+412    	; 0x7726 <_Z6angle4i+0x2b4>
    758a:	86 30       	cpi	r24, 0x06	; 6
    758c:	38 f4       	brcc	.+14     	; 0x759c <_Z6angle4i+0x12a>
    758e:	82 30       	cpi	r24, 0x02	; 2
    7590:	09 f4       	brne	.+2      	; 0x7594 <_Z6angle4i+0x122>
    7592:	1c c1       	rjmp	.+568    	; 0x77cc <_Z6angle4i+0x35a>
    7594:	83 30       	cpi	r24, 0x03	; 3
    7596:	09 f0       	breq	.+2      	; 0x759a <_Z6angle4i+0x128>
    7598:	b0 c3       	rjmp	.+1888   	; 0x7cfa <_Z6angle4i+0x888>
    759a:	6b c1       	rjmp	.+726    	; 0x7872 <_Z6angle4i+0x400>
    759c:	86 30       	cpi	r24, 0x06	; 6
    759e:	09 f4       	brne	.+2      	; 0x75a2 <_Z6angle4i+0x130>
    75a0:	bb c1       	rjmp	.+886    	; 0x7918 <_Z6angle4i+0x4a6>
    75a2:	87 30       	cpi	r24, 0x07	; 7
    75a4:	09 f0       	breq	.+2      	; 0x75a8 <_Z6angle4i+0x136>
    75a6:	a9 c3       	rjmp	.+1874   	; 0x7cfa <_Z6angle4i+0x888>
    75a8:	0a c2       	rjmp	.+1044   	; 0x79be <_Z6angle4i+0x54c>
    75aa:	8c 32       	cpi	r24, 0x2C	; 44
    75ac:	09 f4       	brne	.+2      	; 0x75b0 <_Z6angle4i+0x13e>
    75ae:	53 c3       	rjmp	.+1702   	; 0x7c56 <_Z6angle4i+0x7e4>
    75b0:	8d 32       	cpi	r24, 0x2D	; 45
    75b2:	30 f4       	brcc	.+12     	; 0x75c0 <_Z6angle4i+0x14e>
    75b4:	8b 30       	cpi	r24, 0x0B	; 11
    75b6:	59 f0       	breq	.+22     	; 0x75ce <_Z6angle4i+0x15c>
    75b8:	8c 30       	cpi	r24, 0x0C	; 12
    75ba:	09 f0       	breq	.+2      	; 0x75be <_Z6angle4i+0x14c>
    75bc:	9e c3       	rjmp	.+1852   	; 0x7cfa <_Z6angle4i+0x888>
    75be:	5d c0       	rjmp	.+186    	; 0x767a <_Z6angle4i+0x208>
    75c0:	8d 32       	cpi	r24, 0x2D	; 45
    75c2:	09 f4       	brne	.+2      	; 0x75c6 <_Z6angle4i+0x154>
    75c4:	f5 c2       	rjmp	.+1514   	; 0x7bb0 <_Z6angle4i+0x73e>
    75c6:	8e 32       	cpi	r24, 0x2E	; 46
    75c8:	09 f0       	breq	.+2      	; 0x75cc <_Z6angle4i+0x15a>
    75ca:	97 c3       	rjmp	.+1838   	; 0x7cfa <_Z6angle4i+0x888>
    75cc:	9e c2       	rjmp	.+1340   	; 0x7b0a <_Z6angle4i+0x698>
    {
     case 11:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    75ce:	0f 2e       	mov	r0, r31
    75d0:	f6 e8       	ldi	r31, 0x86	; 134
    75d2:	8f 2e       	mov	r8, r31
    75d4:	99 24       	eor	r9, r9
    75d6:	f0 2d       	mov	r31, r0
    75d8:	f4 01       	movw	r30, r8
    75da:	00 81       	ld	r16, Z
    75dc:	11 81       	ldd	r17, Z+1	; 0x01
    75de:	e0 80       	ld	r14, Z
    75e0:	f1 80       	ldd	r15, Z+1	; 0x01
    75e2:	00 d0       	rcall	.+0      	; 0x75e4 <_Z6angle4i+0x172>
    75e4:	0f 92       	push	r0
    75e6:	2d b6       	in	r2, 0x3d	; 61
    75e8:	3e b6       	in	r3, 0x3e	; 62
    75ea:	08 94       	sec
    75ec:	21 1c       	adc	r2, r1
    75ee:	31 1c       	adc	r3, r1
    75f0:	be 01       	movw	r22, r28
    75f2:	88 27       	eor	r24, r24
    75f4:	77 fd       	sbrc	r23, 7
    75f6:	80 95       	com	r24
    75f8:	98 2f       	mov	r25, r24
    75fa:	0e 94 ee 79 	call	0xf3dc	; 0xf3dc <__floatsisf>
    75fe:	2b 01       	movw	r4, r22
    7600:	3c 01       	movw	r6, r24
    7602:	c8 01       	movw	r24, r16
    7604:	68 e2       	ldi	r22, 0x28	; 40
    7606:	70 e0       	ldi	r23, 0x00	; 0
    7608:	0e 94 05 7b 	call	0xf60a	; 0xf60a <__udivmodhi4>
    760c:	80 e0       	ldi	r24, 0x00	; 0
    760e:	90 e0       	ldi	r25, 0x00	; 0
    7610:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    7614:	5b 01       	movw	r10, r22
    7616:	6c 01       	movw	r12, r24
    7618:	f6 94       	lsr	r15
    761a:	e7 94       	ror	r14
    761c:	f6 94       	lsr	r15
    761e:	e7 94       	ror	r14
    7620:	f6 94       	lsr	r15
    7622:	e7 94       	ror	r14
    7624:	b7 01       	movw	r22, r14
    7626:	80 e0       	ldi	r24, 0x00	; 0
    7628:	90 e0       	ldi	r25, 0x00	; 0
    762a:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    762e:	f1 01       	movw	r30, r2
    7630:	60 83       	st	Z, r22
    7632:	71 83       	std	Z+1, r23	; 0x01
    7634:	82 83       	std	Z+2, r24	; 0x02
    7636:	93 83       	std	Z+3, r25	; 0x03
    7638:	c3 01       	movw	r24, r6
    763a:	b2 01       	movw	r22, r4
    763c:	20 e0       	ldi	r18, 0x00	; 0
    763e:	30 e0       	ldi	r19, 0x00	; 0
    7640:	a9 01       	movw	r20, r18
    7642:	0f 2e       	mov	r0, r31
    7644:	f0 e0       	ldi	r31, 0x00	; 0
    7646:	ef 2e       	mov	r14, r31
    7648:	f0 e0       	ldi	r31, 0x00	; 0
    764a:	ff 2e       	mov	r15, r31
    764c:	f4 e3       	ldi	r31, 0x34	; 52
    764e:	0f 2f       	mov	r16, r31
    7650:	f3 e4       	ldi	r31, 0x43	; 67
    7652:	1f 2f       	mov	r17, r31
    7654:	f0 2d       	mov	r31, r0
    7656:	0e 94 a0 08 	call	0x1140	; 0x1140 <_Z3mapddddd>
    765a:	0f 90       	pop	r0
    765c:	0f 90       	pop	r0
    765e:	0f 90       	pop	r0
    7660:	0f 90       	pop	r0
        OCR1A=ICR1-vAl;
    7662:	f4 01       	movw	r30, r8
    7664:	c0 81       	ld	r28, Z
    7666:	d1 81       	ldd	r29, Z+1	; 0x01
  void write(int vAl)           //PIN=servo pin no. on mega,vAl=angle F_CPU for the servo at pin
  {
    switch(pIn)
    {
     case 11:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    7668:	0e 94 bb 79 	call	0xf376	; 0xf376 <__fixsfsi>
        OCR1A=ICR1-vAl;
    766c:	c6 1b       	sub	r28, r22
    766e:	d7 0b       	sbc	r29, r23
    7670:	d0 93 89 00 	sts	0x0089, r29
    7674:	c0 93 88 00 	sts	0x0088, r28
    7678:	40 c3       	rjmp	.+1664   	; 0x7cfa <_Z6angle4i+0x888>
        break;
      case 12:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    767a:	0f 2e       	mov	r0, r31
    767c:	f6 e8       	ldi	r31, 0x86	; 134
    767e:	8f 2e       	mov	r8, r31
    7680:	99 24       	eor	r9, r9
    7682:	f0 2d       	mov	r31, r0
    7684:	f4 01       	movw	r30, r8
    7686:	00 81       	ld	r16, Z
    7688:	11 81       	ldd	r17, Z+1	; 0x01
    768a:	e0 80       	ld	r14, Z
    768c:	f1 80       	ldd	r15, Z+1	; 0x01
    768e:	00 d0       	rcall	.+0      	; 0x7690 <_Z6angle4i+0x21e>
    7690:	0f 92       	push	r0
    7692:	2d b6       	in	r2, 0x3d	; 61
    7694:	3e b6       	in	r3, 0x3e	; 62
    7696:	08 94       	sec
    7698:	21 1c       	adc	r2, r1
    769a:	31 1c       	adc	r3, r1
    769c:	be 01       	movw	r22, r28
    769e:	88 27       	eor	r24, r24
    76a0:	77 fd       	sbrc	r23, 7
    76a2:	80 95       	com	r24
    76a4:	98 2f       	mov	r25, r24
    76a6:	0e 94 ee 79 	call	0xf3dc	; 0xf3dc <__floatsisf>
    76aa:	2b 01       	movw	r4, r22
    76ac:	3c 01       	movw	r6, r24
    76ae:	c8 01       	movw	r24, r16
    76b0:	68 e2       	ldi	r22, 0x28	; 40
    76b2:	70 e0       	ldi	r23, 0x00	; 0
    76b4:	0e 94 05 7b 	call	0xf60a	; 0xf60a <__udivmodhi4>
    76b8:	80 e0       	ldi	r24, 0x00	; 0
    76ba:	90 e0       	ldi	r25, 0x00	; 0
    76bc:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    76c0:	5b 01       	movw	r10, r22
    76c2:	6c 01       	movw	r12, r24
    76c4:	f6 94       	lsr	r15
    76c6:	e7 94       	ror	r14
    76c8:	f6 94       	lsr	r15
    76ca:	e7 94       	ror	r14
    76cc:	f6 94       	lsr	r15
    76ce:	e7 94       	ror	r14
    76d0:	b7 01       	movw	r22, r14
    76d2:	80 e0       	ldi	r24, 0x00	; 0
    76d4:	90 e0       	ldi	r25, 0x00	; 0
    76d6:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    76da:	f1 01       	movw	r30, r2
    76dc:	60 83       	st	Z, r22
    76de:	71 83       	std	Z+1, r23	; 0x01
    76e0:	82 83       	std	Z+2, r24	; 0x02
    76e2:	93 83       	std	Z+3, r25	; 0x03
    76e4:	c3 01       	movw	r24, r6
    76e6:	b2 01       	movw	r22, r4
    76e8:	20 e0       	ldi	r18, 0x00	; 0
    76ea:	30 e0       	ldi	r19, 0x00	; 0
    76ec:	a9 01       	movw	r20, r18
    76ee:	0f 2e       	mov	r0, r31
    76f0:	f0 e0       	ldi	r31, 0x00	; 0
    76f2:	ef 2e       	mov	r14, r31
    76f4:	f0 e0       	ldi	r31, 0x00	; 0
    76f6:	ff 2e       	mov	r15, r31
    76f8:	f4 e3       	ldi	r31, 0x34	; 52
    76fa:	0f 2f       	mov	r16, r31
    76fc:	f3 e4       	ldi	r31, 0x43	; 67
    76fe:	1f 2f       	mov	r17, r31
    7700:	f0 2d       	mov	r31, r0
    7702:	0e 94 a0 08 	call	0x1140	; 0x1140 <_Z3mapddddd>
    7706:	0f 90       	pop	r0
    7708:	0f 90       	pop	r0
    770a:	0f 90       	pop	r0
    770c:	0f 90       	pop	r0
        OCR1B=ICR1-vAl;
    770e:	f4 01       	movw	r30, r8
    7710:	c0 81       	ld	r28, Z
    7712:	d1 81       	ldd	r29, Z+1	; 0x01
     case 11:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
        OCR1A=ICR1-vAl;
        break;
      case 12:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    7714:	0e 94 bb 79 	call	0xf376	; 0xf376 <__fixsfsi>
        OCR1B=ICR1-vAl;
    7718:	c6 1b       	sub	r28, r22
    771a:	d7 0b       	sbc	r29, r23
    771c:	d0 93 8b 00 	sts	0x008B, r29
    7720:	c0 93 8a 00 	sts	0x008A, r28
    7724:	ea c2       	rjmp	.+1492   	; 0x7cfa <_Z6angle4i+0x888>
        break;
      case 5:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    7726:	e6 e8       	ldi	r30, 0x86	; 134
    7728:	f0 e0       	ldi	r31, 0x00	; 0
    772a:	a0 80       	ld	r10, Z
    772c:	b1 80       	ldd	r11, Z+1	; 0x01
    772e:	80 80       	ld	r8, Z
    7730:	91 80       	ldd	r9, Z+1	; 0x01
    7732:	00 d0       	rcall	.+0      	; 0x7734 <_Z6angle4i+0x2c2>
    7734:	0f 92       	push	r0
    7736:	4d b6       	in	r4, 0x3d	; 61
    7738:	5e b6       	in	r5, 0x3e	; 62
    773a:	08 94       	sec
    773c:	41 1c       	adc	r4, r1
    773e:	51 1c       	adc	r5, r1
    7740:	be 01       	movw	r22, r28
    7742:	88 27       	eor	r24, r24
    7744:	77 fd       	sbrc	r23, 7
    7746:	80 95       	com	r24
    7748:	98 2f       	mov	r25, r24
    774a:	0e 94 ee 79 	call	0xf3dc	; 0xf3dc <__floatsisf>
    774e:	7b 01       	movw	r14, r22
    7750:	8c 01       	movw	r16, r24
    7752:	c5 01       	movw	r24, r10
    7754:	68 e2       	ldi	r22, 0x28	; 40
    7756:	70 e0       	ldi	r23, 0x00	; 0
    7758:	0e 94 05 7b 	call	0xf60a	; 0xf60a <__udivmodhi4>
    775c:	80 e0       	ldi	r24, 0x00	; 0
    775e:	90 e0       	ldi	r25, 0x00	; 0
    7760:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    7764:	5b 01       	movw	r10, r22
    7766:	6c 01       	movw	r12, r24
    7768:	96 94       	lsr	r9
    776a:	87 94       	ror	r8
    776c:	96 94       	lsr	r9
    776e:	87 94       	ror	r8
    7770:	96 94       	lsr	r9
    7772:	87 94       	ror	r8
    7774:	b4 01       	movw	r22, r8
    7776:	80 e0       	ldi	r24, 0x00	; 0
    7778:	90 e0       	ldi	r25, 0x00	; 0
    777a:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    777e:	f2 01       	movw	r30, r4
    7780:	60 83       	st	Z, r22
    7782:	71 83       	std	Z+1, r23	; 0x01
    7784:	82 83       	std	Z+2, r24	; 0x02
    7786:	93 83       	std	Z+3, r25	; 0x03
    7788:	c8 01       	movw	r24, r16
    778a:	b7 01       	movw	r22, r14
    778c:	20 e0       	ldi	r18, 0x00	; 0
    778e:	30 e0       	ldi	r19, 0x00	; 0
    7790:	a9 01       	movw	r20, r18
    7792:	0f 2e       	mov	r0, r31
    7794:	f0 e0       	ldi	r31, 0x00	; 0
    7796:	ef 2e       	mov	r14, r31
    7798:	f0 e0       	ldi	r31, 0x00	; 0
    779a:	ff 2e       	mov	r15, r31
    779c:	f4 e3       	ldi	r31, 0x34	; 52
    779e:	0f 2f       	mov	r16, r31
    77a0:	f3 e4       	ldi	r31, 0x43	; 67
    77a2:	1f 2f       	mov	r17, r31
    77a4:	f0 2d       	mov	r31, r0
    77a6:	0e 94 a0 08 	call	0x1140	; 0x1140 <_Z3mapddddd>
    77aa:	0f 90       	pop	r0
    77ac:	0f 90       	pop	r0
    77ae:	0f 90       	pop	r0
    77b0:	0f 90       	pop	r0
        OCR3A=ICR3-vAl;
    77b2:	c0 91 96 00 	lds	r28, 0x0096
    77b6:	d0 91 97 00 	lds	r29, 0x0097
      case 12:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
        OCR1B=ICR1-vAl;
        break;
      case 5:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    77ba:	0e 94 bb 79 	call	0xf376	; 0xf376 <__fixsfsi>
        OCR3A=ICR3-vAl;
    77be:	c6 1b       	sub	r28, r22
    77c0:	d7 0b       	sbc	r29, r23
    77c2:	d0 93 99 00 	sts	0x0099, r29
    77c6:	c0 93 98 00 	sts	0x0098, r28
    77ca:	97 c2       	rjmp	.+1326   	; 0x7cfa <_Z6angle4i+0x888>
        break;
      case 2:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    77cc:	e6 e8       	ldi	r30, 0x86	; 134
    77ce:	f0 e0       	ldi	r31, 0x00	; 0
    77d0:	a0 80       	ld	r10, Z
    77d2:	b1 80       	ldd	r11, Z+1	; 0x01
    77d4:	80 80       	ld	r8, Z
    77d6:	91 80       	ldd	r9, Z+1	; 0x01
    77d8:	00 d0       	rcall	.+0      	; 0x77da <_Z6angle4i+0x368>
    77da:	0f 92       	push	r0
    77dc:	4d b6       	in	r4, 0x3d	; 61
    77de:	5e b6       	in	r5, 0x3e	; 62
    77e0:	08 94       	sec
    77e2:	41 1c       	adc	r4, r1
    77e4:	51 1c       	adc	r5, r1
    77e6:	be 01       	movw	r22, r28
    77e8:	88 27       	eor	r24, r24
    77ea:	77 fd       	sbrc	r23, 7
    77ec:	80 95       	com	r24
    77ee:	98 2f       	mov	r25, r24
    77f0:	0e 94 ee 79 	call	0xf3dc	; 0xf3dc <__floatsisf>
    77f4:	7b 01       	movw	r14, r22
    77f6:	8c 01       	movw	r16, r24
    77f8:	c5 01       	movw	r24, r10
    77fa:	68 e2       	ldi	r22, 0x28	; 40
    77fc:	70 e0       	ldi	r23, 0x00	; 0
    77fe:	0e 94 05 7b 	call	0xf60a	; 0xf60a <__udivmodhi4>
    7802:	80 e0       	ldi	r24, 0x00	; 0
    7804:	90 e0       	ldi	r25, 0x00	; 0
    7806:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    780a:	5b 01       	movw	r10, r22
    780c:	6c 01       	movw	r12, r24
    780e:	96 94       	lsr	r9
    7810:	87 94       	ror	r8
    7812:	96 94       	lsr	r9
    7814:	87 94       	ror	r8
    7816:	96 94       	lsr	r9
    7818:	87 94       	ror	r8
    781a:	b4 01       	movw	r22, r8
    781c:	80 e0       	ldi	r24, 0x00	; 0
    781e:	90 e0       	ldi	r25, 0x00	; 0
    7820:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    7824:	f2 01       	movw	r30, r4
    7826:	60 83       	st	Z, r22
    7828:	71 83       	std	Z+1, r23	; 0x01
    782a:	82 83       	std	Z+2, r24	; 0x02
    782c:	93 83       	std	Z+3, r25	; 0x03
    782e:	c8 01       	movw	r24, r16
    7830:	b7 01       	movw	r22, r14
    7832:	20 e0       	ldi	r18, 0x00	; 0
    7834:	30 e0       	ldi	r19, 0x00	; 0
    7836:	a9 01       	movw	r20, r18
    7838:	0f 2e       	mov	r0, r31
    783a:	f0 e0       	ldi	r31, 0x00	; 0
    783c:	ef 2e       	mov	r14, r31
    783e:	f0 e0       	ldi	r31, 0x00	; 0
    7840:	ff 2e       	mov	r15, r31
    7842:	f4 e3       	ldi	r31, 0x34	; 52
    7844:	0f 2f       	mov	r16, r31
    7846:	f3 e4       	ldi	r31, 0x43	; 67
    7848:	1f 2f       	mov	r17, r31
    784a:	f0 2d       	mov	r31, r0
    784c:	0e 94 a0 08 	call	0x1140	; 0x1140 <_Z3mapddddd>
    7850:	0f 90       	pop	r0
    7852:	0f 90       	pop	r0
    7854:	0f 90       	pop	r0
    7856:	0f 90       	pop	r0
        OCR3B=ICR3-vAl;
    7858:	c0 91 96 00 	lds	r28, 0x0096
    785c:	d0 91 97 00 	lds	r29, 0x0097
      case 5:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
        OCR3A=ICR3-vAl;
        break;
      case 2:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    7860:	0e 94 bb 79 	call	0xf376	; 0xf376 <__fixsfsi>
        OCR3B=ICR3-vAl;
    7864:	c6 1b       	sub	r28, r22
    7866:	d7 0b       	sbc	r29, r23
    7868:	d0 93 9b 00 	sts	0x009B, r29
    786c:	c0 93 9a 00 	sts	0x009A, r28
    7870:	44 c2       	rjmp	.+1160   	; 0x7cfa <_Z6angle4i+0x888>
        break;
      case 3:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    7872:	e6 e8       	ldi	r30, 0x86	; 134
    7874:	f0 e0       	ldi	r31, 0x00	; 0
    7876:	a0 80       	ld	r10, Z
    7878:	b1 80       	ldd	r11, Z+1	; 0x01
    787a:	80 80       	ld	r8, Z
    787c:	91 80       	ldd	r9, Z+1	; 0x01
    787e:	00 d0       	rcall	.+0      	; 0x7880 <_Z6angle4i+0x40e>
    7880:	0f 92       	push	r0
    7882:	4d b6       	in	r4, 0x3d	; 61
    7884:	5e b6       	in	r5, 0x3e	; 62
    7886:	08 94       	sec
    7888:	41 1c       	adc	r4, r1
    788a:	51 1c       	adc	r5, r1
    788c:	be 01       	movw	r22, r28
    788e:	88 27       	eor	r24, r24
    7890:	77 fd       	sbrc	r23, 7
    7892:	80 95       	com	r24
    7894:	98 2f       	mov	r25, r24
    7896:	0e 94 ee 79 	call	0xf3dc	; 0xf3dc <__floatsisf>
    789a:	7b 01       	movw	r14, r22
    789c:	8c 01       	movw	r16, r24
    789e:	c5 01       	movw	r24, r10
    78a0:	68 e2       	ldi	r22, 0x28	; 40
    78a2:	70 e0       	ldi	r23, 0x00	; 0
    78a4:	0e 94 05 7b 	call	0xf60a	; 0xf60a <__udivmodhi4>
    78a8:	80 e0       	ldi	r24, 0x00	; 0
    78aa:	90 e0       	ldi	r25, 0x00	; 0
    78ac:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    78b0:	5b 01       	movw	r10, r22
    78b2:	6c 01       	movw	r12, r24
    78b4:	96 94       	lsr	r9
    78b6:	87 94       	ror	r8
    78b8:	96 94       	lsr	r9
    78ba:	87 94       	ror	r8
    78bc:	96 94       	lsr	r9
    78be:	87 94       	ror	r8
    78c0:	b4 01       	movw	r22, r8
    78c2:	80 e0       	ldi	r24, 0x00	; 0
    78c4:	90 e0       	ldi	r25, 0x00	; 0
    78c6:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    78ca:	f2 01       	movw	r30, r4
    78cc:	60 83       	st	Z, r22
    78ce:	71 83       	std	Z+1, r23	; 0x01
    78d0:	82 83       	std	Z+2, r24	; 0x02
    78d2:	93 83       	std	Z+3, r25	; 0x03
    78d4:	c8 01       	movw	r24, r16
    78d6:	b7 01       	movw	r22, r14
    78d8:	20 e0       	ldi	r18, 0x00	; 0
    78da:	30 e0       	ldi	r19, 0x00	; 0
    78dc:	a9 01       	movw	r20, r18
    78de:	0f 2e       	mov	r0, r31
    78e0:	f0 e0       	ldi	r31, 0x00	; 0
    78e2:	ef 2e       	mov	r14, r31
    78e4:	f0 e0       	ldi	r31, 0x00	; 0
    78e6:	ff 2e       	mov	r15, r31
    78e8:	f4 e3       	ldi	r31, 0x34	; 52
    78ea:	0f 2f       	mov	r16, r31
    78ec:	f3 e4       	ldi	r31, 0x43	; 67
    78ee:	1f 2f       	mov	r17, r31
    78f0:	f0 2d       	mov	r31, r0
    78f2:	0e 94 a0 08 	call	0x1140	; 0x1140 <_Z3mapddddd>
    78f6:	0f 90       	pop	r0
    78f8:	0f 90       	pop	r0
    78fa:	0f 90       	pop	r0
    78fc:	0f 90       	pop	r0
        OCR3C=ICR3-vAl;
    78fe:	c0 91 96 00 	lds	r28, 0x0096
    7902:	d0 91 97 00 	lds	r29, 0x0097
      case 2:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
        OCR3B=ICR3-vAl;
        break;
      case 3:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    7906:	0e 94 bb 79 	call	0xf376	; 0xf376 <__fixsfsi>
        OCR3C=ICR3-vAl;
    790a:	c6 1b       	sub	r28, r22
    790c:	d7 0b       	sbc	r29, r23
    790e:	d0 93 9d 00 	sts	0x009D, r29
    7912:	c0 93 9c 00 	sts	0x009C, r28
    7916:	f1 c1       	rjmp	.+994    	; 0x7cfa <_Z6angle4i+0x888>
        break;
      case 6:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    7918:	e6 e8       	ldi	r30, 0x86	; 134
    791a:	f0 e0       	ldi	r31, 0x00	; 0
    791c:	a0 80       	ld	r10, Z
    791e:	b1 80       	ldd	r11, Z+1	; 0x01
    7920:	80 80       	ld	r8, Z
    7922:	91 80       	ldd	r9, Z+1	; 0x01
    7924:	00 d0       	rcall	.+0      	; 0x7926 <_Z6angle4i+0x4b4>
    7926:	0f 92       	push	r0
    7928:	4d b6       	in	r4, 0x3d	; 61
    792a:	5e b6       	in	r5, 0x3e	; 62
    792c:	08 94       	sec
    792e:	41 1c       	adc	r4, r1
    7930:	51 1c       	adc	r5, r1
    7932:	be 01       	movw	r22, r28
    7934:	88 27       	eor	r24, r24
    7936:	77 fd       	sbrc	r23, 7
    7938:	80 95       	com	r24
    793a:	98 2f       	mov	r25, r24
    793c:	0e 94 ee 79 	call	0xf3dc	; 0xf3dc <__floatsisf>
    7940:	7b 01       	movw	r14, r22
    7942:	8c 01       	movw	r16, r24
    7944:	c5 01       	movw	r24, r10
    7946:	68 e2       	ldi	r22, 0x28	; 40
    7948:	70 e0       	ldi	r23, 0x00	; 0
    794a:	0e 94 05 7b 	call	0xf60a	; 0xf60a <__udivmodhi4>
    794e:	80 e0       	ldi	r24, 0x00	; 0
    7950:	90 e0       	ldi	r25, 0x00	; 0
    7952:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    7956:	5b 01       	movw	r10, r22
    7958:	6c 01       	movw	r12, r24
    795a:	96 94       	lsr	r9
    795c:	87 94       	ror	r8
    795e:	96 94       	lsr	r9
    7960:	87 94       	ror	r8
    7962:	96 94       	lsr	r9
    7964:	87 94       	ror	r8
    7966:	b4 01       	movw	r22, r8
    7968:	80 e0       	ldi	r24, 0x00	; 0
    796a:	90 e0       	ldi	r25, 0x00	; 0
    796c:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    7970:	f2 01       	movw	r30, r4
    7972:	60 83       	st	Z, r22
    7974:	71 83       	std	Z+1, r23	; 0x01
    7976:	82 83       	std	Z+2, r24	; 0x02
    7978:	93 83       	std	Z+3, r25	; 0x03
    797a:	c8 01       	movw	r24, r16
    797c:	b7 01       	movw	r22, r14
    797e:	20 e0       	ldi	r18, 0x00	; 0
    7980:	30 e0       	ldi	r19, 0x00	; 0
    7982:	a9 01       	movw	r20, r18
    7984:	0f 2e       	mov	r0, r31
    7986:	f0 e0       	ldi	r31, 0x00	; 0
    7988:	ef 2e       	mov	r14, r31
    798a:	f0 e0       	ldi	r31, 0x00	; 0
    798c:	ff 2e       	mov	r15, r31
    798e:	f4 e3       	ldi	r31, 0x34	; 52
    7990:	0f 2f       	mov	r16, r31
    7992:	f3 e4       	ldi	r31, 0x43	; 67
    7994:	1f 2f       	mov	r17, r31
    7996:	f0 2d       	mov	r31, r0
    7998:	0e 94 a0 08 	call	0x1140	; 0x1140 <_Z3mapddddd>
    799c:	0f 90       	pop	r0
    799e:	0f 90       	pop	r0
    79a0:	0f 90       	pop	r0
    79a2:	0f 90       	pop	r0
        OCR4A=ICR4-vAl;
    79a4:	c0 91 a6 00 	lds	r28, 0x00A6
    79a8:	d0 91 a7 00 	lds	r29, 0x00A7
      case 3:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
        OCR3C=ICR3-vAl;
        break;
      case 6:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    79ac:	0e 94 bb 79 	call	0xf376	; 0xf376 <__fixsfsi>
        OCR4A=ICR4-vAl;
    79b0:	c6 1b       	sub	r28, r22
    79b2:	d7 0b       	sbc	r29, r23
    79b4:	d0 93 a9 00 	sts	0x00A9, r29
    79b8:	c0 93 a8 00 	sts	0x00A8, r28
    79bc:	9e c1       	rjmp	.+828    	; 0x7cfa <_Z6angle4i+0x888>
        break;
      case 7:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    79be:	e6 e8       	ldi	r30, 0x86	; 134
    79c0:	f0 e0       	ldi	r31, 0x00	; 0
    79c2:	a0 80       	ld	r10, Z
    79c4:	b1 80       	ldd	r11, Z+1	; 0x01
    79c6:	80 80       	ld	r8, Z
    79c8:	91 80       	ldd	r9, Z+1	; 0x01
    79ca:	00 d0       	rcall	.+0      	; 0x79cc <_Z6angle4i+0x55a>
    79cc:	0f 92       	push	r0
    79ce:	4d b6       	in	r4, 0x3d	; 61
    79d0:	5e b6       	in	r5, 0x3e	; 62
    79d2:	08 94       	sec
    79d4:	41 1c       	adc	r4, r1
    79d6:	51 1c       	adc	r5, r1
    79d8:	be 01       	movw	r22, r28
    79da:	88 27       	eor	r24, r24
    79dc:	77 fd       	sbrc	r23, 7
    79de:	80 95       	com	r24
    79e0:	98 2f       	mov	r25, r24
    79e2:	0e 94 ee 79 	call	0xf3dc	; 0xf3dc <__floatsisf>
    79e6:	7b 01       	movw	r14, r22
    79e8:	8c 01       	movw	r16, r24
    79ea:	c5 01       	movw	r24, r10
    79ec:	68 e2       	ldi	r22, 0x28	; 40
    79ee:	70 e0       	ldi	r23, 0x00	; 0
    79f0:	0e 94 05 7b 	call	0xf60a	; 0xf60a <__udivmodhi4>
    79f4:	80 e0       	ldi	r24, 0x00	; 0
    79f6:	90 e0       	ldi	r25, 0x00	; 0
    79f8:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    79fc:	5b 01       	movw	r10, r22
    79fe:	6c 01       	movw	r12, r24
    7a00:	96 94       	lsr	r9
    7a02:	87 94       	ror	r8
    7a04:	96 94       	lsr	r9
    7a06:	87 94       	ror	r8
    7a08:	96 94       	lsr	r9
    7a0a:	87 94       	ror	r8
    7a0c:	b4 01       	movw	r22, r8
    7a0e:	80 e0       	ldi	r24, 0x00	; 0
    7a10:	90 e0       	ldi	r25, 0x00	; 0
    7a12:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    7a16:	f2 01       	movw	r30, r4
    7a18:	60 83       	st	Z, r22
    7a1a:	71 83       	std	Z+1, r23	; 0x01
    7a1c:	82 83       	std	Z+2, r24	; 0x02
    7a1e:	93 83       	std	Z+3, r25	; 0x03
    7a20:	c8 01       	movw	r24, r16
    7a22:	b7 01       	movw	r22, r14
    7a24:	20 e0       	ldi	r18, 0x00	; 0
    7a26:	30 e0       	ldi	r19, 0x00	; 0
    7a28:	a9 01       	movw	r20, r18
    7a2a:	0f 2e       	mov	r0, r31
    7a2c:	f0 e0       	ldi	r31, 0x00	; 0
    7a2e:	ef 2e       	mov	r14, r31
    7a30:	f0 e0       	ldi	r31, 0x00	; 0
    7a32:	ff 2e       	mov	r15, r31
    7a34:	f4 e3       	ldi	r31, 0x34	; 52
    7a36:	0f 2f       	mov	r16, r31
    7a38:	f3 e4       	ldi	r31, 0x43	; 67
    7a3a:	1f 2f       	mov	r17, r31
    7a3c:	f0 2d       	mov	r31, r0
    7a3e:	0e 94 a0 08 	call	0x1140	; 0x1140 <_Z3mapddddd>
    7a42:	0f 90       	pop	r0
    7a44:	0f 90       	pop	r0
    7a46:	0f 90       	pop	r0
    7a48:	0f 90       	pop	r0
        OCR4B=ICR4-vAl;
    7a4a:	c0 91 a6 00 	lds	r28, 0x00A6
    7a4e:	d0 91 a7 00 	lds	r29, 0x00A7
      case 6:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
        OCR4A=ICR4-vAl;
        break;
      case 7:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    7a52:	0e 94 bb 79 	call	0xf376	; 0xf376 <__fixsfsi>
        OCR4B=ICR4-vAl;
    7a56:	c6 1b       	sub	r28, r22
    7a58:	d7 0b       	sbc	r29, r23
    7a5a:	d0 93 ab 00 	sts	0x00AB, r29
    7a5e:	c0 93 aa 00 	sts	0x00AA, r28
    7a62:	4b c1       	rjmp	.+662    	; 0x7cfa <_Z6angle4i+0x888>
        break; 
      case 8:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    7a64:	e6 e8       	ldi	r30, 0x86	; 134
    7a66:	f0 e0       	ldi	r31, 0x00	; 0
    7a68:	a0 80       	ld	r10, Z
    7a6a:	b1 80       	ldd	r11, Z+1	; 0x01
    7a6c:	80 80       	ld	r8, Z
    7a6e:	91 80       	ldd	r9, Z+1	; 0x01
    7a70:	00 d0       	rcall	.+0      	; 0x7a72 <_Z6angle4i+0x600>
    7a72:	0f 92       	push	r0
    7a74:	4d b6       	in	r4, 0x3d	; 61
    7a76:	5e b6       	in	r5, 0x3e	; 62
    7a78:	08 94       	sec
    7a7a:	41 1c       	adc	r4, r1
    7a7c:	51 1c       	adc	r5, r1
    7a7e:	be 01       	movw	r22, r28
    7a80:	88 27       	eor	r24, r24
    7a82:	77 fd       	sbrc	r23, 7
    7a84:	80 95       	com	r24
    7a86:	98 2f       	mov	r25, r24
    7a88:	0e 94 ee 79 	call	0xf3dc	; 0xf3dc <__floatsisf>
    7a8c:	7b 01       	movw	r14, r22
    7a8e:	8c 01       	movw	r16, r24
    7a90:	c5 01       	movw	r24, r10
    7a92:	68 e2       	ldi	r22, 0x28	; 40
    7a94:	70 e0       	ldi	r23, 0x00	; 0
    7a96:	0e 94 05 7b 	call	0xf60a	; 0xf60a <__udivmodhi4>
    7a9a:	80 e0       	ldi	r24, 0x00	; 0
    7a9c:	90 e0       	ldi	r25, 0x00	; 0
    7a9e:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    7aa2:	5b 01       	movw	r10, r22
    7aa4:	6c 01       	movw	r12, r24
    7aa6:	96 94       	lsr	r9
    7aa8:	87 94       	ror	r8
    7aaa:	96 94       	lsr	r9
    7aac:	87 94       	ror	r8
    7aae:	96 94       	lsr	r9
    7ab0:	87 94       	ror	r8
    7ab2:	b4 01       	movw	r22, r8
    7ab4:	80 e0       	ldi	r24, 0x00	; 0
    7ab6:	90 e0       	ldi	r25, 0x00	; 0
    7ab8:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    7abc:	f2 01       	movw	r30, r4
    7abe:	60 83       	st	Z, r22
    7ac0:	71 83       	std	Z+1, r23	; 0x01
    7ac2:	82 83       	std	Z+2, r24	; 0x02
    7ac4:	93 83       	std	Z+3, r25	; 0x03
    7ac6:	c8 01       	movw	r24, r16
    7ac8:	b7 01       	movw	r22, r14
    7aca:	20 e0       	ldi	r18, 0x00	; 0
    7acc:	30 e0       	ldi	r19, 0x00	; 0
    7ace:	a9 01       	movw	r20, r18
    7ad0:	0f 2e       	mov	r0, r31
    7ad2:	f0 e0       	ldi	r31, 0x00	; 0
    7ad4:	ef 2e       	mov	r14, r31
    7ad6:	f0 e0       	ldi	r31, 0x00	; 0
    7ad8:	ff 2e       	mov	r15, r31
    7ada:	f4 e3       	ldi	r31, 0x34	; 52
    7adc:	0f 2f       	mov	r16, r31
    7ade:	f3 e4       	ldi	r31, 0x43	; 67
    7ae0:	1f 2f       	mov	r17, r31
    7ae2:	f0 2d       	mov	r31, r0
    7ae4:	0e 94 a0 08 	call	0x1140	; 0x1140 <_Z3mapddddd>
    7ae8:	0f 90       	pop	r0
    7aea:	0f 90       	pop	r0
    7aec:	0f 90       	pop	r0
    7aee:	0f 90       	pop	r0
        OCR4C=ICR4-vAl;
    7af0:	c0 91 a6 00 	lds	r28, 0x00A6
    7af4:	d0 91 a7 00 	lds	r29, 0x00A7
      case 7:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
        OCR4B=ICR4-vAl;
        break; 
      case 8:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    7af8:	0e 94 bb 79 	call	0xf376	; 0xf376 <__fixsfsi>
        OCR4C=ICR4-vAl;
    7afc:	c6 1b       	sub	r28, r22
    7afe:	d7 0b       	sbc	r29, r23
    7b00:	d0 93 ad 00 	sts	0x00AD, r29
    7b04:	c0 93 ac 00 	sts	0x00AC, r28
    7b08:	f8 c0       	rjmp	.+496    	; 0x7cfa <_Z6angle4i+0x888>
        break;
      case 46:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    7b0a:	e6 e8       	ldi	r30, 0x86	; 134
    7b0c:	f0 e0       	ldi	r31, 0x00	; 0
    7b0e:	a0 80       	ld	r10, Z
    7b10:	b1 80       	ldd	r11, Z+1	; 0x01
    7b12:	80 80       	ld	r8, Z
    7b14:	91 80       	ldd	r9, Z+1	; 0x01
    7b16:	00 d0       	rcall	.+0      	; 0x7b18 <_Z6angle4i+0x6a6>
    7b18:	0f 92       	push	r0
    7b1a:	4d b6       	in	r4, 0x3d	; 61
    7b1c:	5e b6       	in	r5, 0x3e	; 62
    7b1e:	08 94       	sec
    7b20:	41 1c       	adc	r4, r1
    7b22:	51 1c       	adc	r5, r1
    7b24:	be 01       	movw	r22, r28
    7b26:	88 27       	eor	r24, r24
    7b28:	77 fd       	sbrc	r23, 7
    7b2a:	80 95       	com	r24
    7b2c:	98 2f       	mov	r25, r24
    7b2e:	0e 94 ee 79 	call	0xf3dc	; 0xf3dc <__floatsisf>
    7b32:	7b 01       	movw	r14, r22
    7b34:	8c 01       	movw	r16, r24
    7b36:	c5 01       	movw	r24, r10
    7b38:	68 e2       	ldi	r22, 0x28	; 40
    7b3a:	70 e0       	ldi	r23, 0x00	; 0
    7b3c:	0e 94 05 7b 	call	0xf60a	; 0xf60a <__udivmodhi4>
    7b40:	80 e0       	ldi	r24, 0x00	; 0
    7b42:	90 e0       	ldi	r25, 0x00	; 0
    7b44:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    7b48:	5b 01       	movw	r10, r22
    7b4a:	6c 01       	movw	r12, r24
    7b4c:	96 94       	lsr	r9
    7b4e:	87 94       	ror	r8
    7b50:	96 94       	lsr	r9
    7b52:	87 94       	ror	r8
    7b54:	96 94       	lsr	r9
    7b56:	87 94       	ror	r8
    7b58:	b4 01       	movw	r22, r8
    7b5a:	80 e0       	ldi	r24, 0x00	; 0
    7b5c:	90 e0       	ldi	r25, 0x00	; 0
    7b5e:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    7b62:	f2 01       	movw	r30, r4
    7b64:	60 83       	st	Z, r22
    7b66:	71 83       	std	Z+1, r23	; 0x01
    7b68:	82 83       	std	Z+2, r24	; 0x02
    7b6a:	93 83       	std	Z+3, r25	; 0x03
    7b6c:	c8 01       	movw	r24, r16
    7b6e:	b7 01       	movw	r22, r14
    7b70:	20 e0       	ldi	r18, 0x00	; 0
    7b72:	30 e0       	ldi	r19, 0x00	; 0
    7b74:	a9 01       	movw	r20, r18
    7b76:	0f 2e       	mov	r0, r31
    7b78:	f0 e0       	ldi	r31, 0x00	; 0
    7b7a:	ef 2e       	mov	r14, r31
    7b7c:	f0 e0       	ldi	r31, 0x00	; 0
    7b7e:	ff 2e       	mov	r15, r31
    7b80:	f4 e3       	ldi	r31, 0x34	; 52
    7b82:	0f 2f       	mov	r16, r31
    7b84:	f3 e4       	ldi	r31, 0x43	; 67
    7b86:	1f 2f       	mov	r17, r31
    7b88:	f0 2d       	mov	r31, r0
    7b8a:	0e 94 a0 08 	call	0x1140	; 0x1140 <_Z3mapddddd>
    7b8e:	0f 90       	pop	r0
    7b90:	0f 90       	pop	r0
    7b92:	0f 90       	pop	r0
    7b94:	0f 90       	pop	r0
        OCR5A=ICR5-vAl;
    7b96:	c0 91 26 01 	lds	r28, 0x0126
    7b9a:	d0 91 27 01 	lds	r29, 0x0127
      case 8:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
        OCR4C=ICR4-vAl;
        break;
      case 46:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    7b9e:	0e 94 bb 79 	call	0xf376	; 0xf376 <__fixsfsi>
        OCR5A=ICR5-vAl;
    7ba2:	c6 1b       	sub	r28, r22
    7ba4:	d7 0b       	sbc	r29, r23
    7ba6:	d0 93 29 01 	sts	0x0129, r29
    7baa:	c0 93 28 01 	sts	0x0128, r28
    7bae:	a5 c0       	rjmp	.+330    	; 0x7cfa <_Z6angle4i+0x888>
        break;
      case 45:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    7bb0:	e6 e8       	ldi	r30, 0x86	; 134
    7bb2:	f0 e0       	ldi	r31, 0x00	; 0
    7bb4:	a0 80       	ld	r10, Z
    7bb6:	b1 80       	ldd	r11, Z+1	; 0x01
    7bb8:	80 80       	ld	r8, Z
    7bba:	91 80       	ldd	r9, Z+1	; 0x01
    7bbc:	00 d0       	rcall	.+0      	; 0x7bbe <_Z6angle4i+0x74c>
    7bbe:	0f 92       	push	r0
    7bc0:	4d b6       	in	r4, 0x3d	; 61
    7bc2:	5e b6       	in	r5, 0x3e	; 62
    7bc4:	08 94       	sec
    7bc6:	41 1c       	adc	r4, r1
    7bc8:	51 1c       	adc	r5, r1
    7bca:	be 01       	movw	r22, r28
    7bcc:	88 27       	eor	r24, r24
    7bce:	77 fd       	sbrc	r23, 7
    7bd0:	80 95       	com	r24
    7bd2:	98 2f       	mov	r25, r24
    7bd4:	0e 94 ee 79 	call	0xf3dc	; 0xf3dc <__floatsisf>
    7bd8:	7b 01       	movw	r14, r22
    7bda:	8c 01       	movw	r16, r24
    7bdc:	c5 01       	movw	r24, r10
    7bde:	68 e2       	ldi	r22, 0x28	; 40
    7be0:	70 e0       	ldi	r23, 0x00	; 0
    7be2:	0e 94 05 7b 	call	0xf60a	; 0xf60a <__udivmodhi4>
    7be6:	80 e0       	ldi	r24, 0x00	; 0
    7be8:	90 e0       	ldi	r25, 0x00	; 0
    7bea:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    7bee:	5b 01       	movw	r10, r22
    7bf0:	6c 01       	movw	r12, r24
    7bf2:	96 94       	lsr	r9
    7bf4:	87 94       	ror	r8
    7bf6:	96 94       	lsr	r9
    7bf8:	87 94       	ror	r8
    7bfa:	96 94       	lsr	r9
    7bfc:	87 94       	ror	r8
    7bfe:	b4 01       	movw	r22, r8
    7c00:	80 e0       	ldi	r24, 0x00	; 0
    7c02:	90 e0       	ldi	r25, 0x00	; 0
    7c04:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    7c08:	f2 01       	movw	r30, r4
    7c0a:	60 83       	st	Z, r22
    7c0c:	71 83       	std	Z+1, r23	; 0x01
    7c0e:	82 83       	std	Z+2, r24	; 0x02
    7c10:	93 83       	std	Z+3, r25	; 0x03
    7c12:	c8 01       	movw	r24, r16
    7c14:	b7 01       	movw	r22, r14
    7c16:	20 e0       	ldi	r18, 0x00	; 0
    7c18:	30 e0       	ldi	r19, 0x00	; 0
    7c1a:	a9 01       	movw	r20, r18
    7c1c:	0f 2e       	mov	r0, r31
    7c1e:	f0 e0       	ldi	r31, 0x00	; 0
    7c20:	ef 2e       	mov	r14, r31
    7c22:	f0 e0       	ldi	r31, 0x00	; 0
    7c24:	ff 2e       	mov	r15, r31
    7c26:	f4 e3       	ldi	r31, 0x34	; 52
    7c28:	0f 2f       	mov	r16, r31
    7c2a:	f3 e4       	ldi	r31, 0x43	; 67
    7c2c:	1f 2f       	mov	r17, r31
    7c2e:	f0 2d       	mov	r31, r0
    7c30:	0e 94 a0 08 	call	0x1140	; 0x1140 <_Z3mapddddd>
    7c34:	0f 90       	pop	r0
    7c36:	0f 90       	pop	r0
    7c38:	0f 90       	pop	r0
    7c3a:	0f 90       	pop	r0
        OCR5B=ICR5-vAl;
    7c3c:	c0 91 26 01 	lds	r28, 0x0126
    7c40:	d0 91 27 01 	lds	r29, 0x0127
      case 46:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
        OCR5A=ICR5-vAl;
        break;
      case 45:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    7c44:	0e 94 bb 79 	call	0xf376	; 0xf376 <__fixsfsi>
        OCR5B=ICR5-vAl;
    7c48:	c6 1b       	sub	r28, r22
    7c4a:	d7 0b       	sbc	r29, r23
    7c4c:	d0 93 2b 01 	sts	0x012B, r29
    7c50:	c0 93 2a 01 	sts	0x012A, r28
    7c54:	52 c0       	rjmp	.+164    	; 0x7cfa <_Z6angle4i+0x888>
        break;
      case 44:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    7c56:	e6 e8       	ldi	r30, 0x86	; 134
    7c58:	f0 e0       	ldi	r31, 0x00	; 0
    7c5a:	a0 80       	ld	r10, Z
    7c5c:	b1 80       	ldd	r11, Z+1	; 0x01
    7c5e:	80 80       	ld	r8, Z
    7c60:	91 80       	ldd	r9, Z+1	; 0x01
    7c62:	00 d0       	rcall	.+0      	; 0x7c64 <_Z6angle4i+0x7f2>
    7c64:	0f 92       	push	r0
    7c66:	4d b6       	in	r4, 0x3d	; 61
    7c68:	5e b6       	in	r5, 0x3e	; 62
    7c6a:	08 94       	sec
    7c6c:	41 1c       	adc	r4, r1
    7c6e:	51 1c       	adc	r5, r1
    7c70:	be 01       	movw	r22, r28
    7c72:	88 27       	eor	r24, r24
    7c74:	77 fd       	sbrc	r23, 7
    7c76:	80 95       	com	r24
    7c78:	98 2f       	mov	r25, r24
    7c7a:	0e 94 ee 79 	call	0xf3dc	; 0xf3dc <__floatsisf>
    7c7e:	7b 01       	movw	r14, r22
    7c80:	8c 01       	movw	r16, r24
    7c82:	c5 01       	movw	r24, r10
    7c84:	68 e2       	ldi	r22, 0x28	; 40
    7c86:	70 e0       	ldi	r23, 0x00	; 0
    7c88:	0e 94 05 7b 	call	0xf60a	; 0xf60a <__udivmodhi4>
    7c8c:	80 e0       	ldi	r24, 0x00	; 0
    7c8e:	90 e0       	ldi	r25, 0x00	; 0
    7c90:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    7c94:	5b 01       	movw	r10, r22
    7c96:	6c 01       	movw	r12, r24
    7c98:	96 94       	lsr	r9
    7c9a:	87 94       	ror	r8
    7c9c:	96 94       	lsr	r9
    7c9e:	87 94       	ror	r8
    7ca0:	96 94       	lsr	r9
    7ca2:	87 94       	ror	r8
    7ca4:	b4 01       	movw	r22, r8
    7ca6:	80 e0       	ldi	r24, 0x00	; 0
    7ca8:	90 e0       	ldi	r25, 0x00	; 0
    7caa:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    7cae:	f2 01       	movw	r30, r4
    7cb0:	60 83       	st	Z, r22
    7cb2:	71 83       	std	Z+1, r23	; 0x01
    7cb4:	82 83       	std	Z+2, r24	; 0x02
    7cb6:	93 83       	std	Z+3, r25	; 0x03
    7cb8:	c8 01       	movw	r24, r16
    7cba:	b7 01       	movw	r22, r14
    7cbc:	20 e0       	ldi	r18, 0x00	; 0
    7cbe:	30 e0       	ldi	r19, 0x00	; 0
    7cc0:	a9 01       	movw	r20, r18
    7cc2:	0f 2e       	mov	r0, r31
    7cc4:	f0 e0       	ldi	r31, 0x00	; 0
    7cc6:	ef 2e       	mov	r14, r31
    7cc8:	f0 e0       	ldi	r31, 0x00	; 0
    7cca:	ff 2e       	mov	r15, r31
    7ccc:	f4 e3       	ldi	r31, 0x34	; 52
    7cce:	0f 2f       	mov	r16, r31
    7cd0:	f3 e4       	ldi	r31, 0x43	; 67
    7cd2:	1f 2f       	mov	r17, r31
    7cd4:	f0 2d       	mov	r31, r0
    7cd6:	0e 94 a0 08 	call	0x1140	; 0x1140 <_Z3mapddddd>
    7cda:	0f 90       	pop	r0
    7cdc:	0f 90       	pop	r0
    7cde:	0f 90       	pop	r0
    7ce0:	0f 90       	pop	r0
        OCR5C=ICR5-vAl;
    7ce2:	c0 91 26 01 	lds	r28, 0x0126
    7ce6:	d0 91 27 01 	lds	r29, 0x0127
      case 45:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
        OCR5B=ICR5-vAl;
        break;
      case 44:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    7cea:	0e 94 bb 79 	call	0xf376	; 0xf376 <__fixsfsi>
        OCR5C=ICR5-vAl;
    7cee:	c6 1b       	sub	r28, r22
    7cf0:	d7 0b       	sbc	r29, r23
    7cf2:	d0 93 2d 01 	sts	0x012D, r29
    7cf6:	c0 93 2c 01 	sts	0x012C, r28
		
		p.write(v);
		q.write(y);
    7cfa:	60 91 cc 02 	lds	r22, 0x02CC
    7cfe:	70 91 cd 02 	lds	r23, 0x02CD
     }
  }

  void write(int vAl)           //PIN=servo pin no. on mega,vAl=angle F_CPU for the servo at pin
  {
    switch(pIn)
    7d02:	80 91 d5 02 	lds	r24, 0x02D5
    7d06:	88 30       	cpi	r24, 0x08	; 8
    7d08:	09 f4       	brne	.+2      	; 0x7d0c <_Z6angle4i+0x89a>
    7d0a:	63 c2       	rjmp	.+1222   	; 0x81d2 <_Z6angle4i+0xd60>
    7d0c:	89 30       	cpi	r24, 0x09	; 9
    7d0e:	98 f4       	brcc	.+38     	; 0x7d36 <_Z6angle4i+0x8c4>
    7d10:	85 30       	cpi	r24, 0x05	; 5
    7d12:	09 f4       	brne	.+2      	; 0x7d16 <_Z6angle4i+0x8a4>
    7d14:	c4 c0       	rjmp	.+392    	; 0x7e9e <_Z6angle4i+0xa2c>
    7d16:	86 30       	cpi	r24, 0x06	; 6
    7d18:	38 f4       	brcc	.+14     	; 0x7d28 <_Z6angle4i+0x8b6>
    7d1a:	82 30       	cpi	r24, 0x02	; 2
    7d1c:	09 f4       	brne	.+2      	; 0x7d20 <_Z6angle4i+0x8ae>
    7d1e:	11 c1       	rjmp	.+546    	; 0x7f42 <_Z6angle4i+0xad0>
    7d20:	83 30       	cpi	r24, 0x03	; 3
    7d22:	09 f0       	breq	.+2      	; 0x7d26 <_Z6angle4i+0x8b4>
    7d24:	9d c3       	rjmp	.+1850   	; 0x8460 <_Z6angle4i+0xfee>
    7d26:	5f c1       	rjmp	.+702    	; 0x7fe6 <_Z6angle4i+0xb74>
    7d28:	86 30       	cpi	r24, 0x06	; 6
    7d2a:	09 f4       	brne	.+2      	; 0x7d2e <_Z6angle4i+0x8bc>
    7d2c:	ae c1       	rjmp	.+860    	; 0x808a <_Z6angle4i+0xc18>
    7d2e:	87 30       	cpi	r24, 0x07	; 7
    7d30:	09 f0       	breq	.+2      	; 0x7d34 <_Z6angle4i+0x8c2>
    7d32:	96 c3       	rjmp	.+1836   	; 0x8460 <_Z6angle4i+0xfee>
    7d34:	fc c1       	rjmp	.+1016   	; 0x812e <_Z6angle4i+0xcbc>
    7d36:	8c 32       	cpi	r24, 0x2C	; 44
    7d38:	09 f4       	brne	.+2      	; 0x7d3c <_Z6angle4i+0x8ca>
    7d3a:	41 c3       	rjmp	.+1666   	; 0x83be <_Z6angle4i+0xf4c>
    7d3c:	8d 32       	cpi	r24, 0x2D	; 45
    7d3e:	30 f4       	brcc	.+12     	; 0x7d4c <_Z6angle4i+0x8da>
    7d40:	8b 30       	cpi	r24, 0x0B	; 11
    7d42:	59 f0       	breq	.+22     	; 0x7d5a <_Z6angle4i+0x8e8>
    7d44:	8c 30       	cpi	r24, 0x0C	; 12
    7d46:	09 f0       	breq	.+2      	; 0x7d4a <_Z6angle4i+0x8d8>
    7d48:	8b c3       	rjmp	.+1814   	; 0x8460 <_Z6angle4i+0xfee>
    7d4a:	58 c0       	rjmp	.+176    	; 0x7dfc <_Z6angle4i+0x98a>
    7d4c:	8d 32       	cpi	r24, 0x2D	; 45
    7d4e:	09 f4       	brne	.+2      	; 0x7d52 <_Z6angle4i+0x8e0>
    7d50:	e4 c2       	rjmp	.+1480   	; 0x831a <_Z6angle4i+0xea8>
    7d52:	8e 32       	cpi	r24, 0x2E	; 46
    7d54:	09 f0       	breq	.+2      	; 0x7d58 <_Z6angle4i+0x8e6>
    7d56:	84 c3       	rjmp	.+1800   	; 0x8460 <_Z6angle4i+0xfee>
    7d58:	8e c2       	rjmp	.+1308   	; 0x8276 <_Z6angle4i+0xe04>
    {
     case 11:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    7d5a:	c6 e8       	ldi	r28, 0x86	; 134
    7d5c:	d0 e0       	ldi	r29, 0x00	; 0
    7d5e:	08 81       	ld	r16, Y
    7d60:	19 81       	ldd	r17, Y+1	; 0x01
    7d62:	e8 80       	ld	r14, Y
    7d64:	f9 80       	ldd	r15, Y+1	; 0x01
    7d66:	00 d0       	rcall	.+0      	; 0x7d68 <_Z6angle4i+0x8f6>
    7d68:	0f 92       	push	r0
    7d6a:	8d b6       	in	r8, 0x3d	; 61
    7d6c:	9e b6       	in	r9, 0x3e	; 62
    7d6e:	08 94       	sec
    7d70:	81 1c       	adc	r8, r1
    7d72:	91 1c       	adc	r9, r1
    7d74:	88 27       	eor	r24, r24
    7d76:	77 fd       	sbrc	r23, 7
    7d78:	80 95       	com	r24
    7d7a:	98 2f       	mov	r25, r24
    7d7c:	0e 94 ee 79 	call	0xf3dc	; 0xf3dc <__floatsisf>
    7d80:	2b 01       	movw	r4, r22
    7d82:	3c 01       	movw	r6, r24
    7d84:	c8 01       	movw	r24, r16
    7d86:	68 e2       	ldi	r22, 0x28	; 40
    7d88:	70 e0       	ldi	r23, 0x00	; 0
    7d8a:	0e 94 05 7b 	call	0xf60a	; 0xf60a <__udivmodhi4>
    7d8e:	80 e0       	ldi	r24, 0x00	; 0
    7d90:	90 e0       	ldi	r25, 0x00	; 0
    7d92:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    7d96:	5b 01       	movw	r10, r22
    7d98:	6c 01       	movw	r12, r24
    7d9a:	f6 94       	lsr	r15
    7d9c:	e7 94       	ror	r14
    7d9e:	f6 94       	lsr	r15
    7da0:	e7 94       	ror	r14
    7da2:	f6 94       	lsr	r15
    7da4:	e7 94       	ror	r14
    7da6:	b7 01       	movw	r22, r14
    7da8:	80 e0       	ldi	r24, 0x00	; 0
    7daa:	90 e0       	ldi	r25, 0x00	; 0
    7dac:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    7db0:	f4 01       	movw	r30, r8
    7db2:	60 83       	st	Z, r22
    7db4:	71 83       	std	Z+1, r23	; 0x01
    7db6:	82 83       	std	Z+2, r24	; 0x02
    7db8:	93 83       	std	Z+3, r25	; 0x03
    7dba:	c3 01       	movw	r24, r6
    7dbc:	b2 01       	movw	r22, r4
    7dbe:	20 e0       	ldi	r18, 0x00	; 0
    7dc0:	30 e0       	ldi	r19, 0x00	; 0
    7dc2:	a9 01       	movw	r20, r18
    7dc4:	0f 2e       	mov	r0, r31
    7dc6:	f0 e0       	ldi	r31, 0x00	; 0
    7dc8:	ef 2e       	mov	r14, r31
    7dca:	f0 e0       	ldi	r31, 0x00	; 0
    7dcc:	ff 2e       	mov	r15, r31
    7dce:	f4 e3       	ldi	r31, 0x34	; 52
    7dd0:	0f 2f       	mov	r16, r31
    7dd2:	f3 e4       	ldi	r31, 0x43	; 67
    7dd4:	1f 2f       	mov	r17, r31
    7dd6:	f0 2d       	mov	r31, r0
    7dd8:	0e 94 a0 08 	call	0x1140	; 0x1140 <_Z3mapddddd>
    7ddc:	0f 90       	pop	r0
    7dde:	0f 90       	pop	r0
    7de0:	0f 90       	pop	r0
    7de2:	0f 90       	pop	r0
        OCR1A=ICR1-vAl;
    7de4:	09 90       	ld	r0, Y+
    7de6:	d8 81       	ld	r29, Y
    7de8:	c0 2d       	mov	r28, r0
  void write(int vAl)           //PIN=servo pin no. on mega,vAl=angle F_CPU for the servo at pin
  {
    switch(pIn)
    {
     case 11:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    7dea:	0e 94 bb 79 	call	0xf376	; 0xf376 <__fixsfsi>
        OCR1A=ICR1-vAl;
    7dee:	c6 1b       	sub	r28, r22
    7df0:	d7 0b       	sbc	r29, r23
    7df2:	d0 93 89 00 	sts	0x0089, r29
    7df6:	c0 93 88 00 	sts	0x0088, r28
    7dfa:	32 c3       	rjmp	.+1636   	; 0x8460 <_Z6angle4i+0xfee>
        break;
      case 12:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    7dfc:	c6 e8       	ldi	r28, 0x86	; 134
    7dfe:	d0 e0       	ldi	r29, 0x00	; 0
    7e00:	08 81       	ld	r16, Y
    7e02:	19 81       	ldd	r17, Y+1	; 0x01
    7e04:	e8 80       	ld	r14, Y
    7e06:	f9 80       	ldd	r15, Y+1	; 0x01
    7e08:	00 d0       	rcall	.+0      	; 0x7e0a <_Z6angle4i+0x998>
    7e0a:	0f 92       	push	r0
    7e0c:	8d b6       	in	r8, 0x3d	; 61
    7e0e:	9e b6       	in	r9, 0x3e	; 62
    7e10:	08 94       	sec
    7e12:	81 1c       	adc	r8, r1
    7e14:	91 1c       	adc	r9, r1
    7e16:	88 27       	eor	r24, r24
    7e18:	77 fd       	sbrc	r23, 7
    7e1a:	80 95       	com	r24
    7e1c:	98 2f       	mov	r25, r24
    7e1e:	0e 94 ee 79 	call	0xf3dc	; 0xf3dc <__floatsisf>
    7e22:	2b 01       	movw	r4, r22
    7e24:	3c 01       	movw	r6, r24
    7e26:	c8 01       	movw	r24, r16
    7e28:	68 e2       	ldi	r22, 0x28	; 40
    7e2a:	70 e0       	ldi	r23, 0x00	; 0
    7e2c:	0e 94 05 7b 	call	0xf60a	; 0xf60a <__udivmodhi4>
    7e30:	80 e0       	ldi	r24, 0x00	; 0
    7e32:	90 e0       	ldi	r25, 0x00	; 0
    7e34:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    7e38:	5b 01       	movw	r10, r22
    7e3a:	6c 01       	movw	r12, r24
    7e3c:	f6 94       	lsr	r15
    7e3e:	e7 94       	ror	r14
    7e40:	f6 94       	lsr	r15
    7e42:	e7 94       	ror	r14
    7e44:	f6 94       	lsr	r15
    7e46:	e7 94       	ror	r14
    7e48:	b7 01       	movw	r22, r14
    7e4a:	80 e0       	ldi	r24, 0x00	; 0
    7e4c:	90 e0       	ldi	r25, 0x00	; 0
    7e4e:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    7e52:	f4 01       	movw	r30, r8
    7e54:	60 83       	st	Z, r22
    7e56:	71 83       	std	Z+1, r23	; 0x01
    7e58:	82 83       	std	Z+2, r24	; 0x02
    7e5a:	93 83       	std	Z+3, r25	; 0x03
    7e5c:	c3 01       	movw	r24, r6
    7e5e:	b2 01       	movw	r22, r4
    7e60:	20 e0       	ldi	r18, 0x00	; 0
    7e62:	30 e0       	ldi	r19, 0x00	; 0
    7e64:	a9 01       	movw	r20, r18
    7e66:	0f 2e       	mov	r0, r31
    7e68:	f0 e0       	ldi	r31, 0x00	; 0
    7e6a:	ef 2e       	mov	r14, r31
    7e6c:	f0 e0       	ldi	r31, 0x00	; 0
    7e6e:	ff 2e       	mov	r15, r31
    7e70:	f4 e3       	ldi	r31, 0x34	; 52
    7e72:	0f 2f       	mov	r16, r31
    7e74:	f3 e4       	ldi	r31, 0x43	; 67
    7e76:	1f 2f       	mov	r17, r31
    7e78:	f0 2d       	mov	r31, r0
    7e7a:	0e 94 a0 08 	call	0x1140	; 0x1140 <_Z3mapddddd>
    7e7e:	0f 90       	pop	r0
    7e80:	0f 90       	pop	r0
    7e82:	0f 90       	pop	r0
    7e84:	0f 90       	pop	r0
        OCR1B=ICR1-vAl;
    7e86:	09 90       	ld	r0, Y+
    7e88:	d8 81       	ld	r29, Y
    7e8a:	c0 2d       	mov	r28, r0
     case 11:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
        OCR1A=ICR1-vAl;
        break;
      case 12:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    7e8c:	0e 94 bb 79 	call	0xf376	; 0xf376 <__fixsfsi>
        OCR1B=ICR1-vAl;
    7e90:	c6 1b       	sub	r28, r22
    7e92:	d7 0b       	sbc	r29, r23
    7e94:	d0 93 8b 00 	sts	0x008B, r29
    7e98:	c0 93 8a 00 	sts	0x008A, r28
    7e9c:	e1 c2       	rjmp	.+1474   	; 0x8460 <_Z6angle4i+0xfee>
        break;
      case 5:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    7e9e:	e6 e8       	ldi	r30, 0x86	; 134
    7ea0:	f0 e0       	ldi	r31, 0x00	; 0
    7ea2:	c0 81       	ld	r28, Z
    7ea4:	d1 81       	ldd	r29, Z+1	; 0x01
    7ea6:	80 80       	ld	r8, Z
    7ea8:	91 80       	ldd	r9, Z+1	; 0x01
    7eaa:	00 d0       	rcall	.+0      	; 0x7eac <_Z6angle4i+0xa3a>
    7eac:	0f 92       	push	r0
    7eae:	4d b6       	in	r4, 0x3d	; 61
    7eb0:	5e b6       	in	r5, 0x3e	; 62
    7eb2:	08 94       	sec
    7eb4:	41 1c       	adc	r4, r1
    7eb6:	51 1c       	adc	r5, r1
    7eb8:	88 27       	eor	r24, r24
    7eba:	77 fd       	sbrc	r23, 7
    7ebc:	80 95       	com	r24
    7ebe:	98 2f       	mov	r25, r24
    7ec0:	0e 94 ee 79 	call	0xf3dc	; 0xf3dc <__floatsisf>
    7ec4:	7b 01       	movw	r14, r22
    7ec6:	8c 01       	movw	r16, r24
    7ec8:	ce 01       	movw	r24, r28
    7eca:	68 e2       	ldi	r22, 0x28	; 40
    7ecc:	70 e0       	ldi	r23, 0x00	; 0
    7ece:	0e 94 05 7b 	call	0xf60a	; 0xf60a <__udivmodhi4>
    7ed2:	80 e0       	ldi	r24, 0x00	; 0
    7ed4:	90 e0       	ldi	r25, 0x00	; 0
    7ed6:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    7eda:	5b 01       	movw	r10, r22
    7edc:	6c 01       	movw	r12, r24
    7ede:	96 94       	lsr	r9
    7ee0:	87 94       	ror	r8
    7ee2:	96 94       	lsr	r9
    7ee4:	87 94       	ror	r8
    7ee6:	96 94       	lsr	r9
    7ee8:	87 94       	ror	r8
    7eea:	b4 01       	movw	r22, r8
    7eec:	80 e0       	ldi	r24, 0x00	; 0
    7eee:	90 e0       	ldi	r25, 0x00	; 0
    7ef0:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    7ef4:	f2 01       	movw	r30, r4
    7ef6:	60 83       	st	Z, r22
    7ef8:	71 83       	std	Z+1, r23	; 0x01
    7efa:	82 83       	std	Z+2, r24	; 0x02
    7efc:	93 83       	std	Z+3, r25	; 0x03
    7efe:	c8 01       	movw	r24, r16
    7f00:	b7 01       	movw	r22, r14
    7f02:	20 e0       	ldi	r18, 0x00	; 0
    7f04:	30 e0       	ldi	r19, 0x00	; 0
    7f06:	a9 01       	movw	r20, r18
    7f08:	0f 2e       	mov	r0, r31
    7f0a:	f0 e0       	ldi	r31, 0x00	; 0
    7f0c:	ef 2e       	mov	r14, r31
    7f0e:	f0 e0       	ldi	r31, 0x00	; 0
    7f10:	ff 2e       	mov	r15, r31
    7f12:	f4 e3       	ldi	r31, 0x34	; 52
    7f14:	0f 2f       	mov	r16, r31
    7f16:	f3 e4       	ldi	r31, 0x43	; 67
    7f18:	1f 2f       	mov	r17, r31
    7f1a:	f0 2d       	mov	r31, r0
    7f1c:	0e 94 a0 08 	call	0x1140	; 0x1140 <_Z3mapddddd>
    7f20:	0f 90       	pop	r0
    7f22:	0f 90       	pop	r0
    7f24:	0f 90       	pop	r0
    7f26:	0f 90       	pop	r0
        OCR3A=ICR3-vAl;
    7f28:	c0 91 96 00 	lds	r28, 0x0096
    7f2c:	d0 91 97 00 	lds	r29, 0x0097
      case 12:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
        OCR1B=ICR1-vAl;
        break;
      case 5:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    7f30:	0e 94 bb 79 	call	0xf376	; 0xf376 <__fixsfsi>
        OCR3A=ICR3-vAl;
    7f34:	c6 1b       	sub	r28, r22
    7f36:	d7 0b       	sbc	r29, r23
    7f38:	d0 93 99 00 	sts	0x0099, r29
    7f3c:	c0 93 98 00 	sts	0x0098, r28
    7f40:	8f c2       	rjmp	.+1310   	; 0x8460 <_Z6angle4i+0xfee>
        break;
      case 2:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    7f42:	e6 e8       	ldi	r30, 0x86	; 134
    7f44:	f0 e0       	ldi	r31, 0x00	; 0
    7f46:	c0 81       	ld	r28, Z
    7f48:	d1 81       	ldd	r29, Z+1	; 0x01
    7f4a:	80 80       	ld	r8, Z
    7f4c:	91 80       	ldd	r9, Z+1	; 0x01
    7f4e:	00 d0       	rcall	.+0      	; 0x7f50 <_Z6angle4i+0xade>
    7f50:	0f 92       	push	r0
    7f52:	4d b6       	in	r4, 0x3d	; 61
    7f54:	5e b6       	in	r5, 0x3e	; 62
    7f56:	08 94       	sec
    7f58:	41 1c       	adc	r4, r1
    7f5a:	51 1c       	adc	r5, r1
    7f5c:	88 27       	eor	r24, r24
    7f5e:	77 fd       	sbrc	r23, 7
    7f60:	80 95       	com	r24
    7f62:	98 2f       	mov	r25, r24
    7f64:	0e 94 ee 79 	call	0xf3dc	; 0xf3dc <__floatsisf>
    7f68:	7b 01       	movw	r14, r22
    7f6a:	8c 01       	movw	r16, r24
    7f6c:	ce 01       	movw	r24, r28
    7f6e:	68 e2       	ldi	r22, 0x28	; 40
    7f70:	70 e0       	ldi	r23, 0x00	; 0
    7f72:	0e 94 05 7b 	call	0xf60a	; 0xf60a <__udivmodhi4>
    7f76:	80 e0       	ldi	r24, 0x00	; 0
    7f78:	90 e0       	ldi	r25, 0x00	; 0
    7f7a:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    7f7e:	5b 01       	movw	r10, r22
    7f80:	6c 01       	movw	r12, r24
    7f82:	96 94       	lsr	r9
    7f84:	87 94       	ror	r8
    7f86:	96 94       	lsr	r9
    7f88:	87 94       	ror	r8
    7f8a:	96 94       	lsr	r9
    7f8c:	87 94       	ror	r8
    7f8e:	b4 01       	movw	r22, r8
    7f90:	80 e0       	ldi	r24, 0x00	; 0
    7f92:	90 e0       	ldi	r25, 0x00	; 0
    7f94:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    7f98:	f2 01       	movw	r30, r4
    7f9a:	60 83       	st	Z, r22
    7f9c:	71 83       	std	Z+1, r23	; 0x01
    7f9e:	82 83       	std	Z+2, r24	; 0x02
    7fa0:	93 83       	std	Z+3, r25	; 0x03
    7fa2:	c8 01       	movw	r24, r16
    7fa4:	b7 01       	movw	r22, r14
    7fa6:	20 e0       	ldi	r18, 0x00	; 0
    7fa8:	30 e0       	ldi	r19, 0x00	; 0
    7faa:	a9 01       	movw	r20, r18
    7fac:	0f 2e       	mov	r0, r31
    7fae:	f0 e0       	ldi	r31, 0x00	; 0
    7fb0:	ef 2e       	mov	r14, r31
    7fb2:	f0 e0       	ldi	r31, 0x00	; 0
    7fb4:	ff 2e       	mov	r15, r31
    7fb6:	f4 e3       	ldi	r31, 0x34	; 52
    7fb8:	0f 2f       	mov	r16, r31
    7fba:	f3 e4       	ldi	r31, 0x43	; 67
    7fbc:	1f 2f       	mov	r17, r31
    7fbe:	f0 2d       	mov	r31, r0
    7fc0:	0e 94 a0 08 	call	0x1140	; 0x1140 <_Z3mapddddd>
    7fc4:	0f 90       	pop	r0
    7fc6:	0f 90       	pop	r0
    7fc8:	0f 90       	pop	r0
    7fca:	0f 90       	pop	r0
        OCR3B=ICR3-vAl;
    7fcc:	c0 91 96 00 	lds	r28, 0x0096
    7fd0:	d0 91 97 00 	lds	r29, 0x0097
      case 5:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
        OCR3A=ICR3-vAl;
        break;
      case 2:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    7fd4:	0e 94 bb 79 	call	0xf376	; 0xf376 <__fixsfsi>
        OCR3B=ICR3-vAl;
    7fd8:	c6 1b       	sub	r28, r22
    7fda:	d7 0b       	sbc	r29, r23
    7fdc:	d0 93 9b 00 	sts	0x009B, r29
    7fe0:	c0 93 9a 00 	sts	0x009A, r28
    7fe4:	3d c2       	rjmp	.+1146   	; 0x8460 <_Z6angle4i+0xfee>
        break;
      case 3:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    7fe6:	e6 e8       	ldi	r30, 0x86	; 134
    7fe8:	f0 e0       	ldi	r31, 0x00	; 0
    7fea:	c0 81       	ld	r28, Z
    7fec:	d1 81       	ldd	r29, Z+1	; 0x01
    7fee:	80 80       	ld	r8, Z
    7ff0:	91 80       	ldd	r9, Z+1	; 0x01
    7ff2:	00 d0       	rcall	.+0      	; 0x7ff4 <_Z6angle4i+0xb82>
    7ff4:	0f 92       	push	r0
    7ff6:	4d b6       	in	r4, 0x3d	; 61
    7ff8:	5e b6       	in	r5, 0x3e	; 62
    7ffa:	08 94       	sec
    7ffc:	41 1c       	adc	r4, r1
    7ffe:	51 1c       	adc	r5, r1
    8000:	88 27       	eor	r24, r24
    8002:	77 fd       	sbrc	r23, 7
    8004:	80 95       	com	r24
    8006:	98 2f       	mov	r25, r24
    8008:	0e 94 ee 79 	call	0xf3dc	; 0xf3dc <__floatsisf>
    800c:	7b 01       	movw	r14, r22
    800e:	8c 01       	movw	r16, r24
    8010:	ce 01       	movw	r24, r28
    8012:	68 e2       	ldi	r22, 0x28	; 40
    8014:	70 e0       	ldi	r23, 0x00	; 0
    8016:	0e 94 05 7b 	call	0xf60a	; 0xf60a <__udivmodhi4>
    801a:	80 e0       	ldi	r24, 0x00	; 0
    801c:	90 e0       	ldi	r25, 0x00	; 0
    801e:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    8022:	5b 01       	movw	r10, r22
    8024:	6c 01       	movw	r12, r24
    8026:	96 94       	lsr	r9
    8028:	87 94       	ror	r8
    802a:	96 94       	lsr	r9
    802c:	87 94       	ror	r8
    802e:	96 94       	lsr	r9
    8030:	87 94       	ror	r8
    8032:	b4 01       	movw	r22, r8
    8034:	80 e0       	ldi	r24, 0x00	; 0
    8036:	90 e0       	ldi	r25, 0x00	; 0
    8038:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    803c:	f2 01       	movw	r30, r4
    803e:	60 83       	st	Z, r22
    8040:	71 83       	std	Z+1, r23	; 0x01
    8042:	82 83       	std	Z+2, r24	; 0x02
    8044:	93 83       	std	Z+3, r25	; 0x03
    8046:	c8 01       	movw	r24, r16
    8048:	b7 01       	movw	r22, r14
    804a:	20 e0       	ldi	r18, 0x00	; 0
    804c:	30 e0       	ldi	r19, 0x00	; 0
    804e:	a9 01       	movw	r20, r18
    8050:	0f 2e       	mov	r0, r31
    8052:	f0 e0       	ldi	r31, 0x00	; 0
    8054:	ef 2e       	mov	r14, r31
    8056:	f0 e0       	ldi	r31, 0x00	; 0
    8058:	ff 2e       	mov	r15, r31
    805a:	f4 e3       	ldi	r31, 0x34	; 52
    805c:	0f 2f       	mov	r16, r31
    805e:	f3 e4       	ldi	r31, 0x43	; 67
    8060:	1f 2f       	mov	r17, r31
    8062:	f0 2d       	mov	r31, r0
    8064:	0e 94 a0 08 	call	0x1140	; 0x1140 <_Z3mapddddd>
    8068:	0f 90       	pop	r0
    806a:	0f 90       	pop	r0
    806c:	0f 90       	pop	r0
    806e:	0f 90       	pop	r0
        OCR3C=ICR3-vAl;
    8070:	c0 91 96 00 	lds	r28, 0x0096
    8074:	d0 91 97 00 	lds	r29, 0x0097
      case 2:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
        OCR3B=ICR3-vAl;
        break;
      case 3:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    8078:	0e 94 bb 79 	call	0xf376	; 0xf376 <__fixsfsi>
        OCR3C=ICR3-vAl;
    807c:	c6 1b       	sub	r28, r22
    807e:	d7 0b       	sbc	r29, r23
    8080:	d0 93 9d 00 	sts	0x009D, r29
    8084:	c0 93 9c 00 	sts	0x009C, r28
    8088:	eb c1       	rjmp	.+982    	; 0x8460 <_Z6angle4i+0xfee>
        break;
      case 6:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    808a:	e6 e8       	ldi	r30, 0x86	; 134
    808c:	f0 e0       	ldi	r31, 0x00	; 0
    808e:	c0 81       	ld	r28, Z
    8090:	d1 81       	ldd	r29, Z+1	; 0x01
    8092:	80 80       	ld	r8, Z
    8094:	91 80       	ldd	r9, Z+1	; 0x01
    8096:	00 d0       	rcall	.+0      	; 0x8098 <_Z6angle4i+0xc26>
    8098:	0f 92       	push	r0
    809a:	4d b6       	in	r4, 0x3d	; 61
    809c:	5e b6       	in	r5, 0x3e	; 62
    809e:	08 94       	sec
    80a0:	41 1c       	adc	r4, r1
    80a2:	51 1c       	adc	r5, r1
    80a4:	88 27       	eor	r24, r24
    80a6:	77 fd       	sbrc	r23, 7
    80a8:	80 95       	com	r24
    80aa:	98 2f       	mov	r25, r24
    80ac:	0e 94 ee 79 	call	0xf3dc	; 0xf3dc <__floatsisf>
    80b0:	7b 01       	movw	r14, r22
    80b2:	8c 01       	movw	r16, r24
    80b4:	ce 01       	movw	r24, r28
    80b6:	68 e2       	ldi	r22, 0x28	; 40
    80b8:	70 e0       	ldi	r23, 0x00	; 0
    80ba:	0e 94 05 7b 	call	0xf60a	; 0xf60a <__udivmodhi4>
    80be:	80 e0       	ldi	r24, 0x00	; 0
    80c0:	90 e0       	ldi	r25, 0x00	; 0
    80c2:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    80c6:	5b 01       	movw	r10, r22
    80c8:	6c 01       	movw	r12, r24
    80ca:	96 94       	lsr	r9
    80cc:	87 94       	ror	r8
    80ce:	96 94       	lsr	r9
    80d0:	87 94       	ror	r8
    80d2:	96 94       	lsr	r9
    80d4:	87 94       	ror	r8
    80d6:	b4 01       	movw	r22, r8
    80d8:	80 e0       	ldi	r24, 0x00	; 0
    80da:	90 e0       	ldi	r25, 0x00	; 0
    80dc:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    80e0:	f2 01       	movw	r30, r4
    80e2:	60 83       	st	Z, r22
    80e4:	71 83       	std	Z+1, r23	; 0x01
    80e6:	82 83       	std	Z+2, r24	; 0x02
    80e8:	93 83       	std	Z+3, r25	; 0x03
    80ea:	c8 01       	movw	r24, r16
    80ec:	b7 01       	movw	r22, r14
    80ee:	20 e0       	ldi	r18, 0x00	; 0
    80f0:	30 e0       	ldi	r19, 0x00	; 0
    80f2:	a9 01       	movw	r20, r18
    80f4:	0f 2e       	mov	r0, r31
    80f6:	f0 e0       	ldi	r31, 0x00	; 0
    80f8:	ef 2e       	mov	r14, r31
    80fa:	f0 e0       	ldi	r31, 0x00	; 0
    80fc:	ff 2e       	mov	r15, r31
    80fe:	f4 e3       	ldi	r31, 0x34	; 52
    8100:	0f 2f       	mov	r16, r31
    8102:	f3 e4       	ldi	r31, 0x43	; 67
    8104:	1f 2f       	mov	r17, r31
    8106:	f0 2d       	mov	r31, r0
    8108:	0e 94 a0 08 	call	0x1140	; 0x1140 <_Z3mapddddd>
    810c:	0f 90       	pop	r0
    810e:	0f 90       	pop	r0
    8110:	0f 90       	pop	r0
    8112:	0f 90       	pop	r0
        OCR4A=ICR4-vAl;
    8114:	c0 91 a6 00 	lds	r28, 0x00A6
    8118:	d0 91 a7 00 	lds	r29, 0x00A7
      case 3:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
        OCR3C=ICR3-vAl;
        break;
      case 6:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    811c:	0e 94 bb 79 	call	0xf376	; 0xf376 <__fixsfsi>
        OCR4A=ICR4-vAl;
    8120:	c6 1b       	sub	r28, r22
    8122:	d7 0b       	sbc	r29, r23
    8124:	d0 93 a9 00 	sts	0x00A9, r29
    8128:	c0 93 a8 00 	sts	0x00A8, r28
    812c:	99 c1       	rjmp	.+818    	; 0x8460 <_Z6angle4i+0xfee>
        break;
      case 7:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    812e:	e6 e8       	ldi	r30, 0x86	; 134
    8130:	f0 e0       	ldi	r31, 0x00	; 0
    8132:	c0 81       	ld	r28, Z
    8134:	d1 81       	ldd	r29, Z+1	; 0x01
    8136:	80 80       	ld	r8, Z
    8138:	91 80       	ldd	r9, Z+1	; 0x01
    813a:	00 d0       	rcall	.+0      	; 0x813c <_Z6angle4i+0xcca>
    813c:	0f 92       	push	r0
    813e:	4d b6       	in	r4, 0x3d	; 61
    8140:	5e b6       	in	r5, 0x3e	; 62
    8142:	08 94       	sec
    8144:	41 1c       	adc	r4, r1
    8146:	51 1c       	adc	r5, r1
    8148:	88 27       	eor	r24, r24
    814a:	77 fd       	sbrc	r23, 7
    814c:	80 95       	com	r24
    814e:	98 2f       	mov	r25, r24
    8150:	0e 94 ee 79 	call	0xf3dc	; 0xf3dc <__floatsisf>
    8154:	7b 01       	movw	r14, r22
    8156:	8c 01       	movw	r16, r24
    8158:	ce 01       	movw	r24, r28
    815a:	68 e2       	ldi	r22, 0x28	; 40
    815c:	70 e0       	ldi	r23, 0x00	; 0
    815e:	0e 94 05 7b 	call	0xf60a	; 0xf60a <__udivmodhi4>
    8162:	80 e0       	ldi	r24, 0x00	; 0
    8164:	90 e0       	ldi	r25, 0x00	; 0
    8166:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    816a:	5b 01       	movw	r10, r22
    816c:	6c 01       	movw	r12, r24
    816e:	96 94       	lsr	r9
    8170:	87 94       	ror	r8
    8172:	96 94       	lsr	r9
    8174:	87 94       	ror	r8
    8176:	96 94       	lsr	r9
    8178:	87 94       	ror	r8
    817a:	b4 01       	movw	r22, r8
    817c:	80 e0       	ldi	r24, 0x00	; 0
    817e:	90 e0       	ldi	r25, 0x00	; 0
    8180:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    8184:	f2 01       	movw	r30, r4
    8186:	60 83       	st	Z, r22
    8188:	71 83       	std	Z+1, r23	; 0x01
    818a:	82 83       	std	Z+2, r24	; 0x02
    818c:	93 83       	std	Z+3, r25	; 0x03
    818e:	c8 01       	movw	r24, r16
    8190:	b7 01       	movw	r22, r14
    8192:	20 e0       	ldi	r18, 0x00	; 0
    8194:	30 e0       	ldi	r19, 0x00	; 0
    8196:	a9 01       	movw	r20, r18
    8198:	0f 2e       	mov	r0, r31
    819a:	f0 e0       	ldi	r31, 0x00	; 0
    819c:	ef 2e       	mov	r14, r31
    819e:	f0 e0       	ldi	r31, 0x00	; 0
    81a0:	ff 2e       	mov	r15, r31
    81a2:	f4 e3       	ldi	r31, 0x34	; 52
    81a4:	0f 2f       	mov	r16, r31
    81a6:	f3 e4       	ldi	r31, 0x43	; 67
    81a8:	1f 2f       	mov	r17, r31
    81aa:	f0 2d       	mov	r31, r0
    81ac:	0e 94 a0 08 	call	0x1140	; 0x1140 <_Z3mapddddd>
    81b0:	0f 90       	pop	r0
    81b2:	0f 90       	pop	r0
    81b4:	0f 90       	pop	r0
    81b6:	0f 90       	pop	r0
        OCR4B=ICR4-vAl;
    81b8:	c0 91 a6 00 	lds	r28, 0x00A6
    81bc:	d0 91 a7 00 	lds	r29, 0x00A7
      case 6:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
        OCR4A=ICR4-vAl;
        break;
      case 7:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    81c0:	0e 94 bb 79 	call	0xf376	; 0xf376 <__fixsfsi>
        OCR4B=ICR4-vAl;
    81c4:	c6 1b       	sub	r28, r22
    81c6:	d7 0b       	sbc	r29, r23
    81c8:	d0 93 ab 00 	sts	0x00AB, r29
    81cc:	c0 93 aa 00 	sts	0x00AA, r28
    81d0:	47 c1       	rjmp	.+654    	; 0x8460 <_Z6angle4i+0xfee>
        break; 
      case 8:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    81d2:	e6 e8       	ldi	r30, 0x86	; 134
    81d4:	f0 e0       	ldi	r31, 0x00	; 0
    81d6:	c0 81       	ld	r28, Z
    81d8:	d1 81       	ldd	r29, Z+1	; 0x01
    81da:	80 80       	ld	r8, Z
    81dc:	91 80       	ldd	r9, Z+1	; 0x01
    81de:	00 d0       	rcall	.+0      	; 0x81e0 <_Z6angle4i+0xd6e>
    81e0:	0f 92       	push	r0
    81e2:	4d b6       	in	r4, 0x3d	; 61
    81e4:	5e b6       	in	r5, 0x3e	; 62
    81e6:	08 94       	sec
    81e8:	41 1c       	adc	r4, r1
    81ea:	51 1c       	adc	r5, r1
    81ec:	88 27       	eor	r24, r24
    81ee:	77 fd       	sbrc	r23, 7
    81f0:	80 95       	com	r24
    81f2:	98 2f       	mov	r25, r24
    81f4:	0e 94 ee 79 	call	0xf3dc	; 0xf3dc <__floatsisf>
    81f8:	7b 01       	movw	r14, r22
    81fa:	8c 01       	movw	r16, r24
    81fc:	ce 01       	movw	r24, r28
    81fe:	68 e2       	ldi	r22, 0x28	; 40
    8200:	70 e0       	ldi	r23, 0x00	; 0
    8202:	0e 94 05 7b 	call	0xf60a	; 0xf60a <__udivmodhi4>
    8206:	80 e0       	ldi	r24, 0x00	; 0
    8208:	90 e0       	ldi	r25, 0x00	; 0
    820a:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    820e:	5b 01       	movw	r10, r22
    8210:	6c 01       	movw	r12, r24
    8212:	96 94       	lsr	r9
    8214:	87 94       	ror	r8
    8216:	96 94       	lsr	r9
    8218:	87 94       	ror	r8
    821a:	96 94       	lsr	r9
    821c:	87 94       	ror	r8
    821e:	b4 01       	movw	r22, r8
    8220:	80 e0       	ldi	r24, 0x00	; 0
    8222:	90 e0       	ldi	r25, 0x00	; 0
    8224:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    8228:	f2 01       	movw	r30, r4
    822a:	60 83       	st	Z, r22
    822c:	71 83       	std	Z+1, r23	; 0x01
    822e:	82 83       	std	Z+2, r24	; 0x02
    8230:	93 83       	std	Z+3, r25	; 0x03
    8232:	c8 01       	movw	r24, r16
    8234:	b7 01       	movw	r22, r14
    8236:	20 e0       	ldi	r18, 0x00	; 0
    8238:	30 e0       	ldi	r19, 0x00	; 0
    823a:	a9 01       	movw	r20, r18
    823c:	0f 2e       	mov	r0, r31
    823e:	f0 e0       	ldi	r31, 0x00	; 0
    8240:	ef 2e       	mov	r14, r31
    8242:	f0 e0       	ldi	r31, 0x00	; 0
    8244:	ff 2e       	mov	r15, r31
    8246:	f4 e3       	ldi	r31, 0x34	; 52
    8248:	0f 2f       	mov	r16, r31
    824a:	f3 e4       	ldi	r31, 0x43	; 67
    824c:	1f 2f       	mov	r17, r31
    824e:	f0 2d       	mov	r31, r0
    8250:	0e 94 a0 08 	call	0x1140	; 0x1140 <_Z3mapddddd>
    8254:	0f 90       	pop	r0
    8256:	0f 90       	pop	r0
    8258:	0f 90       	pop	r0
    825a:	0f 90       	pop	r0
        OCR4C=ICR4-vAl;
    825c:	c0 91 a6 00 	lds	r28, 0x00A6
    8260:	d0 91 a7 00 	lds	r29, 0x00A7
      case 7:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
        OCR4B=ICR4-vAl;
        break; 
      case 8:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    8264:	0e 94 bb 79 	call	0xf376	; 0xf376 <__fixsfsi>
        OCR4C=ICR4-vAl;
    8268:	c6 1b       	sub	r28, r22
    826a:	d7 0b       	sbc	r29, r23
    826c:	d0 93 ad 00 	sts	0x00AD, r29
    8270:	c0 93 ac 00 	sts	0x00AC, r28
    8274:	f5 c0       	rjmp	.+490    	; 0x8460 <_Z6angle4i+0xfee>
        break;
      case 46:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    8276:	e6 e8       	ldi	r30, 0x86	; 134
    8278:	f0 e0       	ldi	r31, 0x00	; 0
    827a:	c0 81       	ld	r28, Z
    827c:	d1 81       	ldd	r29, Z+1	; 0x01
    827e:	80 80       	ld	r8, Z
    8280:	91 80       	ldd	r9, Z+1	; 0x01
    8282:	00 d0       	rcall	.+0      	; 0x8284 <_Z6angle4i+0xe12>
    8284:	0f 92       	push	r0
    8286:	4d b6       	in	r4, 0x3d	; 61
    8288:	5e b6       	in	r5, 0x3e	; 62
    828a:	08 94       	sec
    828c:	41 1c       	adc	r4, r1
    828e:	51 1c       	adc	r5, r1
    8290:	88 27       	eor	r24, r24
    8292:	77 fd       	sbrc	r23, 7
    8294:	80 95       	com	r24
    8296:	98 2f       	mov	r25, r24
    8298:	0e 94 ee 79 	call	0xf3dc	; 0xf3dc <__floatsisf>
    829c:	7b 01       	movw	r14, r22
    829e:	8c 01       	movw	r16, r24
    82a0:	ce 01       	movw	r24, r28
    82a2:	68 e2       	ldi	r22, 0x28	; 40
    82a4:	70 e0       	ldi	r23, 0x00	; 0
    82a6:	0e 94 05 7b 	call	0xf60a	; 0xf60a <__udivmodhi4>
    82aa:	80 e0       	ldi	r24, 0x00	; 0
    82ac:	90 e0       	ldi	r25, 0x00	; 0
    82ae:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    82b2:	5b 01       	movw	r10, r22
    82b4:	6c 01       	movw	r12, r24
    82b6:	96 94       	lsr	r9
    82b8:	87 94       	ror	r8
    82ba:	96 94       	lsr	r9
    82bc:	87 94       	ror	r8
    82be:	96 94       	lsr	r9
    82c0:	87 94       	ror	r8
    82c2:	b4 01       	movw	r22, r8
    82c4:	80 e0       	ldi	r24, 0x00	; 0
    82c6:	90 e0       	ldi	r25, 0x00	; 0
    82c8:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    82cc:	f2 01       	movw	r30, r4
    82ce:	60 83       	st	Z, r22
    82d0:	71 83       	std	Z+1, r23	; 0x01
    82d2:	82 83       	std	Z+2, r24	; 0x02
    82d4:	93 83       	std	Z+3, r25	; 0x03
    82d6:	c8 01       	movw	r24, r16
    82d8:	b7 01       	movw	r22, r14
    82da:	20 e0       	ldi	r18, 0x00	; 0
    82dc:	30 e0       	ldi	r19, 0x00	; 0
    82de:	a9 01       	movw	r20, r18
    82e0:	0f 2e       	mov	r0, r31
    82e2:	f0 e0       	ldi	r31, 0x00	; 0
    82e4:	ef 2e       	mov	r14, r31
    82e6:	f0 e0       	ldi	r31, 0x00	; 0
    82e8:	ff 2e       	mov	r15, r31
    82ea:	f4 e3       	ldi	r31, 0x34	; 52
    82ec:	0f 2f       	mov	r16, r31
    82ee:	f3 e4       	ldi	r31, 0x43	; 67
    82f0:	1f 2f       	mov	r17, r31
    82f2:	f0 2d       	mov	r31, r0
    82f4:	0e 94 a0 08 	call	0x1140	; 0x1140 <_Z3mapddddd>
    82f8:	0f 90       	pop	r0
    82fa:	0f 90       	pop	r0
    82fc:	0f 90       	pop	r0
    82fe:	0f 90       	pop	r0
        OCR5A=ICR5-vAl;
    8300:	c0 91 26 01 	lds	r28, 0x0126
    8304:	d0 91 27 01 	lds	r29, 0x0127
      case 8:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
        OCR4C=ICR4-vAl;
        break;
      case 46:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    8308:	0e 94 bb 79 	call	0xf376	; 0xf376 <__fixsfsi>
        OCR5A=ICR5-vAl;
    830c:	c6 1b       	sub	r28, r22
    830e:	d7 0b       	sbc	r29, r23
    8310:	d0 93 29 01 	sts	0x0129, r29
    8314:	c0 93 28 01 	sts	0x0128, r28
    8318:	a3 c0       	rjmp	.+326    	; 0x8460 <_Z6angle4i+0xfee>
        break;
      case 45:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    831a:	e6 e8       	ldi	r30, 0x86	; 134
    831c:	f0 e0       	ldi	r31, 0x00	; 0
    831e:	c0 81       	ld	r28, Z
    8320:	d1 81       	ldd	r29, Z+1	; 0x01
    8322:	80 80       	ld	r8, Z
    8324:	91 80       	ldd	r9, Z+1	; 0x01
    8326:	00 d0       	rcall	.+0      	; 0x8328 <_Z6angle4i+0xeb6>
    8328:	0f 92       	push	r0
    832a:	4d b6       	in	r4, 0x3d	; 61
    832c:	5e b6       	in	r5, 0x3e	; 62
    832e:	08 94       	sec
    8330:	41 1c       	adc	r4, r1
    8332:	51 1c       	adc	r5, r1
    8334:	88 27       	eor	r24, r24
    8336:	77 fd       	sbrc	r23, 7
    8338:	80 95       	com	r24
    833a:	98 2f       	mov	r25, r24
    833c:	0e 94 ee 79 	call	0xf3dc	; 0xf3dc <__floatsisf>
    8340:	7b 01       	movw	r14, r22
    8342:	8c 01       	movw	r16, r24
    8344:	ce 01       	movw	r24, r28
    8346:	68 e2       	ldi	r22, 0x28	; 40
    8348:	70 e0       	ldi	r23, 0x00	; 0
    834a:	0e 94 05 7b 	call	0xf60a	; 0xf60a <__udivmodhi4>
    834e:	80 e0       	ldi	r24, 0x00	; 0
    8350:	90 e0       	ldi	r25, 0x00	; 0
    8352:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    8356:	5b 01       	movw	r10, r22
    8358:	6c 01       	movw	r12, r24
    835a:	96 94       	lsr	r9
    835c:	87 94       	ror	r8
    835e:	96 94       	lsr	r9
    8360:	87 94       	ror	r8
    8362:	96 94       	lsr	r9
    8364:	87 94       	ror	r8
    8366:	b4 01       	movw	r22, r8
    8368:	80 e0       	ldi	r24, 0x00	; 0
    836a:	90 e0       	ldi	r25, 0x00	; 0
    836c:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    8370:	f2 01       	movw	r30, r4
    8372:	60 83       	st	Z, r22
    8374:	71 83       	std	Z+1, r23	; 0x01
    8376:	82 83       	std	Z+2, r24	; 0x02
    8378:	93 83       	std	Z+3, r25	; 0x03
    837a:	c8 01       	movw	r24, r16
    837c:	b7 01       	movw	r22, r14
    837e:	20 e0       	ldi	r18, 0x00	; 0
    8380:	30 e0       	ldi	r19, 0x00	; 0
    8382:	a9 01       	movw	r20, r18
    8384:	0f 2e       	mov	r0, r31
    8386:	f0 e0       	ldi	r31, 0x00	; 0
    8388:	ef 2e       	mov	r14, r31
    838a:	f0 e0       	ldi	r31, 0x00	; 0
    838c:	ff 2e       	mov	r15, r31
    838e:	f4 e3       	ldi	r31, 0x34	; 52
    8390:	0f 2f       	mov	r16, r31
    8392:	f3 e4       	ldi	r31, 0x43	; 67
    8394:	1f 2f       	mov	r17, r31
    8396:	f0 2d       	mov	r31, r0
    8398:	0e 94 a0 08 	call	0x1140	; 0x1140 <_Z3mapddddd>
    839c:	0f 90       	pop	r0
    839e:	0f 90       	pop	r0
    83a0:	0f 90       	pop	r0
    83a2:	0f 90       	pop	r0
        OCR5B=ICR5-vAl;
    83a4:	c0 91 26 01 	lds	r28, 0x0126
    83a8:	d0 91 27 01 	lds	r29, 0x0127
      case 46:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
        OCR5A=ICR5-vAl;
        break;
      case 45:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    83ac:	0e 94 bb 79 	call	0xf376	; 0xf376 <__fixsfsi>
        OCR5B=ICR5-vAl;
    83b0:	c6 1b       	sub	r28, r22
    83b2:	d7 0b       	sbc	r29, r23
    83b4:	d0 93 2b 01 	sts	0x012B, r29
    83b8:	c0 93 2a 01 	sts	0x012A, r28
    83bc:	51 c0       	rjmp	.+162    	; 0x8460 <_Z6angle4i+0xfee>
        break;
      case 44:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    83be:	e6 e8       	ldi	r30, 0x86	; 134
    83c0:	f0 e0       	ldi	r31, 0x00	; 0
    83c2:	c0 81       	ld	r28, Z
    83c4:	d1 81       	ldd	r29, Z+1	; 0x01
    83c6:	80 80       	ld	r8, Z
    83c8:	91 80       	ldd	r9, Z+1	; 0x01
    83ca:	00 d0       	rcall	.+0      	; 0x83cc <_Z6angle4i+0xf5a>
    83cc:	0f 92       	push	r0
    83ce:	4d b6       	in	r4, 0x3d	; 61
    83d0:	5e b6       	in	r5, 0x3e	; 62
    83d2:	08 94       	sec
    83d4:	41 1c       	adc	r4, r1
    83d6:	51 1c       	adc	r5, r1
    83d8:	88 27       	eor	r24, r24
    83da:	77 fd       	sbrc	r23, 7
    83dc:	80 95       	com	r24
    83de:	98 2f       	mov	r25, r24
    83e0:	0e 94 ee 79 	call	0xf3dc	; 0xf3dc <__floatsisf>
    83e4:	7b 01       	movw	r14, r22
    83e6:	8c 01       	movw	r16, r24
    83e8:	ce 01       	movw	r24, r28
    83ea:	68 e2       	ldi	r22, 0x28	; 40
    83ec:	70 e0       	ldi	r23, 0x00	; 0
    83ee:	0e 94 05 7b 	call	0xf60a	; 0xf60a <__udivmodhi4>
    83f2:	80 e0       	ldi	r24, 0x00	; 0
    83f4:	90 e0       	ldi	r25, 0x00	; 0
    83f6:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    83fa:	5b 01       	movw	r10, r22
    83fc:	6c 01       	movw	r12, r24
    83fe:	96 94       	lsr	r9
    8400:	87 94       	ror	r8
    8402:	96 94       	lsr	r9
    8404:	87 94       	ror	r8
    8406:	96 94       	lsr	r9
    8408:	87 94       	ror	r8
    840a:	b4 01       	movw	r22, r8
    840c:	80 e0       	ldi	r24, 0x00	; 0
    840e:	90 e0       	ldi	r25, 0x00	; 0
    8410:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    8414:	f2 01       	movw	r30, r4
    8416:	60 83       	st	Z, r22
    8418:	71 83       	std	Z+1, r23	; 0x01
    841a:	82 83       	std	Z+2, r24	; 0x02
    841c:	93 83       	std	Z+3, r25	; 0x03
    841e:	c8 01       	movw	r24, r16
    8420:	b7 01       	movw	r22, r14
    8422:	20 e0       	ldi	r18, 0x00	; 0
    8424:	30 e0       	ldi	r19, 0x00	; 0
    8426:	a9 01       	movw	r20, r18
    8428:	0f 2e       	mov	r0, r31
    842a:	f0 e0       	ldi	r31, 0x00	; 0
    842c:	ef 2e       	mov	r14, r31
    842e:	f0 e0       	ldi	r31, 0x00	; 0
    8430:	ff 2e       	mov	r15, r31
    8432:	f4 e3       	ldi	r31, 0x34	; 52
    8434:	0f 2f       	mov	r16, r31
    8436:	f3 e4       	ldi	r31, 0x43	; 67
    8438:	1f 2f       	mov	r17, r31
    843a:	f0 2d       	mov	r31, r0
    843c:	0e 94 a0 08 	call	0x1140	; 0x1140 <_Z3mapddddd>
    8440:	0f 90       	pop	r0
    8442:	0f 90       	pop	r0
    8444:	0f 90       	pop	r0
    8446:	0f 90       	pop	r0
        OCR5C=ICR5-vAl;
    8448:	c0 91 26 01 	lds	r28, 0x0126
    844c:	d0 91 27 01 	lds	r29, 0x0127
      case 45:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
        OCR5B=ICR5-vAl;
        break;
      case 44:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    8450:	0e 94 bb 79 	call	0xf376	; 0xf376 <__fixsfsi>
        OCR5C=ICR5-vAl;
    8454:	c6 1b       	sub	r28, r22
    8456:	d7 0b       	sbc	r29, r23
    8458:	d0 93 2d 01 	sts	0x012D, r29
    845c:	c0 93 2c 01 	sts	0x012C, r28
		r.write(z);
    8460:	60 91 ce 02 	lds	r22, 0x02CE
    8464:	70 91 cf 02 	lds	r23, 0x02CF
     }
  }

  void write(int vAl)           //PIN=servo pin no. on mega,vAl=angle F_CPU for the servo at pin
  {
    switch(pIn)
    8468:	80 91 d6 02 	lds	r24, 0x02D6
    846c:	88 30       	cpi	r24, 0x08	; 8
    846e:	09 f4       	brne	.+2      	; 0x8472 <_Z6angle4i+0x1000>
    8470:	63 c2       	rjmp	.+1222   	; 0x8938 <_Z6angle4i+0x14c6>
    8472:	89 30       	cpi	r24, 0x09	; 9
    8474:	98 f4       	brcc	.+38     	; 0x849c <_Z6angle4i+0x102a>
    8476:	85 30       	cpi	r24, 0x05	; 5
    8478:	09 f4       	brne	.+2      	; 0x847c <_Z6angle4i+0x100a>
    847a:	c4 c0       	rjmp	.+392    	; 0x8604 <_Z6angle4i+0x1192>
    847c:	86 30       	cpi	r24, 0x06	; 6
    847e:	38 f4       	brcc	.+14     	; 0x848e <_Z6angle4i+0x101c>
    8480:	82 30       	cpi	r24, 0x02	; 2
    8482:	09 f4       	brne	.+2      	; 0x8486 <_Z6angle4i+0x1014>
    8484:	11 c1       	rjmp	.+546    	; 0x86a8 <_Z6angle4i+0x1236>
    8486:	83 30       	cpi	r24, 0x03	; 3
    8488:	09 f0       	breq	.+2      	; 0x848c <_Z6angle4i+0x101a>
    848a:	9d c3       	rjmp	.+1850   	; 0x8bc6 <_Z6angle4i+0x1754>
    848c:	5f c1       	rjmp	.+702    	; 0x874c <_Z6angle4i+0x12da>
    848e:	86 30       	cpi	r24, 0x06	; 6
    8490:	09 f4       	brne	.+2      	; 0x8494 <_Z6angle4i+0x1022>
    8492:	ae c1       	rjmp	.+860    	; 0x87f0 <_Z6angle4i+0x137e>
    8494:	87 30       	cpi	r24, 0x07	; 7
    8496:	09 f0       	breq	.+2      	; 0x849a <_Z6angle4i+0x1028>
    8498:	96 c3       	rjmp	.+1836   	; 0x8bc6 <_Z6angle4i+0x1754>
    849a:	fc c1       	rjmp	.+1016   	; 0x8894 <_Z6angle4i+0x1422>
    849c:	8c 32       	cpi	r24, 0x2C	; 44
    849e:	09 f4       	brne	.+2      	; 0x84a2 <_Z6angle4i+0x1030>
    84a0:	41 c3       	rjmp	.+1666   	; 0x8b24 <_Z6angle4i+0x16b2>
    84a2:	8d 32       	cpi	r24, 0x2D	; 45
    84a4:	30 f4       	brcc	.+12     	; 0x84b2 <_Z6angle4i+0x1040>
    84a6:	8b 30       	cpi	r24, 0x0B	; 11
    84a8:	59 f0       	breq	.+22     	; 0x84c0 <_Z6angle4i+0x104e>
    84aa:	8c 30       	cpi	r24, 0x0C	; 12
    84ac:	09 f0       	breq	.+2      	; 0x84b0 <_Z6angle4i+0x103e>
    84ae:	8b c3       	rjmp	.+1814   	; 0x8bc6 <_Z6angle4i+0x1754>
    84b0:	58 c0       	rjmp	.+176    	; 0x8562 <_Z6angle4i+0x10f0>
    84b2:	8d 32       	cpi	r24, 0x2D	; 45
    84b4:	09 f4       	brne	.+2      	; 0x84b8 <_Z6angle4i+0x1046>
    84b6:	e4 c2       	rjmp	.+1480   	; 0x8a80 <_Z6angle4i+0x160e>
    84b8:	8e 32       	cpi	r24, 0x2E	; 46
    84ba:	09 f0       	breq	.+2      	; 0x84be <_Z6angle4i+0x104c>
    84bc:	84 c3       	rjmp	.+1800   	; 0x8bc6 <_Z6angle4i+0x1754>
    84be:	8e c2       	rjmp	.+1308   	; 0x89dc <_Z6angle4i+0x156a>
    {
     case 11:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    84c0:	c6 e8       	ldi	r28, 0x86	; 134
    84c2:	d0 e0       	ldi	r29, 0x00	; 0
    84c4:	08 81       	ld	r16, Y
    84c6:	19 81       	ldd	r17, Y+1	; 0x01
    84c8:	e8 80       	ld	r14, Y
    84ca:	f9 80       	ldd	r15, Y+1	; 0x01
    84cc:	00 d0       	rcall	.+0      	; 0x84ce <_Z6angle4i+0x105c>
    84ce:	0f 92       	push	r0
    84d0:	8d b6       	in	r8, 0x3d	; 61
    84d2:	9e b6       	in	r9, 0x3e	; 62
    84d4:	08 94       	sec
    84d6:	81 1c       	adc	r8, r1
    84d8:	91 1c       	adc	r9, r1
    84da:	88 27       	eor	r24, r24
    84dc:	77 fd       	sbrc	r23, 7
    84de:	80 95       	com	r24
    84e0:	98 2f       	mov	r25, r24
    84e2:	0e 94 ee 79 	call	0xf3dc	; 0xf3dc <__floatsisf>
    84e6:	2b 01       	movw	r4, r22
    84e8:	3c 01       	movw	r6, r24
    84ea:	c8 01       	movw	r24, r16
    84ec:	68 e2       	ldi	r22, 0x28	; 40
    84ee:	70 e0       	ldi	r23, 0x00	; 0
    84f0:	0e 94 05 7b 	call	0xf60a	; 0xf60a <__udivmodhi4>
    84f4:	80 e0       	ldi	r24, 0x00	; 0
    84f6:	90 e0       	ldi	r25, 0x00	; 0
    84f8:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    84fc:	5b 01       	movw	r10, r22
    84fe:	6c 01       	movw	r12, r24
    8500:	f6 94       	lsr	r15
    8502:	e7 94       	ror	r14
    8504:	f6 94       	lsr	r15
    8506:	e7 94       	ror	r14
    8508:	f6 94       	lsr	r15
    850a:	e7 94       	ror	r14
    850c:	b7 01       	movw	r22, r14
    850e:	80 e0       	ldi	r24, 0x00	; 0
    8510:	90 e0       	ldi	r25, 0x00	; 0
    8512:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    8516:	f4 01       	movw	r30, r8
    8518:	60 83       	st	Z, r22
    851a:	71 83       	std	Z+1, r23	; 0x01
    851c:	82 83       	std	Z+2, r24	; 0x02
    851e:	93 83       	std	Z+3, r25	; 0x03
    8520:	c3 01       	movw	r24, r6
    8522:	b2 01       	movw	r22, r4
    8524:	20 e0       	ldi	r18, 0x00	; 0
    8526:	30 e0       	ldi	r19, 0x00	; 0
    8528:	a9 01       	movw	r20, r18
    852a:	0f 2e       	mov	r0, r31
    852c:	f0 e0       	ldi	r31, 0x00	; 0
    852e:	ef 2e       	mov	r14, r31
    8530:	f0 e0       	ldi	r31, 0x00	; 0
    8532:	ff 2e       	mov	r15, r31
    8534:	f4 e3       	ldi	r31, 0x34	; 52
    8536:	0f 2f       	mov	r16, r31
    8538:	f3 e4       	ldi	r31, 0x43	; 67
    853a:	1f 2f       	mov	r17, r31
    853c:	f0 2d       	mov	r31, r0
    853e:	0e 94 a0 08 	call	0x1140	; 0x1140 <_Z3mapddddd>
    8542:	0f 90       	pop	r0
    8544:	0f 90       	pop	r0
    8546:	0f 90       	pop	r0
    8548:	0f 90       	pop	r0
        OCR1A=ICR1-vAl;
    854a:	09 90       	ld	r0, Y+
    854c:	d8 81       	ld	r29, Y
    854e:	c0 2d       	mov	r28, r0
  void write(int vAl)           //PIN=servo pin no. on mega,vAl=angle F_CPU for the servo at pin
  {
    switch(pIn)
    {
     case 11:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    8550:	0e 94 bb 79 	call	0xf376	; 0xf376 <__fixsfsi>
        OCR1A=ICR1-vAl;
    8554:	c6 1b       	sub	r28, r22
    8556:	d7 0b       	sbc	r29, r23
    8558:	d0 93 89 00 	sts	0x0089, r29
    855c:	c0 93 88 00 	sts	0x0088, r28
    8560:	32 c3       	rjmp	.+1636   	; 0x8bc6 <_Z6angle4i+0x1754>
        break;
      case 12:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    8562:	c6 e8       	ldi	r28, 0x86	; 134
    8564:	d0 e0       	ldi	r29, 0x00	; 0
    8566:	08 81       	ld	r16, Y
    8568:	19 81       	ldd	r17, Y+1	; 0x01
    856a:	e8 80       	ld	r14, Y
    856c:	f9 80       	ldd	r15, Y+1	; 0x01
    856e:	00 d0       	rcall	.+0      	; 0x8570 <_Z6angle4i+0x10fe>
    8570:	0f 92       	push	r0
    8572:	8d b6       	in	r8, 0x3d	; 61
    8574:	9e b6       	in	r9, 0x3e	; 62
    8576:	08 94       	sec
    8578:	81 1c       	adc	r8, r1
    857a:	91 1c       	adc	r9, r1
    857c:	88 27       	eor	r24, r24
    857e:	77 fd       	sbrc	r23, 7
    8580:	80 95       	com	r24
    8582:	98 2f       	mov	r25, r24
    8584:	0e 94 ee 79 	call	0xf3dc	; 0xf3dc <__floatsisf>
    8588:	2b 01       	movw	r4, r22
    858a:	3c 01       	movw	r6, r24
    858c:	c8 01       	movw	r24, r16
    858e:	68 e2       	ldi	r22, 0x28	; 40
    8590:	70 e0       	ldi	r23, 0x00	; 0
    8592:	0e 94 05 7b 	call	0xf60a	; 0xf60a <__udivmodhi4>
    8596:	80 e0       	ldi	r24, 0x00	; 0
    8598:	90 e0       	ldi	r25, 0x00	; 0
    859a:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    859e:	5b 01       	movw	r10, r22
    85a0:	6c 01       	movw	r12, r24
    85a2:	f6 94       	lsr	r15
    85a4:	e7 94       	ror	r14
    85a6:	f6 94       	lsr	r15
    85a8:	e7 94       	ror	r14
    85aa:	f6 94       	lsr	r15
    85ac:	e7 94       	ror	r14
    85ae:	b7 01       	movw	r22, r14
    85b0:	80 e0       	ldi	r24, 0x00	; 0
    85b2:	90 e0       	ldi	r25, 0x00	; 0
    85b4:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    85b8:	f4 01       	movw	r30, r8
    85ba:	60 83       	st	Z, r22
    85bc:	71 83       	std	Z+1, r23	; 0x01
    85be:	82 83       	std	Z+2, r24	; 0x02
    85c0:	93 83       	std	Z+3, r25	; 0x03
    85c2:	c3 01       	movw	r24, r6
    85c4:	b2 01       	movw	r22, r4
    85c6:	20 e0       	ldi	r18, 0x00	; 0
    85c8:	30 e0       	ldi	r19, 0x00	; 0
    85ca:	a9 01       	movw	r20, r18
    85cc:	0f 2e       	mov	r0, r31
    85ce:	f0 e0       	ldi	r31, 0x00	; 0
    85d0:	ef 2e       	mov	r14, r31
    85d2:	f0 e0       	ldi	r31, 0x00	; 0
    85d4:	ff 2e       	mov	r15, r31
    85d6:	f4 e3       	ldi	r31, 0x34	; 52
    85d8:	0f 2f       	mov	r16, r31
    85da:	f3 e4       	ldi	r31, 0x43	; 67
    85dc:	1f 2f       	mov	r17, r31
    85de:	f0 2d       	mov	r31, r0
    85e0:	0e 94 a0 08 	call	0x1140	; 0x1140 <_Z3mapddddd>
    85e4:	0f 90       	pop	r0
    85e6:	0f 90       	pop	r0
    85e8:	0f 90       	pop	r0
    85ea:	0f 90       	pop	r0
        OCR1B=ICR1-vAl;
    85ec:	09 90       	ld	r0, Y+
    85ee:	d8 81       	ld	r29, Y
    85f0:	c0 2d       	mov	r28, r0
     case 11:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
        OCR1A=ICR1-vAl;
        break;
      case 12:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    85f2:	0e 94 bb 79 	call	0xf376	; 0xf376 <__fixsfsi>
        OCR1B=ICR1-vAl;
    85f6:	c6 1b       	sub	r28, r22
    85f8:	d7 0b       	sbc	r29, r23
    85fa:	d0 93 8b 00 	sts	0x008B, r29
    85fe:	c0 93 8a 00 	sts	0x008A, r28
    8602:	e1 c2       	rjmp	.+1474   	; 0x8bc6 <_Z6angle4i+0x1754>
        break;
      case 5:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    8604:	e6 e8       	ldi	r30, 0x86	; 134
    8606:	f0 e0       	ldi	r31, 0x00	; 0
    8608:	c0 81       	ld	r28, Z
    860a:	d1 81       	ldd	r29, Z+1	; 0x01
    860c:	80 80       	ld	r8, Z
    860e:	91 80       	ldd	r9, Z+1	; 0x01
    8610:	00 d0       	rcall	.+0      	; 0x8612 <_Z6angle4i+0x11a0>
    8612:	0f 92       	push	r0
    8614:	4d b6       	in	r4, 0x3d	; 61
    8616:	5e b6       	in	r5, 0x3e	; 62
    8618:	08 94       	sec
    861a:	41 1c       	adc	r4, r1
    861c:	51 1c       	adc	r5, r1
    861e:	88 27       	eor	r24, r24
    8620:	77 fd       	sbrc	r23, 7
    8622:	80 95       	com	r24
    8624:	98 2f       	mov	r25, r24
    8626:	0e 94 ee 79 	call	0xf3dc	; 0xf3dc <__floatsisf>
    862a:	7b 01       	movw	r14, r22
    862c:	8c 01       	movw	r16, r24
    862e:	ce 01       	movw	r24, r28
    8630:	68 e2       	ldi	r22, 0x28	; 40
    8632:	70 e0       	ldi	r23, 0x00	; 0
    8634:	0e 94 05 7b 	call	0xf60a	; 0xf60a <__udivmodhi4>
    8638:	80 e0       	ldi	r24, 0x00	; 0
    863a:	90 e0       	ldi	r25, 0x00	; 0
    863c:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    8640:	5b 01       	movw	r10, r22
    8642:	6c 01       	movw	r12, r24
    8644:	96 94       	lsr	r9
    8646:	87 94       	ror	r8
    8648:	96 94       	lsr	r9
    864a:	87 94       	ror	r8
    864c:	96 94       	lsr	r9
    864e:	87 94       	ror	r8
    8650:	b4 01       	movw	r22, r8
    8652:	80 e0       	ldi	r24, 0x00	; 0
    8654:	90 e0       	ldi	r25, 0x00	; 0
    8656:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    865a:	f2 01       	movw	r30, r4
    865c:	60 83       	st	Z, r22
    865e:	71 83       	std	Z+1, r23	; 0x01
    8660:	82 83       	std	Z+2, r24	; 0x02
    8662:	93 83       	std	Z+3, r25	; 0x03
    8664:	c8 01       	movw	r24, r16
    8666:	b7 01       	movw	r22, r14
    8668:	20 e0       	ldi	r18, 0x00	; 0
    866a:	30 e0       	ldi	r19, 0x00	; 0
    866c:	a9 01       	movw	r20, r18
    866e:	0f 2e       	mov	r0, r31
    8670:	f0 e0       	ldi	r31, 0x00	; 0
    8672:	ef 2e       	mov	r14, r31
    8674:	f0 e0       	ldi	r31, 0x00	; 0
    8676:	ff 2e       	mov	r15, r31
    8678:	f4 e3       	ldi	r31, 0x34	; 52
    867a:	0f 2f       	mov	r16, r31
    867c:	f3 e4       	ldi	r31, 0x43	; 67
    867e:	1f 2f       	mov	r17, r31
    8680:	f0 2d       	mov	r31, r0
    8682:	0e 94 a0 08 	call	0x1140	; 0x1140 <_Z3mapddddd>
    8686:	0f 90       	pop	r0
    8688:	0f 90       	pop	r0
    868a:	0f 90       	pop	r0
    868c:	0f 90       	pop	r0
        OCR3A=ICR3-vAl;
    868e:	c0 91 96 00 	lds	r28, 0x0096
    8692:	d0 91 97 00 	lds	r29, 0x0097
      case 12:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
        OCR1B=ICR1-vAl;
        break;
      case 5:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    8696:	0e 94 bb 79 	call	0xf376	; 0xf376 <__fixsfsi>
        OCR3A=ICR3-vAl;
    869a:	c6 1b       	sub	r28, r22
    869c:	d7 0b       	sbc	r29, r23
    869e:	d0 93 99 00 	sts	0x0099, r29
    86a2:	c0 93 98 00 	sts	0x0098, r28
    86a6:	8f c2       	rjmp	.+1310   	; 0x8bc6 <_Z6angle4i+0x1754>
        break;
      case 2:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    86a8:	e6 e8       	ldi	r30, 0x86	; 134
    86aa:	f0 e0       	ldi	r31, 0x00	; 0
    86ac:	c0 81       	ld	r28, Z
    86ae:	d1 81       	ldd	r29, Z+1	; 0x01
    86b0:	80 80       	ld	r8, Z
    86b2:	91 80       	ldd	r9, Z+1	; 0x01
    86b4:	00 d0       	rcall	.+0      	; 0x86b6 <_Z6angle4i+0x1244>
    86b6:	0f 92       	push	r0
    86b8:	4d b6       	in	r4, 0x3d	; 61
    86ba:	5e b6       	in	r5, 0x3e	; 62
    86bc:	08 94       	sec
    86be:	41 1c       	adc	r4, r1
    86c0:	51 1c       	adc	r5, r1
    86c2:	88 27       	eor	r24, r24
    86c4:	77 fd       	sbrc	r23, 7
    86c6:	80 95       	com	r24
    86c8:	98 2f       	mov	r25, r24
    86ca:	0e 94 ee 79 	call	0xf3dc	; 0xf3dc <__floatsisf>
    86ce:	7b 01       	movw	r14, r22
    86d0:	8c 01       	movw	r16, r24
    86d2:	ce 01       	movw	r24, r28
    86d4:	68 e2       	ldi	r22, 0x28	; 40
    86d6:	70 e0       	ldi	r23, 0x00	; 0
    86d8:	0e 94 05 7b 	call	0xf60a	; 0xf60a <__udivmodhi4>
    86dc:	80 e0       	ldi	r24, 0x00	; 0
    86de:	90 e0       	ldi	r25, 0x00	; 0
    86e0:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    86e4:	5b 01       	movw	r10, r22
    86e6:	6c 01       	movw	r12, r24
    86e8:	96 94       	lsr	r9
    86ea:	87 94       	ror	r8
    86ec:	96 94       	lsr	r9
    86ee:	87 94       	ror	r8
    86f0:	96 94       	lsr	r9
    86f2:	87 94       	ror	r8
    86f4:	b4 01       	movw	r22, r8
    86f6:	80 e0       	ldi	r24, 0x00	; 0
    86f8:	90 e0       	ldi	r25, 0x00	; 0
    86fa:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    86fe:	f2 01       	movw	r30, r4
    8700:	60 83       	st	Z, r22
    8702:	71 83       	std	Z+1, r23	; 0x01
    8704:	82 83       	std	Z+2, r24	; 0x02
    8706:	93 83       	std	Z+3, r25	; 0x03
    8708:	c8 01       	movw	r24, r16
    870a:	b7 01       	movw	r22, r14
    870c:	20 e0       	ldi	r18, 0x00	; 0
    870e:	30 e0       	ldi	r19, 0x00	; 0
    8710:	a9 01       	movw	r20, r18
    8712:	0f 2e       	mov	r0, r31
    8714:	f0 e0       	ldi	r31, 0x00	; 0
    8716:	ef 2e       	mov	r14, r31
    8718:	f0 e0       	ldi	r31, 0x00	; 0
    871a:	ff 2e       	mov	r15, r31
    871c:	f4 e3       	ldi	r31, 0x34	; 52
    871e:	0f 2f       	mov	r16, r31
    8720:	f3 e4       	ldi	r31, 0x43	; 67
    8722:	1f 2f       	mov	r17, r31
    8724:	f0 2d       	mov	r31, r0
    8726:	0e 94 a0 08 	call	0x1140	; 0x1140 <_Z3mapddddd>
    872a:	0f 90       	pop	r0
    872c:	0f 90       	pop	r0
    872e:	0f 90       	pop	r0
    8730:	0f 90       	pop	r0
        OCR3B=ICR3-vAl;
    8732:	c0 91 96 00 	lds	r28, 0x0096
    8736:	d0 91 97 00 	lds	r29, 0x0097
      case 5:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
        OCR3A=ICR3-vAl;
        break;
      case 2:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    873a:	0e 94 bb 79 	call	0xf376	; 0xf376 <__fixsfsi>
        OCR3B=ICR3-vAl;
    873e:	c6 1b       	sub	r28, r22
    8740:	d7 0b       	sbc	r29, r23
    8742:	d0 93 9b 00 	sts	0x009B, r29
    8746:	c0 93 9a 00 	sts	0x009A, r28
    874a:	3d c2       	rjmp	.+1146   	; 0x8bc6 <_Z6angle4i+0x1754>
        break;
      case 3:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    874c:	e6 e8       	ldi	r30, 0x86	; 134
    874e:	f0 e0       	ldi	r31, 0x00	; 0
    8750:	c0 81       	ld	r28, Z
    8752:	d1 81       	ldd	r29, Z+1	; 0x01
    8754:	80 80       	ld	r8, Z
    8756:	91 80       	ldd	r9, Z+1	; 0x01
    8758:	00 d0       	rcall	.+0      	; 0x875a <_Z6angle4i+0x12e8>
    875a:	0f 92       	push	r0
    875c:	4d b6       	in	r4, 0x3d	; 61
    875e:	5e b6       	in	r5, 0x3e	; 62
    8760:	08 94       	sec
    8762:	41 1c       	adc	r4, r1
    8764:	51 1c       	adc	r5, r1
    8766:	88 27       	eor	r24, r24
    8768:	77 fd       	sbrc	r23, 7
    876a:	80 95       	com	r24
    876c:	98 2f       	mov	r25, r24
    876e:	0e 94 ee 79 	call	0xf3dc	; 0xf3dc <__floatsisf>
    8772:	7b 01       	movw	r14, r22
    8774:	8c 01       	movw	r16, r24
    8776:	ce 01       	movw	r24, r28
    8778:	68 e2       	ldi	r22, 0x28	; 40
    877a:	70 e0       	ldi	r23, 0x00	; 0
    877c:	0e 94 05 7b 	call	0xf60a	; 0xf60a <__udivmodhi4>
    8780:	80 e0       	ldi	r24, 0x00	; 0
    8782:	90 e0       	ldi	r25, 0x00	; 0
    8784:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    8788:	5b 01       	movw	r10, r22
    878a:	6c 01       	movw	r12, r24
    878c:	96 94       	lsr	r9
    878e:	87 94       	ror	r8
    8790:	96 94       	lsr	r9
    8792:	87 94       	ror	r8
    8794:	96 94       	lsr	r9
    8796:	87 94       	ror	r8
    8798:	b4 01       	movw	r22, r8
    879a:	80 e0       	ldi	r24, 0x00	; 0
    879c:	90 e0       	ldi	r25, 0x00	; 0
    879e:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    87a2:	f2 01       	movw	r30, r4
    87a4:	60 83       	st	Z, r22
    87a6:	71 83       	std	Z+1, r23	; 0x01
    87a8:	82 83       	std	Z+2, r24	; 0x02
    87aa:	93 83       	std	Z+3, r25	; 0x03
    87ac:	c8 01       	movw	r24, r16
    87ae:	b7 01       	movw	r22, r14
    87b0:	20 e0       	ldi	r18, 0x00	; 0
    87b2:	30 e0       	ldi	r19, 0x00	; 0
    87b4:	a9 01       	movw	r20, r18
    87b6:	0f 2e       	mov	r0, r31
    87b8:	f0 e0       	ldi	r31, 0x00	; 0
    87ba:	ef 2e       	mov	r14, r31
    87bc:	f0 e0       	ldi	r31, 0x00	; 0
    87be:	ff 2e       	mov	r15, r31
    87c0:	f4 e3       	ldi	r31, 0x34	; 52
    87c2:	0f 2f       	mov	r16, r31
    87c4:	f3 e4       	ldi	r31, 0x43	; 67
    87c6:	1f 2f       	mov	r17, r31
    87c8:	f0 2d       	mov	r31, r0
    87ca:	0e 94 a0 08 	call	0x1140	; 0x1140 <_Z3mapddddd>
    87ce:	0f 90       	pop	r0
    87d0:	0f 90       	pop	r0
    87d2:	0f 90       	pop	r0
    87d4:	0f 90       	pop	r0
        OCR3C=ICR3-vAl;
    87d6:	c0 91 96 00 	lds	r28, 0x0096
    87da:	d0 91 97 00 	lds	r29, 0x0097
      case 2:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
        OCR3B=ICR3-vAl;
        break;
      case 3:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    87de:	0e 94 bb 79 	call	0xf376	; 0xf376 <__fixsfsi>
        OCR3C=ICR3-vAl;
    87e2:	c6 1b       	sub	r28, r22
    87e4:	d7 0b       	sbc	r29, r23
    87e6:	d0 93 9d 00 	sts	0x009D, r29
    87ea:	c0 93 9c 00 	sts	0x009C, r28
    87ee:	eb c1       	rjmp	.+982    	; 0x8bc6 <_Z6angle4i+0x1754>
        break;
      case 6:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    87f0:	e6 e8       	ldi	r30, 0x86	; 134
    87f2:	f0 e0       	ldi	r31, 0x00	; 0
    87f4:	c0 81       	ld	r28, Z
    87f6:	d1 81       	ldd	r29, Z+1	; 0x01
    87f8:	80 80       	ld	r8, Z
    87fa:	91 80       	ldd	r9, Z+1	; 0x01
    87fc:	00 d0       	rcall	.+0      	; 0x87fe <_Z6angle4i+0x138c>
    87fe:	0f 92       	push	r0
    8800:	4d b6       	in	r4, 0x3d	; 61
    8802:	5e b6       	in	r5, 0x3e	; 62
    8804:	08 94       	sec
    8806:	41 1c       	adc	r4, r1
    8808:	51 1c       	adc	r5, r1
    880a:	88 27       	eor	r24, r24
    880c:	77 fd       	sbrc	r23, 7
    880e:	80 95       	com	r24
    8810:	98 2f       	mov	r25, r24
    8812:	0e 94 ee 79 	call	0xf3dc	; 0xf3dc <__floatsisf>
    8816:	7b 01       	movw	r14, r22
    8818:	8c 01       	movw	r16, r24
    881a:	ce 01       	movw	r24, r28
    881c:	68 e2       	ldi	r22, 0x28	; 40
    881e:	70 e0       	ldi	r23, 0x00	; 0
    8820:	0e 94 05 7b 	call	0xf60a	; 0xf60a <__udivmodhi4>
    8824:	80 e0       	ldi	r24, 0x00	; 0
    8826:	90 e0       	ldi	r25, 0x00	; 0
    8828:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    882c:	5b 01       	movw	r10, r22
    882e:	6c 01       	movw	r12, r24
    8830:	96 94       	lsr	r9
    8832:	87 94       	ror	r8
    8834:	96 94       	lsr	r9
    8836:	87 94       	ror	r8
    8838:	96 94       	lsr	r9
    883a:	87 94       	ror	r8
    883c:	b4 01       	movw	r22, r8
    883e:	80 e0       	ldi	r24, 0x00	; 0
    8840:	90 e0       	ldi	r25, 0x00	; 0
    8842:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    8846:	f2 01       	movw	r30, r4
    8848:	60 83       	st	Z, r22
    884a:	71 83       	std	Z+1, r23	; 0x01
    884c:	82 83       	std	Z+2, r24	; 0x02
    884e:	93 83       	std	Z+3, r25	; 0x03
    8850:	c8 01       	movw	r24, r16
    8852:	b7 01       	movw	r22, r14
    8854:	20 e0       	ldi	r18, 0x00	; 0
    8856:	30 e0       	ldi	r19, 0x00	; 0
    8858:	a9 01       	movw	r20, r18
    885a:	0f 2e       	mov	r0, r31
    885c:	f0 e0       	ldi	r31, 0x00	; 0
    885e:	ef 2e       	mov	r14, r31
    8860:	f0 e0       	ldi	r31, 0x00	; 0
    8862:	ff 2e       	mov	r15, r31
    8864:	f4 e3       	ldi	r31, 0x34	; 52
    8866:	0f 2f       	mov	r16, r31
    8868:	f3 e4       	ldi	r31, 0x43	; 67
    886a:	1f 2f       	mov	r17, r31
    886c:	f0 2d       	mov	r31, r0
    886e:	0e 94 a0 08 	call	0x1140	; 0x1140 <_Z3mapddddd>
    8872:	0f 90       	pop	r0
    8874:	0f 90       	pop	r0
    8876:	0f 90       	pop	r0
    8878:	0f 90       	pop	r0
        OCR4A=ICR4-vAl;
    887a:	c0 91 a6 00 	lds	r28, 0x00A6
    887e:	d0 91 a7 00 	lds	r29, 0x00A7
      case 3:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
        OCR3C=ICR3-vAl;
        break;
      case 6:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    8882:	0e 94 bb 79 	call	0xf376	; 0xf376 <__fixsfsi>
        OCR4A=ICR4-vAl;
    8886:	c6 1b       	sub	r28, r22
    8888:	d7 0b       	sbc	r29, r23
    888a:	d0 93 a9 00 	sts	0x00A9, r29
    888e:	c0 93 a8 00 	sts	0x00A8, r28
    8892:	99 c1       	rjmp	.+818    	; 0x8bc6 <_Z6angle4i+0x1754>
        break;
      case 7:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    8894:	e6 e8       	ldi	r30, 0x86	; 134
    8896:	f0 e0       	ldi	r31, 0x00	; 0
    8898:	c0 81       	ld	r28, Z
    889a:	d1 81       	ldd	r29, Z+1	; 0x01
    889c:	80 80       	ld	r8, Z
    889e:	91 80       	ldd	r9, Z+1	; 0x01
    88a0:	00 d0       	rcall	.+0      	; 0x88a2 <_Z6angle4i+0x1430>
    88a2:	0f 92       	push	r0
    88a4:	4d b6       	in	r4, 0x3d	; 61
    88a6:	5e b6       	in	r5, 0x3e	; 62
    88a8:	08 94       	sec
    88aa:	41 1c       	adc	r4, r1
    88ac:	51 1c       	adc	r5, r1
    88ae:	88 27       	eor	r24, r24
    88b0:	77 fd       	sbrc	r23, 7
    88b2:	80 95       	com	r24
    88b4:	98 2f       	mov	r25, r24
    88b6:	0e 94 ee 79 	call	0xf3dc	; 0xf3dc <__floatsisf>
    88ba:	7b 01       	movw	r14, r22
    88bc:	8c 01       	movw	r16, r24
    88be:	ce 01       	movw	r24, r28
    88c0:	68 e2       	ldi	r22, 0x28	; 40
    88c2:	70 e0       	ldi	r23, 0x00	; 0
    88c4:	0e 94 05 7b 	call	0xf60a	; 0xf60a <__udivmodhi4>
    88c8:	80 e0       	ldi	r24, 0x00	; 0
    88ca:	90 e0       	ldi	r25, 0x00	; 0
    88cc:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    88d0:	5b 01       	movw	r10, r22
    88d2:	6c 01       	movw	r12, r24
    88d4:	96 94       	lsr	r9
    88d6:	87 94       	ror	r8
    88d8:	96 94       	lsr	r9
    88da:	87 94       	ror	r8
    88dc:	96 94       	lsr	r9
    88de:	87 94       	ror	r8
    88e0:	b4 01       	movw	r22, r8
    88e2:	80 e0       	ldi	r24, 0x00	; 0
    88e4:	90 e0       	ldi	r25, 0x00	; 0
    88e6:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    88ea:	f2 01       	movw	r30, r4
    88ec:	60 83       	st	Z, r22
    88ee:	71 83       	std	Z+1, r23	; 0x01
    88f0:	82 83       	std	Z+2, r24	; 0x02
    88f2:	93 83       	std	Z+3, r25	; 0x03
    88f4:	c8 01       	movw	r24, r16
    88f6:	b7 01       	movw	r22, r14
    88f8:	20 e0       	ldi	r18, 0x00	; 0
    88fa:	30 e0       	ldi	r19, 0x00	; 0
    88fc:	a9 01       	movw	r20, r18
    88fe:	0f 2e       	mov	r0, r31
    8900:	f0 e0       	ldi	r31, 0x00	; 0
    8902:	ef 2e       	mov	r14, r31
    8904:	f0 e0       	ldi	r31, 0x00	; 0
    8906:	ff 2e       	mov	r15, r31
    8908:	f4 e3       	ldi	r31, 0x34	; 52
    890a:	0f 2f       	mov	r16, r31
    890c:	f3 e4       	ldi	r31, 0x43	; 67
    890e:	1f 2f       	mov	r17, r31
    8910:	f0 2d       	mov	r31, r0
    8912:	0e 94 a0 08 	call	0x1140	; 0x1140 <_Z3mapddddd>
    8916:	0f 90       	pop	r0
    8918:	0f 90       	pop	r0
    891a:	0f 90       	pop	r0
    891c:	0f 90       	pop	r0
        OCR4B=ICR4-vAl;
    891e:	c0 91 a6 00 	lds	r28, 0x00A6
    8922:	d0 91 a7 00 	lds	r29, 0x00A7
      case 6:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
        OCR4A=ICR4-vAl;
        break;
      case 7:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    8926:	0e 94 bb 79 	call	0xf376	; 0xf376 <__fixsfsi>
        OCR4B=ICR4-vAl;
    892a:	c6 1b       	sub	r28, r22
    892c:	d7 0b       	sbc	r29, r23
    892e:	d0 93 ab 00 	sts	0x00AB, r29
    8932:	c0 93 aa 00 	sts	0x00AA, r28
    8936:	47 c1       	rjmp	.+654    	; 0x8bc6 <_Z6angle4i+0x1754>
        break; 
      case 8:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    8938:	e6 e8       	ldi	r30, 0x86	; 134
    893a:	f0 e0       	ldi	r31, 0x00	; 0
    893c:	c0 81       	ld	r28, Z
    893e:	d1 81       	ldd	r29, Z+1	; 0x01
    8940:	80 80       	ld	r8, Z
    8942:	91 80       	ldd	r9, Z+1	; 0x01
    8944:	00 d0       	rcall	.+0      	; 0x8946 <_Z6angle4i+0x14d4>
    8946:	0f 92       	push	r0
    8948:	4d b6       	in	r4, 0x3d	; 61
    894a:	5e b6       	in	r5, 0x3e	; 62
    894c:	08 94       	sec
    894e:	41 1c       	adc	r4, r1
    8950:	51 1c       	adc	r5, r1
    8952:	88 27       	eor	r24, r24
    8954:	77 fd       	sbrc	r23, 7
    8956:	80 95       	com	r24
    8958:	98 2f       	mov	r25, r24
    895a:	0e 94 ee 79 	call	0xf3dc	; 0xf3dc <__floatsisf>
    895e:	7b 01       	movw	r14, r22
    8960:	8c 01       	movw	r16, r24
    8962:	ce 01       	movw	r24, r28
    8964:	68 e2       	ldi	r22, 0x28	; 40
    8966:	70 e0       	ldi	r23, 0x00	; 0
    8968:	0e 94 05 7b 	call	0xf60a	; 0xf60a <__udivmodhi4>
    896c:	80 e0       	ldi	r24, 0x00	; 0
    896e:	90 e0       	ldi	r25, 0x00	; 0
    8970:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    8974:	5b 01       	movw	r10, r22
    8976:	6c 01       	movw	r12, r24
    8978:	96 94       	lsr	r9
    897a:	87 94       	ror	r8
    897c:	96 94       	lsr	r9
    897e:	87 94       	ror	r8
    8980:	96 94       	lsr	r9
    8982:	87 94       	ror	r8
    8984:	b4 01       	movw	r22, r8
    8986:	80 e0       	ldi	r24, 0x00	; 0
    8988:	90 e0       	ldi	r25, 0x00	; 0
    898a:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    898e:	f2 01       	movw	r30, r4
    8990:	60 83       	st	Z, r22
    8992:	71 83       	std	Z+1, r23	; 0x01
    8994:	82 83       	std	Z+2, r24	; 0x02
    8996:	93 83       	std	Z+3, r25	; 0x03
    8998:	c8 01       	movw	r24, r16
    899a:	b7 01       	movw	r22, r14
    899c:	20 e0       	ldi	r18, 0x00	; 0
    899e:	30 e0       	ldi	r19, 0x00	; 0
    89a0:	a9 01       	movw	r20, r18
    89a2:	0f 2e       	mov	r0, r31
    89a4:	f0 e0       	ldi	r31, 0x00	; 0
    89a6:	ef 2e       	mov	r14, r31
    89a8:	f0 e0       	ldi	r31, 0x00	; 0
    89aa:	ff 2e       	mov	r15, r31
    89ac:	f4 e3       	ldi	r31, 0x34	; 52
    89ae:	0f 2f       	mov	r16, r31
    89b0:	f3 e4       	ldi	r31, 0x43	; 67
    89b2:	1f 2f       	mov	r17, r31
    89b4:	f0 2d       	mov	r31, r0
    89b6:	0e 94 a0 08 	call	0x1140	; 0x1140 <_Z3mapddddd>
    89ba:	0f 90       	pop	r0
    89bc:	0f 90       	pop	r0
    89be:	0f 90       	pop	r0
    89c0:	0f 90       	pop	r0
        OCR4C=ICR4-vAl;
    89c2:	c0 91 a6 00 	lds	r28, 0x00A6
    89c6:	d0 91 a7 00 	lds	r29, 0x00A7
      case 7:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
        OCR4B=ICR4-vAl;
        break; 
      case 8:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    89ca:	0e 94 bb 79 	call	0xf376	; 0xf376 <__fixsfsi>
        OCR4C=ICR4-vAl;
    89ce:	c6 1b       	sub	r28, r22
    89d0:	d7 0b       	sbc	r29, r23
    89d2:	d0 93 ad 00 	sts	0x00AD, r29
    89d6:	c0 93 ac 00 	sts	0x00AC, r28
    89da:	f5 c0       	rjmp	.+490    	; 0x8bc6 <_Z6angle4i+0x1754>
        break;
      case 46:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    89dc:	e6 e8       	ldi	r30, 0x86	; 134
    89de:	f0 e0       	ldi	r31, 0x00	; 0
    89e0:	c0 81       	ld	r28, Z
    89e2:	d1 81       	ldd	r29, Z+1	; 0x01
    89e4:	80 80       	ld	r8, Z
    89e6:	91 80       	ldd	r9, Z+1	; 0x01
    89e8:	00 d0       	rcall	.+0      	; 0x89ea <_Z6angle4i+0x1578>
    89ea:	0f 92       	push	r0
    89ec:	4d b6       	in	r4, 0x3d	; 61
    89ee:	5e b6       	in	r5, 0x3e	; 62
    89f0:	08 94       	sec
    89f2:	41 1c       	adc	r4, r1
    89f4:	51 1c       	adc	r5, r1
    89f6:	88 27       	eor	r24, r24
    89f8:	77 fd       	sbrc	r23, 7
    89fa:	80 95       	com	r24
    89fc:	98 2f       	mov	r25, r24
    89fe:	0e 94 ee 79 	call	0xf3dc	; 0xf3dc <__floatsisf>
    8a02:	7b 01       	movw	r14, r22
    8a04:	8c 01       	movw	r16, r24
    8a06:	ce 01       	movw	r24, r28
    8a08:	68 e2       	ldi	r22, 0x28	; 40
    8a0a:	70 e0       	ldi	r23, 0x00	; 0
    8a0c:	0e 94 05 7b 	call	0xf60a	; 0xf60a <__udivmodhi4>
    8a10:	80 e0       	ldi	r24, 0x00	; 0
    8a12:	90 e0       	ldi	r25, 0x00	; 0
    8a14:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    8a18:	5b 01       	movw	r10, r22
    8a1a:	6c 01       	movw	r12, r24
    8a1c:	96 94       	lsr	r9
    8a1e:	87 94       	ror	r8
    8a20:	96 94       	lsr	r9
    8a22:	87 94       	ror	r8
    8a24:	96 94       	lsr	r9
    8a26:	87 94       	ror	r8
    8a28:	b4 01       	movw	r22, r8
    8a2a:	80 e0       	ldi	r24, 0x00	; 0
    8a2c:	90 e0       	ldi	r25, 0x00	; 0
    8a2e:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    8a32:	f2 01       	movw	r30, r4
    8a34:	60 83       	st	Z, r22
    8a36:	71 83       	std	Z+1, r23	; 0x01
    8a38:	82 83       	std	Z+2, r24	; 0x02
    8a3a:	93 83       	std	Z+3, r25	; 0x03
    8a3c:	c8 01       	movw	r24, r16
    8a3e:	b7 01       	movw	r22, r14
    8a40:	20 e0       	ldi	r18, 0x00	; 0
    8a42:	30 e0       	ldi	r19, 0x00	; 0
    8a44:	a9 01       	movw	r20, r18
    8a46:	0f 2e       	mov	r0, r31
    8a48:	f0 e0       	ldi	r31, 0x00	; 0
    8a4a:	ef 2e       	mov	r14, r31
    8a4c:	f0 e0       	ldi	r31, 0x00	; 0
    8a4e:	ff 2e       	mov	r15, r31
    8a50:	f4 e3       	ldi	r31, 0x34	; 52
    8a52:	0f 2f       	mov	r16, r31
    8a54:	f3 e4       	ldi	r31, 0x43	; 67
    8a56:	1f 2f       	mov	r17, r31
    8a58:	f0 2d       	mov	r31, r0
    8a5a:	0e 94 a0 08 	call	0x1140	; 0x1140 <_Z3mapddddd>
    8a5e:	0f 90       	pop	r0
    8a60:	0f 90       	pop	r0
    8a62:	0f 90       	pop	r0
    8a64:	0f 90       	pop	r0
        OCR5A=ICR5-vAl;
    8a66:	c0 91 26 01 	lds	r28, 0x0126
    8a6a:	d0 91 27 01 	lds	r29, 0x0127
      case 8:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
        OCR4C=ICR4-vAl;
        break;
      case 46:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    8a6e:	0e 94 bb 79 	call	0xf376	; 0xf376 <__fixsfsi>
        OCR5A=ICR5-vAl;
    8a72:	c6 1b       	sub	r28, r22
    8a74:	d7 0b       	sbc	r29, r23
    8a76:	d0 93 29 01 	sts	0x0129, r29
    8a7a:	c0 93 28 01 	sts	0x0128, r28
    8a7e:	a3 c0       	rjmp	.+326    	; 0x8bc6 <_Z6angle4i+0x1754>
        break;
      case 45:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    8a80:	e6 e8       	ldi	r30, 0x86	; 134
    8a82:	f0 e0       	ldi	r31, 0x00	; 0
    8a84:	c0 81       	ld	r28, Z
    8a86:	d1 81       	ldd	r29, Z+1	; 0x01
    8a88:	80 80       	ld	r8, Z
    8a8a:	91 80       	ldd	r9, Z+1	; 0x01
    8a8c:	00 d0       	rcall	.+0      	; 0x8a8e <_Z6angle4i+0x161c>
    8a8e:	0f 92       	push	r0
    8a90:	4d b6       	in	r4, 0x3d	; 61
    8a92:	5e b6       	in	r5, 0x3e	; 62
    8a94:	08 94       	sec
    8a96:	41 1c       	adc	r4, r1
    8a98:	51 1c       	adc	r5, r1
    8a9a:	88 27       	eor	r24, r24
    8a9c:	77 fd       	sbrc	r23, 7
    8a9e:	80 95       	com	r24
    8aa0:	98 2f       	mov	r25, r24
    8aa2:	0e 94 ee 79 	call	0xf3dc	; 0xf3dc <__floatsisf>
    8aa6:	7b 01       	movw	r14, r22
    8aa8:	8c 01       	movw	r16, r24
    8aaa:	ce 01       	movw	r24, r28
    8aac:	68 e2       	ldi	r22, 0x28	; 40
    8aae:	70 e0       	ldi	r23, 0x00	; 0
    8ab0:	0e 94 05 7b 	call	0xf60a	; 0xf60a <__udivmodhi4>
    8ab4:	80 e0       	ldi	r24, 0x00	; 0
    8ab6:	90 e0       	ldi	r25, 0x00	; 0
    8ab8:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    8abc:	5b 01       	movw	r10, r22
    8abe:	6c 01       	movw	r12, r24
    8ac0:	96 94       	lsr	r9
    8ac2:	87 94       	ror	r8
    8ac4:	96 94       	lsr	r9
    8ac6:	87 94       	ror	r8
    8ac8:	96 94       	lsr	r9
    8aca:	87 94       	ror	r8
    8acc:	b4 01       	movw	r22, r8
    8ace:	80 e0       	ldi	r24, 0x00	; 0
    8ad0:	90 e0       	ldi	r25, 0x00	; 0
    8ad2:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    8ad6:	f2 01       	movw	r30, r4
    8ad8:	60 83       	st	Z, r22
    8ada:	71 83       	std	Z+1, r23	; 0x01
    8adc:	82 83       	std	Z+2, r24	; 0x02
    8ade:	93 83       	std	Z+3, r25	; 0x03
    8ae0:	c8 01       	movw	r24, r16
    8ae2:	b7 01       	movw	r22, r14
    8ae4:	20 e0       	ldi	r18, 0x00	; 0
    8ae6:	30 e0       	ldi	r19, 0x00	; 0
    8ae8:	a9 01       	movw	r20, r18
    8aea:	0f 2e       	mov	r0, r31
    8aec:	f0 e0       	ldi	r31, 0x00	; 0
    8aee:	ef 2e       	mov	r14, r31
    8af0:	f0 e0       	ldi	r31, 0x00	; 0
    8af2:	ff 2e       	mov	r15, r31
    8af4:	f4 e3       	ldi	r31, 0x34	; 52
    8af6:	0f 2f       	mov	r16, r31
    8af8:	f3 e4       	ldi	r31, 0x43	; 67
    8afa:	1f 2f       	mov	r17, r31
    8afc:	f0 2d       	mov	r31, r0
    8afe:	0e 94 a0 08 	call	0x1140	; 0x1140 <_Z3mapddddd>
    8b02:	0f 90       	pop	r0
    8b04:	0f 90       	pop	r0
    8b06:	0f 90       	pop	r0
    8b08:	0f 90       	pop	r0
        OCR5B=ICR5-vAl;
    8b0a:	c0 91 26 01 	lds	r28, 0x0126
    8b0e:	d0 91 27 01 	lds	r29, 0x0127
      case 46:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
        OCR5A=ICR5-vAl;
        break;
      case 45:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    8b12:	0e 94 bb 79 	call	0xf376	; 0xf376 <__fixsfsi>
        OCR5B=ICR5-vAl;
    8b16:	c6 1b       	sub	r28, r22
    8b18:	d7 0b       	sbc	r29, r23
    8b1a:	d0 93 2b 01 	sts	0x012B, r29
    8b1e:	c0 93 2a 01 	sts	0x012A, r28
    8b22:	51 c0       	rjmp	.+162    	; 0x8bc6 <_Z6angle4i+0x1754>
        break;
      case 44:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    8b24:	e6 e8       	ldi	r30, 0x86	; 134
    8b26:	f0 e0       	ldi	r31, 0x00	; 0
    8b28:	c0 81       	ld	r28, Z
    8b2a:	d1 81       	ldd	r29, Z+1	; 0x01
    8b2c:	80 80       	ld	r8, Z
    8b2e:	91 80       	ldd	r9, Z+1	; 0x01
    8b30:	00 d0       	rcall	.+0      	; 0x8b32 <_Z6angle4i+0x16c0>
    8b32:	0f 92       	push	r0
    8b34:	4d b6       	in	r4, 0x3d	; 61
    8b36:	5e b6       	in	r5, 0x3e	; 62
    8b38:	08 94       	sec
    8b3a:	41 1c       	adc	r4, r1
    8b3c:	51 1c       	adc	r5, r1
    8b3e:	88 27       	eor	r24, r24
    8b40:	77 fd       	sbrc	r23, 7
    8b42:	80 95       	com	r24
    8b44:	98 2f       	mov	r25, r24
    8b46:	0e 94 ee 79 	call	0xf3dc	; 0xf3dc <__floatsisf>
    8b4a:	7b 01       	movw	r14, r22
    8b4c:	8c 01       	movw	r16, r24
    8b4e:	ce 01       	movw	r24, r28
    8b50:	68 e2       	ldi	r22, 0x28	; 40
    8b52:	70 e0       	ldi	r23, 0x00	; 0
    8b54:	0e 94 05 7b 	call	0xf60a	; 0xf60a <__udivmodhi4>
    8b58:	80 e0       	ldi	r24, 0x00	; 0
    8b5a:	90 e0       	ldi	r25, 0x00	; 0
    8b5c:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    8b60:	5b 01       	movw	r10, r22
    8b62:	6c 01       	movw	r12, r24
    8b64:	96 94       	lsr	r9
    8b66:	87 94       	ror	r8
    8b68:	96 94       	lsr	r9
    8b6a:	87 94       	ror	r8
    8b6c:	96 94       	lsr	r9
    8b6e:	87 94       	ror	r8
    8b70:	b4 01       	movw	r22, r8
    8b72:	80 e0       	ldi	r24, 0x00	; 0
    8b74:	90 e0       	ldi	r25, 0x00	; 0
    8b76:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    8b7a:	f2 01       	movw	r30, r4
    8b7c:	60 83       	st	Z, r22
    8b7e:	71 83       	std	Z+1, r23	; 0x01
    8b80:	82 83       	std	Z+2, r24	; 0x02
    8b82:	93 83       	std	Z+3, r25	; 0x03
    8b84:	c8 01       	movw	r24, r16
    8b86:	b7 01       	movw	r22, r14
    8b88:	20 e0       	ldi	r18, 0x00	; 0
    8b8a:	30 e0       	ldi	r19, 0x00	; 0
    8b8c:	a9 01       	movw	r20, r18
    8b8e:	0f 2e       	mov	r0, r31
    8b90:	f0 e0       	ldi	r31, 0x00	; 0
    8b92:	ef 2e       	mov	r14, r31
    8b94:	f0 e0       	ldi	r31, 0x00	; 0
    8b96:	ff 2e       	mov	r15, r31
    8b98:	f4 e3       	ldi	r31, 0x34	; 52
    8b9a:	0f 2f       	mov	r16, r31
    8b9c:	f3 e4       	ldi	r31, 0x43	; 67
    8b9e:	1f 2f       	mov	r17, r31
    8ba0:	f0 2d       	mov	r31, r0
    8ba2:	0e 94 a0 08 	call	0x1140	; 0x1140 <_Z3mapddddd>
    8ba6:	0f 90       	pop	r0
    8ba8:	0f 90       	pop	r0
    8baa:	0f 90       	pop	r0
    8bac:	0f 90       	pop	r0
        OCR5C=ICR5-vAl;
    8bae:	c0 91 26 01 	lds	r28, 0x0126
    8bb2:	d0 91 27 01 	lds	r29, 0x0127
      case 45:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
        OCR5B=ICR5-vAl;
        break;
      case 44:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    8bb6:	0e 94 bb 79 	call	0xf376	; 0xf376 <__fixsfsi>
        OCR5C=ICR5-vAl;
    8bba:	c6 1b       	sub	r28, r22
    8bbc:	d7 0b       	sbc	r29, r23
    8bbe:	d0 93 2d 01 	sts	0x012D, r29
    8bc2:	c0 93 2c 01 	sts	0x012C, r28
		s.write(w);
    8bc6:	60 91 d0 02 	lds	r22, 0x02D0
    8bca:	70 91 d1 02 	lds	r23, 0x02D1
     }
  }

  void write(int vAl)           //PIN=servo pin no. on mega,vAl=angle F_CPU for the servo at pin
  {
    switch(pIn)
    8bce:	80 91 d7 02 	lds	r24, 0x02D7
    8bd2:	88 30       	cpi	r24, 0x08	; 8
    8bd4:	09 f4       	brne	.+2      	; 0x8bd8 <_Z6angle4i+0x1766>
    8bd6:	63 c2       	rjmp	.+1222   	; 0x909e <_Z6angle4i+0x1c2c>
    8bd8:	89 30       	cpi	r24, 0x09	; 9
    8bda:	98 f4       	brcc	.+38     	; 0x8c02 <_Z6angle4i+0x1790>
    8bdc:	85 30       	cpi	r24, 0x05	; 5
    8bde:	09 f4       	brne	.+2      	; 0x8be2 <_Z6angle4i+0x1770>
    8be0:	c4 c0       	rjmp	.+392    	; 0x8d6a <_Z6angle4i+0x18f8>
    8be2:	86 30       	cpi	r24, 0x06	; 6
    8be4:	38 f4       	brcc	.+14     	; 0x8bf4 <_Z6angle4i+0x1782>
    8be6:	82 30       	cpi	r24, 0x02	; 2
    8be8:	09 f4       	brne	.+2      	; 0x8bec <_Z6angle4i+0x177a>
    8bea:	11 c1       	rjmp	.+546    	; 0x8e0e <_Z6angle4i+0x199c>
    8bec:	83 30       	cpi	r24, 0x03	; 3
    8bee:	09 f0       	breq	.+2      	; 0x8bf2 <_Z6angle4i+0x1780>
    8bf0:	9d c3       	rjmp	.+1850   	; 0x932c <_Z6angle4i+0x1eba>
    8bf2:	5f c1       	rjmp	.+702    	; 0x8eb2 <_Z6angle4i+0x1a40>
    8bf4:	86 30       	cpi	r24, 0x06	; 6
    8bf6:	09 f4       	brne	.+2      	; 0x8bfa <_Z6angle4i+0x1788>
    8bf8:	ae c1       	rjmp	.+860    	; 0x8f56 <_Z6angle4i+0x1ae4>
    8bfa:	87 30       	cpi	r24, 0x07	; 7
    8bfc:	09 f0       	breq	.+2      	; 0x8c00 <_Z6angle4i+0x178e>
    8bfe:	96 c3       	rjmp	.+1836   	; 0x932c <_Z6angle4i+0x1eba>
    8c00:	fc c1       	rjmp	.+1016   	; 0x8ffa <_Z6angle4i+0x1b88>
    8c02:	8c 32       	cpi	r24, 0x2C	; 44
    8c04:	09 f4       	brne	.+2      	; 0x8c08 <_Z6angle4i+0x1796>
    8c06:	41 c3       	rjmp	.+1666   	; 0x928a <_Z6angle4i+0x1e18>
    8c08:	8d 32       	cpi	r24, 0x2D	; 45
    8c0a:	30 f4       	brcc	.+12     	; 0x8c18 <_Z6angle4i+0x17a6>
    8c0c:	8b 30       	cpi	r24, 0x0B	; 11
    8c0e:	59 f0       	breq	.+22     	; 0x8c26 <_Z6angle4i+0x17b4>
    8c10:	8c 30       	cpi	r24, 0x0C	; 12
    8c12:	09 f0       	breq	.+2      	; 0x8c16 <_Z6angle4i+0x17a4>
    8c14:	8b c3       	rjmp	.+1814   	; 0x932c <_Z6angle4i+0x1eba>
    8c16:	58 c0       	rjmp	.+176    	; 0x8cc8 <_Z6angle4i+0x1856>
    8c18:	8d 32       	cpi	r24, 0x2D	; 45
    8c1a:	09 f4       	brne	.+2      	; 0x8c1e <_Z6angle4i+0x17ac>
    8c1c:	e4 c2       	rjmp	.+1480   	; 0x91e6 <_Z6angle4i+0x1d74>
    8c1e:	8e 32       	cpi	r24, 0x2E	; 46
    8c20:	09 f0       	breq	.+2      	; 0x8c24 <_Z6angle4i+0x17b2>
    8c22:	84 c3       	rjmp	.+1800   	; 0x932c <_Z6angle4i+0x1eba>
    8c24:	8e c2       	rjmp	.+1308   	; 0x9142 <_Z6angle4i+0x1cd0>
    {
     case 11:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    8c26:	c6 e8       	ldi	r28, 0x86	; 134
    8c28:	d0 e0       	ldi	r29, 0x00	; 0
    8c2a:	08 81       	ld	r16, Y
    8c2c:	19 81       	ldd	r17, Y+1	; 0x01
    8c2e:	e8 80       	ld	r14, Y
    8c30:	f9 80       	ldd	r15, Y+1	; 0x01
    8c32:	00 d0       	rcall	.+0      	; 0x8c34 <_Z6angle4i+0x17c2>
    8c34:	0f 92       	push	r0
    8c36:	8d b6       	in	r8, 0x3d	; 61
    8c38:	9e b6       	in	r9, 0x3e	; 62
    8c3a:	08 94       	sec
    8c3c:	81 1c       	adc	r8, r1
    8c3e:	91 1c       	adc	r9, r1
    8c40:	88 27       	eor	r24, r24
    8c42:	77 fd       	sbrc	r23, 7
    8c44:	80 95       	com	r24
    8c46:	98 2f       	mov	r25, r24
    8c48:	0e 94 ee 79 	call	0xf3dc	; 0xf3dc <__floatsisf>
    8c4c:	2b 01       	movw	r4, r22
    8c4e:	3c 01       	movw	r6, r24
    8c50:	c8 01       	movw	r24, r16
    8c52:	68 e2       	ldi	r22, 0x28	; 40
    8c54:	70 e0       	ldi	r23, 0x00	; 0
    8c56:	0e 94 05 7b 	call	0xf60a	; 0xf60a <__udivmodhi4>
    8c5a:	80 e0       	ldi	r24, 0x00	; 0
    8c5c:	90 e0       	ldi	r25, 0x00	; 0
    8c5e:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    8c62:	5b 01       	movw	r10, r22
    8c64:	6c 01       	movw	r12, r24
    8c66:	f6 94       	lsr	r15
    8c68:	e7 94       	ror	r14
    8c6a:	f6 94       	lsr	r15
    8c6c:	e7 94       	ror	r14
    8c6e:	f6 94       	lsr	r15
    8c70:	e7 94       	ror	r14
    8c72:	b7 01       	movw	r22, r14
    8c74:	80 e0       	ldi	r24, 0x00	; 0
    8c76:	90 e0       	ldi	r25, 0x00	; 0
    8c78:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    8c7c:	f4 01       	movw	r30, r8
    8c7e:	60 83       	st	Z, r22
    8c80:	71 83       	std	Z+1, r23	; 0x01
    8c82:	82 83       	std	Z+2, r24	; 0x02
    8c84:	93 83       	std	Z+3, r25	; 0x03
    8c86:	c3 01       	movw	r24, r6
    8c88:	b2 01       	movw	r22, r4
    8c8a:	20 e0       	ldi	r18, 0x00	; 0
    8c8c:	30 e0       	ldi	r19, 0x00	; 0
    8c8e:	a9 01       	movw	r20, r18
    8c90:	0f 2e       	mov	r0, r31
    8c92:	f0 e0       	ldi	r31, 0x00	; 0
    8c94:	ef 2e       	mov	r14, r31
    8c96:	f0 e0       	ldi	r31, 0x00	; 0
    8c98:	ff 2e       	mov	r15, r31
    8c9a:	f4 e3       	ldi	r31, 0x34	; 52
    8c9c:	0f 2f       	mov	r16, r31
    8c9e:	f3 e4       	ldi	r31, 0x43	; 67
    8ca0:	1f 2f       	mov	r17, r31
    8ca2:	f0 2d       	mov	r31, r0
    8ca4:	0e 94 a0 08 	call	0x1140	; 0x1140 <_Z3mapddddd>
    8ca8:	0f 90       	pop	r0
    8caa:	0f 90       	pop	r0
    8cac:	0f 90       	pop	r0
    8cae:	0f 90       	pop	r0
        OCR1A=ICR1-vAl;
    8cb0:	09 90       	ld	r0, Y+
    8cb2:	d8 81       	ld	r29, Y
    8cb4:	c0 2d       	mov	r28, r0
  void write(int vAl)           //PIN=servo pin no. on mega,vAl=angle F_CPU for the servo at pin
  {
    switch(pIn)
    {
     case 11:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    8cb6:	0e 94 bb 79 	call	0xf376	; 0xf376 <__fixsfsi>
        OCR1A=ICR1-vAl;
    8cba:	c6 1b       	sub	r28, r22
    8cbc:	d7 0b       	sbc	r29, r23
    8cbe:	d0 93 89 00 	sts	0x0089, r29
    8cc2:	c0 93 88 00 	sts	0x0088, r28
    8cc6:	32 c3       	rjmp	.+1636   	; 0x932c <_Z6angle4i+0x1eba>
        break;
      case 12:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    8cc8:	c6 e8       	ldi	r28, 0x86	; 134
    8cca:	d0 e0       	ldi	r29, 0x00	; 0
    8ccc:	08 81       	ld	r16, Y
    8cce:	19 81       	ldd	r17, Y+1	; 0x01
    8cd0:	e8 80       	ld	r14, Y
    8cd2:	f9 80       	ldd	r15, Y+1	; 0x01
    8cd4:	00 d0       	rcall	.+0      	; 0x8cd6 <_Z6angle4i+0x1864>
    8cd6:	0f 92       	push	r0
    8cd8:	8d b6       	in	r8, 0x3d	; 61
    8cda:	9e b6       	in	r9, 0x3e	; 62
    8cdc:	08 94       	sec
    8cde:	81 1c       	adc	r8, r1
    8ce0:	91 1c       	adc	r9, r1
    8ce2:	88 27       	eor	r24, r24
    8ce4:	77 fd       	sbrc	r23, 7
    8ce6:	80 95       	com	r24
    8ce8:	98 2f       	mov	r25, r24
    8cea:	0e 94 ee 79 	call	0xf3dc	; 0xf3dc <__floatsisf>
    8cee:	2b 01       	movw	r4, r22
    8cf0:	3c 01       	movw	r6, r24
    8cf2:	c8 01       	movw	r24, r16
    8cf4:	68 e2       	ldi	r22, 0x28	; 40
    8cf6:	70 e0       	ldi	r23, 0x00	; 0
    8cf8:	0e 94 05 7b 	call	0xf60a	; 0xf60a <__udivmodhi4>
    8cfc:	80 e0       	ldi	r24, 0x00	; 0
    8cfe:	90 e0       	ldi	r25, 0x00	; 0
    8d00:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    8d04:	5b 01       	movw	r10, r22
    8d06:	6c 01       	movw	r12, r24
    8d08:	f6 94       	lsr	r15
    8d0a:	e7 94       	ror	r14
    8d0c:	f6 94       	lsr	r15
    8d0e:	e7 94       	ror	r14
    8d10:	f6 94       	lsr	r15
    8d12:	e7 94       	ror	r14
    8d14:	b7 01       	movw	r22, r14
    8d16:	80 e0       	ldi	r24, 0x00	; 0
    8d18:	90 e0       	ldi	r25, 0x00	; 0
    8d1a:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    8d1e:	f4 01       	movw	r30, r8
    8d20:	60 83       	st	Z, r22
    8d22:	71 83       	std	Z+1, r23	; 0x01
    8d24:	82 83       	std	Z+2, r24	; 0x02
    8d26:	93 83       	std	Z+3, r25	; 0x03
    8d28:	c3 01       	movw	r24, r6
    8d2a:	b2 01       	movw	r22, r4
    8d2c:	20 e0       	ldi	r18, 0x00	; 0
    8d2e:	30 e0       	ldi	r19, 0x00	; 0
    8d30:	a9 01       	movw	r20, r18
    8d32:	0f 2e       	mov	r0, r31
    8d34:	f0 e0       	ldi	r31, 0x00	; 0
    8d36:	ef 2e       	mov	r14, r31
    8d38:	f0 e0       	ldi	r31, 0x00	; 0
    8d3a:	ff 2e       	mov	r15, r31
    8d3c:	f4 e3       	ldi	r31, 0x34	; 52
    8d3e:	0f 2f       	mov	r16, r31
    8d40:	f3 e4       	ldi	r31, 0x43	; 67
    8d42:	1f 2f       	mov	r17, r31
    8d44:	f0 2d       	mov	r31, r0
    8d46:	0e 94 a0 08 	call	0x1140	; 0x1140 <_Z3mapddddd>
    8d4a:	0f 90       	pop	r0
    8d4c:	0f 90       	pop	r0
    8d4e:	0f 90       	pop	r0
    8d50:	0f 90       	pop	r0
        OCR1B=ICR1-vAl;
    8d52:	09 90       	ld	r0, Y+
    8d54:	d8 81       	ld	r29, Y
    8d56:	c0 2d       	mov	r28, r0
     case 11:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
        OCR1A=ICR1-vAl;
        break;
      case 12:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    8d58:	0e 94 bb 79 	call	0xf376	; 0xf376 <__fixsfsi>
        OCR1B=ICR1-vAl;
    8d5c:	c6 1b       	sub	r28, r22
    8d5e:	d7 0b       	sbc	r29, r23
    8d60:	d0 93 8b 00 	sts	0x008B, r29
    8d64:	c0 93 8a 00 	sts	0x008A, r28
    8d68:	e1 c2       	rjmp	.+1474   	; 0x932c <_Z6angle4i+0x1eba>
        break;
      case 5:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    8d6a:	e6 e8       	ldi	r30, 0x86	; 134
    8d6c:	f0 e0       	ldi	r31, 0x00	; 0
    8d6e:	c0 81       	ld	r28, Z
    8d70:	d1 81       	ldd	r29, Z+1	; 0x01
    8d72:	80 80       	ld	r8, Z
    8d74:	91 80       	ldd	r9, Z+1	; 0x01
    8d76:	00 d0       	rcall	.+0      	; 0x8d78 <_Z6angle4i+0x1906>
    8d78:	0f 92       	push	r0
    8d7a:	4d b6       	in	r4, 0x3d	; 61
    8d7c:	5e b6       	in	r5, 0x3e	; 62
    8d7e:	08 94       	sec
    8d80:	41 1c       	adc	r4, r1
    8d82:	51 1c       	adc	r5, r1
    8d84:	88 27       	eor	r24, r24
    8d86:	77 fd       	sbrc	r23, 7
    8d88:	80 95       	com	r24
    8d8a:	98 2f       	mov	r25, r24
    8d8c:	0e 94 ee 79 	call	0xf3dc	; 0xf3dc <__floatsisf>
    8d90:	7b 01       	movw	r14, r22
    8d92:	8c 01       	movw	r16, r24
    8d94:	ce 01       	movw	r24, r28
    8d96:	68 e2       	ldi	r22, 0x28	; 40
    8d98:	70 e0       	ldi	r23, 0x00	; 0
    8d9a:	0e 94 05 7b 	call	0xf60a	; 0xf60a <__udivmodhi4>
    8d9e:	80 e0       	ldi	r24, 0x00	; 0
    8da0:	90 e0       	ldi	r25, 0x00	; 0
    8da2:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    8da6:	5b 01       	movw	r10, r22
    8da8:	6c 01       	movw	r12, r24
    8daa:	96 94       	lsr	r9
    8dac:	87 94       	ror	r8
    8dae:	96 94       	lsr	r9
    8db0:	87 94       	ror	r8
    8db2:	96 94       	lsr	r9
    8db4:	87 94       	ror	r8
    8db6:	b4 01       	movw	r22, r8
    8db8:	80 e0       	ldi	r24, 0x00	; 0
    8dba:	90 e0       	ldi	r25, 0x00	; 0
    8dbc:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    8dc0:	f2 01       	movw	r30, r4
    8dc2:	60 83       	st	Z, r22
    8dc4:	71 83       	std	Z+1, r23	; 0x01
    8dc6:	82 83       	std	Z+2, r24	; 0x02
    8dc8:	93 83       	std	Z+3, r25	; 0x03
    8dca:	c8 01       	movw	r24, r16
    8dcc:	b7 01       	movw	r22, r14
    8dce:	20 e0       	ldi	r18, 0x00	; 0
    8dd0:	30 e0       	ldi	r19, 0x00	; 0
    8dd2:	a9 01       	movw	r20, r18
    8dd4:	0f 2e       	mov	r0, r31
    8dd6:	f0 e0       	ldi	r31, 0x00	; 0
    8dd8:	ef 2e       	mov	r14, r31
    8dda:	f0 e0       	ldi	r31, 0x00	; 0
    8ddc:	ff 2e       	mov	r15, r31
    8dde:	f4 e3       	ldi	r31, 0x34	; 52
    8de0:	0f 2f       	mov	r16, r31
    8de2:	f3 e4       	ldi	r31, 0x43	; 67
    8de4:	1f 2f       	mov	r17, r31
    8de6:	f0 2d       	mov	r31, r0
    8de8:	0e 94 a0 08 	call	0x1140	; 0x1140 <_Z3mapddddd>
    8dec:	0f 90       	pop	r0
    8dee:	0f 90       	pop	r0
    8df0:	0f 90       	pop	r0
    8df2:	0f 90       	pop	r0
        OCR3A=ICR3-vAl;
    8df4:	c0 91 96 00 	lds	r28, 0x0096
    8df8:	d0 91 97 00 	lds	r29, 0x0097
      case 12:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
        OCR1B=ICR1-vAl;
        break;
      case 5:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    8dfc:	0e 94 bb 79 	call	0xf376	; 0xf376 <__fixsfsi>
        OCR3A=ICR3-vAl;
    8e00:	c6 1b       	sub	r28, r22
    8e02:	d7 0b       	sbc	r29, r23
    8e04:	d0 93 99 00 	sts	0x0099, r29
    8e08:	c0 93 98 00 	sts	0x0098, r28
    8e0c:	8f c2       	rjmp	.+1310   	; 0x932c <_Z6angle4i+0x1eba>
        break;
      case 2:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    8e0e:	e6 e8       	ldi	r30, 0x86	; 134
    8e10:	f0 e0       	ldi	r31, 0x00	; 0
    8e12:	c0 81       	ld	r28, Z
    8e14:	d1 81       	ldd	r29, Z+1	; 0x01
    8e16:	80 80       	ld	r8, Z
    8e18:	91 80       	ldd	r9, Z+1	; 0x01
    8e1a:	00 d0       	rcall	.+0      	; 0x8e1c <_Z6angle4i+0x19aa>
    8e1c:	0f 92       	push	r0
    8e1e:	4d b6       	in	r4, 0x3d	; 61
    8e20:	5e b6       	in	r5, 0x3e	; 62
    8e22:	08 94       	sec
    8e24:	41 1c       	adc	r4, r1
    8e26:	51 1c       	adc	r5, r1
    8e28:	88 27       	eor	r24, r24
    8e2a:	77 fd       	sbrc	r23, 7
    8e2c:	80 95       	com	r24
    8e2e:	98 2f       	mov	r25, r24
    8e30:	0e 94 ee 79 	call	0xf3dc	; 0xf3dc <__floatsisf>
    8e34:	7b 01       	movw	r14, r22
    8e36:	8c 01       	movw	r16, r24
    8e38:	ce 01       	movw	r24, r28
    8e3a:	68 e2       	ldi	r22, 0x28	; 40
    8e3c:	70 e0       	ldi	r23, 0x00	; 0
    8e3e:	0e 94 05 7b 	call	0xf60a	; 0xf60a <__udivmodhi4>
    8e42:	80 e0       	ldi	r24, 0x00	; 0
    8e44:	90 e0       	ldi	r25, 0x00	; 0
    8e46:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    8e4a:	5b 01       	movw	r10, r22
    8e4c:	6c 01       	movw	r12, r24
    8e4e:	96 94       	lsr	r9
    8e50:	87 94       	ror	r8
    8e52:	96 94       	lsr	r9
    8e54:	87 94       	ror	r8
    8e56:	96 94       	lsr	r9
    8e58:	87 94       	ror	r8
    8e5a:	b4 01       	movw	r22, r8
    8e5c:	80 e0       	ldi	r24, 0x00	; 0
    8e5e:	90 e0       	ldi	r25, 0x00	; 0
    8e60:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    8e64:	f2 01       	movw	r30, r4
    8e66:	60 83       	st	Z, r22
    8e68:	71 83       	std	Z+1, r23	; 0x01
    8e6a:	82 83       	std	Z+2, r24	; 0x02
    8e6c:	93 83       	std	Z+3, r25	; 0x03
    8e6e:	c8 01       	movw	r24, r16
    8e70:	b7 01       	movw	r22, r14
    8e72:	20 e0       	ldi	r18, 0x00	; 0
    8e74:	30 e0       	ldi	r19, 0x00	; 0
    8e76:	a9 01       	movw	r20, r18
    8e78:	0f 2e       	mov	r0, r31
    8e7a:	f0 e0       	ldi	r31, 0x00	; 0
    8e7c:	ef 2e       	mov	r14, r31
    8e7e:	f0 e0       	ldi	r31, 0x00	; 0
    8e80:	ff 2e       	mov	r15, r31
    8e82:	f4 e3       	ldi	r31, 0x34	; 52
    8e84:	0f 2f       	mov	r16, r31
    8e86:	f3 e4       	ldi	r31, 0x43	; 67
    8e88:	1f 2f       	mov	r17, r31
    8e8a:	f0 2d       	mov	r31, r0
    8e8c:	0e 94 a0 08 	call	0x1140	; 0x1140 <_Z3mapddddd>
    8e90:	0f 90       	pop	r0
    8e92:	0f 90       	pop	r0
    8e94:	0f 90       	pop	r0
    8e96:	0f 90       	pop	r0
        OCR3B=ICR3-vAl;
    8e98:	c0 91 96 00 	lds	r28, 0x0096
    8e9c:	d0 91 97 00 	lds	r29, 0x0097
      case 5:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
        OCR3A=ICR3-vAl;
        break;
      case 2:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    8ea0:	0e 94 bb 79 	call	0xf376	; 0xf376 <__fixsfsi>
        OCR3B=ICR3-vAl;
    8ea4:	c6 1b       	sub	r28, r22
    8ea6:	d7 0b       	sbc	r29, r23
    8ea8:	d0 93 9b 00 	sts	0x009B, r29
    8eac:	c0 93 9a 00 	sts	0x009A, r28
    8eb0:	3d c2       	rjmp	.+1146   	; 0x932c <_Z6angle4i+0x1eba>
        break;
      case 3:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    8eb2:	e6 e8       	ldi	r30, 0x86	; 134
    8eb4:	f0 e0       	ldi	r31, 0x00	; 0
    8eb6:	c0 81       	ld	r28, Z
    8eb8:	d1 81       	ldd	r29, Z+1	; 0x01
    8eba:	80 80       	ld	r8, Z
    8ebc:	91 80       	ldd	r9, Z+1	; 0x01
    8ebe:	00 d0       	rcall	.+0      	; 0x8ec0 <_Z6angle4i+0x1a4e>
    8ec0:	0f 92       	push	r0
    8ec2:	4d b6       	in	r4, 0x3d	; 61
    8ec4:	5e b6       	in	r5, 0x3e	; 62
    8ec6:	08 94       	sec
    8ec8:	41 1c       	adc	r4, r1
    8eca:	51 1c       	adc	r5, r1
    8ecc:	88 27       	eor	r24, r24
    8ece:	77 fd       	sbrc	r23, 7
    8ed0:	80 95       	com	r24
    8ed2:	98 2f       	mov	r25, r24
    8ed4:	0e 94 ee 79 	call	0xf3dc	; 0xf3dc <__floatsisf>
    8ed8:	7b 01       	movw	r14, r22
    8eda:	8c 01       	movw	r16, r24
    8edc:	ce 01       	movw	r24, r28
    8ede:	68 e2       	ldi	r22, 0x28	; 40
    8ee0:	70 e0       	ldi	r23, 0x00	; 0
    8ee2:	0e 94 05 7b 	call	0xf60a	; 0xf60a <__udivmodhi4>
    8ee6:	80 e0       	ldi	r24, 0x00	; 0
    8ee8:	90 e0       	ldi	r25, 0x00	; 0
    8eea:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    8eee:	5b 01       	movw	r10, r22
    8ef0:	6c 01       	movw	r12, r24
    8ef2:	96 94       	lsr	r9
    8ef4:	87 94       	ror	r8
    8ef6:	96 94       	lsr	r9
    8ef8:	87 94       	ror	r8
    8efa:	96 94       	lsr	r9
    8efc:	87 94       	ror	r8
    8efe:	b4 01       	movw	r22, r8
    8f00:	80 e0       	ldi	r24, 0x00	; 0
    8f02:	90 e0       	ldi	r25, 0x00	; 0
    8f04:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    8f08:	f2 01       	movw	r30, r4
    8f0a:	60 83       	st	Z, r22
    8f0c:	71 83       	std	Z+1, r23	; 0x01
    8f0e:	82 83       	std	Z+2, r24	; 0x02
    8f10:	93 83       	std	Z+3, r25	; 0x03
    8f12:	c8 01       	movw	r24, r16
    8f14:	b7 01       	movw	r22, r14
    8f16:	20 e0       	ldi	r18, 0x00	; 0
    8f18:	30 e0       	ldi	r19, 0x00	; 0
    8f1a:	a9 01       	movw	r20, r18
    8f1c:	0f 2e       	mov	r0, r31
    8f1e:	f0 e0       	ldi	r31, 0x00	; 0
    8f20:	ef 2e       	mov	r14, r31
    8f22:	f0 e0       	ldi	r31, 0x00	; 0
    8f24:	ff 2e       	mov	r15, r31
    8f26:	f4 e3       	ldi	r31, 0x34	; 52
    8f28:	0f 2f       	mov	r16, r31
    8f2a:	f3 e4       	ldi	r31, 0x43	; 67
    8f2c:	1f 2f       	mov	r17, r31
    8f2e:	f0 2d       	mov	r31, r0
    8f30:	0e 94 a0 08 	call	0x1140	; 0x1140 <_Z3mapddddd>
    8f34:	0f 90       	pop	r0
    8f36:	0f 90       	pop	r0
    8f38:	0f 90       	pop	r0
    8f3a:	0f 90       	pop	r0
        OCR3C=ICR3-vAl;
    8f3c:	c0 91 96 00 	lds	r28, 0x0096
    8f40:	d0 91 97 00 	lds	r29, 0x0097
      case 2:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
        OCR3B=ICR3-vAl;
        break;
      case 3:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    8f44:	0e 94 bb 79 	call	0xf376	; 0xf376 <__fixsfsi>
        OCR3C=ICR3-vAl;
    8f48:	c6 1b       	sub	r28, r22
    8f4a:	d7 0b       	sbc	r29, r23
    8f4c:	d0 93 9d 00 	sts	0x009D, r29
    8f50:	c0 93 9c 00 	sts	0x009C, r28
    8f54:	eb c1       	rjmp	.+982    	; 0x932c <_Z6angle4i+0x1eba>
        break;
      case 6:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    8f56:	e6 e8       	ldi	r30, 0x86	; 134
    8f58:	f0 e0       	ldi	r31, 0x00	; 0
    8f5a:	c0 81       	ld	r28, Z
    8f5c:	d1 81       	ldd	r29, Z+1	; 0x01
    8f5e:	80 80       	ld	r8, Z
    8f60:	91 80       	ldd	r9, Z+1	; 0x01
    8f62:	00 d0       	rcall	.+0      	; 0x8f64 <_Z6angle4i+0x1af2>
    8f64:	0f 92       	push	r0
    8f66:	4d b6       	in	r4, 0x3d	; 61
    8f68:	5e b6       	in	r5, 0x3e	; 62
    8f6a:	08 94       	sec
    8f6c:	41 1c       	adc	r4, r1
    8f6e:	51 1c       	adc	r5, r1
    8f70:	88 27       	eor	r24, r24
    8f72:	77 fd       	sbrc	r23, 7
    8f74:	80 95       	com	r24
    8f76:	98 2f       	mov	r25, r24
    8f78:	0e 94 ee 79 	call	0xf3dc	; 0xf3dc <__floatsisf>
    8f7c:	7b 01       	movw	r14, r22
    8f7e:	8c 01       	movw	r16, r24
    8f80:	ce 01       	movw	r24, r28
    8f82:	68 e2       	ldi	r22, 0x28	; 40
    8f84:	70 e0       	ldi	r23, 0x00	; 0
    8f86:	0e 94 05 7b 	call	0xf60a	; 0xf60a <__udivmodhi4>
    8f8a:	80 e0       	ldi	r24, 0x00	; 0
    8f8c:	90 e0       	ldi	r25, 0x00	; 0
    8f8e:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    8f92:	5b 01       	movw	r10, r22
    8f94:	6c 01       	movw	r12, r24
    8f96:	96 94       	lsr	r9
    8f98:	87 94       	ror	r8
    8f9a:	96 94       	lsr	r9
    8f9c:	87 94       	ror	r8
    8f9e:	96 94       	lsr	r9
    8fa0:	87 94       	ror	r8
    8fa2:	b4 01       	movw	r22, r8
    8fa4:	80 e0       	ldi	r24, 0x00	; 0
    8fa6:	90 e0       	ldi	r25, 0x00	; 0
    8fa8:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    8fac:	f2 01       	movw	r30, r4
    8fae:	60 83       	st	Z, r22
    8fb0:	71 83       	std	Z+1, r23	; 0x01
    8fb2:	82 83       	std	Z+2, r24	; 0x02
    8fb4:	93 83       	std	Z+3, r25	; 0x03
    8fb6:	c8 01       	movw	r24, r16
    8fb8:	b7 01       	movw	r22, r14
    8fba:	20 e0       	ldi	r18, 0x00	; 0
    8fbc:	30 e0       	ldi	r19, 0x00	; 0
    8fbe:	a9 01       	movw	r20, r18
    8fc0:	0f 2e       	mov	r0, r31
    8fc2:	f0 e0       	ldi	r31, 0x00	; 0
    8fc4:	ef 2e       	mov	r14, r31
    8fc6:	f0 e0       	ldi	r31, 0x00	; 0
    8fc8:	ff 2e       	mov	r15, r31
    8fca:	f4 e3       	ldi	r31, 0x34	; 52
    8fcc:	0f 2f       	mov	r16, r31
    8fce:	f3 e4       	ldi	r31, 0x43	; 67
    8fd0:	1f 2f       	mov	r17, r31
    8fd2:	f0 2d       	mov	r31, r0
    8fd4:	0e 94 a0 08 	call	0x1140	; 0x1140 <_Z3mapddddd>
    8fd8:	0f 90       	pop	r0
    8fda:	0f 90       	pop	r0
    8fdc:	0f 90       	pop	r0
    8fde:	0f 90       	pop	r0
        OCR4A=ICR4-vAl;
    8fe0:	c0 91 a6 00 	lds	r28, 0x00A6
    8fe4:	d0 91 a7 00 	lds	r29, 0x00A7
      case 3:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
        OCR3C=ICR3-vAl;
        break;
      case 6:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    8fe8:	0e 94 bb 79 	call	0xf376	; 0xf376 <__fixsfsi>
        OCR4A=ICR4-vAl;
    8fec:	c6 1b       	sub	r28, r22
    8fee:	d7 0b       	sbc	r29, r23
    8ff0:	d0 93 a9 00 	sts	0x00A9, r29
    8ff4:	c0 93 a8 00 	sts	0x00A8, r28
    8ff8:	99 c1       	rjmp	.+818    	; 0x932c <_Z6angle4i+0x1eba>
        break;
      case 7:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    8ffa:	e6 e8       	ldi	r30, 0x86	; 134
    8ffc:	f0 e0       	ldi	r31, 0x00	; 0
    8ffe:	c0 81       	ld	r28, Z
    9000:	d1 81       	ldd	r29, Z+1	; 0x01
    9002:	80 80       	ld	r8, Z
    9004:	91 80       	ldd	r9, Z+1	; 0x01
    9006:	00 d0       	rcall	.+0      	; 0x9008 <_Z6angle4i+0x1b96>
    9008:	0f 92       	push	r0
    900a:	4d b6       	in	r4, 0x3d	; 61
    900c:	5e b6       	in	r5, 0x3e	; 62
    900e:	08 94       	sec
    9010:	41 1c       	adc	r4, r1
    9012:	51 1c       	adc	r5, r1
    9014:	88 27       	eor	r24, r24
    9016:	77 fd       	sbrc	r23, 7
    9018:	80 95       	com	r24
    901a:	98 2f       	mov	r25, r24
    901c:	0e 94 ee 79 	call	0xf3dc	; 0xf3dc <__floatsisf>
    9020:	7b 01       	movw	r14, r22
    9022:	8c 01       	movw	r16, r24
    9024:	ce 01       	movw	r24, r28
    9026:	68 e2       	ldi	r22, 0x28	; 40
    9028:	70 e0       	ldi	r23, 0x00	; 0
    902a:	0e 94 05 7b 	call	0xf60a	; 0xf60a <__udivmodhi4>
    902e:	80 e0       	ldi	r24, 0x00	; 0
    9030:	90 e0       	ldi	r25, 0x00	; 0
    9032:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    9036:	5b 01       	movw	r10, r22
    9038:	6c 01       	movw	r12, r24
    903a:	96 94       	lsr	r9
    903c:	87 94       	ror	r8
    903e:	96 94       	lsr	r9
    9040:	87 94       	ror	r8
    9042:	96 94       	lsr	r9
    9044:	87 94       	ror	r8
    9046:	b4 01       	movw	r22, r8
    9048:	80 e0       	ldi	r24, 0x00	; 0
    904a:	90 e0       	ldi	r25, 0x00	; 0
    904c:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    9050:	f2 01       	movw	r30, r4
    9052:	60 83       	st	Z, r22
    9054:	71 83       	std	Z+1, r23	; 0x01
    9056:	82 83       	std	Z+2, r24	; 0x02
    9058:	93 83       	std	Z+3, r25	; 0x03
    905a:	c8 01       	movw	r24, r16
    905c:	b7 01       	movw	r22, r14
    905e:	20 e0       	ldi	r18, 0x00	; 0
    9060:	30 e0       	ldi	r19, 0x00	; 0
    9062:	a9 01       	movw	r20, r18
    9064:	0f 2e       	mov	r0, r31
    9066:	f0 e0       	ldi	r31, 0x00	; 0
    9068:	ef 2e       	mov	r14, r31
    906a:	f0 e0       	ldi	r31, 0x00	; 0
    906c:	ff 2e       	mov	r15, r31
    906e:	f4 e3       	ldi	r31, 0x34	; 52
    9070:	0f 2f       	mov	r16, r31
    9072:	f3 e4       	ldi	r31, 0x43	; 67
    9074:	1f 2f       	mov	r17, r31
    9076:	f0 2d       	mov	r31, r0
    9078:	0e 94 a0 08 	call	0x1140	; 0x1140 <_Z3mapddddd>
    907c:	0f 90       	pop	r0
    907e:	0f 90       	pop	r0
    9080:	0f 90       	pop	r0
    9082:	0f 90       	pop	r0
        OCR4B=ICR4-vAl;
    9084:	c0 91 a6 00 	lds	r28, 0x00A6
    9088:	d0 91 a7 00 	lds	r29, 0x00A7
      case 6:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
        OCR4A=ICR4-vAl;
        break;
      case 7:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    908c:	0e 94 bb 79 	call	0xf376	; 0xf376 <__fixsfsi>
        OCR4B=ICR4-vAl;
    9090:	c6 1b       	sub	r28, r22
    9092:	d7 0b       	sbc	r29, r23
    9094:	d0 93 ab 00 	sts	0x00AB, r29
    9098:	c0 93 aa 00 	sts	0x00AA, r28
    909c:	47 c1       	rjmp	.+654    	; 0x932c <_Z6angle4i+0x1eba>
        break; 
      case 8:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    909e:	e6 e8       	ldi	r30, 0x86	; 134
    90a0:	f0 e0       	ldi	r31, 0x00	; 0
    90a2:	c0 81       	ld	r28, Z
    90a4:	d1 81       	ldd	r29, Z+1	; 0x01
    90a6:	80 80       	ld	r8, Z
    90a8:	91 80       	ldd	r9, Z+1	; 0x01
    90aa:	00 d0       	rcall	.+0      	; 0x90ac <_Z6angle4i+0x1c3a>
    90ac:	0f 92       	push	r0
    90ae:	4d b6       	in	r4, 0x3d	; 61
    90b0:	5e b6       	in	r5, 0x3e	; 62
    90b2:	08 94       	sec
    90b4:	41 1c       	adc	r4, r1
    90b6:	51 1c       	adc	r5, r1
    90b8:	88 27       	eor	r24, r24
    90ba:	77 fd       	sbrc	r23, 7
    90bc:	80 95       	com	r24
    90be:	98 2f       	mov	r25, r24
    90c0:	0e 94 ee 79 	call	0xf3dc	; 0xf3dc <__floatsisf>
    90c4:	7b 01       	movw	r14, r22
    90c6:	8c 01       	movw	r16, r24
    90c8:	ce 01       	movw	r24, r28
    90ca:	68 e2       	ldi	r22, 0x28	; 40
    90cc:	70 e0       	ldi	r23, 0x00	; 0
    90ce:	0e 94 05 7b 	call	0xf60a	; 0xf60a <__udivmodhi4>
    90d2:	80 e0       	ldi	r24, 0x00	; 0
    90d4:	90 e0       	ldi	r25, 0x00	; 0
    90d6:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    90da:	5b 01       	movw	r10, r22
    90dc:	6c 01       	movw	r12, r24
    90de:	96 94       	lsr	r9
    90e0:	87 94       	ror	r8
    90e2:	96 94       	lsr	r9
    90e4:	87 94       	ror	r8
    90e6:	96 94       	lsr	r9
    90e8:	87 94       	ror	r8
    90ea:	b4 01       	movw	r22, r8
    90ec:	80 e0       	ldi	r24, 0x00	; 0
    90ee:	90 e0       	ldi	r25, 0x00	; 0
    90f0:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    90f4:	f2 01       	movw	r30, r4
    90f6:	60 83       	st	Z, r22
    90f8:	71 83       	std	Z+1, r23	; 0x01
    90fa:	82 83       	std	Z+2, r24	; 0x02
    90fc:	93 83       	std	Z+3, r25	; 0x03
    90fe:	c8 01       	movw	r24, r16
    9100:	b7 01       	movw	r22, r14
    9102:	20 e0       	ldi	r18, 0x00	; 0
    9104:	30 e0       	ldi	r19, 0x00	; 0
    9106:	a9 01       	movw	r20, r18
    9108:	0f 2e       	mov	r0, r31
    910a:	f0 e0       	ldi	r31, 0x00	; 0
    910c:	ef 2e       	mov	r14, r31
    910e:	f0 e0       	ldi	r31, 0x00	; 0
    9110:	ff 2e       	mov	r15, r31
    9112:	f4 e3       	ldi	r31, 0x34	; 52
    9114:	0f 2f       	mov	r16, r31
    9116:	f3 e4       	ldi	r31, 0x43	; 67
    9118:	1f 2f       	mov	r17, r31
    911a:	f0 2d       	mov	r31, r0
    911c:	0e 94 a0 08 	call	0x1140	; 0x1140 <_Z3mapddddd>
    9120:	0f 90       	pop	r0
    9122:	0f 90       	pop	r0
    9124:	0f 90       	pop	r0
    9126:	0f 90       	pop	r0
        OCR4C=ICR4-vAl;
    9128:	c0 91 a6 00 	lds	r28, 0x00A6
    912c:	d0 91 a7 00 	lds	r29, 0x00A7
      case 7:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
        OCR4B=ICR4-vAl;
        break; 
      case 8:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    9130:	0e 94 bb 79 	call	0xf376	; 0xf376 <__fixsfsi>
        OCR4C=ICR4-vAl;
    9134:	c6 1b       	sub	r28, r22
    9136:	d7 0b       	sbc	r29, r23
    9138:	d0 93 ad 00 	sts	0x00AD, r29
    913c:	c0 93 ac 00 	sts	0x00AC, r28
    9140:	f5 c0       	rjmp	.+490    	; 0x932c <_Z6angle4i+0x1eba>
        break;
      case 46:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    9142:	e6 e8       	ldi	r30, 0x86	; 134
    9144:	f0 e0       	ldi	r31, 0x00	; 0
    9146:	c0 81       	ld	r28, Z
    9148:	d1 81       	ldd	r29, Z+1	; 0x01
    914a:	80 80       	ld	r8, Z
    914c:	91 80       	ldd	r9, Z+1	; 0x01
    914e:	00 d0       	rcall	.+0      	; 0x9150 <_Z6angle4i+0x1cde>
    9150:	0f 92       	push	r0
    9152:	4d b6       	in	r4, 0x3d	; 61
    9154:	5e b6       	in	r5, 0x3e	; 62
    9156:	08 94       	sec
    9158:	41 1c       	adc	r4, r1
    915a:	51 1c       	adc	r5, r1
    915c:	88 27       	eor	r24, r24
    915e:	77 fd       	sbrc	r23, 7
    9160:	80 95       	com	r24
    9162:	98 2f       	mov	r25, r24
    9164:	0e 94 ee 79 	call	0xf3dc	; 0xf3dc <__floatsisf>
    9168:	7b 01       	movw	r14, r22
    916a:	8c 01       	movw	r16, r24
    916c:	ce 01       	movw	r24, r28
    916e:	68 e2       	ldi	r22, 0x28	; 40
    9170:	70 e0       	ldi	r23, 0x00	; 0
    9172:	0e 94 05 7b 	call	0xf60a	; 0xf60a <__udivmodhi4>
    9176:	80 e0       	ldi	r24, 0x00	; 0
    9178:	90 e0       	ldi	r25, 0x00	; 0
    917a:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    917e:	5b 01       	movw	r10, r22
    9180:	6c 01       	movw	r12, r24
    9182:	96 94       	lsr	r9
    9184:	87 94       	ror	r8
    9186:	96 94       	lsr	r9
    9188:	87 94       	ror	r8
    918a:	96 94       	lsr	r9
    918c:	87 94       	ror	r8
    918e:	b4 01       	movw	r22, r8
    9190:	80 e0       	ldi	r24, 0x00	; 0
    9192:	90 e0       	ldi	r25, 0x00	; 0
    9194:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    9198:	f2 01       	movw	r30, r4
    919a:	60 83       	st	Z, r22
    919c:	71 83       	std	Z+1, r23	; 0x01
    919e:	82 83       	std	Z+2, r24	; 0x02
    91a0:	93 83       	std	Z+3, r25	; 0x03
    91a2:	c8 01       	movw	r24, r16
    91a4:	b7 01       	movw	r22, r14
    91a6:	20 e0       	ldi	r18, 0x00	; 0
    91a8:	30 e0       	ldi	r19, 0x00	; 0
    91aa:	a9 01       	movw	r20, r18
    91ac:	0f 2e       	mov	r0, r31
    91ae:	f0 e0       	ldi	r31, 0x00	; 0
    91b0:	ef 2e       	mov	r14, r31
    91b2:	f0 e0       	ldi	r31, 0x00	; 0
    91b4:	ff 2e       	mov	r15, r31
    91b6:	f4 e3       	ldi	r31, 0x34	; 52
    91b8:	0f 2f       	mov	r16, r31
    91ba:	f3 e4       	ldi	r31, 0x43	; 67
    91bc:	1f 2f       	mov	r17, r31
    91be:	f0 2d       	mov	r31, r0
    91c0:	0e 94 a0 08 	call	0x1140	; 0x1140 <_Z3mapddddd>
    91c4:	0f 90       	pop	r0
    91c6:	0f 90       	pop	r0
    91c8:	0f 90       	pop	r0
    91ca:	0f 90       	pop	r0
        OCR5A=ICR5-vAl;
    91cc:	c0 91 26 01 	lds	r28, 0x0126
    91d0:	d0 91 27 01 	lds	r29, 0x0127
      case 8:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
        OCR4C=ICR4-vAl;
        break;
      case 46:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    91d4:	0e 94 bb 79 	call	0xf376	; 0xf376 <__fixsfsi>
        OCR5A=ICR5-vAl;
    91d8:	c6 1b       	sub	r28, r22
    91da:	d7 0b       	sbc	r29, r23
    91dc:	d0 93 29 01 	sts	0x0129, r29
    91e0:	c0 93 28 01 	sts	0x0128, r28
    91e4:	a3 c0       	rjmp	.+326    	; 0x932c <_Z6angle4i+0x1eba>
        break;
      case 45:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    91e6:	e6 e8       	ldi	r30, 0x86	; 134
    91e8:	f0 e0       	ldi	r31, 0x00	; 0
    91ea:	c0 81       	ld	r28, Z
    91ec:	d1 81       	ldd	r29, Z+1	; 0x01
    91ee:	80 80       	ld	r8, Z
    91f0:	91 80       	ldd	r9, Z+1	; 0x01
    91f2:	00 d0       	rcall	.+0      	; 0x91f4 <_Z6angle4i+0x1d82>
    91f4:	0f 92       	push	r0
    91f6:	4d b6       	in	r4, 0x3d	; 61
    91f8:	5e b6       	in	r5, 0x3e	; 62
    91fa:	08 94       	sec
    91fc:	41 1c       	adc	r4, r1
    91fe:	51 1c       	adc	r5, r1
    9200:	88 27       	eor	r24, r24
    9202:	77 fd       	sbrc	r23, 7
    9204:	80 95       	com	r24
    9206:	98 2f       	mov	r25, r24
    9208:	0e 94 ee 79 	call	0xf3dc	; 0xf3dc <__floatsisf>
    920c:	7b 01       	movw	r14, r22
    920e:	8c 01       	movw	r16, r24
    9210:	ce 01       	movw	r24, r28
    9212:	68 e2       	ldi	r22, 0x28	; 40
    9214:	70 e0       	ldi	r23, 0x00	; 0
    9216:	0e 94 05 7b 	call	0xf60a	; 0xf60a <__udivmodhi4>
    921a:	80 e0       	ldi	r24, 0x00	; 0
    921c:	90 e0       	ldi	r25, 0x00	; 0
    921e:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    9222:	5b 01       	movw	r10, r22
    9224:	6c 01       	movw	r12, r24
    9226:	96 94       	lsr	r9
    9228:	87 94       	ror	r8
    922a:	96 94       	lsr	r9
    922c:	87 94       	ror	r8
    922e:	96 94       	lsr	r9
    9230:	87 94       	ror	r8
    9232:	b4 01       	movw	r22, r8
    9234:	80 e0       	ldi	r24, 0x00	; 0
    9236:	90 e0       	ldi	r25, 0x00	; 0
    9238:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    923c:	f2 01       	movw	r30, r4
    923e:	60 83       	st	Z, r22
    9240:	71 83       	std	Z+1, r23	; 0x01
    9242:	82 83       	std	Z+2, r24	; 0x02
    9244:	93 83       	std	Z+3, r25	; 0x03
    9246:	c8 01       	movw	r24, r16
    9248:	b7 01       	movw	r22, r14
    924a:	20 e0       	ldi	r18, 0x00	; 0
    924c:	30 e0       	ldi	r19, 0x00	; 0
    924e:	a9 01       	movw	r20, r18
    9250:	0f 2e       	mov	r0, r31
    9252:	f0 e0       	ldi	r31, 0x00	; 0
    9254:	ef 2e       	mov	r14, r31
    9256:	f0 e0       	ldi	r31, 0x00	; 0
    9258:	ff 2e       	mov	r15, r31
    925a:	f4 e3       	ldi	r31, 0x34	; 52
    925c:	0f 2f       	mov	r16, r31
    925e:	f3 e4       	ldi	r31, 0x43	; 67
    9260:	1f 2f       	mov	r17, r31
    9262:	f0 2d       	mov	r31, r0
    9264:	0e 94 a0 08 	call	0x1140	; 0x1140 <_Z3mapddddd>
    9268:	0f 90       	pop	r0
    926a:	0f 90       	pop	r0
    926c:	0f 90       	pop	r0
    926e:	0f 90       	pop	r0
        OCR5B=ICR5-vAl;
    9270:	c0 91 26 01 	lds	r28, 0x0126
    9274:	d0 91 27 01 	lds	r29, 0x0127
      case 46:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
        OCR5A=ICR5-vAl;
        break;
      case 45:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    9278:	0e 94 bb 79 	call	0xf376	; 0xf376 <__fixsfsi>
        OCR5B=ICR5-vAl;
    927c:	c6 1b       	sub	r28, r22
    927e:	d7 0b       	sbc	r29, r23
    9280:	d0 93 2b 01 	sts	0x012B, r29
    9284:	c0 93 2a 01 	sts	0x012A, r28
    9288:	51 c0       	rjmp	.+162    	; 0x932c <_Z6angle4i+0x1eba>
        break;
      case 44:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    928a:	e6 e8       	ldi	r30, 0x86	; 134
    928c:	f0 e0       	ldi	r31, 0x00	; 0
    928e:	c0 81       	ld	r28, Z
    9290:	d1 81       	ldd	r29, Z+1	; 0x01
    9292:	80 80       	ld	r8, Z
    9294:	91 80       	ldd	r9, Z+1	; 0x01
    9296:	00 d0       	rcall	.+0      	; 0x9298 <_Z6angle4i+0x1e26>
    9298:	0f 92       	push	r0
    929a:	4d b6       	in	r4, 0x3d	; 61
    929c:	5e b6       	in	r5, 0x3e	; 62
    929e:	08 94       	sec
    92a0:	41 1c       	adc	r4, r1
    92a2:	51 1c       	adc	r5, r1
    92a4:	88 27       	eor	r24, r24
    92a6:	77 fd       	sbrc	r23, 7
    92a8:	80 95       	com	r24
    92aa:	98 2f       	mov	r25, r24
    92ac:	0e 94 ee 79 	call	0xf3dc	; 0xf3dc <__floatsisf>
    92b0:	7b 01       	movw	r14, r22
    92b2:	8c 01       	movw	r16, r24
    92b4:	ce 01       	movw	r24, r28
    92b6:	68 e2       	ldi	r22, 0x28	; 40
    92b8:	70 e0       	ldi	r23, 0x00	; 0
    92ba:	0e 94 05 7b 	call	0xf60a	; 0xf60a <__udivmodhi4>
    92be:	80 e0       	ldi	r24, 0x00	; 0
    92c0:	90 e0       	ldi	r25, 0x00	; 0
    92c2:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    92c6:	5b 01       	movw	r10, r22
    92c8:	6c 01       	movw	r12, r24
    92ca:	96 94       	lsr	r9
    92cc:	87 94       	ror	r8
    92ce:	96 94       	lsr	r9
    92d0:	87 94       	ror	r8
    92d2:	96 94       	lsr	r9
    92d4:	87 94       	ror	r8
    92d6:	b4 01       	movw	r22, r8
    92d8:	80 e0       	ldi	r24, 0x00	; 0
    92da:	90 e0       	ldi	r25, 0x00	; 0
    92dc:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    92e0:	f2 01       	movw	r30, r4
    92e2:	60 83       	st	Z, r22
    92e4:	71 83       	std	Z+1, r23	; 0x01
    92e6:	82 83       	std	Z+2, r24	; 0x02
    92e8:	93 83       	std	Z+3, r25	; 0x03
    92ea:	c8 01       	movw	r24, r16
    92ec:	b7 01       	movw	r22, r14
    92ee:	20 e0       	ldi	r18, 0x00	; 0
    92f0:	30 e0       	ldi	r19, 0x00	; 0
    92f2:	a9 01       	movw	r20, r18
    92f4:	0f 2e       	mov	r0, r31
    92f6:	f0 e0       	ldi	r31, 0x00	; 0
    92f8:	ef 2e       	mov	r14, r31
    92fa:	f0 e0       	ldi	r31, 0x00	; 0
    92fc:	ff 2e       	mov	r15, r31
    92fe:	f4 e3       	ldi	r31, 0x34	; 52
    9300:	0f 2f       	mov	r16, r31
    9302:	f3 e4       	ldi	r31, 0x43	; 67
    9304:	1f 2f       	mov	r17, r31
    9306:	f0 2d       	mov	r31, r0
    9308:	0e 94 a0 08 	call	0x1140	; 0x1140 <_Z3mapddddd>
    930c:	0f 90       	pop	r0
    930e:	0f 90       	pop	r0
    9310:	0f 90       	pop	r0
    9312:	0f 90       	pop	r0
        OCR5C=ICR5-vAl;
    9314:	c0 91 26 01 	lds	r28, 0x0126
    9318:	d0 91 27 01 	lds	r29, 0x0127
      case 45:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
        OCR5B=ICR5-vAl;
        break;
      case 44:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    931c:	0e 94 bb 79 	call	0xf376	; 0xf376 <__fixsfsi>
        OCR5C=ICR5-vAl;
    9320:	c6 1b       	sub	r28, r22
    9322:	d7 0b       	sbc	r29, r23
    9324:	d0 93 2d 01 	sts	0x012D, r29
    9328:	c0 93 2c 01 	sts	0x012C, r28
		
	}
    932c:	df 91       	pop	r29
    932e:	cf 91       	pop	r28
    9330:	1f 91       	pop	r17
    9332:	0f 91       	pop	r16
    9334:	ff 90       	pop	r15
    9336:	ef 90       	pop	r14
    9338:	df 90       	pop	r13
    933a:	cf 90       	pop	r12
    933c:	bf 90       	pop	r11
    933e:	af 90       	pop	r10
    9340:	9f 90       	pop	r9
    9342:	8f 90       	pop	r8
    9344:	7f 90       	pop	r7
    9346:	6f 90       	pop	r6
    9348:	5f 90       	pop	r5
    934a:	4f 90       	pop	r4
    934c:	3f 90       	pop	r3
    934e:	2f 90       	pop	r2
    9350:	08 95       	ret

00009352 <_Z6angle5i>:
	void angle5(int dist)
	{
    9352:	2f 92       	push	r2
    9354:	3f 92       	push	r3
    9356:	4f 92       	push	r4
    9358:	5f 92       	push	r5
    935a:	6f 92       	push	r6
    935c:	7f 92       	push	r7
    935e:	8f 92       	push	r8
    9360:	9f 92       	push	r9
    9362:	af 92       	push	r10
    9364:	bf 92       	push	r11
    9366:	cf 92       	push	r12
    9368:	df 92       	push	r13
    936a:	ef 92       	push	r14
    936c:	ff 92       	push	r15
    936e:	0f 93       	push	r16
    9370:	1f 93       	push	r17
    9372:	cf 93       	push	r28
    9374:	df 93       	push	r29
		v=ang1-(dist-3500)*k;
    9376:	bc 01       	movw	r22, r24
    9378:	6c 5a       	subi	r22, 0xAC	; 172
    937a:	7d 40       	sbci	r23, 0x0D	; 13
    937c:	88 27       	eor	r24, r24
    937e:	77 fd       	sbrc	r23, 7
    9380:	80 95       	com	r24
    9382:	98 2f       	mov	r25, r24
    9384:	0e 94 ee 79 	call	0xf3dc	; 0xf3dc <__floatsisf>
    9388:	20 91 b4 02 	lds	r18, 0x02B4
    938c:	30 91 b5 02 	lds	r19, 0x02B5
    9390:	40 91 b6 02 	lds	r20, 0x02B6
    9394:	50 91 b7 02 	lds	r21, 0x02B7
    9398:	0e 94 a2 7a 	call	0xf544	; 0xf544 <__mulsf3>
    939c:	f6 2e       	mov	r15, r22
    939e:	07 2f       	mov	r16, r23
    93a0:	18 2f       	mov	r17, r24
    93a2:	e9 2e       	mov	r14, r25
    93a4:	60 91 b8 02 	lds	r22, 0x02B8
    93a8:	70 91 b9 02 	lds	r23, 0x02B9
    93ac:	88 27       	eor	r24, r24
    93ae:	77 fd       	sbrc	r23, 7
    93b0:	80 95       	com	r24
    93b2:	98 2f       	mov	r25, r24
    93b4:	0e 94 ee 79 	call	0xf3dc	; 0xf3dc <__floatsisf>
    93b8:	2f 2d       	mov	r18, r15
    93ba:	30 2f       	mov	r19, r16
    93bc:	41 2f       	mov	r20, r17
    93be:	5e 2d       	mov	r21, r14
    93c0:	0e 94 ea 78 	call	0xf1d4	; 0xf1d4 <__subsf3>
    93c4:	0e 94 bb 79 	call	0xf376	; 0xf376 <__fixsfsi>
    93c8:	eb 01       	movw	r28, r22
    93ca:	70 93 cb 02 	sts	0x02CB, r23
    93ce:	60 93 ca 02 	sts	0x02CA, r22
		y=ang2-(dist-3500)*k;
    93d2:	60 91 ba 02 	lds	r22, 0x02BA
    93d6:	70 91 bb 02 	lds	r23, 0x02BB
    93da:	88 27       	eor	r24, r24
    93dc:	77 fd       	sbrc	r23, 7
    93de:	80 95       	com	r24
    93e0:	98 2f       	mov	r25, r24
    93e2:	0e 94 ee 79 	call	0xf3dc	; 0xf3dc <__floatsisf>
    93e6:	2f 2d       	mov	r18, r15
    93e8:	30 2f       	mov	r19, r16
    93ea:	41 2f       	mov	r20, r17
    93ec:	5e 2d       	mov	r21, r14
    93ee:	0e 94 ea 78 	call	0xf1d4	; 0xf1d4 <__subsf3>
    93f2:	0e 94 bb 79 	call	0xf376	; 0xf376 <__fixsfsi>
    93f6:	70 93 cd 02 	sts	0x02CD, r23
    93fa:	60 93 cc 02 	sts	0x02CC, r22
		z=ang3-(dist-3500)*k;
    93fe:	60 91 bc 02 	lds	r22, 0x02BC
    9402:	70 91 bd 02 	lds	r23, 0x02BD
    9406:	88 27       	eor	r24, r24
    9408:	77 fd       	sbrc	r23, 7
    940a:	80 95       	com	r24
    940c:	98 2f       	mov	r25, r24
    940e:	0e 94 ee 79 	call	0xf3dc	; 0xf3dc <__floatsisf>
    9412:	2f 2d       	mov	r18, r15
    9414:	30 2f       	mov	r19, r16
    9416:	41 2f       	mov	r20, r17
    9418:	5e 2d       	mov	r21, r14
    941a:	0e 94 ea 78 	call	0xf1d4	; 0xf1d4 <__subsf3>
    941e:	0e 94 bb 79 	call	0xf376	; 0xf376 <__fixsfsi>
    9422:	70 93 cf 02 	sts	0x02CF, r23
    9426:	60 93 ce 02 	sts	0x02CE, r22
		w=ang4-(dist-3500)*k;
    942a:	60 91 be 02 	lds	r22, 0x02BE
    942e:	70 91 bf 02 	lds	r23, 0x02BF
    9432:	88 27       	eor	r24, r24
    9434:	77 fd       	sbrc	r23, 7
    9436:	80 95       	com	r24
    9438:	98 2f       	mov	r25, r24
    943a:	0e 94 ee 79 	call	0xf3dc	; 0xf3dc <__floatsisf>
    943e:	2f 2d       	mov	r18, r15
    9440:	30 2f       	mov	r19, r16
    9442:	41 2f       	mov	r20, r17
    9444:	5e 2d       	mov	r21, r14
    9446:	0e 94 ea 78 	call	0xf1d4	; 0xf1d4 <__subsf3>
    944a:	0e 94 bb 79 	call	0xf376	; 0xf376 <__fixsfsi>
    944e:	70 93 d1 02 	sts	0x02D1, r23
    9452:	60 93 d0 02 	sts	0x02D0, r22
     }
  }

  void write(int vAl)           //PIN=servo pin no. on mega,vAl=angle F_CPU for the servo at pin
  {
    switch(pIn)
    9456:	80 91 d4 02 	lds	r24, 0x02D4
    945a:	88 30       	cpi	r24, 0x08	; 8
    945c:	09 f4       	brne	.+2      	; 0x9460 <_Z6angle5i+0x10e>
    945e:	72 c2       	rjmp	.+1252   	; 0x9944 <_Z6angle5i+0x5f2>
    9460:	89 30       	cpi	r24, 0x09	; 9
    9462:	98 f4       	brcc	.+38     	; 0x948a <_Z6angle5i+0x138>
    9464:	85 30       	cpi	r24, 0x05	; 5
    9466:	09 f4       	brne	.+2      	; 0x946a <_Z6angle5i+0x118>
    9468:	ce c0       	rjmp	.+412    	; 0x9606 <_Z6angle5i+0x2b4>
    946a:	86 30       	cpi	r24, 0x06	; 6
    946c:	38 f4       	brcc	.+14     	; 0x947c <_Z6angle5i+0x12a>
    946e:	82 30       	cpi	r24, 0x02	; 2
    9470:	09 f4       	brne	.+2      	; 0x9474 <_Z6angle5i+0x122>
    9472:	1c c1       	rjmp	.+568    	; 0x96ac <_Z6angle5i+0x35a>
    9474:	83 30       	cpi	r24, 0x03	; 3
    9476:	09 f0       	breq	.+2      	; 0x947a <_Z6angle5i+0x128>
    9478:	b0 c3       	rjmp	.+1888   	; 0x9bda <_Z6angle5i+0x888>
    947a:	6b c1       	rjmp	.+726    	; 0x9752 <_Z6angle5i+0x400>
    947c:	86 30       	cpi	r24, 0x06	; 6
    947e:	09 f4       	brne	.+2      	; 0x9482 <_Z6angle5i+0x130>
    9480:	bb c1       	rjmp	.+886    	; 0x97f8 <_Z6angle5i+0x4a6>
    9482:	87 30       	cpi	r24, 0x07	; 7
    9484:	09 f0       	breq	.+2      	; 0x9488 <_Z6angle5i+0x136>
    9486:	a9 c3       	rjmp	.+1874   	; 0x9bda <_Z6angle5i+0x888>
    9488:	0a c2       	rjmp	.+1044   	; 0x989e <_Z6angle5i+0x54c>
    948a:	8c 32       	cpi	r24, 0x2C	; 44
    948c:	09 f4       	brne	.+2      	; 0x9490 <_Z6angle5i+0x13e>
    948e:	53 c3       	rjmp	.+1702   	; 0x9b36 <_Z6angle5i+0x7e4>
    9490:	8d 32       	cpi	r24, 0x2D	; 45
    9492:	30 f4       	brcc	.+12     	; 0x94a0 <_Z6angle5i+0x14e>
    9494:	8b 30       	cpi	r24, 0x0B	; 11
    9496:	59 f0       	breq	.+22     	; 0x94ae <_Z6angle5i+0x15c>
    9498:	8c 30       	cpi	r24, 0x0C	; 12
    949a:	09 f0       	breq	.+2      	; 0x949e <_Z6angle5i+0x14c>
    949c:	9e c3       	rjmp	.+1852   	; 0x9bda <_Z6angle5i+0x888>
    949e:	5d c0       	rjmp	.+186    	; 0x955a <_Z6angle5i+0x208>
    94a0:	8d 32       	cpi	r24, 0x2D	; 45
    94a2:	09 f4       	brne	.+2      	; 0x94a6 <_Z6angle5i+0x154>
    94a4:	f5 c2       	rjmp	.+1514   	; 0x9a90 <_Z6angle5i+0x73e>
    94a6:	8e 32       	cpi	r24, 0x2E	; 46
    94a8:	09 f0       	breq	.+2      	; 0x94ac <_Z6angle5i+0x15a>
    94aa:	97 c3       	rjmp	.+1838   	; 0x9bda <_Z6angle5i+0x888>
    94ac:	9e c2       	rjmp	.+1340   	; 0x99ea <_Z6angle5i+0x698>
    {
     case 11:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    94ae:	0f 2e       	mov	r0, r31
    94b0:	f6 e8       	ldi	r31, 0x86	; 134
    94b2:	8f 2e       	mov	r8, r31
    94b4:	99 24       	eor	r9, r9
    94b6:	f0 2d       	mov	r31, r0
    94b8:	f4 01       	movw	r30, r8
    94ba:	00 81       	ld	r16, Z
    94bc:	11 81       	ldd	r17, Z+1	; 0x01
    94be:	e0 80       	ld	r14, Z
    94c0:	f1 80       	ldd	r15, Z+1	; 0x01
    94c2:	00 d0       	rcall	.+0      	; 0x94c4 <_Z6angle5i+0x172>
    94c4:	0f 92       	push	r0
    94c6:	2d b6       	in	r2, 0x3d	; 61
    94c8:	3e b6       	in	r3, 0x3e	; 62
    94ca:	08 94       	sec
    94cc:	21 1c       	adc	r2, r1
    94ce:	31 1c       	adc	r3, r1
    94d0:	be 01       	movw	r22, r28
    94d2:	88 27       	eor	r24, r24
    94d4:	77 fd       	sbrc	r23, 7
    94d6:	80 95       	com	r24
    94d8:	98 2f       	mov	r25, r24
    94da:	0e 94 ee 79 	call	0xf3dc	; 0xf3dc <__floatsisf>
    94de:	2b 01       	movw	r4, r22
    94e0:	3c 01       	movw	r6, r24
    94e2:	c8 01       	movw	r24, r16
    94e4:	68 e2       	ldi	r22, 0x28	; 40
    94e6:	70 e0       	ldi	r23, 0x00	; 0
    94e8:	0e 94 05 7b 	call	0xf60a	; 0xf60a <__udivmodhi4>
    94ec:	80 e0       	ldi	r24, 0x00	; 0
    94ee:	90 e0       	ldi	r25, 0x00	; 0
    94f0:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    94f4:	5b 01       	movw	r10, r22
    94f6:	6c 01       	movw	r12, r24
    94f8:	f6 94       	lsr	r15
    94fa:	e7 94       	ror	r14
    94fc:	f6 94       	lsr	r15
    94fe:	e7 94       	ror	r14
    9500:	f6 94       	lsr	r15
    9502:	e7 94       	ror	r14
    9504:	b7 01       	movw	r22, r14
    9506:	80 e0       	ldi	r24, 0x00	; 0
    9508:	90 e0       	ldi	r25, 0x00	; 0
    950a:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    950e:	f1 01       	movw	r30, r2
    9510:	60 83       	st	Z, r22
    9512:	71 83       	std	Z+1, r23	; 0x01
    9514:	82 83       	std	Z+2, r24	; 0x02
    9516:	93 83       	std	Z+3, r25	; 0x03
    9518:	c3 01       	movw	r24, r6
    951a:	b2 01       	movw	r22, r4
    951c:	20 e0       	ldi	r18, 0x00	; 0
    951e:	30 e0       	ldi	r19, 0x00	; 0
    9520:	a9 01       	movw	r20, r18
    9522:	0f 2e       	mov	r0, r31
    9524:	f0 e0       	ldi	r31, 0x00	; 0
    9526:	ef 2e       	mov	r14, r31
    9528:	f0 e0       	ldi	r31, 0x00	; 0
    952a:	ff 2e       	mov	r15, r31
    952c:	f4 e3       	ldi	r31, 0x34	; 52
    952e:	0f 2f       	mov	r16, r31
    9530:	f3 e4       	ldi	r31, 0x43	; 67
    9532:	1f 2f       	mov	r17, r31
    9534:	f0 2d       	mov	r31, r0
    9536:	0e 94 a0 08 	call	0x1140	; 0x1140 <_Z3mapddddd>
    953a:	0f 90       	pop	r0
    953c:	0f 90       	pop	r0
    953e:	0f 90       	pop	r0
    9540:	0f 90       	pop	r0
        OCR1A=ICR1-vAl;
    9542:	f4 01       	movw	r30, r8
    9544:	c0 81       	ld	r28, Z
    9546:	d1 81       	ldd	r29, Z+1	; 0x01
  void write(int vAl)           //PIN=servo pin no. on mega,vAl=angle F_CPU for the servo at pin
  {
    switch(pIn)
    {
     case 11:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    9548:	0e 94 bb 79 	call	0xf376	; 0xf376 <__fixsfsi>
        OCR1A=ICR1-vAl;
    954c:	c6 1b       	sub	r28, r22
    954e:	d7 0b       	sbc	r29, r23
    9550:	d0 93 89 00 	sts	0x0089, r29
    9554:	c0 93 88 00 	sts	0x0088, r28
    9558:	40 c3       	rjmp	.+1664   	; 0x9bda <_Z6angle5i+0x888>
        break;
      case 12:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    955a:	0f 2e       	mov	r0, r31
    955c:	f6 e8       	ldi	r31, 0x86	; 134
    955e:	8f 2e       	mov	r8, r31
    9560:	99 24       	eor	r9, r9
    9562:	f0 2d       	mov	r31, r0
    9564:	f4 01       	movw	r30, r8
    9566:	00 81       	ld	r16, Z
    9568:	11 81       	ldd	r17, Z+1	; 0x01
    956a:	e0 80       	ld	r14, Z
    956c:	f1 80       	ldd	r15, Z+1	; 0x01
    956e:	00 d0       	rcall	.+0      	; 0x9570 <_Z6angle5i+0x21e>
    9570:	0f 92       	push	r0
    9572:	2d b6       	in	r2, 0x3d	; 61
    9574:	3e b6       	in	r3, 0x3e	; 62
    9576:	08 94       	sec
    9578:	21 1c       	adc	r2, r1
    957a:	31 1c       	adc	r3, r1
    957c:	be 01       	movw	r22, r28
    957e:	88 27       	eor	r24, r24
    9580:	77 fd       	sbrc	r23, 7
    9582:	80 95       	com	r24
    9584:	98 2f       	mov	r25, r24
    9586:	0e 94 ee 79 	call	0xf3dc	; 0xf3dc <__floatsisf>
    958a:	2b 01       	movw	r4, r22
    958c:	3c 01       	movw	r6, r24
    958e:	c8 01       	movw	r24, r16
    9590:	68 e2       	ldi	r22, 0x28	; 40
    9592:	70 e0       	ldi	r23, 0x00	; 0
    9594:	0e 94 05 7b 	call	0xf60a	; 0xf60a <__udivmodhi4>
    9598:	80 e0       	ldi	r24, 0x00	; 0
    959a:	90 e0       	ldi	r25, 0x00	; 0
    959c:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    95a0:	5b 01       	movw	r10, r22
    95a2:	6c 01       	movw	r12, r24
    95a4:	f6 94       	lsr	r15
    95a6:	e7 94       	ror	r14
    95a8:	f6 94       	lsr	r15
    95aa:	e7 94       	ror	r14
    95ac:	f6 94       	lsr	r15
    95ae:	e7 94       	ror	r14
    95b0:	b7 01       	movw	r22, r14
    95b2:	80 e0       	ldi	r24, 0x00	; 0
    95b4:	90 e0       	ldi	r25, 0x00	; 0
    95b6:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    95ba:	f1 01       	movw	r30, r2
    95bc:	60 83       	st	Z, r22
    95be:	71 83       	std	Z+1, r23	; 0x01
    95c0:	82 83       	std	Z+2, r24	; 0x02
    95c2:	93 83       	std	Z+3, r25	; 0x03
    95c4:	c3 01       	movw	r24, r6
    95c6:	b2 01       	movw	r22, r4
    95c8:	20 e0       	ldi	r18, 0x00	; 0
    95ca:	30 e0       	ldi	r19, 0x00	; 0
    95cc:	a9 01       	movw	r20, r18
    95ce:	0f 2e       	mov	r0, r31
    95d0:	f0 e0       	ldi	r31, 0x00	; 0
    95d2:	ef 2e       	mov	r14, r31
    95d4:	f0 e0       	ldi	r31, 0x00	; 0
    95d6:	ff 2e       	mov	r15, r31
    95d8:	f4 e3       	ldi	r31, 0x34	; 52
    95da:	0f 2f       	mov	r16, r31
    95dc:	f3 e4       	ldi	r31, 0x43	; 67
    95de:	1f 2f       	mov	r17, r31
    95e0:	f0 2d       	mov	r31, r0
    95e2:	0e 94 a0 08 	call	0x1140	; 0x1140 <_Z3mapddddd>
    95e6:	0f 90       	pop	r0
    95e8:	0f 90       	pop	r0
    95ea:	0f 90       	pop	r0
    95ec:	0f 90       	pop	r0
        OCR1B=ICR1-vAl;
    95ee:	f4 01       	movw	r30, r8
    95f0:	c0 81       	ld	r28, Z
    95f2:	d1 81       	ldd	r29, Z+1	; 0x01
     case 11:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
        OCR1A=ICR1-vAl;
        break;
      case 12:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    95f4:	0e 94 bb 79 	call	0xf376	; 0xf376 <__fixsfsi>
        OCR1B=ICR1-vAl;
    95f8:	c6 1b       	sub	r28, r22
    95fa:	d7 0b       	sbc	r29, r23
    95fc:	d0 93 8b 00 	sts	0x008B, r29
    9600:	c0 93 8a 00 	sts	0x008A, r28
    9604:	ea c2       	rjmp	.+1492   	; 0x9bda <_Z6angle5i+0x888>
        break;
      case 5:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    9606:	e6 e8       	ldi	r30, 0x86	; 134
    9608:	f0 e0       	ldi	r31, 0x00	; 0
    960a:	a0 80       	ld	r10, Z
    960c:	b1 80       	ldd	r11, Z+1	; 0x01
    960e:	80 80       	ld	r8, Z
    9610:	91 80       	ldd	r9, Z+1	; 0x01
    9612:	00 d0       	rcall	.+0      	; 0x9614 <_Z6angle5i+0x2c2>
    9614:	0f 92       	push	r0
    9616:	4d b6       	in	r4, 0x3d	; 61
    9618:	5e b6       	in	r5, 0x3e	; 62
    961a:	08 94       	sec
    961c:	41 1c       	adc	r4, r1
    961e:	51 1c       	adc	r5, r1
    9620:	be 01       	movw	r22, r28
    9622:	88 27       	eor	r24, r24
    9624:	77 fd       	sbrc	r23, 7
    9626:	80 95       	com	r24
    9628:	98 2f       	mov	r25, r24
    962a:	0e 94 ee 79 	call	0xf3dc	; 0xf3dc <__floatsisf>
    962e:	7b 01       	movw	r14, r22
    9630:	8c 01       	movw	r16, r24
    9632:	c5 01       	movw	r24, r10
    9634:	68 e2       	ldi	r22, 0x28	; 40
    9636:	70 e0       	ldi	r23, 0x00	; 0
    9638:	0e 94 05 7b 	call	0xf60a	; 0xf60a <__udivmodhi4>
    963c:	80 e0       	ldi	r24, 0x00	; 0
    963e:	90 e0       	ldi	r25, 0x00	; 0
    9640:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    9644:	5b 01       	movw	r10, r22
    9646:	6c 01       	movw	r12, r24
    9648:	96 94       	lsr	r9
    964a:	87 94       	ror	r8
    964c:	96 94       	lsr	r9
    964e:	87 94       	ror	r8
    9650:	96 94       	lsr	r9
    9652:	87 94       	ror	r8
    9654:	b4 01       	movw	r22, r8
    9656:	80 e0       	ldi	r24, 0x00	; 0
    9658:	90 e0       	ldi	r25, 0x00	; 0
    965a:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    965e:	f2 01       	movw	r30, r4
    9660:	60 83       	st	Z, r22
    9662:	71 83       	std	Z+1, r23	; 0x01
    9664:	82 83       	std	Z+2, r24	; 0x02
    9666:	93 83       	std	Z+3, r25	; 0x03
    9668:	c8 01       	movw	r24, r16
    966a:	b7 01       	movw	r22, r14
    966c:	20 e0       	ldi	r18, 0x00	; 0
    966e:	30 e0       	ldi	r19, 0x00	; 0
    9670:	a9 01       	movw	r20, r18
    9672:	0f 2e       	mov	r0, r31
    9674:	f0 e0       	ldi	r31, 0x00	; 0
    9676:	ef 2e       	mov	r14, r31
    9678:	f0 e0       	ldi	r31, 0x00	; 0
    967a:	ff 2e       	mov	r15, r31
    967c:	f4 e3       	ldi	r31, 0x34	; 52
    967e:	0f 2f       	mov	r16, r31
    9680:	f3 e4       	ldi	r31, 0x43	; 67
    9682:	1f 2f       	mov	r17, r31
    9684:	f0 2d       	mov	r31, r0
    9686:	0e 94 a0 08 	call	0x1140	; 0x1140 <_Z3mapddddd>
    968a:	0f 90       	pop	r0
    968c:	0f 90       	pop	r0
    968e:	0f 90       	pop	r0
    9690:	0f 90       	pop	r0
        OCR3A=ICR3-vAl;
    9692:	c0 91 96 00 	lds	r28, 0x0096
    9696:	d0 91 97 00 	lds	r29, 0x0097
      case 12:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
        OCR1B=ICR1-vAl;
        break;
      case 5:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    969a:	0e 94 bb 79 	call	0xf376	; 0xf376 <__fixsfsi>
        OCR3A=ICR3-vAl;
    969e:	c6 1b       	sub	r28, r22
    96a0:	d7 0b       	sbc	r29, r23
    96a2:	d0 93 99 00 	sts	0x0099, r29
    96a6:	c0 93 98 00 	sts	0x0098, r28
    96aa:	97 c2       	rjmp	.+1326   	; 0x9bda <_Z6angle5i+0x888>
        break;
      case 2:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    96ac:	e6 e8       	ldi	r30, 0x86	; 134
    96ae:	f0 e0       	ldi	r31, 0x00	; 0
    96b0:	a0 80       	ld	r10, Z
    96b2:	b1 80       	ldd	r11, Z+1	; 0x01
    96b4:	80 80       	ld	r8, Z
    96b6:	91 80       	ldd	r9, Z+1	; 0x01
    96b8:	00 d0       	rcall	.+0      	; 0x96ba <_Z6angle5i+0x368>
    96ba:	0f 92       	push	r0
    96bc:	4d b6       	in	r4, 0x3d	; 61
    96be:	5e b6       	in	r5, 0x3e	; 62
    96c0:	08 94       	sec
    96c2:	41 1c       	adc	r4, r1
    96c4:	51 1c       	adc	r5, r1
    96c6:	be 01       	movw	r22, r28
    96c8:	88 27       	eor	r24, r24
    96ca:	77 fd       	sbrc	r23, 7
    96cc:	80 95       	com	r24
    96ce:	98 2f       	mov	r25, r24
    96d0:	0e 94 ee 79 	call	0xf3dc	; 0xf3dc <__floatsisf>
    96d4:	7b 01       	movw	r14, r22
    96d6:	8c 01       	movw	r16, r24
    96d8:	c5 01       	movw	r24, r10
    96da:	68 e2       	ldi	r22, 0x28	; 40
    96dc:	70 e0       	ldi	r23, 0x00	; 0
    96de:	0e 94 05 7b 	call	0xf60a	; 0xf60a <__udivmodhi4>
    96e2:	80 e0       	ldi	r24, 0x00	; 0
    96e4:	90 e0       	ldi	r25, 0x00	; 0
    96e6:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    96ea:	5b 01       	movw	r10, r22
    96ec:	6c 01       	movw	r12, r24
    96ee:	96 94       	lsr	r9
    96f0:	87 94       	ror	r8
    96f2:	96 94       	lsr	r9
    96f4:	87 94       	ror	r8
    96f6:	96 94       	lsr	r9
    96f8:	87 94       	ror	r8
    96fa:	b4 01       	movw	r22, r8
    96fc:	80 e0       	ldi	r24, 0x00	; 0
    96fe:	90 e0       	ldi	r25, 0x00	; 0
    9700:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    9704:	f2 01       	movw	r30, r4
    9706:	60 83       	st	Z, r22
    9708:	71 83       	std	Z+1, r23	; 0x01
    970a:	82 83       	std	Z+2, r24	; 0x02
    970c:	93 83       	std	Z+3, r25	; 0x03
    970e:	c8 01       	movw	r24, r16
    9710:	b7 01       	movw	r22, r14
    9712:	20 e0       	ldi	r18, 0x00	; 0
    9714:	30 e0       	ldi	r19, 0x00	; 0
    9716:	a9 01       	movw	r20, r18
    9718:	0f 2e       	mov	r0, r31
    971a:	f0 e0       	ldi	r31, 0x00	; 0
    971c:	ef 2e       	mov	r14, r31
    971e:	f0 e0       	ldi	r31, 0x00	; 0
    9720:	ff 2e       	mov	r15, r31
    9722:	f4 e3       	ldi	r31, 0x34	; 52
    9724:	0f 2f       	mov	r16, r31
    9726:	f3 e4       	ldi	r31, 0x43	; 67
    9728:	1f 2f       	mov	r17, r31
    972a:	f0 2d       	mov	r31, r0
    972c:	0e 94 a0 08 	call	0x1140	; 0x1140 <_Z3mapddddd>
    9730:	0f 90       	pop	r0
    9732:	0f 90       	pop	r0
    9734:	0f 90       	pop	r0
    9736:	0f 90       	pop	r0
        OCR3B=ICR3-vAl;
    9738:	c0 91 96 00 	lds	r28, 0x0096
    973c:	d0 91 97 00 	lds	r29, 0x0097
      case 5:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
        OCR3A=ICR3-vAl;
        break;
      case 2:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    9740:	0e 94 bb 79 	call	0xf376	; 0xf376 <__fixsfsi>
        OCR3B=ICR3-vAl;
    9744:	c6 1b       	sub	r28, r22
    9746:	d7 0b       	sbc	r29, r23
    9748:	d0 93 9b 00 	sts	0x009B, r29
    974c:	c0 93 9a 00 	sts	0x009A, r28
    9750:	44 c2       	rjmp	.+1160   	; 0x9bda <_Z6angle5i+0x888>
        break;
      case 3:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    9752:	e6 e8       	ldi	r30, 0x86	; 134
    9754:	f0 e0       	ldi	r31, 0x00	; 0
    9756:	a0 80       	ld	r10, Z
    9758:	b1 80       	ldd	r11, Z+1	; 0x01
    975a:	80 80       	ld	r8, Z
    975c:	91 80       	ldd	r9, Z+1	; 0x01
    975e:	00 d0       	rcall	.+0      	; 0x9760 <_Z6angle5i+0x40e>
    9760:	0f 92       	push	r0
    9762:	4d b6       	in	r4, 0x3d	; 61
    9764:	5e b6       	in	r5, 0x3e	; 62
    9766:	08 94       	sec
    9768:	41 1c       	adc	r4, r1
    976a:	51 1c       	adc	r5, r1
    976c:	be 01       	movw	r22, r28
    976e:	88 27       	eor	r24, r24
    9770:	77 fd       	sbrc	r23, 7
    9772:	80 95       	com	r24
    9774:	98 2f       	mov	r25, r24
    9776:	0e 94 ee 79 	call	0xf3dc	; 0xf3dc <__floatsisf>
    977a:	7b 01       	movw	r14, r22
    977c:	8c 01       	movw	r16, r24
    977e:	c5 01       	movw	r24, r10
    9780:	68 e2       	ldi	r22, 0x28	; 40
    9782:	70 e0       	ldi	r23, 0x00	; 0
    9784:	0e 94 05 7b 	call	0xf60a	; 0xf60a <__udivmodhi4>
    9788:	80 e0       	ldi	r24, 0x00	; 0
    978a:	90 e0       	ldi	r25, 0x00	; 0
    978c:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    9790:	5b 01       	movw	r10, r22
    9792:	6c 01       	movw	r12, r24
    9794:	96 94       	lsr	r9
    9796:	87 94       	ror	r8
    9798:	96 94       	lsr	r9
    979a:	87 94       	ror	r8
    979c:	96 94       	lsr	r9
    979e:	87 94       	ror	r8
    97a0:	b4 01       	movw	r22, r8
    97a2:	80 e0       	ldi	r24, 0x00	; 0
    97a4:	90 e0       	ldi	r25, 0x00	; 0
    97a6:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    97aa:	f2 01       	movw	r30, r4
    97ac:	60 83       	st	Z, r22
    97ae:	71 83       	std	Z+1, r23	; 0x01
    97b0:	82 83       	std	Z+2, r24	; 0x02
    97b2:	93 83       	std	Z+3, r25	; 0x03
    97b4:	c8 01       	movw	r24, r16
    97b6:	b7 01       	movw	r22, r14
    97b8:	20 e0       	ldi	r18, 0x00	; 0
    97ba:	30 e0       	ldi	r19, 0x00	; 0
    97bc:	a9 01       	movw	r20, r18
    97be:	0f 2e       	mov	r0, r31
    97c0:	f0 e0       	ldi	r31, 0x00	; 0
    97c2:	ef 2e       	mov	r14, r31
    97c4:	f0 e0       	ldi	r31, 0x00	; 0
    97c6:	ff 2e       	mov	r15, r31
    97c8:	f4 e3       	ldi	r31, 0x34	; 52
    97ca:	0f 2f       	mov	r16, r31
    97cc:	f3 e4       	ldi	r31, 0x43	; 67
    97ce:	1f 2f       	mov	r17, r31
    97d0:	f0 2d       	mov	r31, r0
    97d2:	0e 94 a0 08 	call	0x1140	; 0x1140 <_Z3mapddddd>
    97d6:	0f 90       	pop	r0
    97d8:	0f 90       	pop	r0
    97da:	0f 90       	pop	r0
    97dc:	0f 90       	pop	r0
        OCR3C=ICR3-vAl;
    97de:	c0 91 96 00 	lds	r28, 0x0096
    97e2:	d0 91 97 00 	lds	r29, 0x0097
      case 2:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
        OCR3B=ICR3-vAl;
        break;
      case 3:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    97e6:	0e 94 bb 79 	call	0xf376	; 0xf376 <__fixsfsi>
        OCR3C=ICR3-vAl;
    97ea:	c6 1b       	sub	r28, r22
    97ec:	d7 0b       	sbc	r29, r23
    97ee:	d0 93 9d 00 	sts	0x009D, r29
    97f2:	c0 93 9c 00 	sts	0x009C, r28
    97f6:	f1 c1       	rjmp	.+994    	; 0x9bda <_Z6angle5i+0x888>
        break;
      case 6:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    97f8:	e6 e8       	ldi	r30, 0x86	; 134
    97fa:	f0 e0       	ldi	r31, 0x00	; 0
    97fc:	a0 80       	ld	r10, Z
    97fe:	b1 80       	ldd	r11, Z+1	; 0x01
    9800:	80 80       	ld	r8, Z
    9802:	91 80       	ldd	r9, Z+1	; 0x01
    9804:	00 d0       	rcall	.+0      	; 0x9806 <_Z6angle5i+0x4b4>
    9806:	0f 92       	push	r0
    9808:	4d b6       	in	r4, 0x3d	; 61
    980a:	5e b6       	in	r5, 0x3e	; 62
    980c:	08 94       	sec
    980e:	41 1c       	adc	r4, r1
    9810:	51 1c       	adc	r5, r1
    9812:	be 01       	movw	r22, r28
    9814:	88 27       	eor	r24, r24
    9816:	77 fd       	sbrc	r23, 7
    9818:	80 95       	com	r24
    981a:	98 2f       	mov	r25, r24
    981c:	0e 94 ee 79 	call	0xf3dc	; 0xf3dc <__floatsisf>
    9820:	7b 01       	movw	r14, r22
    9822:	8c 01       	movw	r16, r24
    9824:	c5 01       	movw	r24, r10
    9826:	68 e2       	ldi	r22, 0x28	; 40
    9828:	70 e0       	ldi	r23, 0x00	; 0
    982a:	0e 94 05 7b 	call	0xf60a	; 0xf60a <__udivmodhi4>
    982e:	80 e0       	ldi	r24, 0x00	; 0
    9830:	90 e0       	ldi	r25, 0x00	; 0
    9832:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    9836:	5b 01       	movw	r10, r22
    9838:	6c 01       	movw	r12, r24
    983a:	96 94       	lsr	r9
    983c:	87 94       	ror	r8
    983e:	96 94       	lsr	r9
    9840:	87 94       	ror	r8
    9842:	96 94       	lsr	r9
    9844:	87 94       	ror	r8
    9846:	b4 01       	movw	r22, r8
    9848:	80 e0       	ldi	r24, 0x00	; 0
    984a:	90 e0       	ldi	r25, 0x00	; 0
    984c:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    9850:	f2 01       	movw	r30, r4
    9852:	60 83       	st	Z, r22
    9854:	71 83       	std	Z+1, r23	; 0x01
    9856:	82 83       	std	Z+2, r24	; 0x02
    9858:	93 83       	std	Z+3, r25	; 0x03
    985a:	c8 01       	movw	r24, r16
    985c:	b7 01       	movw	r22, r14
    985e:	20 e0       	ldi	r18, 0x00	; 0
    9860:	30 e0       	ldi	r19, 0x00	; 0
    9862:	a9 01       	movw	r20, r18
    9864:	0f 2e       	mov	r0, r31
    9866:	f0 e0       	ldi	r31, 0x00	; 0
    9868:	ef 2e       	mov	r14, r31
    986a:	f0 e0       	ldi	r31, 0x00	; 0
    986c:	ff 2e       	mov	r15, r31
    986e:	f4 e3       	ldi	r31, 0x34	; 52
    9870:	0f 2f       	mov	r16, r31
    9872:	f3 e4       	ldi	r31, 0x43	; 67
    9874:	1f 2f       	mov	r17, r31
    9876:	f0 2d       	mov	r31, r0
    9878:	0e 94 a0 08 	call	0x1140	; 0x1140 <_Z3mapddddd>
    987c:	0f 90       	pop	r0
    987e:	0f 90       	pop	r0
    9880:	0f 90       	pop	r0
    9882:	0f 90       	pop	r0
        OCR4A=ICR4-vAl;
    9884:	c0 91 a6 00 	lds	r28, 0x00A6
    9888:	d0 91 a7 00 	lds	r29, 0x00A7
      case 3:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
        OCR3C=ICR3-vAl;
        break;
      case 6:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    988c:	0e 94 bb 79 	call	0xf376	; 0xf376 <__fixsfsi>
        OCR4A=ICR4-vAl;
    9890:	c6 1b       	sub	r28, r22
    9892:	d7 0b       	sbc	r29, r23
    9894:	d0 93 a9 00 	sts	0x00A9, r29
    9898:	c0 93 a8 00 	sts	0x00A8, r28
    989c:	9e c1       	rjmp	.+828    	; 0x9bda <_Z6angle5i+0x888>
        break;
      case 7:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    989e:	e6 e8       	ldi	r30, 0x86	; 134
    98a0:	f0 e0       	ldi	r31, 0x00	; 0
    98a2:	a0 80       	ld	r10, Z
    98a4:	b1 80       	ldd	r11, Z+1	; 0x01
    98a6:	80 80       	ld	r8, Z
    98a8:	91 80       	ldd	r9, Z+1	; 0x01
    98aa:	00 d0       	rcall	.+0      	; 0x98ac <_Z6angle5i+0x55a>
    98ac:	0f 92       	push	r0
    98ae:	4d b6       	in	r4, 0x3d	; 61
    98b0:	5e b6       	in	r5, 0x3e	; 62
    98b2:	08 94       	sec
    98b4:	41 1c       	adc	r4, r1
    98b6:	51 1c       	adc	r5, r1
    98b8:	be 01       	movw	r22, r28
    98ba:	88 27       	eor	r24, r24
    98bc:	77 fd       	sbrc	r23, 7
    98be:	80 95       	com	r24
    98c0:	98 2f       	mov	r25, r24
    98c2:	0e 94 ee 79 	call	0xf3dc	; 0xf3dc <__floatsisf>
    98c6:	7b 01       	movw	r14, r22
    98c8:	8c 01       	movw	r16, r24
    98ca:	c5 01       	movw	r24, r10
    98cc:	68 e2       	ldi	r22, 0x28	; 40
    98ce:	70 e0       	ldi	r23, 0x00	; 0
    98d0:	0e 94 05 7b 	call	0xf60a	; 0xf60a <__udivmodhi4>
    98d4:	80 e0       	ldi	r24, 0x00	; 0
    98d6:	90 e0       	ldi	r25, 0x00	; 0
    98d8:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    98dc:	5b 01       	movw	r10, r22
    98de:	6c 01       	movw	r12, r24
    98e0:	96 94       	lsr	r9
    98e2:	87 94       	ror	r8
    98e4:	96 94       	lsr	r9
    98e6:	87 94       	ror	r8
    98e8:	96 94       	lsr	r9
    98ea:	87 94       	ror	r8
    98ec:	b4 01       	movw	r22, r8
    98ee:	80 e0       	ldi	r24, 0x00	; 0
    98f0:	90 e0       	ldi	r25, 0x00	; 0
    98f2:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    98f6:	f2 01       	movw	r30, r4
    98f8:	60 83       	st	Z, r22
    98fa:	71 83       	std	Z+1, r23	; 0x01
    98fc:	82 83       	std	Z+2, r24	; 0x02
    98fe:	93 83       	std	Z+3, r25	; 0x03
    9900:	c8 01       	movw	r24, r16
    9902:	b7 01       	movw	r22, r14
    9904:	20 e0       	ldi	r18, 0x00	; 0
    9906:	30 e0       	ldi	r19, 0x00	; 0
    9908:	a9 01       	movw	r20, r18
    990a:	0f 2e       	mov	r0, r31
    990c:	f0 e0       	ldi	r31, 0x00	; 0
    990e:	ef 2e       	mov	r14, r31
    9910:	f0 e0       	ldi	r31, 0x00	; 0
    9912:	ff 2e       	mov	r15, r31
    9914:	f4 e3       	ldi	r31, 0x34	; 52
    9916:	0f 2f       	mov	r16, r31
    9918:	f3 e4       	ldi	r31, 0x43	; 67
    991a:	1f 2f       	mov	r17, r31
    991c:	f0 2d       	mov	r31, r0
    991e:	0e 94 a0 08 	call	0x1140	; 0x1140 <_Z3mapddddd>
    9922:	0f 90       	pop	r0
    9924:	0f 90       	pop	r0
    9926:	0f 90       	pop	r0
    9928:	0f 90       	pop	r0
        OCR4B=ICR4-vAl;
    992a:	c0 91 a6 00 	lds	r28, 0x00A6
    992e:	d0 91 a7 00 	lds	r29, 0x00A7
      case 6:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
        OCR4A=ICR4-vAl;
        break;
      case 7:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    9932:	0e 94 bb 79 	call	0xf376	; 0xf376 <__fixsfsi>
        OCR4B=ICR4-vAl;
    9936:	c6 1b       	sub	r28, r22
    9938:	d7 0b       	sbc	r29, r23
    993a:	d0 93 ab 00 	sts	0x00AB, r29
    993e:	c0 93 aa 00 	sts	0x00AA, r28
    9942:	4b c1       	rjmp	.+662    	; 0x9bda <_Z6angle5i+0x888>
        break; 
      case 8:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    9944:	e6 e8       	ldi	r30, 0x86	; 134
    9946:	f0 e0       	ldi	r31, 0x00	; 0
    9948:	a0 80       	ld	r10, Z
    994a:	b1 80       	ldd	r11, Z+1	; 0x01
    994c:	80 80       	ld	r8, Z
    994e:	91 80       	ldd	r9, Z+1	; 0x01
    9950:	00 d0       	rcall	.+0      	; 0x9952 <_Z6angle5i+0x600>
    9952:	0f 92       	push	r0
    9954:	4d b6       	in	r4, 0x3d	; 61
    9956:	5e b6       	in	r5, 0x3e	; 62
    9958:	08 94       	sec
    995a:	41 1c       	adc	r4, r1
    995c:	51 1c       	adc	r5, r1
    995e:	be 01       	movw	r22, r28
    9960:	88 27       	eor	r24, r24
    9962:	77 fd       	sbrc	r23, 7
    9964:	80 95       	com	r24
    9966:	98 2f       	mov	r25, r24
    9968:	0e 94 ee 79 	call	0xf3dc	; 0xf3dc <__floatsisf>
    996c:	7b 01       	movw	r14, r22
    996e:	8c 01       	movw	r16, r24
    9970:	c5 01       	movw	r24, r10
    9972:	68 e2       	ldi	r22, 0x28	; 40
    9974:	70 e0       	ldi	r23, 0x00	; 0
    9976:	0e 94 05 7b 	call	0xf60a	; 0xf60a <__udivmodhi4>
    997a:	80 e0       	ldi	r24, 0x00	; 0
    997c:	90 e0       	ldi	r25, 0x00	; 0
    997e:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    9982:	5b 01       	movw	r10, r22
    9984:	6c 01       	movw	r12, r24
    9986:	96 94       	lsr	r9
    9988:	87 94       	ror	r8
    998a:	96 94       	lsr	r9
    998c:	87 94       	ror	r8
    998e:	96 94       	lsr	r9
    9990:	87 94       	ror	r8
    9992:	b4 01       	movw	r22, r8
    9994:	80 e0       	ldi	r24, 0x00	; 0
    9996:	90 e0       	ldi	r25, 0x00	; 0
    9998:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    999c:	f2 01       	movw	r30, r4
    999e:	60 83       	st	Z, r22
    99a0:	71 83       	std	Z+1, r23	; 0x01
    99a2:	82 83       	std	Z+2, r24	; 0x02
    99a4:	93 83       	std	Z+3, r25	; 0x03
    99a6:	c8 01       	movw	r24, r16
    99a8:	b7 01       	movw	r22, r14
    99aa:	20 e0       	ldi	r18, 0x00	; 0
    99ac:	30 e0       	ldi	r19, 0x00	; 0
    99ae:	a9 01       	movw	r20, r18
    99b0:	0f 2e       	mov	r0, r31
    99b2:	f0 e0       	ldi	r31, 0x00	; 0
    99b4:	ef 2e       	mov	r14, r31
    99b6:	f0 e0       	ldi	r31, 0x00	; 0
    99b8:	ff 2e       	mov	r15, r31
    99ba:	f4 e3       	ldi	r31, 0x34	; 52
    99bc:	0f 2f       	mov	r16, r31
    99be:	f3 e4       	ldi	r31, 0x43	; 67
    99c0:	1f 2f       	mov	r17, r31
    99c2:	f0 2d       	mov	r31, r0
    99c4:	0e 94 a0 08 	call	0x1140	; 0x1140 <_Z3mapddddd>
    99c8:	0f 90       	pop	r0
    99ca:	0f 90       	pop	r0
    99cc:	0f 90       	pop	r0
    99ce:	0f 90       	pop	r0
        OCR4C=ICR4-vAl;
    99d0:	c0 91 a6 00 	lds	r28, 0x00A6
    99d4:	d0 91 a7 00 	lds	r29, 0x00A7
      case 7:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
        OCR4B=ICR4-vAl;
        break; 
      case 8:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    99d8:	0e 94 bb 79 	call	0xf376	; 0xf376 <__fixsfsi>
        OCR4C=ICR4-vAl;
    99dc:	c6 1b       	sub	r28, r22
    99de:	d7 0b       	sbc	r29, r23
    99e0:	d0 93 ad 00 	sts	0x00AD, r29
    99e4:	c0 93 ac 00 	sts	0x00AC, r28
    99e8:	f8 c0       	rjmp	.+496    	; 0x9bda <_Z6angle5i+0x888>
        break;
      case 46:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    99ea:	e6 e8       	ldi	r30, 0x86	; 134
    99ec:	f0 e0       	ldi	r31, 0x00	; 0
    99ee:	a0 80       	ld	r10, Z
    99f0:	b1 80       	ldd	r11, Z+1	; 0x01
    99f2:	80 80       	ld	r8, Z
    99f4:	91 80       	ldd	r9, Z+1	; 0x01
    99f6:	00 d0       	rcall	.+0      	; 0x99f8 <_Z6angle5i+0x6a6>
    99f8:	0f 92       	push	r0
    99fa:	4d b6       	in	r4, 0x3d	; 61
    99fc:	5e b6       	in	r5, 0x3e	; 62
    99fe:	08 94       	sec
    9a00:	41 1c       	adc	r4, r1
    9a02:	51 1c       	adc	r5, r1
    9a04:	be 01       	movw	r22, r28
    9a06:	88 27       	eor	r24, r24
    9a08:	77 fd       	sbrc	r23, 7
    9a0a:	80 95       	com	r24
    9a0c:	98 2f       	mov	r25, r24
    9a0e:	0e 94 ee 79 	call	0xf3dc	; 0xf3dc <__floatsisf>
    9a12:	7b 01       	movw	r14, r22
    9a14:	8c 01       	movw	r16, r24
    9a16:	c5 01       	movw	r24, r10
    9a18:	68 e2       	ldi	r22, 0x28	; 40
    9a1a:	70 e0       	ldi	r23, 0x00	; 0
    9a1c:	0e 94 05 7b 	call	0xf60a	; 0xf60a <__udivmodhi4>
    9a20:	80 e0       	ldi	r24, 0x00	; 0
    9a22:	90 e0       	ldi	r25, 0x00	; 0
    9a24:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    9a28:	5b 01       	movw	r10, r22
    9a2a:	6c 01       	movw	r12, r24
    9a2c:	96 94       	lsr	r9
    9a2e:	87 94       	ror	r8
    9a30:	96 94       	lsr	r9
    9a32:	87 94       	ror	r8
    9a34:	96 94       	lsr	r9
    9a36:	87 94       	ror	r8
    9a38:	b4 01       	movw	r22, r8
    9a3a:	80 e0       	ldi	r24, 0x00	; 0
    9a3c:	90 e0       	ldi	r25, 0x00	; 0
    9a3e:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    9a42:	f2 01       	movw	r30, r4
    9a44:	60 83       	st	Z, r22
    9a46:	71 83       	std	Z+1, r23	; 0x01
    9a48:	82 83       	std	Z+2, r24	; 0x02
    9a4a:	93 83       	std	Z+3, r25	; 0x03
    9a4c:	c8 01       	movw	r24, r16
    9a4e:	b7 01       	movw	r22, r14
    9a50:	20 e0       	ldi	r18, 0x00	; 0
    9a52:	30 e0       	ldi	r19, 0x00	; 0
    9a54:	a9 01       	movw	r20, r18
    9a56:	0f 2e       	mov	r0, r31
    9a58:	f0 e0       	ldi	r31, 0x00	; 0
    9a5a:	ef 2e       	mov	r14, r31
    9a5c:	f0 e0       	ldi	r31, 0x00	; 0
    9a5e:	ff 2e       	mov	r15, r31
    9a60:	f4 e3       	ldi	r31, 0x34	; 52
    9a62:	0f 2f       	mov	r16, r31
    9a64:	f3 e4       	ldi	r31, 0x43	; 67
    9a66:	1f 2f       	mov	r17, r31
    9a68:	f0 2d       	mov	r31, r0
    9a6a:	0e 94 a0 08 	call	0x1140	; 0x1140 <_Z3mapddddd>
    9a6e:	0f 90       	pop	r0
    9a70:	0f 90       	pop	r0
    9a72:	0f 90       	pop	r0
    9a74:	0f 90       	pop	r0
        OCR5A=ICR5-vAl;
    9a76:	c0 91 26 01 	lds	r28, 0x0126
    9a7a:	d0 91 27 01 	lds	r29, 0x0127
      case 8:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
        OCR4C=ICR4-vAl;
        break;
      case 46:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    9a7e:	0e 94 bb 79 	call	0xf376	; 0xf376 <__fixsfsi>
        OCR5A=ICR5-vAl;
    9a82:	c6 1b       	sub	r28, r22
    9a84:	d7 0b       	sbc	r29, r23
    9a86:	d0 93 29 01 	sts	0x0129, r29
    9a8a:	c0 93 28 01 	sts	0x0128, r28
    9a8e:	a5 c0       	rjmp	.+330    	; 0x9bda <_Z6angle5i+0x888>
        break;
      case 45:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    9a90:	e6 e8       	ldi	r30, 0x86	; 134
    9a92:	f0 e0       	ldi	r31, 0x00	; 0
    9a94:	a0 80       	ld	r10, Z
    9a96:	b1 80       	ldd	r11, Z+1	; 0x01
    9a98:	80 80       	ld	r8, Z
    9a9a:	91 80       	ldd	r9, Z+1	; 0x01
    9a9c:	00 d0       	rcall	.+0      	; 0x9a9e <_Z6angle5i+0x74c>
    9a9e:	0f 92       	push	r0
    9aa0:	4d b6       	in	r4, 0x3d	; 61
    9aa2:	5e b6       	in	r5, 0x3e	; 62
    9aa4:	08 94       	sec
    9aa6:	41 1c       	adc	r4, r1
    9aa8:	51 1c       	adc	r5, r1
    9aaa:	be 01       	movw	r22, r28
    9aac:	88 27       	eor	r24, r24
    9aae:	77 fd       	sbrc	r23, 7
    9ab0:	80 95       	com	r24
    9ab2:	98 2f       	mov	r25, r24
    9ab4:	0e 94 ee 79 	call	0xf3dc	; 0xf3dc <__floatsisf>
    9ab8:	7b 01       	movw	r14, r22
    9aba:	8c 01       	movw	r16, r24
    9abc:	c5 01       	movw	r24, r10
    9abe:	68 e2       	ldi	r22, 0x28	; 40
    9ac0:	70 e0       	ldi	r23, 0x00	; 0
    9ac2:	0e 94 05 7b 	call	0xf60a	; 0xf60a <__udivmodhi4>
    9ac6:	80 e0       	ldi	r24, 0x00	; 0
    9ac8:	90 e0       	ldi	r25, 0x00	; 0
    9aca:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    9ace:	5b 01       	movw	r10, r22
    9ad0:	6c 01       	movw	r12, r24
    9ad2:	96 94       	lsr	r9
    9ad4:	87 94       	ror	r8
    9ad6:	96 94       	lsr	r9
    9ad8:	87 94       	ror	r8
    9ada:	96 94       	lsr	r9
    9adc:	87 94       	ror	r8
    9ade:	b4 01       	movw	r22, r8
    9ae0:	80 e0       	ldi	r24, 0x00	; 0
    9ae2:	90 e0       	ldi	r25, 0x00	; 0
    9ae4:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    9ae8:	f2 01       	movw	r30, r4
    9aea:	60 83       	st	Z, r22
    9aec:	71 83       	std	Z+1, r23	; 0x01
    9aee:	82 83       	std	Z+2, r24	; 0x02
    9af0:	93 83       	std	Z+3, r25	; 0x03
    9af2:	c8 01       	movw	r24, r16
    9af4:	b7 01       	movw	r22, r14
    9af6:	20 e0       	ldi	r18, 0x00	; 0
    9af8:	30 e0       	ldi	r19, 0x00	; 0
    9afa:	a9 01       	movw	r20, r18
    9afc:	0f 2e       	mov	r0, r31
    9afe:	f0 e0       	ldi	r31, 0x00	; 0
    9b00:	ef 2e       	mov	r14, r31
    9b02:	f0 e0       	ldi	r31, 0x00	; 0
    9b04:	ff 2e       	mov	r15, r31
    9b06:	f4 e3       	ldi	r31, 0x34	; 52
    9b08:	0f 2f       	mov	r16, r31
    9b0a:	f3 e4       	ldi	r31, 0x43	; 67
    9b0c:	1f 2f       	mov	r17, r31
    9b0e:	f0 2d       	mov	r31, r0
    9b10:	0e 94 a0 08 	call	0x1140	; 0x1140 <_Z3mapddddd>
    9b14:	0f 90       	pop	r0
    9b16:	0f 90       	pop	r0
    9b18:	0f 90       	pop	r0
    9b1a:	0f 90       	pop	r0
        OCR5B=ICR5-vAl;
    9b1c:	c0 91 26 01 	lds	r28, 0x0126
    9b20:	d0 91 27 01 	lds	r29, 0x0127
      case 46:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
        OCR5A=ICR5-vAl;
        break;
      case 45:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    9b24:	0e 94 bb 79 	call	0xf376	; 0xf376 <__fixsfsi>
        OCR5B=ICR5-vAl;
    9b28:	c6 1b       	sub	r28, r22
    9b2a:	d7 0b       	sbc	r29, r23
    9b2c:	d0 93 2b 01 	sts	0x012B, r29
    9b30:	c0 93 2a 01 	sts	0x012A, r28
    9b34:	52 c0       	rjmp	.+164    	; 0x9bda <_Z6angle5i+0x888>
        break;
      case 44:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    9b36:	e6 e8       	ldi	r30, 0x86	; 134
    9b38:	f0 e0       	ldi	r31, 0x00	; 0
    9b3a:	a0 80       	ld	r10, Z
    9b3c:	b1 80       	ldd	r11, Z+1	; 0x01
    9b3e:	80 80       	ld	r8, Z
    9b40:	91 80       	ldd	r9, Z+1	; 0x01
    9b42:	00 d0       	rcall	.+0      	; 0x9b44 <_Z6angle5i+0x7f2>
    9b44:	0f 92       	push	r0
    9b46:	4d b6       	in	r4, 0x3d	; 61
    9b48:	5e b6       	in	r5, 0x3e	; 62
    9b4a:	08 94       	sec
    9b4c:	41 1c       	adc	r4, r1
    9b4e:	51 1c       	adc	r5, r1
    9b50:	be 01       	movw	r22, r28
    9b52:	88 27       	eor	r24, r24
    9b54:	77 fd       	sbrc	r23, 7
    9b56:	80 95       	com	r24
    9b58:	98 2f       	mov	r25, r24
    9b5a:	0e 94 ee 79 	call	0xf3dc	; 0xf3dc <__floatsisf>
    9b5e:	7b 01       	movw	r14, r22
    9b60:	8c 01       	movw	r16, r24
    9b62:	c5 01       	movw	r24, r10
    9b64:	68 e2       	ldi	r22, 0x28	; 40
    9b66:	70 e0       	ldi	r23, 0x00	; 0
    9b68:	0e 94 05 7b 	call	0xf60a	; 0xf60a <__udivmodhi4>
    9b6c:	80 e0       	ldi	r24, 0x00	; 0
    9b6e:	90 e0       	ldi	r25, 0x00	; 0
    9b70:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    9b74:	5b 01       	movw	r10, r22
    9b76:	6c 01       	movw	r12, r24
    9b78:	96 94       	lsr	r9
    9b7a:	87 94       	ror	r8
    9b7c:	96 94       	lsr	r9
    9b7e:	87 94       	ror	r8
    9b80:	96 94       	lsr	r9
    9b82:	87 94       	ror	r8
    9b84:	b4 01       	movw	r22, r8
    9b86:	80 e0       	ldi	r24, 0x00	; 0
    9b88:	90 e0       	ldi	r25, 0x00	; 0
    9b8a:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    9b8e:	f2 01       	movw	r30, r4
    9b90:	60 83       	st	Z, r22
    9b92:	71 83       	std	Z+1, r23	; 0x01
    9b94:	82 83       	std	Z+2, r24	; 0x02
    9b96:	93 83       	std	Z+3, r25	; 0x03
    9b98:	c8 01       	movw	r24, r16
    9b9a:	b7 01       	movw	r22, r14
    9b9c:	20 e0       	ldi	r18, 0x00	; 0
    9b9e:	30 e0       	ldi	r19, 0x00	; 0
    9ba0:	a9 01       	movw	r20, r18
    9ba2:	0f 2e       	mov	r0, r31
    9ba4:	f0 e0       	ldi	r31, 0x00	; 0
    9ba6:	ef 2e       	mov	r14, r31
    9ba8:	f0 e0       	ldi	r31, 0x00	; 0
    9baa:	ff 2e       	mov	r15, r31
    9bac:	f4 e3       	ldi	r31, 0x34	; 52
    9bae:	0f 2f       	mov	r16, r31
    9bb0:	f3 e4       	ldi	r31, 0x43	; 67
    9bb2:	1f 2f       	mov	r17, r31
    9bb4:	f0 2d       	mov	r31, r0
    9bb6:	0e 94 a0 08 	call	0x1140	; 0x1140 <_Z3mapddddd>
    9bba:	0f 90       	pop	r0
    9bbc:	0f 90       	pop	r0
    9bbe:	0f 90       	pop	r0
    9bc0:	0f 90       	pop	r0
        OCR5C=ICR5-vAl;
    9bc2:	c0 91 26 01 	lds	r28, 0x0126
    9bc6:	d0 91 27 01 	lds	r29, 0x0127
      case 45:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
        OCR5B=ICR5-vAl;
        break;
      case 44:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    9bca:	0e 94 bb 79 	call	0xf376	; 0xf376 <__fixsfsi>
        OCR5C=ICR5-vAl;
    9bce:	c6 1b       	sub	r28, r22
    9bd0:	d7 0b       	sbc	r29, r23
    9bd2:	d0 93 2d 01 	sts	0x012D, r29
    9bd6:	c0 93 2c 01 	sts	0x012C, r28

		p.write(v);
		q.write(y);
    9bda:	60 91 cc 02 	lds	r22, 0x02CC
    9bde:	70 91 cd 02 	lds	r23, 0x02CD
     }
  }

  void write(int vAl)           //PIN=servo pin no. on mega,vAl=angle F_CPU for the servo at pin
  {
    switch(pIn)
    9be2:	80 91 d5 02 	lds	r24, 0x02D5
    9be6:	88 30       	cpi	r24, 0x08	; 8
    9be8:	09 f4       	brne	.+2      	; 0x9bec <_Z6angle5i+0x89a>
    9bea:	63 c2       	rjmp	.+1222   	; 0xa0b2 <_Z6angle5i+0xd60>
    9bec:	89 30       	cpi	r24, 0x09	; 9
    9bee:	98 f4       	brcc	.+38     	; 0x9c16 <_Z6angle5i+0x8c4>
    9bf0:	85 30       	cpi	r24, 0x05	; 5
    9bf2:	09 f4       	brne	.+2      	; 0x9bf6 <_Z6angle5i+0x8a4>
    9bf4:	c4 c0       	rjmp	.+392    	; 0x9d7e <_Z6angle5i+0xa2c>
    9bf6:	86 30       	cpi	r24, 0x06	; 6
    9bf8:	38 f4       	brcc	.+14     	; 0x9c08 <_Z6angle5i+0x8b6>
    9bfa:	82 30       	cpi	r24, 0x02	; 2
    9bfc:	09 f4       	brne	.+2      	; 0x9c00 <_Z6angle5i+0x8ae>
    9bfe:	11 c1       	rjmp	.+546    	; 0x9e22 <_Z6angle5i+0xad0>
    9c00:	83 30       	cpi	r24, 0x03	; 3
    9c02:	09 f0       	breq	.+2      	; 0x9c06 <_Z6angle5i+0x8b4>
    9c04:	9d c3       	rjmp	.+1850   	; 0xa340 <_Z6angle5i+0xfee>
    9c06:	5f c1       	rjmp	.+702    	; 0x9ec6 <_Z6angle5i+0xb74>
    9c08:	86 30       	cpi	r24, 0x06	; 6
    9c0a:	09 f4       	brne	.+2      	; 0x9c0e <_Z6angle5i+0x8bc>
    9c0c:	ae c1       	rjmp	.+860    	; 0x9f6a <_Z6angle5i+0xc18>
    9c0e:	87 30       	cpi	r24, 0x07	; 7
    9c10:	09 f0       	breq	.+2      	; 0x9c14 <_Z6angle5i+0x8c2>
    9c12:	96 c3       	rjmp	.+1836   	; 0xa340 <_Z6angle5i+0xfee>
    9c14:	fc c1       	rjmp	.+1016   	; 0xa00e <_Z6angle5i+0xcbc>
    9c16:	8c 32       	cpi	r24, 0x2C	; 44
    9c18:	09 f4       	brne	.+2      	; 0x9c1c <_Z6angle5i+0x8ca>
    9c1a:	41 c3       	rjmp	.+1666   	; 0xa29e <_Z6angle5i+0xf4c>
    9c1c:	8d 32       	cpi	r24, 0x2D	; 45
    9c1e:	30 f4       	brcc	.+12     	; 0x9c2c <_Z6angle5i+0x8da>
    9c20:	8b 30       	cpi	r24, 0x0B	; 11
    9c22:	59 f0       	breq	.+22     	; 0x9c3a <_Z6angle5i+0x8e8>
    9c24:	8c 30       	cpi	r24, 0x0C	; 12
    9c26:	09 f0       	breq	.+2      	; 0x9c2a <_Z6angle5i+0x8d8>
    9c28:	8b c3       	rjmp	.+1814   	; 0xa340 <_Z6angle5i+0xfee>
    9c2a:	58 c0       	rjmp	.+176    	; 0x9cdc <_Z6angle5i+0x98a>
    9c2c:	8d 32       	cpi	r24, 0x2D	; 45
    9c2e:	09 f4       	brne	.+2      	; 0x9c32 <_Z6angle5i+0x8e0>
    9c30:	e4 c2       	rjmp	.+1480   	; 0xa1fa <_Z6angle5i+0xea8>
    9c32:	8e 32       	cpi	r24, 0x2E	; 46
    9c34:	09 f0       	breq	.+2      	; 0x9c38 <_Z6angle5i+0x8e6>
    9c36:	84 c3       	rjmp	.+1800   	; 0xa340 <_Z6angle5i+0xfee>
    9c38:	8e c2       	rjmp	.+1308   	; 0xa156 <_Z6angle5i+0xe04>
    {
     case 11:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    9c3a:	c6 e8       	ldi	r28, 0x86	; 134
    9c3c:	d0 e0       	ldi	r29, 0x00	; 0
    9c3e:	08 81       	ld	r16, Y
    9c40:	19 81       	ldd	r17, Y+1	; 0x01
    9c42:	e8 80       	ld	r14, Y
    9c44:	f9 80       	ldd	r15, Y+1	; 0x01
    9c46:	00 d0       	rcall	.+0      	; 0x9c48 <_Z6angle5i+0x8f6>
    9c48:	0f 92       	push	r0
    9c4a:	8d b6       	in	r8, 0x3d	; 61
    9c4c:	9e b6       	in	r9, 0x3e	; 62
    9c4e:	08 94       	sec
    9c50:	81 1c       	adc	r8, r1
    9c52:	91 1c       	adc	r9, r1
    9c54:	88 27       	eor	r24, r24
    9c56:	77 fd       	sbrc	r23, 7
    9c58:	80 95       	com	r24
    9c5a:	98 2f       	mov	r25, r24
    9c5c:	0e 94 ee 79 	call	0xf3dc	; 0xf3dc <__floatsisf>
    9c60:	2b 01       	movw	r4, r22
    9c62:	3c 01       	movw	r6, r24
    9c64:	c8 01       	movw	r24, r16
    9c66:	68 e2       	ldi	r22, 0x28	; 40
    9c68:	70 e0       	ldi	r23, 0x00	; 0
    9c6a:	0e 94 05 7b 	call	0xf60a	; 0xf60a <__udivmodhi4>
    9c6e:	80 e0       	ldi	r24, 0x00	; 0
    9c70:	90 e0       	ldi	r25, 0x00	; 0
    9c72:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    9c76:	5b 01       	movw	r10, r22
    9c78:	6c 01       	movw	r12, r24
    9c7a:	f6 94       	lsr	r15
    9c7c:	e7 94       	ror	r14
    9c7e:	f6 94       	lsr	r15
    9c80:	e7 94       	ror	r14
    9c82:	f6 94       	lsr	r15
    9c84:	e7 94       	ror	r14
    9c86:	b7 01       	movw	r22, r14
    9c88:	80 e0       	ldi	r24, 0x00	; 0
    9c8a:	90 e0       	ldi	r25, 0x00	; 0
    9c8c:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    9c90:	f4 01       	movw	r30, r8
    9c92:	60 83       	st	Z, r22
    9c94:	71 83       	std	Z+1, r23	; 0x01
    9c96:	82 83       	std	Z+2, r24	; 0x02
    9c98:	93 83       	std	Z+3, r25	; 0x03
    9c9a:	c3 01       	movw	r24, r6
    9c9c:	b2 01       	movw	r22, r4
    9c9e:	20 e0       	ldi	r18, 0x00	; 0
    9ca0:	30 e0       	ldi	r19, 0x00	; 0
    9ca2:	a9 01       	movw	r20, r18
    9ca4:	0f 2e       	mov	r0, r31
    9ca6:	f0 e0       	ldi	r31, 0x00	; 0
    9ca8:	ef 2e       	mov	r14, r31
    9caa:	f0 e0       	ldi	r31, 0x00	; 0
    9cac:	ff 2e       	mov	r15, r31
    9cae:	f4 e3       	ldi	r31, 0x34	; 52
    9cb0:	0f 2f       	mov	r16, r31
    9cb2:	f3 e4       	ldi	r31, 0x43	; 67
    9cb4:	1f 2f       	mov	r17, r31
    9cb6:	f0 2d       	mov	r31, r0
    9cb8:	0e 94 a0 08 	call	0x1140	; 0x1140 <_Z3mapddddd>
    9cbc:	0f 90       	pop	r0
    9cbe:	0f 90       	pop	r0
    9cc0:	0f 90       	pop	r0
    9cc2:	0f 90       	pop	r0
        OCR1A=ICR1-vAl;
    9cc4:	09 90       	ld	r0, Y+
    9cc6:	d8 81       	ld	r29, Y
    9cc8:	c0 2d       	mov	r28, r0
  void write(int vAl)           //PIN=servo pin no. on mega,vAl=angle F_CPU for the servo at pin
  {
    switch(pIn)
    {
     case 11:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    9cca:	0e 94 bb 79 	call	0xf376	; 0xf376 <__fixsfsi>
        OCR1A=ICR1-vAl;
    9cce:	c6 1b       	sub	r28, r22
    9cd0:	d7 0b       	sbc	r29, r23
    9cd2:	d0 93 89 00 	sts	0x0089, r29
    9cd6:	c0 93 88 00 	sts	0x0088, r28
    9cda:	32 c3       	rjmp	.+1636   	; 0xa340 <_Z6angle5i+0xfee>
        break;
      case 12:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    9cdc:	c6 e8       	ldi	r28, 0x86	; 134
    9cde:	d0 e0       	ldi	r29, 0x00	; 0
    9ce0:	08 81       	ld	r16, Y
    9ce2:	19 81       	ldd	r17, Y+1	; 0x01
    9ce4:	e8 80       	ld	r14, Y
    9ce6:	f9 80       	ldd	r15, Y+1	; 0x01
    9ce8:	00 d0       	rcall	.+0      	; 0x9cea <_Z6angle5i+0x998>
    9cea:	0f 92       	push	r0
    9cec:	8d b6       	in	r8, 0x3d	; 61
    9cee:	9e b6       	in	r9, 0x3e	; 62
    9cf0:	08 94       	sec
    9cf2:	81 1c       	adc	r8, r1
    9cf4:	91 1c       	adc	r9, r1
    9cf6:	88 27       	eor	r24, r24
    9cf8:	77 fd       	sbrc	r23, 7
    9cfa:	80 95       	com	r24
    9cfc:	98 2f       	mov	r25, r24
    9cfe:	0e 94 ee 79 	call	0xf3dc	; 0xf3dc <__floatsisf>
    9d02:	2b 01       	movw	r4, r22
    9d04:	3c 01       	movw	r6, r24
    9d06:	c8 01       	movw	r24, r16
    9d08:	68 e2       	ldi	r22, 0x28	; 40
    9d0a:	70 e0       	ldi	r23, 0x00	; 0
    9d0c:	0e 94 05 7b 	call	0xf60a	; 0xf60a <__udivmodhi4>
    9d10:	80 e0       	ldi	r24, 0x00	; 0
    9d12:	90 e0       	ldi	r25, 0x00	; 0
    9d14:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    9d18:	5b 01       	movw	r10, r22
    9d1a:	6c 01       	movw	r12, r24
    9d1c:	f6 94       	lsr	r15
    9d1e:	e7 94       	ror	r14
    9d20:	f6 94       	lsr	r15
    9d22:	e7 94       	ror	r14
    9d24:	f6 94       	lsr	r15
    9d26:	e7 94       	ror	r14
    9d28:	b7 01       	movw	r22, r14
    9d2a:	80 e0       	ldi	r24, 0x00	; 0
    9d2c:	90 e0       	ldi	r25, 0x00	; 0
    9d2e:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    9d32:	f4 01       	movw	r30, r8
    9d34:	60 83       	st	Z, r22
    9d36:	71 83       	std	Z+1, r23	; 0x01
    9d38:	82 83       	std	Z+2, r24	; 0x02
    9d3a:	93 83       	std	Z+3, r25	; 0x03
    9d3c:	c3 01       	movw	r24, r6
    9d3e:	b2 01       	movw	r22, r4
    9d40:	20 e0       	ldi	r18, 0x00	; 0
    9d42:	30 e0       	ldi	r19, 0x00	; 0
    9d44:	a9 01       	movw	r20, r18
    9d46:	0f 2e       	mov	r0, r31
    9d48:	f0 e0       	ldi	r31, 0x00	; 0
    9d4a:	ef 2e       	mov	r14, r31
    9d4c:	f0 e0       	ldi	r31, 0x00	; 0
    9d4e:	ff 2e       	mov	r15, r31
    9d50:	f4 e3       	ldi	r31, 0x34	; 52
    9d52:	0f 2f       	mov	r16, r31
    9d54:	f3 e4       	ldi	r31, 0x43	; 67
    9d56:	1f 2f       	mov	r17, r31
    9d58:	f0 2d       	mov	r31, r0
    9d5a:	0e 94 a0 08 	call	0x1140	; 0x1140 <_Z3mapddddd>
    9d5e:	0f 90       	pop	r0
    9d60:	0f 90       	pop	r0
    9d62:	0f 90       	pop	r0
    9d64:	0f 90       	pop	r0
        OCR1B=ICR1-vAl;
    9d66:	09 90       	ld	r0, Y+
    9d68:	d8 81       	ld	r29, Y
    9d6a:	c0 2d       	mov	r28, r0
     case 11:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
        OCR1A=ICR1-vAl;
        break;
      case 12:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    9d6c:	0e 94 bb 79 	call	0xf376	; 0xf376 <__fixsfsi>
        OCR1B=ICR1-vAl;
    9d70:	c6 1b       	sub	r28, r22
    9d72:	d7 0b       	sbc	r29, r23
    9d74:	d0 93 8b 00 	sts	0x008B, r29
    9d78:	c0 93 8a 00 	sts	0x008A, r28
    9d7c:	e1 c2       	rjmp	.+1474   	; 0xa340 <_Z6angle5i+0xfee>
        break;
      case 5:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    9d7e:	e6 e8       	ldi	r30, 0x86	; 134
    9d80:	f0 e0       	ldi	r31, 0x00	; 0
    9d82:	c0 81       	ld	r28, Z
    9d84:	d1 81       	ldd	r29, Z+1	; 0x01
    9d86:	80 80       	ld	r8, Z
    9d88:	91 80       	ldd	r9, Z+1	; 0x01
    9d8a:	00 d0       	rcall	.+0      	; 0x9d8c <_Z6angle5i+0xa3a>
    9d8c:	0f 92       	push	r0
    9d8e:	4d b6       	in	r4, 0x3d	; 61
    9d90:	5e b6       	in	r5, 0x3e	; 62
    9d92:	08 94       	sec
    9d94:	41 1c       	adc	r4, r1
    9d96:	51 1c       	adc	r5, r1
    9d98:	88 27       	eor	r24, r24
    9d9a:	77 fd       	sbrc	r23, 7
    9d9c:	80 95       	com	r24
    9d9e:	98 2f       	mov	r25, r24
    9da0:	0e 94 ee 79 	call	0xf3dc	; 0xf3dc <__floatsisf>
    9da4:	7b 01       	movw	r14, r22
    9da6:	8c 01       	movw	r16, r24
    9da8:	ce 01       	movw	r24, r28
    9daa:	68 e2       	ldi	r22, 0x28	; 40
    9dac:	70 e0       	ldi	r23, 0x00	; 0
    9dae:	0e 94 05 7b 	call	0xf60a	; 0xf60a <__udivmodhi4>
    9db2:	80 e0       	ldi	r24, 0x00	; 0
    9db4:	90 e0       	ldi	r25, 0x00	; 0
    9db6:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    9dba:	5b 01       	movw	r10, r22
    9dbc:	6c 01       	movw	r12, r24
    9dbe:	96 94       	lsr	r9
    9dc0:	87 94       	ror	r8
    9dc2:	96 94       	lsr	r9
    9dc4:	87 94       	ror	r8
    9dc6:	96 94       	lsr	r9
    9dc8:	87 94       	ror	r8
    9dca:	b4 01       	movw	r22, r8
    9dcc:	80 e0       	ldi	r24, 0x00	; 0
    9dce:	90 e0       	ldi	r25, 0x00	; 0
    9dd0:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    9dd4:	f2 01       	movw	r30, r4
    9dd6:	60 83       	st	Z, r22
    9dd8:	71 83       	std	Z+1, r23	; 0x01
    9dda:	82 83       	std	Z+2, r24	; 0x02
    9ddc:	93 83       	std	Z+3, r25	; 0x03
    9dde:	c8 01       	movw	r24, r16
    9de0:	b7 01       	movw	r22, r14
    9de2:	20 e0       	ldi	r18, 0x00	; 0
    9de4:	30 e0       	ldi	r19, 0x00	; 0
    9de6:	a9 01       	movw	r20, r18
    9de8:	0f 2e       	mov	r0, r31
    9dea:	f0 e0       	ldi	r31, 0x00	; 0
    9dec:	ef 2e       	mov	r14, r31
    9dee:	f0 e0       	ldi	r31, 0x00	; 0
    9df0:	ff 2e       	mov	r15, r31
    9df2:	f4 e3       	ldi	r31, 0x34	; 52
    9df4:	0f 2f       	mov	r16, r31
    9df6:	f3 e4       	ldi	r31, 0x43	; 67
    9df8:	1f 2f       	mov	r17, r31
    9dfa:	f0 2d       	mov	r31, r0
    9dfc:	0e 94 a0 08 	call	0x1140	; 0x1140 <_Z3mapddddd>
    9e00:	0f 90       	pop	r0
    9e02:	0f 90       	pop	r0
    9e04:	0f 90       	pop	r0
    9e06:	0f 90       	pop	r0
        OCR3A=ICR3-vAl;
    9e08:	c0 91 96 00 	lds	r28, 0x0096
    9e0c:	d0 91 97 00 	lds	r29, 0x0097
      case 12:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
        OCR1B=ICR1-vAl;
        break;
      case 5:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    9e10:	0e 94 bb 79 	call	0xf376	; 0xf376 <__fixsfsi>
        OCR3A=ICR3-vAl;
    9e14:	c6 1b       	sub	r28, r22
    9e16:	d7 0b       	sbc	r29, r23
    9e18:	d0 93 99 00 	sts	0x0099, r29
    9e1c:	c0 93 98 00 	sts	0x0098, r28
    9e20:	8f c2       	rjmp	.+1310   	; 0xa340 <_Z6angle5i+0xfee>
        break;
      case 2:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    9e22:	e6 e8       	ldi	r30, 0x86	; 134
    9e24:	f0 e0       	ldi	r31, 0x00	; 0
    9e26:	c0 81       	ld	r28, Z
    9e28:	d1 81       	ldd	r29, Z+1	; 0x01
    9e2a:	80 80       	ld	r8, Z
    9e2c:	91 80       	ldd	r9, Z+1	; 0x01
    9e2e:	00 d0       	rcall	.+0      	; 0x9e30 <_Z6angle5i+0xade>
    9e30:	0f 92       	push	r0
    9e32:	4d b6       	in	r4, 0x3d	; 61
    9e34:	5e b6       	in	r5, 0x3e	; 62
    9e36:	08 94       	sec
    9e38:	41 1c       	adc	r4, r1
    9e3a:	51 1c       	adc	r5, r1
    9e3c:	88 27       	eor	r24, r24
    9e3e:	77 fd       	sbrc	r23, 7
    9e40:	80 95       	com	r24
    9e42:	98 2f       	mov	r25, r24
    9e44:	0e 94 ee 79 	call	0xf3dc	; 0xf3dc <__floatsisf>
    9e48:	7b 01       	movw	r14, r22
    9e4a:	8c 01       	movw	r16, r24
    9e4c:	ce 01       	movw	r24, r28
    9e4e:	68 e2       	ldi	r22, 0x28	; 40
    9e50:	70 e0       	ldi	r23, 0x00	; 0
    9e52:	0e 94 05 7b 	call	0xf60a	; 0xf60a <__udivmodhi4>
    9e56:	80 e0       	ldi	r24, 0x00	; 0
    9e58:	90 e0       	ldi	r25, 0x00	; 0
    9e5a:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    9e5e:	5b 01       	movw	r10, r22
    9e60:	6c 01       	movw	r12, r24
    9e62:	96 94       	lsr	r9
    9e64:	87 94       	ror	r8
    9e66:	96 94       	lsr	r9
    9e68:	87 94       	ror	r8
    9e6a:	96 94       	lsr	r9
    9e6c:	87 94       	ror	r8
    9e6e:	b4 01       	movw	r22, r8
    9e70:	80 e0       	ldi	r24, 0x00	; 0
    9e72:	90 e0       	ldi	r25, 0x00	; 0
    9e74:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    9e78:	f2 01       	movw	r30, r4
    9e7a:	60 83       	st	Z, r22
    9e7c:	71 83       	std	Z+1, r23	; 0x01
    9e7e:	82 83       	std	Z+2, r24	; 0x02
    9e80:	93 83       	std	Z+3, r25	; 0x03
    9e82:	c8 01       	movw	r24, r16
    9e84:	b7 01       	movw	r22, r14
    9e86:	20 e0       	ldi	r18, 0x00	; 0
    9e88:	30 e0       	ldi	r19, 0x00	; 0
    9e8a:	a9 01       	movw	r20, r18
    9e8c:	0f 2e       	mov	r0, r31
    9e8e:	f0 e0       	ldi	r31, 0x00	; 0
    9e90:	ef 2e       	mov	r14, r31
    9e92:	f0 e0       	ldi	r31, 0x00	; 0
    9e94:	ff 2e       	mov	r15, r31
    9e96:	f4 e3       	ldi	r31, 0x34	; 52
    9e98:	0f 2f       	mov	r16, r31
    9e9a:	f3 e4       	ldi	r31, 0x43	; 67
    9e9c:	1f 2f       	mov	r17, r31
    9e9e:	f0 2d       	mov	r31, r0
    9ea0:	0e 94 a0 08 	call	0x1140	; 0x1140 <_Z3mapddddd>
    9ea4:	0f 90       	pop	r0
    9ea6:	0f 90       	pop	r0
    9ea8:	0f 90       	pop	r0
    9eaa:	0f 90       	pop	r0
        OCR3B=ICR3-vAl;
    9eac:	c0 91 96 00 	lds	r28, 0x0096
    9eb0:	d0 91 97 00 	lds	r29, 0x0097
      case 5:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
        OCR3A=ICR3-vAl;
        break;
      case 2:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    9eb4:	0e 94 bb 79 	call	0xf376	; 0xf376 <__fixsfsi>
        OCR3B=ICR3-vAl;
    9eb8:	c6 1b       	sub	r28, r22
    9eba:	d7 0b       	sbc	r29, r23
    9ebc:	d0 93 9b 00 	sts	0x009B, r29
    9ec0:	c0 93 9a 00 	sts	0x009A, r28
    9ec4:	3d c2       	rjmp	.+1146   	; 0xa340 <_Z6angle5i+0xfee>
        break;
      case 3:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    9ec6:	e6 e8       	ldi	r30, 0x86	; 134
    9ec8:	f0 e0       	ldi	r31, 0x00	; 0
    9eca:	c0 81       	ld	r28, Z
    9ecc:	d1 81       	ldd	r29, Z+1	; 0x01
    9ece:	80 80       	ld	r8, Z
    9ed0:	91 80       	ldd	r9, Z+1	; 0x01
    9ed2:	00 d0       	rcall	.+0      	; 0x9ed4 <_Z6angle5i+0xb82>
    9ed4:	0f 92       	push	r0
    9ed6:	4d b6       	in	r4, 0x3d	; 61
    9ed8:	5e b6       	in	r5, 0x3e	; 62
    9eda:	08 94       	sec
    9edc:	41 1c       	adc	r4, r1
    9ede:	51 1c       	adc	r5, r1
    9ee0:	88 27       	eor	r24, r24
    9ee2:	77 fd       	sbrc	r23, 7
    9ee4:	80 95       	com	r24
    9ee6:	98 2f       	mov	r25, r24
    9ee8:	0e 94 ee 79 	call	0xf3dc	; 0xf3dc <__floatsisf>
    9eec:	7b 01       	movw	r14, r22
    9eee:	8c 01       	movw	r16, r24
    9ef0:	ce 01       	movw	r24, r28
    9ef2:	68 e2       	ldi	r22, 0x28	; 40
    9ef4:	70 e0       	ldi	r23, 0x00	; 0
    9ef6:	0e 94 05 7b 	call	0xf60a	; 0xf60a <__udivmodhi4>
    9efa:	80 e0       	ldi	r24, 0x00	; 0
    9efc:	90 e0       	ldi	r25, 0x00	; 0
    9efe:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    9f02:	5b 01       	movw	r10, r22
    9f04:	6c 01       	movw	r12, r24
    9f06:	96 94       	lsr	r9
    9f08:	87 94       	ror	r8
    9f0a:	96 94       	lsr	r9
    9f0c:	87 94       	ror	r8
    9f0e:	96 94       	lsr	r9
    9f10:	87 94       	ror	r8
    9f12:	b4 01       	movw	r22, r8
    9f14:	80 e0       	ldi	r24, 0x00	; 0
    9f16:	90 e0       	ldi	r25, 0x00	; 0
    9f18:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    9f1c:	f2 01       	movw	r30, r4
    9f1e:	60 83       	st	Z, r22
    9f20:	71 83       	std	Z+1, r23	; 0x01
    9f22:	82 83       	std	Z+2, r24	; 0x02
    9f24:	93 83       	std	Z+3, r25	; 0x03
    9f26:	c8 01       	movw	r24, r16
    9f28:	b7 01       	movw	r22, r14
    9f2a:	20 e0       	ldi	r18, 0x00	; 0
    9f2c:	30 e0       	ldi	r19, 0x00	; 0
    9f2e:	a9 01       	movw	r20, r18
    9f30:	0f 2e       	mov	r0, r31
    9f32:	f0 e0       	ldi	r31, 0x00	; 0
    9f34:	ef 2e       	mov	r14, r31
    9f36:	f0 e0       	ldi	r31, 0x00	; 0
    9f38:	ff 2e       	mov	r15, r31
    9f3a:	f4 e3       	ldi	r31, 0x34	; 52
    9f3c:	0f 2f       	mov	r16, r31
    9f3e:	f3 e4       	ldi	r31, 0x43	; 67
    9f40:	1f 2f       	mov	r17, r31
    9f42:	f0 2d       	mov	r31, r0
    9f44:	0e 94 a0 08 	call	0x1140	; 0x1140 <_Z3mapddddd>
    9f48:	0f 90       	pop	r0
    9f4a:	0f 90       	pop	r0
    9f4c:	0f 90       	pop	r0
    9f4e:	0f 90       	pop	r0
        OCR3C=ICR3-vAl;
    9f50:	c0 91 96 00 	lds	r28, 0x0096
    9f54:	d0 91 97 00 	lds	r29, 0x0097
      case 2:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
        OCR3B=ICR3-vAl;
        break;
      case 3:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    9f58:	0e 94 bb 79 	call	0xf376	; 0xf376 <__fixsfsi>
        OCR3C=ICR3-vAl;
    9f5c:	c6 1b       	sub	r28, r22
    9f5e:	d7 0b       	sbc	r29, r23
    9f60:	d0 93 9d 00 	sts	0x009D, r29
    9f64:	c0 93 9c 00 	sts	0x009C, r28
    9f68:	eb c1       	rjmp	.+982    	; 0xa340 <_Z6angle5i+0xfee>
        break;
      case 6:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    9f6a:	e6 e8       	ldi	r30, 0x86	; 134
    9f6c:	f0 e0       	ldi	r31, 0x00	; 0
    9f6e:	c0 81       	ld	r28, Z
    9f70:	d1 81       	ldd	r29, Z+1	; 0x01
    9f72:	80 80       	ld	r8, Z
    9f74:	91 80       	ldd	r9, Z+1	; 0x01
    9f76:	00 d0       	rcall	.+0      	; 0x9f78 <_Z6angle5i+0xc26>
    9f78:	0f 92       	push	r0
    9f7a:	4d b6       	in	r4, 0x3d	; 61
    9f7c:	5e b6       	in	r5, 0x3e	; 62
    9f7e:	08 94       	sec
    9f80:	41 1c       	adc	r4, r1
    9f82:	51 1c       	adc	r5, r1
    9f84:	88 27       	eor	r24, r24
    9f86:	77 fd       	sbrc	r23, 7
    9f88:	80 95       	com	r24
    9f8a:	98 2f       	mov	r25, r24
    9f8c:	0e 94 ee 79 	call	0xf3dc	; 0xf3dc <__floatsisf>
    9f90:	7b 01       	movw	r14, r22
    9f92:	8c 01       	movw	r16, r24
    9f94:	ce 01       	movw	r24, r28
    9f96:	68 e2       	ldi	r22, 0x28	; 40
    9f98:	70 e0       	ldi	r23, 0x00	; 0
    9f9a:	0e 94 05 7b 	call	0xf60a	; 0xf60a <__udivmodhi4>
    9f9e:	80 e0       	ldi	r24, 0x00	; 0
    9fa0:	90 e0       	ldi	r25, 0x00	; 0
    9fa2:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    9fa6:	5b 01       	movw	r10, r22
    9fa8:	6c 01       	movw	r12, r24
    9faa:	96 94       	lsr	r9
    9fac:	87 94       	ror	r8
    9fae:	96 94       	lsr	r9
    9fb0:	87 94       	ror	r8
    9fb2:	96 94       	lsr	r9
    9fb4:	87 94       	ror	r8
    9fb6:	b4 01       	movw	r22, r8
    9fb8:	80 e0       	ldi	r24, 0x00	; 0
    9fba:	90 e0       	ldi	r25, 0x00	; 0
    9fbc:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    9fc0:	f2 01       	movw	r30, r4
    9fc2:	60 83       	st	Z, r22
    9fc4:	71 83       	std	Z+1, r23	; 0x01
    9fc6:	82 83       	std	Z+2, r24	; 0x02
    9fc8:	93 83       	std	Z+3, r25	; 0x03
    9fca:	c8 01       	movw	r24, r16
    9fcc:	b7 01       	movw	r22, r14
    9fce:	20 e0       	ldi	r18, 0x00	; 0
    9fd0:	30 e0       	ldi	r19, 0x00	; 0
    9fd2:	a9 01       	movw	r20, r18
    9fd4:	0f 2e       	mov	r0, r31
    9fd6:	f0 e0       	ldi	r31, 0x00	; 0
    9fd8:	ef 2e       	mov	r14, r31
    9fda:	f0 e0       	ldi	r31, 0x00	; 0
    9fdc:	ff 2e       	mov	r15, r31
    9fde:	f4 e3       	ldi	r31, 0x34	; 52
    9fe0:	0f 2f       	mov	r16, r31
    9fe2:	f3 e4       	ldi	r31, 0x43	; 67
    9fe4:	1f 2f       	mov	r17, r31
    9fe6:	f0 2d       	mov	r31, r0
    9fe8:	0e 94 a0 08 	call	0x1140	; 0x1140 <_Z3mapddddd>
    9fec:	0f 90       	pop	r0
    9fee:	0f 90       	pop	r0
    9ff0:	0f 90       	pop	r0
    9ff2:	0f 90       	pop	r0
        OCR4A=ICR4-vAl;
    9ff4:	c0 91 a6 00 	lds	r28, 0x00A6
    9ff8:	d0 91 a7 00 	lds	r29, 0x00A7
      case 3:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
        OCR3C=ICR3-vAl;
        break;
      case 6:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    9ffc:	0e 94 bb 79 	call	0xf376	; 0xf376 <__fixsfsi>
        OCR4A=ICR4-vAl;
    a000:	c6 1b       	sub	r28, r22
    a002:	d7 0b       	sbc	r29, r23
    a004:	d0 93 a9 00 	sts	0x00A9, r29
    a008:	c0 93 a8 00 	sts	0x00A8, r28
    a00c:	99 c1       	rjmp	.+818    	; 0xa340 <_Z6angle5i+0xfee>
        break;
      case 7:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    a00e:	e6 e8       	ldi	r30, 0x86	; 134
    a010:	f0 e0       	ldi	r31, 0x00	; 0
    a012:	c0 81       	ld	r28, Z
    a014:	d1 81       	ldd	r29, Z+1	; 0x01
    a016:	80 80       	ld	r8, Z
    a018:	91 80       	ldd	r9, Z+1	; 0x01
    a01a:	00 d0       	rcall	.+0      	; 0xa01c <_Z6angle5i+0xcca>
    a01c:	0f 92       	push	r0
    a01e:	4d b6       	in	r4, 0x3d	; 61
    a020:	5e b6       	in	r5, 0x3e	; 62
    a022:	08 94       	sec
    a024:	41 1c       	adc	r4, r1
    a026:	51 1c       	adc	r5, r1
    a028:	88 27       	eor	r24, r24
    a02a:	77 fd       	sbrc	r23, 7
    a02c:	80 95       	com	r24
    a02e:	98 2f       	mov	r25, r24
    a030:	0e 94 ee 79 	call	0xf3dc	; 0xf3dc <__floatsisf>
    a034:	7b 01       	movw	r14, r22
    a036:	8c 01       	movw	r16, r24
    a038:	ce 01       	movw	r24, r28
    a03a:	68 e2       	ldi	r22, 0x28	; 40
    a03c:	70 e0       	ldi	r23, 0x00	; 0
    a03e:	0e 94 05 7b 	call	0xf60a	; 0xf60a <__udivmodhi4>
    a042:	80 e0       	ldi	r24, 0x00	; 0
    a044:	90 e0       	ldi	r25, 0x00	; 0
    a046:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    a04a:	5b 01       	movw	r10, r22
    a04c:	6c 01       	movw	r12, r24
    a04e:	96 94       	lsr	r9
    a050:	87 94       	ror	r8
    a052:	96 94       	lsr	r9
    a054:	87 94       	ror	r8
    a056:	96 94       	lsr	r9
    a058:	87 94       	ror	r8
    a05a:	b4 01       	movw	r22, r8
    a05c:	80 e0       	ldi	r24, 0x00	; 0
    a05e:	90 e0       	ldi	r25, 0x00	; 0
    a060:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    a064:	f2 01       	movw	r30, r4
    a066:	60 83       	st	Z, r22
    a068:	71 83       	std	Z+1, r23	; 0x01
    a06a:	82 83       	std	Z+2, r24	; 0x02
    a06c:	93 83       	std	Z+3, r25	; 0x03
    a06e:	c8 01       	movw	r24, r16
    a070:	b7 01       	movw	r22, r14
    a072:	20 e0       	ldi	r18, 0x00	; 0
    a074:	30 e0       	ldi	r19, 0x00	; 0
    a076:	a9 01       	movw	r20, r18
    a078:	0f 2e       	mov	r0, r31
    a07a:	f0 e0       	ldi	r31, 0x00	; 0
    a07c:	ef 2e       	mov	r14, r31
    a07e:	f0 e0       	ldi	r31, 0x00	; 0
    a080:	ff 2e       	mov	r15, r31
    a082:	f4 e3       	ldi	r31, 0x34	; 52
    a084:	0f 2f       	mov	r16, r31
    a086:	f3 e4       	ldi	r31, 0x43	; 67
    a088:	1f 2f       	mov	r17, r31
    a08a:	f0 2d       	mov	r31, r0
    a08c:	0e 94 a0 08 	call	0x1140	; 0x1140 <_Z3mapddddd>
    a090:	0f 90       	pop	r0
    a092:	0f 90       	pop	r0
    a094:	0f 90       	pop	r0
    a096:	0f 90       	pop	r0
        OCR4B=ICR4-vAl;
    a098:	c0 91 a6 00 	lds	r28, 0x00A6
    a09c:	d0 91 a7 00 	lds	r29, 0x00A7
      case 6:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
        OCR4A=ICR4-vAl;
        break;
      case 7:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    a0a0:	0e 94 bb 79 	call	0xf376	; 0xf376 <__fixsfsi>
        OCR4B=ICR4-vAl;
    a0a4:	c6 1b       	sub	r28, r22
    a0a6:	d7 0b       	sbc	r29, r23
    a0a8:	d0 93 ab 00 	sts	0x00AB, r29
    a0ac:	c0 93 aa 00 	sts	0x00AA, r28
    a0b0:	47 c1       	rjmp	.+654    	; 0xa340 <_Z6angle5i+0xfee>
        break; 
      case 8:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    a0b2:	e6 e8       	ldi	r30, 0x86	; 134
    a0b4:	f0 e0       	ldi	r31, 0x00	; 0
    a0b6:	c0 81       	ld	r28, Z
    a0b8:	d1 81       	ldd	r29, Z+1	; 0x01
    a0ba:	80 80       	ld	r8, Z
    a0bc:	91 80       	ldd	r9, Z+1	; 0x01
    a0be:	00 d0       	rcall	.+0      	; 0xa0c0 <_Z6angle5i+0xd6e>
    a0c0:	0f 92       	push	r0
    a0c2:	4d b6       	in	r4, 0x3d	; 61
    a0c4:	5e b6       	in	r5, 0x3e	; 62
    a0c6:	08 94       	sec
    a0c8:	41 1c       	adc	r4, r1
    a0ca:	51 1c       	adc	r5, r1
    a0cc:	88 27       	eor	r24, r24
    a0ce:	77 fd       	sbrc	r23, 7
    a0d0:	80 95       	com	r24
    a0d2:	98 2f       	mov	r25, r24
    a0d4:	0e 94 ee 79 	call	0xf3dc	; 0xf3dc <__floatsisf>
    a0d8:	7b 01       	movw	r14, r22
    a0da:	8c 01       	movw	r16, r24
    a0dc:	ce 01       	movw	r24, r28
    a0de:	68 e2       	ldi	r22, 0x28	; 40
    a0e0:	70 e0       	ldi	r23, 0x00	; 0
    a0e2:	0e 94 05 7b 	call	0xf60a	; 0xf60a <__udivmodhi4>
    a0e6:	80 e0       	ldi	r24, 0x00	; 0
    a0e8:	90 e0       	ldi	r25, 0x00	; 0
    a0ea:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    a0ee:	5b 01       	movw	r10, r22
    a0f0:	6c 01       	movw	r12, r24
    a0f2:	96 94       	lsr	r9
    a0f4:	87 94       	ror	r8
    a0f6:	96 94       	lsr	r9
    a0f8:	87 94       	ror	r8
    a0fa:	96 94       	lsr	r9
    a0fc:	87 94       	ror	r8
    a0fe:	b4 01       	movw	r22, r8
    a100:	80 e0       	ldi	r24, 0x00	; 0
    a102:	90 e0       	ldi	r25, 0x00	; 0
    a104:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    a108:	f2 01       	movw	r30, r4
    a10a:	60 83       	st	Z, r22
    a10c:	71 83       	std	Z+1, r23	; 0x01
    a10e:	82 83       	std	Z+2, r24	; 0x02
    a110:	93 83       	std	Z+3, r25	; 0x03
    a112:	c8 01       	movw	r24, r16
    a114:	b7 01       	movw	r22, r14
    a116:	20 e0       	ldi	r18, 0x00	; 0
    a118:	30 e0       	ldi	r19, 0x00	; 0
    a11a:	a9 01       	movw	r20, r18
    a11c:	0f 2e       	mov	r0, r31
    a11e:	f0 e0       	ldi	r31, 0x00	; 0
    a120:	ef 2e       	mov	r14, r31
    a122:	f0 e0       	ldi	r31, 0x00	; 0
    a124:	ff 2e       	mov	r15, r31
    a126:	f4 e3       	ldi	r31, 0x34	; 52
    a128:	0f 2f       	mov	r16, r31
    a12a:	f3 e4       	ldi	r31, 0x43	; 67
    a12c:	1f 2f       	mov	r17, r31
    a12e:	f0 2d       	mov	r31, r0
    a130:	0e 94 a0 08 	call	0x1140	; 0x1140 <_Z3mapddddd>
    a134:	0f 90       	pop	r0
    a136:	0f 90       	pop	r0
    a138:	0f 90       	pop	r0
    a13a:	0f 90       	pop	r0
        OCR4C=ICR4-vAl;
    a13c:	c0 91 a6 00 	lds	r28, 0x00A6
    a140:	d0 91 a7 00 	lds	r29, 0x00A7
      case 7:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
        OCR4B=ICR4-vAl;
        break; 
      case 8:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    a144:	0e 94 bb 79 	call	0xf376	; 0xf376 <__fixsfsi>
        OCR4C=ICR4-vAl;
    a148:	c6 1b       	sub	r28, r22
    a14a:	d7 0b       	sbc	r29, r23
    a14c:	d0 93 ad 00 	sts	0x00AD, r29
    a150:	c0 93 ac 00 	sts	0x00AC, r28
    a154:	f5 c0       	rjmp	.+490    	; 0xa340 <_Z6angle5i+0xfee>
        break;
      case 46:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    a156:	e6 e8       	ldi	r30, 0x86	; 134
    a158:	f0 e0       	ldi	r31, 0x00	; 0
    a15a:	c0 81       	ld	r28, Z
    a15c:	d1 81       	ldd	r29, Z+1	; 0x01
    a15e:	80 80       	ld	r8, Z
    a160:	91 80       	ldd	r9, Z+1	; 0x01
    a162:	00 d0       	rcall	.+0      	; 0xa164 <_Z6angle5i+0xe12>
    a164:	0f 92       	push	r0
    a166:	4d b6       	in	r4, 0x3d	; 61
    a168:	5e b6       	in	r5, 0x3e	; 62
    a16a:	08 94       	sec
    a16c:	41 1c       	adc	r4, r1
    a16e:	51 1c       	adc	r5, r1
    a170:	88 27       	eor	r24, r24
    a172:	77 fd       	sbrc	r23, 7
    a174:	80 95       	com	r24
    a176:	98 2f       	mov	r25, r24
    a178:	0e 94 ee 79 	call	0xf3dc	; 0xf3dc <__floatsisf>
    a17c:	7b 01       	movw	r14, r22
    a17e:	8c 01       	movw	r16, r24
    a180:	ce 01       	movw	r24, r28
    a182:	68 e2       	ldi	r22, 0x28	; 40
    a184:	70 e0       	ldi	r23, 0x00	; 0
    a186:	0e 94 05 7b 	call	0xf60a	; 0xf60a <__udivmodhi4>
    a18a:	80 e0       	ldi	r24, 0x00	; 0
    a18c:	90 e0       	ldi	r25, 0x00	; 0
    a18e:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    a192:	5b 01       	movw	r10, r22
    a194:	6c 01       	movw	r12, r24
    a196:	96 94       	lsr	r9
    a198:	87 94       	ror	r8
    a19a:	96 94       	lsr	r9
    a19c:	87 94       	ror	r8
    a19e:	96 94       	lsr	r9
    a1a0:	87 94       	ror	r8
    a1a2:	b4 01       	movw	r22, r8
    a1a4:	80 e0       	ldi	r24, 0x00	; 0
    a1a6:	90 e0       	ldi	r25, 0x00	; 0
    a1a8:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    a1ac:	f2 01       	movw	r30, r4
    a1ae:	60 83       	st	Z, r22
    a1b0:	71 83       	std	Z+1, r23	; 0x01
    a1b2:	82 83       	std	Z+2, r24	; 0x02
    a1b4:	93 83       	std	Z+3, r25	; 0x03
    a1b6:	c8 01       	movw	r24, r16
    a1b8:	b7 01       	movw	r22, r14
    a1ba:	20 e0       	ldi	r18, 0x00	; 0
    a1bc:	30 e0       	ldi	r19, 0x00	; 0
    a1be:	a9 01       	movw	r20, r18
    a1c0:	0f 2e       	mov	r0, r31
    a1c2:	f0 e0       	ldi	r31, 0x00	; 0
    a1c4:	ef 2e       	mov	r14, r31
    a1c6:	f0 e0       	ldi	r31, 0x00	; 0
    a1c8:	ff 2e       	mov	r15, r31
    a1ca:	f4 e3       	ldi	r31, 0x34	; 52
    a1cc:	0f 2f       	mov	r16, r31
    a1ce:	f3 e4       	ldi	r31, 0x43	; 67
    a1d0:	1f 2f       	mov	r17, r31
    a1d2:	f0 2d       	mov	r31, r0
    a1d4:	0e 94 a0 08 	call	0x1140	; 0x1140 <_Z3mapddddd>
    a1d8:	0f 90       	pop	r0
    a1da:	0f 90       	pop	r0
    a1dc:	0f 90       	pop	r0
    a1de:	0f 90       	pop	r0
        OCR5A=ICR5-vAl;
    a1e0:	c0 91 26 01 	lds	r28, 0x0126
    a1e4:	d0 91 27 01 	lds	r29, 0x0127
      case 8:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
        OCR4C=ICR4-vAl;
        break;
      case 46:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    a1e8:	0e 94 bb 79 	call	0xf376	; 0xf376 <__fixsfsi>
        OCR5A=ICR5-vAl;
    a1ec:	c6 1b       	sub	r28, r22
    a1ee:	d7 0b       	sbc	r29, r23
    a1f0:	d0 93 29 01 	sts	0x0129, r29
    a1f4:	c0 93 28 01 	sts	0x0128, r28
    a1f8:	a3 c0       	rjmp	.+326    	; 0xa340 <_Z6angle5i+0xfee>
        break;
      case 45:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    a1fa:	e6 e8       	ldi	r30, 0x86	; 134
    a1fc:	f0 e0       	ldi	r31, 0x00	; 0
    a1fe:	c0 81       	ld	r28, Z
    a200:	d1 81       	ldd	r29, Z+1	; 0x01
    a202:	80 80       	ld	r8, Z
    a204:	91 80       	ldd	r9, Z+1	; 0x01
    a206:	00 d0       	rcall	.+0      	; 0xa208 <_Z6angle5i+0xeb6>
    a208:	0f 92       	push	r0
    a20a:	4d b6       	in	r4, 0x3d	; 61
    a20c:	5e b6       	in	r5, 0x3e	; 62
    a20e:	08 94       	sec
    a210:	41 1c       	adc	r4, r1
    a212:	51 1c       	adc	r5, r1
    a214:	88 27       	eor	r24, r24
    a216:	77 fd       	sbrc	r23, 7
    a218:	80 95       	com	r24
    a21a:	98 2f       	mov	r25, r24
    a21c:	0e 94 ee 79 	call	0xf3dc	; 0xf3dc <__floatsisf>
    a220:	7b 01       	movw	r14, r22
    a222:	8c 01       	movw	r16, r24
    a224:	ce 01       	movw	r24, r28
    a226:	68 e2       	ldi	r22, 0x28	; 40
    a228:	70 e0       	ldi	r23, 0x00	; 0
    a22a:	0e 94 05 7b 	call	0xf60a	; 0xf60a <__udivmodhi4>
    a22e:	80 e0       	ldi	r24, 0x00	; 0
    a230:	90 e0       	ldi	r25, 0x00	; 0
    a232:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    a236:	5b 01       	movw	r10, r22
    a238:	6c 01       	movw	r12, r24
    a23a:	96 94       	lsr	r9
    a23c:	87 94       	ror	r8
    a23e:	96 94       	lsr	r9
    a240:	87 94       	ror	r8
    a242:	96 94       	lsr	r9
    a244:	87 94       	ror	r8
    a246:	b4 01       	movw	r22, r8
    a248:	80 e0       	ldi	r24, 0x00	; 0
    a24a:	90 e0       	ldi	r25, 0x00	; 0
    a24c:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    a250:	f2 01       	movw	r30, r4
    a252:	60 83       	st	Z, r22
    a254:	71 83       	std	Z+1, r23	; 0x01
    a256:	82 83       	std	Z+2, r24	; 0x02
    a258:	93 83       	std	Z+3, r25	; 0x03
    a25a:	c8 01       	movw	r24, r16
    a25c:	b7 01       	movw	r22, r14
    a25e:	20 e0       	ldi	r18, 0x00	; 0
    a260:	30 e0       	ldi	r19, 0x00	; 0
    a262:	a9 01       	movw	r20, r18
    a264:	0f 2e       	mov	r0, r31
    a266:	f0 e0       	ldi	r31, 0x00	; 0
    a268:	ef 2e       	mov	r14, r31
    a26a:	f0 e0       	ldi	r31, 0x00	; 0
    a26c:	ff 2e       	mov	r15, r31
    a26e:	f4 e3       	ldi	r31, 0x34	; 52
    a270:	0f 2f       	mov	r16, r31
    a272:	f3 e4       	ldi	r31, 0x43	; 67
    a274:	1f 2f       	mov	r17, r31
    a276:	f0 2d       	mov	r31, r0
    a278:	0e 94 a0 08 	call	0x1140	; 0x1140 <_Z3mapddddd>
    a27c:	0f 90       	pop	r0
    a27e:	0f 90       	pop	r0
    a280:	0f 90       	pop	r0
    a282:	0f 90       	pop	r0
        OCR5B=ICR5-vAl;
    a284:	c0 91 26 01 	lds	r28, 0x0126
    a288:	d0 91 27 01 	lds	r29, 0x0127
      case 46:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
        OCR5A=ICR5-vAl;
        break;
      case 45:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    a28c:	0e 94 bb 79 	call	0xf376	; 0xf376 <__fixsfsi>
        OCR5B=ICR5-vAl;
    a290:	c6 1b       	sub	r28, r22
    a292:	d7 0b       	sbc	r29, r23
    a294:	d0 93 2b 01 	sts	0x012B, r29
    a298:	c0 93 2a 01 	sts	0x012A, r28
    a29c:	51 c0       	rjmp	.+162    	; 0xa340 <_Z6angle5i+0xfee>
        break;
      case 44:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    a29e:	e6 e8       	ldi	r30, 0x86	; 134
    a2a0:	f0 e0       	ldi	r31, 0x00	; 0
    a2a2:	c0 81       	ld	r28, Z
    a2a4:	d1 81       	ldd	r29, Z+1	; 0x01
    a2a6:	80 80       	ld	r8, Z
    a2a8:	91 80       	ldd	r9, Z+1	; 0x01
    a2aa:	00 d0       	rcall	.+0      	; 0xa2ac <_Z6angle5i+0xf5a>
    a2ac:	0f 92       	push	r0
    a2ae:	4d b6       	in	r4, 0x3d	; 61
    a2b0:	5e b6       	in	r5, 0x3e	; 62
    a2b2:	08 94       	sec
    a2b4:	41 1c       	adc	r4, r1
    a2b6:	51 1c       	adc	r5, r1
    a2b8:	88 27       	eor	r24, r24
    a2ba:	77 fd       	sbrc	r23, 7
    a2bc:	80 95       	com	r24
    a2be:	98 2f       	mov	r25, r24
    a2c0:	0e 94 ee 79 	call	0xf3dc	; 0xf3dc <__floatsisf>
    a2c4:	7b 01       	movw	r14, r22
    a2c6:	8c 01       	movw	r16, r24
    a2c8:	ce 01       	movw	r24, r28
    a2ca:	68 e2       	ldi	r22, 0x28	; 40
    a2cc:	70 e0       	ldi	r23, 0x00	; 0
    a2ce:	0e 94 05 7b 	call	0xf60a	; 0xf60a <__udivmodhi4>
    a2d2:	80 e0       	ldi	r24, 0x00	; 0
    a2d4:	90 e0       	ldi	r25, 0x00	; 0
    a2d6:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    a2da:	5b 01       	movw	r10, r22
    a2dc:	6c 01       	movw	r12, r24
    a2de:	96 94       	lsr	r9
    a2e0:	87 94       	ror	r8
    a2e2:	96 94       	lsr	r9
    a2e4:	87 94       	ror	r8
    a2e6:	96 94       	lsr	r9
    a2e8:	87 94       	ror	r8
    a2ea:	b4 01       	movw	r22, r8
    a2ec:	80 e0       	ldi	r24, 0x00	; 0
    a2ee:	90 e0       	ldi	r25, 0x00	; 0
    a2f0:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    a2f4:	f2 01       	movw	r30, r4
    a2f6:	60 83       	st	Z, r22
    a2f8:	71 83       	std	Z+1, r23	; 0x01
    a2fa:	82 83       	std	Z+2, r24	; 0x02
    a2fc:	93 83       	std	Z+3, r25	; 0x03
    a2fe:	c8 01       	movw	r24, r16
    a300:	b7 01       	movw	r22, r14
    a302:	20 e0       	ldi	r18, 0x00	; 0
    a304:	30 e0       	ldi	r19, 0x00	; 0
    a306:	a9 01       	movw	r20, r18
    a308:	0f 2e       	mov	r0, r31
    a30a:	f0 e0       	ldi	r31, 0x00	; 0
    a30c:	ef 2e       	mov	r14, r31
    a30e:	f0 e0       	ldi	r31, 0x00	; 0
    a310:	ff 2e       	mov	r15, r31
    a312:	f4 e3       	ldi	r31, 0x34	; 52
    a314:	0f 2f       	mov	r16, r31
    a316:	f3 e4       	ldi	r31, 0x43	; 67
    a318:	1f 2f       	mov	r17, r31
    a31a:	f0 2d       	mov	r31, r0
    a31c:	0e 94 a0 08 	call	0x1140	; 0x1140 <_Z3mapddddd>
    a320:	0f 90       	pop	r0
    a322:	0f 90       	pop	r0
    a324:	0f 90       	pop	r0
    a326:	0f 90       	pop	r0
        OCR5C=ICR5-vAl;
    a328:	c0 91 26 01 	lds	r28, 0x0126
    a32c:	d0 91 27 01 	lds	r29, 0x0127
      case 45:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
        OCR5B=ICR5-vAl;
        break;
      case 44:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    a330:	0e 94 bb 79 	call	0xf376	; 0xf376 <__fixsfsi>
        OCR5C=ICR5-vAl;
    a334:	c6 1b       	sub	r28, r22
    a336:	d7 0b       	sbc	r29, r23
    a338:	d0 93 2d 01 	sts	0x012D, r29
    a33c:	c0 93 2c 01 	sts	0x012C, r28
		r.write(z);
    a340:	60 91 ce 02 	lds	r22, 0x02CE
    a344:	70 91 cf 02 	lds	r23, 0x02CF
     }
  }

  void write(int vAl)           //PIN=servo pin no. on mega,vAl=angle F_CPU for the servo at pin
  {
    switch(pIn)
    a348:	80 91 d6 02 	lds	r24, 0x02D6
    a34c:	88 30       	cpi	r24, 0x08	; 8
    a34e:	09 f4       	brne	.+2      	; 0xa352 <_Z6angle5i+0x1000>
    a350:	63 c2       	rjmp	.+1222   	; 0xa818 <_Z6angle5i+0x14c6>
    a352:	89 30       	cpi	r24, 0x09	; 9
    a354:	98 f4       	brcc	.+38     	; 0xa37c <_Z6angle5i+0x102a>
    a356:	85 30       	cpi	r24, 0x05	; 5
    a358:	09 f4       	brne	.+2      	; 0xa35c <_Z6angle5i+0x100a>
    a35a:	c4 c0       	rjmp	.+392    	; 0xa4e4 <_Z6angle5i+0x1192>
    a35c:	86 30       	cpi	r24, 0x06	; 6
    a35e:	38 f4       	brcc	.+14     	; 0xa36e <_Z6angle5i+0x101c>
    a360:	82 30       	cpi	r24, 0x02	; 2
    a362:	09 f4       	brne	.+2      	; 0xa366 <_Z6angle5i+0x1014>
    a364:	11 c1       	rjmp	.+546    	; 0xa588 <_Z6angle5i+0x1236>
    a366:	83 30       	cpi	r24, 0x03	; 3
    a368:	09 f0       	breq	.+2      	; 0xa36c <_Z6angle5i+0x101a>
    a36a:	9d c3       	rjmp	.+1850   	; 0xaaa6 <_Z6angle5i+0x1754>
    a36c:	5f c1       	rjmp	.+702    	; 0xa62c <_Z6angle5i+0x12da>
    a36e:	86 30       	cpi	r24, 0x06	; 6
    a370:	09 f4       	brne	.+2      	; 0xa374 <_Z6angle5i+0x1022>
    a372:	ae c1       	rjmp	.+860    	; 0xa6d0 <_Z6angle5i+0x137e>
    a374:	87 30       	cpi	r24, 0x07	; 7
    a376:	09 f0       	breq	.+2      	; 0xa37a <_Z6angle5i+0x1028>
    a378:	96 c3       	rjmp	.+1836   	; 0xaaa6 <_Z6angle5i+0x1754>
    a37a:	fc c1       	rjmp	.+1016   	; 0xa774 <_Z6angle5i+0x1422>
    a37c:	8c 32       	cpi	r24, 0x2C	; 44
    a37e:	09 f4       	brne	.+2      	; 0xa382 <_Z6angle5i+0x1030>
    a380:	41 c3       	rjmp	.+1666   	; 0xaa04 <_Z6angle5i+0x16b2>
    a382:	8d 32       	cpi	r24, 0x2D	; 45
    a384:	30 f4       	brcc	.+12     	; 0xa392 <_Z6angle5i+0x1040>
    a386:	8b 30       	cpi	r24, 0x0B	; 11
    a388:	59 f0       	breq	.+22     	; 0xa3a0 <_Z6angle5i+0x104e>
    a38a:	8c 30       	cpi	r24, 0x0C	; 12
    a38c:	09 f0       	breq	.+2      	; 0xa390 <_Z6angle5i+0x103e>
    a38e:	8b c3       	rjmp	.+1814   	; 0xaaa6 <_Z6angle5i+0x1754>
    a390:	58 c0       	rjmp	.+176    	; 0xa442 <_Z6angle5i+0x10f0>
    a392:	8d 32       	cpi	r24, 0x2D	; 45
    a394:	09 f4       	brne	.+2      	; 0xa398 <_Z6angle5i+0x1046>
    a396:	e4 c2       	rjmp	.+1480   	; 0xa960 <_Z6angle5i+0x160e>
    a398:	8e 32       	cpi	r24, 0x2E	; 46
    a39a:	09 f0       	breq	.+2      	; 0xa39e <_Z6angle5i+0x104c>
    a39c:	84 c3       	rjmp	.+1800   	; 0xaaa6 <_Z6angle5i+0x1754>
    a39e:	8e c2       	rjmp	.+1308   	; 0xa8bc <_Z6angle5i+0x156a>
    {
     case 11:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    a3a0:	c6 e8       	ldi	r28, 0x86	; 134
    a3a2:	d0 e0       	ldi	r29, 0x00	; 0
    a3a4:	08 81       	ld	r16, Y
    a3a6:	19 81       	ldd	r17, Y+1	; 0x01
    a3a8:	e8 80       	ld	r14, Y
    a3aa:	f9 80       	ldd	r15, Y+1	; 0x01
    a3ac:	00 d0       	rcall	.+0      	; 0xa3ae <_Z6angle5i+0x105c>
    a3ae:	0f 92       	push	r0
    a3b0:	8d b6       	in	r8, 0x3d	; 61
    a3b2:	9e b6       	in	r9, 0x3e	; 62
    a3b4:	08 94       	sec
    a3b6:	81 1c       	adc	r8, r1
    a3b8:	91 1c       	adc	r9, r1
    a3ba:	88 27       	eor	r24, r24
    a3bc:	77 fd       	sbrc	r23, 7
    a3be:	80 95       	com	r24
    a3c0:	98 2f       	mov	r25, r24
    a3c2:	0e 94 ee 79 	call	0xf3dc	; 0xf3dc <__floatsisf>
    a3c6:	2b 01       	movw	r4, r22
    a3c8:	3c 01       	movw	r6, r24
    a3ca:	c8 01       	movw	r24, r16
    a3cc:	68 e2       	ldi	r22, 0x28	; 40
    a3ce:	70 e0       	ldi	r23, 0x00	; 0
    a3d0:	0e 94 05 7b 	call	0xf60a	; 0xf60a <__udivmodhi4>
    a3d4:	80 e0       	ldi	r24, 0x00	; 0
    a3d6:	90 e0       	ldi	r25, 0x00	; 0
    a3d8:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    a3dc:	5b 01       	movw	r10, r22
    a3de:	6c 01       	movw	r12, r24
    a3e0:	f6 94       	lsr	r15
    a3e2:	e7 94       	ror	r14
    a3e4:	f6 94       	lsr	r15
    a3e6:	e7 94       	ror	r14
    a3e8:	f6 94       	lsr	r15
    a3ea:	e7 94       	ror	r14
    a3ec:	b7 01       	movw	r22, r14
    a3ee:	80 e0       	ldi	r24, 0x00	; 0
    a3f0:	90 e0       	ldi	r25, 0x00	; 0
    a3f2:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    a3f6:	f4 01       	movw	r30, r8
    a3f8:	60 83       	st	Z, r22
    a3fa:	71 83       	std	Z+1, r23	; 0x01
    a3fc:	82 83       	std	Z+2, r24	; 0x02
    a3fe:	93 83       	std	Z+3, r25	; 0x03
    a400:	c3 01       	movw	r24, r6
    a402:	b2 01       	movw	r22, r4
    a404:	20 e0       	ldi	r18, 0x00	; 0
    a406:	30 e0       	ldi	r19, 0x00	; 0
    a408:	a9 01       	movw	r20, r18
    a40a:	0f 2e       	mov	r0, r31
    a40c:	f0 e0       	ldi	r31, 0x00	; 0
    a40e:	ef 2e       	mov	r14, r31
    a410:	f0 e0       	ldi	r31, 0x00	; 0
    a412:	ff 2e       	mov	r15, r31
    a414:	f4 e3       	ldi	r31, 0x34	; 52
    a416:	0f 2f       	mov	r16, r31
    a418:	f3 e4       	ldi	r31, 0x43	; 67
    a41a:	1f 2f       	mov	r17, r31
    a41c:	f0 2d       	mov	r31, r0
    a41e:	0e 94 a0 08 	call	0x1140	; 0x1140 <_Z3mapddddd>
    a422:	0f 90       	pop	r0
    a424:	0f 90       	pop	r0
    a426:	0f 90       	pop	r0
    a428:	0f 90       	pop	r0
        OCR1A=ICR1-vAl;
    a42a:	09 90       	ld	r0, Y+
    a42c:	d8 81       	ld	r29, Y
    a42e:	c0 2d       	mov	r28, r0
  void write(int vAl)           //PIN=servo pin no. on mega,vAl=angle F_CPU for the servo at pin
  {
    switch(pIn)
    {
     case 11:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    a430:	0e 94 bb 79 	call	0xf376	; 0xf376 <__fixsfsi>
        OCR1A=ICR1-vAl;
    a434:	c6 1b       	sub	r28, r22
    a436:	d7 0b       	sbc	r29, r23
    a438:	d0 93 89 00 	sts	0x0089, r29
    a43c:	c0 93 88 00 	sts	0x0088, r28
    a440:	32 c3       	rjmp	.+1636   	; 0xaaa6 <_Z6angle5i+0x1754>
        break;
      case 12:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    a442:	c6 e8       	ldi	r28, 0x86	; 134
    a444:	d0 e0       	ldi	r29, 0x00	; 0
    a446:	08 81       	ld	r16, Y
    a448:	19 81       	ldd	r17, Y+1	; 0x01
    a44a:	e8 80       	ld	r14, Y
    a44c:	f9 80       	ldd	r15, Y+1	; 0x01
    a44e:	00 d0       	rcall	.+0      	; 0xa450 <_Z6angle5i+0x10fe>
    a450:	0f 92       	push	r0
    a452:	8d b6       	in	r8, 0x3d	; 61
    a454:	9e b6       	in	r9, 0x3e	; 62
    a456:	08 94       	sec
    a458:	81 1c       	adc	r8, r1
    a45a:	91 1c       	adc	r9, r1
    a45c:	88 27       	eor	r24, r24
    a45e:	77 fd       	sbrc	r23, 7
    a460:	80 95       	com	r24
    a462:	98 2f       	mov	r25, r24
    a464:	0e 94 ee 79 	call	0xf3dc	; 0xf3dc <__floatsisf>
    a468:	2b 01       	movw	r4, r22
    a46a:	3c 01       	movw	r6, r24
    a46c:	c8 01       	movw	r24, r16
    a46e:	68 e2       	ldi	r22, 0x28	; 40
    a470:	70 e0       	ldi	r23, 0x00	; 0
    a472:	0e 94 05 7b 	call	0xf60a	; 0xf60a <__udivmodhi4>
    a476:	80 e0       	ldi	r24, 0x00	; 0
    a478:	90 e0       	ldi	r25, 0x00	; 0
    a47a:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    a47e:	5b 01       	movw	r10, r22
    a480:	6c 01       	movw	r12, r24
    a482:	f6 94       	lsr	r15
    a484:	e7 94       	ror	r14
    a486:	f6 94       	lsr	r15
    a488:	e7 94       	ror	r14
    a48a:	f6 94       	lsr	r15
    a48c:	e7 94       	ror	r14
    a48e:	b7 01       	movw	r22, r14
    a490:	80 e0       	ldi	r24, 0x00	; 0
    a492:	90 e0       	ldi	r25, 0x00	; 0
    a494:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    a498:	f4 01       	movw	r30, r8
    a49a:	60 83       	st	Z, r22
    a49c:	71 83       	std	Z+1, r23	; 0x01
    a49e:	82 83       	std	Z+2, r24	; 0x02
    a4a0:	93 83       	std	Z+3, r25	; 0x03
    a4a2:	c3 01       	movw	r24, r6
    a4a4:	b2 01       	movw	r22, r4
    a4a6:	20 e0       	ldi	r18, 0x00	; 0
    a4a8:	30 e0       	ldi	r19, 0x00	; 0
    a4aa:	a9 01       	movw	r20, r18
    a4ac:	0f 2e       	mov	r0, r31
    a4ae:	f0 e0       	ldi	r31, 0x00	; 0
    a4b0:	ef 2e       	mov	r14, r31
    a4b2:	f0 e0       	ldi	r31, 0x00	; 0
    a4b4:	ff 2e       	mov	r15, r31
    a4b6:	f4 e3       	ldi	r31, 0x34	; 52
    a4b8:	0f 2f       	mov	r16, r31
    a4ba:	f3 e4       	ldi	r31, 0x43	; 67
    a4bc:	1f 2f       	mov	r17, r31
    a4be:	f0 2d       	mov	r31, r0
    a4c0:	0e 94 a0 08 	call	0x1140	; 0x1140 <_Z3mapddddd>
    a4c4:	0f 90       	pop	r0
    a4c6:	0f 90       	pop	r0
    a4c8:	0f 90       	pop	r0
    a4ca:	0f 90       	pop	r0
        OCR1B=ICR1-vAl;
    a4cc:	09 90       	ld	r0, Y+
    a4ce:	d8 81       	ld	r29, Y
    a4d0:	c0 2d       	mov	r28, r0
     case 11:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
        OCR1A=ICR1-vAl;
        break;
      case 12:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    a4d2:	0e 94 bb 79 	call	0xf376	; 0xf376 <__fixsfsi>
        OCR1B=ICR1-vAl;
    a4d6:	c6 1b       	sub	r28, r22
    a4d8:	d7 0b       	sbc	r29, r23
    a4da:	d0 93 8b 00 	sts	0x008B, r29
    a4de:	c0 93 8a 00 	sts	0x008A, r28
    a4e2:	e1 c2       	rjmp	.+1474   	; 0xaaa6 <_Z6angle5i+0x1754>
        break;
      case 5:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    a4e4:	e6 e8       	ldi	r30, 0x86	; 134
    a4e6:	f0 e0       	ldi	r31, 0x00	; 0
    a4e8:	c0 81       	ld	r28, Z
    a4ea:	d1 81       	ldd	r29, Z+1	; 0x01
    a4ec:	80 80       	ld	r8, Z
    a4ee:	91 80       	ldd	r9, Z+1	; 0x01
    a4f0:	00 d0       	rcall	.+0      	; 0xa4f2 <_Z6angle5i+0x11a0>
    a4f2:	0f 92       	push	r0
    a4f4:	4d b6       	in	r4, 0x3d	; 61
    a4f6:	5e b6       	in	r5, 0x3e	; 62
    a4f8:	08 94       	sec
    a4fa:	41 1c       	adc	r4, r1
    a4fc:	51 1c       	adc	r5, r1
    a4fe:	88 27       	eor	r24, r24
    a500:	77 fd       	sbrc	r23, 7
    a502:	80 95       	com	r24
    a504:	98 2f       	mov	r25, r24
    a506:	0e 94 ee 79 	call	0xf3dc	; 0xf3dc <__floatsisf>
    a50a:	7b 01       	movw	r14, r22
    a50c:	8c 01       	movw	r16, r24
    a50e:	ce 01       	movw	r24, r28
    a510:	68 e2       	ldi	r22, 0x28	; 40
    a512:	70 e0       	ldi	r23, 0x00	; 0
    a514:	0e 94 05 7b 	call	0xf60a	; 0xf60a <__udivmodhi4>
    a518:	80 e0       	ldi	r24, 0x00	; 0
    a51a:	90 e0       	ldi	r25, 0x00	; 0
    a51c:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    a520:	5b 01       	movw	r10, r22
    a522:	6c 01       	movw	r12, r24
    a524:	96 94       	lsr	r9
    a526:	87 94       	ror	r8
    a528:	96 94       	lsr	r9
    a52a:	87 94       	ror	r8
    a52c:	96 94       	lsr	r9
    a52e:	87 94       	ror	r8
    a530:	b4 01       	movw	r22, r8
    a532:	80 e0       	ldi	r24, 0x00	; 0
    a534:	90 e0       	ldi	r25, 0x00	; 0
    a536:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    a53a:	f2 01       	movw	r30, r4
    a53c:	60 83       	st	Z, r22
    a53e:	71 83       	std	Z+1, r23	; 0x01
    a540:	82 83       	std	Z+2, r24	; 0x02
    a542:	93 83       	std	Z+3, r25	; 0x03
    a544:	c8 01       	movw	r24, r16
    a546:	b7 01       	movw	r22, r14
    a548:	20 e0       	ldi	r18, 0x00	; 0
    a54a:	30 e0       	ldi	r19, 0x00	; 0
    a54c:	a9 01       	movw	r20, r18
    a54e:	0f 2e       	mov	r0, r31
    a550:	f0 e0       	ldi	r31, 0x00	; 0
    a552:	ef 2e       	mov	r14, r31
    a554:	f0 e0       	ldi	r31, 0x00	; 0
    a556:	ff 2e       	mov	r15, r31
    a558:	f4 e3       	ldi	r31, 0x34	; 52
    a55a:	0f 2f       	mov	r16, r31
    a55c:	f3 e4       	ldi	r31, 0x43	; 67
    a55e:	1f 2f       	mov	r17, r31
    a560:	f0 2d       	mov	r31, r0
    a562:	0e 94 a0 08 	call	0x1140	; 0x1140 <_Z3mapddddd>
    a566:	0f 90       	pop	r0
    a568:	0f 90       	pop	r0
    a56a:	0f 90       	pop	r0
    a56c:	0f 90       	pop	r0
        OCR3A=ICR3-vAl;
    a56e:	c0 91 96 00 	lds	r28, 0x0096
    a572:	d0 91 97 00 	lds	r29, 0x0097
      case 12:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
        OCR1B=ICR1-vAl;
        break;
      case 5:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    a576:	0e 94 bb 79 	call	0xf376	; 0xf376 <__fixsfsi>
        OCR3A=ICR3-vAl;
    a57a:	c6 1b       	sub	r28, r22
    a57c:	d7 0b       	sbc	r29, r23
    a57e:	d0 93 99 00 	sts	0x0099, r29
    a582:	c0 93 98 00 	sts	0x0098, r28
    a586:	8f c2       	rjmp	.+1310   	; 0xaaa6 <_Z6angle5i+0x1754>
        break;
      case 2:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    a588:	e6 e8       	ldi	r30, 0x86	; 134
    a58a:	f0 e0       	ldi	r31, 0x00	; 0
    a58c:	c0 81       	ld	r28, Z
    a58e:	d1 81       	ldd	r29, Z+1	; 0x01
    a590:	80 80       	ld	r8, Z
    a592:	91 80       	ldd	r9, Z+1	; 0x01
    a594:	00 d0       	rcall	.+0      	; 0xa596 <_Z6angle5i+0x1244>
    a596:	0f 92       	push	r0
    a598:	4d b6       	in	r4, 0x3d	; 61
    a59a:	5e b6       	in	r5, 0x3e	; 62
    a59c:	08 94       	sec
    a59e:	41 1c       	adc	r4, r1
    a5a0:	51 1c       	adc	r5, r1
    a5a2:	88 27       	eor	r24, r24
    a5a4:	77 fd       	sbrc	r23, 7
    a5a6:	80 95       	com	r24
    a5a8:	98 2f       	mov	r25, r24
    a5aa:	0e 94 ee 79 	call	0xf3dc	; 0xf3dc <__floatsisf>
    a5ae:	7b 01       	movw	r14, r22
    a5b0:	8c 01       	movw	r16, r24
    a5b2:	ce 01       	movw	r24, r28
    a5b4:	68 e2       	ldi	r22, 0x28	; 40
    a5b6:	70 e0       	ldi	r23, 0x00	; 0
    a5b8:	0e 94 05 7b 	call	0xf60a	; 0xf60a <__udivmodhi4>
    a5bc:	80 e0       	ldi	r24, 0x00	; 0
    a5be:	90 e0       	ldi	r25, 0x00	; 0
    a5c0:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    a5c4:	5b 01       	movw	r10, r22
    a5c6:	6c 01       	movw	r12, r24
    a5c8:	96 94       	lsr	r9
    a5ca:	87 94       	ror	r8
    a5cc:	96 94       	lsr	r9
    a5ce:	87 94       	ror	r8
    a5d0:	96 94       	lsr	r9
    a5d2:	87 94       	ror	r8
    a5d4:	b4 01       	movw	r22, r8
    a5d6:	80 e0       	ldi	r24, 0x00	; 0
    a5d8:	90 e0       	ldi	r25, 0x00	; 0
    a5da:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    a5de:	f2 01       	movw	r30, r4
    a5e0:	60 83       	st	Z, r22
    a5e2:	71 83       	std	Z+1, r23	; 0x01
    a5e4:	82 83       	std	Z+2, r24	; 0x02
    a5e6:	93 83       	std	Z+3, r25	; 0x03
    a5e8:	c8 01       	movw	r24, r16
    a5ea:	b7 01       	movw	r22, r14
    a5ec:	20 e0       	ldi	r18, 0x00	; 0
    a5ee:	30 e0       	ldi	r19, 0x00	; 0
    a5f0:	a9 01       	movw	r20, r18
    a5f2:	0f 2e       	mov	r0, r31
    a5f4:	f0 e0       	ldi	r31, 0x00	; 0
    a5f6:	ef 2e       	mov	r14, r31
    a5f8:	f0 e0       	ldi	r31, 0x00	; 0
    a5fa:	ff 2e       	mov	r15, r31
    a5fc:	f4 e3       	ldi	r31, 0x34	; 52
    a5fe:	0f 2f       	mov	r16, r31
    a600:	f3 e4       	ldi	r31, 0x43	; 67
    a602:	1f 2f       	mov	r17, r31
    a604:	f0 2d       	mov	r31, r0
    a606:	0e 94 a0 08 	call	0x1140	; 0x1140 <_Z3mapddddd>
    a60a:	0f 90       	pop	r0
    a60c:	0f 90       	pop	r0
    a60e:	0f 90       	pop	r0
    a610:	0f 90       	pop	r0
        OCR3B=ICR3-vAl;
    a612:	c0 91 96 00 	lds	r28, 0x0096
    a616:	d0 91 97 00 	lds	r29, 0x0097
      case 5:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
        OCR3A=ICR3-vAl;
        break;
      case 2:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    a61a:	0e 94 bb 79 	call	0xf376	; 0xf376 <__fixsfsi>
        OCR3B=ICR3-vAl;
    a61e:	c6 1b       	sub	r28, r22
    a620:	d7 0b       	sbc	r29, r23
    a622:	d0 93 9b 00 	sts	0x009B, r29
    a626:	c0 93 9a 00 	sts	0x009A, r28
    a62a:	3d c2       	rjmp	.+1146   	; 0xaaa6 <_Z6angle5i+0x1754>
        break;
      case 3:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    a62c:	e6 e8       	ldi	r30, 0x86	; 134
    a62e:	f0 e0       	ldi	r31, 0x00	; 0
    a630:	c0 81       	ld	r28, Z
    a632:	d1 81       	ldd	r29, Z+1	; 0x01
    a634:	80 80       	ld	r8, Z
    a636:	91 80       	ldd	r9, Z+1	; 0x01
    a638:	00 d0       	rcall	.+0      	; 0xa63a <_Z6angle5i+0x12e8>
    a63a:	0f 92       	push	r0
    a63c:	4d b6       	in	r4, 0x3d	; 61
    a63e:	5e b6       	in	r5, 0x3e	; 62
    a640:	08 94       	sec
    a642:	41 1c       	adc	r4, r1
    a644:	51 1c       	adc	r5, r1
    a646:	88 27       	eor	r24, r24
    a648:	77 fd       	sbrc	r23, 7
    a64a:	80 95       	com	r24
    a64c:	98 2f       	mov	r25, r24
    a64e:	0e 94 ee 79 	call	0xf3dc	; 0xf3dc <__floatsisf>
    a652:	7b 01       	movw	r14, r22
    a654:	8c 01       	movw	r16, r24
    a656:	ce 01       	movw	r24, r28
    a658:	68 e2       	ldi	r22, 0x28	; 40
    a65a:	70 e0       	ldi	r23, 0x00	; 0
    a65c:	0e 94 05 7b 	call	0xf60a	; 0xf60a <__udivmodhi4>
    a660:	80 e0       	ldi	r24, 0x00	; 0
    a662:	90 e0       	ldi	r25, 0x00	; 0
    a664:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    a668:	5b 01       	movw	r10, r22
    a66a:	6c 01       	movw	r12, r24
    a66c:	96 94       	lsr	r9
    a66e:	87 94       	ror	r8
    a670:	96 94       	lsr	r9
    a672:	87 94       	ror	r8
    a674:	96 94       	lsr	r9
    a676:	87 94       	ror	r8
    a678:	b4 01       	movw	r22, r8
    a67a:	80 e0       	ldi	r24, 0x00	; 0
    a67c:	90 e0       	ldi	r25, 0x00	; 0
    a67e:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    a682:	f2 01       	movw	r30, r4
    a684:	60 83       	st	Z, r22
    a686:	71 83       	std	Z+1, r23	; 0x01
    a688:	82 83       	std	Z+2, r24	; 0x02
    a68a:	93 83       	std	Z+3, r25	; 0x03
    a68c:	c8 01       	movw	r24, r16
    a68e:	b7 01       	movw	r22, r14
    a690:	20 e0       	ldi	r18, 0x00	; 0
    a692:	30 e0       	ldi	r19, 0x00	; 0
    a694:	a9 01       	movw	r20, r18
    a696:	0f 2e       	mov	r0, r31
    a698:	f0 e0       	ldi	r31, 0x00	; 0
    a69a:	ef 2e       	mov	r14, r31
    a69c:	f0 e0       	ldi	r31, 0x00	; 0
    a69e:	ff 2e       	mov	r15, r31
    a6a0:	f4 e3       	ldi	r31, 0x34	; 52
    a6a2:	0f 2f       	mov	r16, r31
    a6a4:	f3 e4       	ldi	r31, 0x43	; 67
    a6a6:	1f 2f       	mov	r17, r31
    a6a8:	f0 2d       	mov	r31, r0
    a6aa:	0e 94 a0 08 	call	0x1140	; 0x1140 <_Z3mapddddd>
    a6ae:	0f 90       	pop	r0
    a6b0:	0f 90       	pop	r0
    a6b2:	0f 90       	pop	r0
    a6b4:	0f 90       	pop	r0
        OCR3C=ICR3-vAl;
    a6b6:	c0 91 96 00 	lds	r28, 0x0096
    a6ba:	d0 91 97 00 	lds	r29, 0x0097
      case 2:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
        OCR3B=ICR3-vAl;
        break;
      case 3:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    a6be:	0e 94 bb 79 	call	0xf376	; 0xf376 <__fixsfsi>
        OCR3C=ICR3-vAl;
    a6c2:	c6 1b       	sub	r28, r22
    a6c4:	d7 0b       	sbc	r29, r23
    a6c6:	d0 93 9d 00 	sts	0x009D, r29
    a6ca:	c0 93 9c 00 	sts	0x009C, r28
    a6ce:	eb c1       	rjmp	.+982    	; 0xaaa6 <_Z6angle5i+0x1754>
        break;
      case 6:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    a6d0:	e6 e8       	ldi	r30, 0x86	; 134
    a6d2:	f0 e0       	ldi	r31, 0x00	; 0
    a6d4:	c0 81       	ld	r28, Z
    a6d6:	d1 81       	ldd	r29, Z+1	; 0x01
    a6d8:	80 80       	ld	r8, Z
    a6da:	91 80       	ldd	r9, Z+1	; 0x01
    a6dc:	00 d0       	rcall	.+0      	; 0xa6de <_Z6angle5i+0x138c>
    a6de:	0f 92       	push	r0
    a6e0:	4d b6       	in	r4, 0x3d	; 61
    a6e2:	5e b6       	in	r5, 0x3e	; 62
    a6e4:	08 94       	sec
    a6e6:	41 1c       	adc	r4, r1
    a6e8:	51 1c       	adc	r5, r1
    a6ea:	88 27       	eor	r24, r24
    a6ec:	77 fd       	sbrc	r23, 7
    a6ee:	80 95       	com	r24
    a6f0:	98 2f       	mov	r25, r24
    a6f2:	0e 94 ee 79 	call	0xf3dc	; 0xf3dc <__floatsisf>
    a6f6:	7b 01       	movw	r14, r22
    a6f8:	8c 01       	movw	r16, r24
    a6fa:	ce 01       	movw	r24, r28
    a6fc:	68 e2       	ldi	r22, 0x28	; 40
    a6fe:	70 e0       	ldi	r23, 0x00	; 0
    a700:	0e 94 05 7b 	call	0xf60a	; 0xf60a <__udivmodhi4>
    a704:	80 e0       	ldi	r24, 0x00	; 0
    a706:	90 e0       	ldi	r25, 0x00	; 0
    a708:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    a70c:	5b 01       	movw	r10, r22
    a70e:	6c 01       	movw	r12, r24
    a710:	96 94       	lsr	r9
    a712:	87 94       	ror	r8
    a714:	96 94       	lsr	r9
    a716:	87 94       	ror	r8
    a718:	96 94       	lsr	r9
    a71a:	87 94       	ror	r8
    a71c:	b4 01       	movw	r22, r8
    a71e:	80 e0       	ldi	r24, 0x00	; 0
    a720:	90 e0       	ldi	r25, 0x00	; 0
    a722:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    a726:	f2 01       	movw	r30, r4
    a728:	60 83       	st	Z, r22
    a72a:	71 83       	std	Z+1, r23	; 0x01
    a72c:	82 83       	std	Z+2, r24	; 0x02
    a72e:	93 83       	std	Z+3, r25	; 0x03
    a730:	c8 01       	movw	r24, r16
    a732:	b7 01       	movw	r22, r14
    a734:	20 e0       	ldi	r18, 0x00	; 0
    a736:	30 e0       	ldi	r19, 0x00	; 0
    a738:	a9 01       	movw	r20, r18
    a73a:	0f 2e       	mov	r0, r31
    a73c:	f0 e0       	ldi	r31, 0x00	; 0
    a73e:	ef 2e       	mov	r14, r31
    a740:	f0 e0       	ldi	r31, 0x00	; 0
    a742:	ff 2e       	mov	r15, r31
    a744:	f4 e3       	ldi	r31, 0x34	; 52
    a746:	0f 2f       	mov	r16, r31
    a748:	f3 e4       	ldi	r31, 0x43	; 67
    a74a:	1f 2f       	mov	r17, r31
    a74c:	f0 2d       	mov	r31, r0
    a74e:	0e 94 a0 08 	call	0x1140	; 0x1140 <_Z3mapddddd>
    a752:	0f 90       	pop	r0
    a754:	0f 90       	pop	r0
    a756:	0f 90       	pop	r0
    a758:	0f 90       	pop	r0
        OCR4A=ICR4-vAl;
    a75a:	c0 91 a6 00 	lds	r28, 0x00A6
    a75e:	d0 91 a7 00 	lds	r29, 0x00A7
      case 3:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
        OCR3C=ICR3-vAl;
        break;
      case 6:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    a762:	0e 94 bb 79 	call	0xf376	; 0xf376 <__fixsfsi>
        OCR4A=ICR4-vAl;
    a766:	c6 1b       	sub	r28, r22
    a768:	d7 0b       	sbc	r29, r23
    a76a:	d0 93 a9 00 	sts	0x00A9, r29
    a76e:	c0 93 a8 00 	sts	0x00A8, r28
    a772:	99 c1       	rjmp	.+818    	; 0xaaa6 <_Z6angle5i+0x1754>
        break;
      case 7:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    a774:	e6 e8       	ldi	r30, 0x86	; 134
    a776:	f0 e0       	ldi	r31, 0x00	; 0
    a778:	c0 81       	ld	r28, Z
    a77a:	d1 81       	ldd	r29, Z+1	; 0x01
    a77c:	80 80       	ld	r8, Z
    a77e:	91 80       	ldd	r9, Z+1	; 0x01
    a780:	00 d0       	rcall	.+0      	; 0xa782 <_Z6angle5i+0x1430>
    a782:	0f 92       	push	r0
    a784:	4d b6       	in	r4, 0x3d	; 61
    a786:	5e b6       	in	r5, 0x3e	; 62
    a788:	08 94       	sec
    a78a:	41 1c       	adc	r4, r1
    a78c:	51 1c       	adc	r5, r1
    a78e:	88 27       	eor	r24, r24
    a790:	77 fd       	sbrc	r23, 7
    a792:	80 95       	com	r24
    a794:	98 2f       	mov	r25, r24
    a796:	0e 94 ee 79 	call	0xf3dc	; 0xf3dc <__floatsisf>
    a79a:	7b 01       	movw	r14, r22
    a79c:	8c 01       	movw	r16, r24
    a79e:	ce 01       	movw	r24, r28
    a7a0:	68 e2       	ldi	r22, 0x28	; 40
    a7a2:	70 e0       	ldi	r23, 0x00	; 0
    a7a4:	0e 94 05 7b 	call	0xf60a	; 0xf60a <__udivmodhi4>
    a7a8:	80 e0       	ldi	r24, 0x00	; 0
    a7aa:	90 e0       	ldi	r25, 0x00	; 0
    a7ac:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    a7b0:	5b 01       	movw	r10, r22
    a7b2:	6c 01       	movw	r12, r24
    a7b4:	96 94       	lsr	r9
    a7b6:	87 94       	ror	r8
    a7b8:	96 94       	lsr	r9
    a7ba:	87 94       	ror	r8
    a7bc:	96 94       	lsr	r9
    a7be:	87 94       	ror	r8
    a7c0:	b4 01       	movw	r22, r8
    a7c2:	80 e0       	ldi	r24, 0x00	; 0
    a7c4:	90 e0       	ldi	r25, 0x00	; 0
    a7c6:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    a7ca:	f2 01       	movw	r30, r4
    a7cc:	60 83       	st	Z, r22
    a7ce:	71 83       	std	Z+1, r23	; 0x01
    a7d0:	82 83       	std	Z+2, r24	; 0x02
    a7d2:	93 83       	std	Z+3, r25	; 0x03
    a7d4:	c8 01       	movw	r24, r16
    a7d6:	b7 01       	movw	r22, r14
    a7d8:	20 e0       	ldi	r18, 0x00	; 0
    a7da:	30 e0       	ldi	r19, 0x00	; 0
    a7dc:	a9 01       	movw	r20, r18
    a7de:	0f 2e       	mov	r0, r31
    a7e0:	f0 e0       	ldi	r31, 0x00	; 0
    a7e2:	ef 2e       	mov	r14, r31
    a7e4:	f0 e0       	ldi	r31, 0x00	; 0
    a7e6:	ff 2e       	mov	r15, r31
    a7e8:	f4 e3       	ldi	r31, 0x34	; 52
    a7ea:	0f 2f       	mov	r16, r31
    a7ec:	f3 e4       	ldi	r31, 0x43	; 67
    a7ee:	1f 2f       	mov	r17, r31
    a7f0:	f0 2d       	mov	r31, r0
    a7f2:	0e 94 a0 08 	call	0x1140	; 0x1140 <_Z3mapddddd>
    a7f6:	0f 90       	pop	r0
    a7f8:	0f 90       	pop	r0
    a7fa:	0f 90       	pop	r0
    a7fc:	0f 90       	pop	r0
        OCR4B=ICR4-vAl;
    a7fe:	c0 91 a6 00 	lds	r28, 0x00A6
    a802:	d0 91 a7 00 	lds	r29, 0x00A7
      case 6:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
        OCR4A=ICR4-vAl;
        break;
      case 7:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    a806:	0e 94 bb 79 	call	0xf376	; 0xf376 <__fixsfsi>
        OCR4B=ICR4-vAl;
    a80a:	c6 1b       	sub	r28, r22
    a80c:	d7 0b       	sbc	r29, r23
    a80e:	d0 93 ab 00 	sts	0x00AB, r29
    a812:	c0 93 aa 00 	sts	0x00AA, r28
    a816:	47 c1       	rjmp	.+654    	; 0xaaa6 <_Z6angle5i+0x1754>
        break; 
      case 8:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    a818:	e6 e8       	ldi	r30, 0x86	; 134
    a81a:	f0 e0       	ldi	r31, 0x00	; 0
    a81c:	c0 81       	ld	r28, Z
    a81e:	d1 81       	ldd	r29, Z+1	; 0x01
    a820:	80 80       	ld	r8, Z
    a822:	91 80       	ldd	r9, Z+1	; 0x01
    a824:	00 d0       	rcall	.+0      	; 0xa826 <_Z6angle5i+0x14d4>
    a826:	0f 92       	push	r0
    a828:	4d b6       	in	r4, 0x3d	; 61
    a82a:	5e b6       	in	r5, 0x3e	; 62
    a82c:	08 94       	sec
    a82e:	41 1c       	adc	r4, r1
    a830:	51 1c       	adc	r5, r1
    a832:	88 27       	eor	r24, r24
    a834:	77 fd       	sbrc	r23, 7
    a836:	80 95       	com	r24
    a838:	98 2f       	mov	r25, r24
    a83a:	0e 94 ee 79 	call	0xf3dc	; 0xf3dc <__floatsisf>
    a83e:	7b 01       	movw	r14, r22
    a840:	8c 01       	movw	r16, r24
    a842:	ce 01       	movw	r24, r28
    a844:	68 e2       	ldi	r22, 0x28	; 40
    a846:	70 e0       	ldi	r23, 0x00	; 0
    a848:	0e 94 05 7b 	call	0xf60a	; 0xf60a <__udivmodhi4>
    a84c:	80 e0       	ldi	r24, 0x00	; 0
    a84e:	90 e0       	ldi	r25, 0x00	; 0
    a850:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    a854:	5b 01       	movw	r10, r22
    a856:	6c 01       	movw	r12, r24
    a858:	96 94       	lsr	r9
    a85a:	87 94       	ror	r8
    a85c:	96 94       	lsr	r9
    a85e:	87 94       	ror	r8
    a860:	96 94       	lsr	r9
    a862:	87 94       	ror	r8
    a864:	b4 01       	movw	r22, r8
    a866:	80 e0       	ldi	r24, 0x00	; 0
    a868:	90 e0       	ldi	r25, 0x00	; 0
    a86a:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    a86e:	f2 01       	movw	r30, r4
    a870:	60 83       	st	Z, r22
    a872:	71 83       	std	Z+1, r23	; 0x01
    a874:	82 83       	std	Z+2, r24	; 0x02
    a876:	93 83       	std	Z+3, r25	; 0x03
    a878:	c8 01       	movw	r24, r16
    a87a:	b7 01       	movw	r22, r14
    a87c:	20 e0       	ldi	r18, 0x00	; 0
    a87e:	30 e0       	ldi	r19, 0x00	; 0
    a880:	a9 01       	movw	r20, r18
    a882:	0f 2e       	mov	r0, r31
    a884:	f0 e0       	ldi	r31, 0x00	; 0
    a886:	ef 2e       	mov	r14, r31
    a888:	f0 e0       	ldi	r31, 0x00	; 0
    a88a:	ff 2e       	mov	r15, r31
    a88c:	f4 e3       	ldi	r31, 0x34	; 52
    a88e:	0f 2f       	mov	r16, r31
    a890:	f3 e4       	ldi	r31, 0x43	; 67
    a892:	1f 2f       	mov	r17, r31
    a894:	f0 2d       	mov	r31, r0
    a896:	0e 94 a0 08 	call	0x1140	; 0x1140 <_Z3mapddddd>
    a89a:	0f 90       	pop	r0
    a89c:	0f 90       	pop	r0
    a89e:	0f 90       	pop	r0
    a8a0:	0f 90       	pop	r0
        OCR4C=ICR4-vAl;
    a8a2:	c0 91 a6 00 	lds	r28, 0x00A6
    a8a6:	d0 91 a7 00 	lds	r29, 0x00A7
      case 7:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
        OCR4B=ICR4-vAl;
        break; 
      case 8:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    a8aa:	0e 94 bb 79 	call	0xf376	; 0xf376 <__fixsfsi>
        OCR4C=ICR4-vAl;
    a8ae:	c6 1b       	sub	r28, r22
    a8b0:	d7 0b       	sbc	r29, r23
    a8b2:	d0 93 ad 00 	sts	0x00AD, r29
    a8b6:	c0 93 ac 00 	sts	0x00AC, r28
    a8ba:	f5 c0       	rjmp	.+490    	; 0xaaa6 <_Z6angle5i+0x1754>
        break;
      case 46:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    a8bc:	e6 e8       	ldi	r30, 0x86	; 134
    a8be:	f0 e0       	ldi	r31, 0x00	; 0
    a8c0:	c0 81       	ld	r28, Z
    a8c2:	d1 81       	ldd	r29, Z+1	; 0x01
    a8c4:	80 80       	ld	r8, Z
    a8c6:	91 80       	ldd	r9, Z+1	; 0x01
    a8c8:	00 d0       	rcall	.+0      	; 0xa8ca <_Z6angle5i+0x1578>
    a8ca:	0f 92       	push	r0
    a8cc:	4d b6       	in	r4, 0x3d	; 61
    a8ce:	5e b6       	in	r5, 0x3e	; 62
    a8d0:	08 94       	sec
    a8d2:	41 1c       	adc	r4, r1
    a8d4:	51 1c       	adc	r5, r1
    a8d6:	88 27       	eor	r24, r24
    a8d8:	77 fd       	sbrc	r23, 7
    a8da:	80 95       	com	r24
    a8dc:	98 2f       	mov	r25, r24
    a8de:	0e 94 ee 79 	call	0xf3dc	; 0xf3dc <__floatsisf>
    a8e2:	7b 01       	movw	r14, r22
    a8e4:	8c 01       	movw	r16, r24
    a8e6:	ce 01       	movw	r24, r28
    a8e8:	68 e2       	ldi	r22, 0x28	; 40
    a8ea:	70 e0       	ldi	r23, 0x00	; 0
    a8ec:	0e 94 05 7b 	call	0xf60a	; 0xf60a <__udivmodhi4>
    a8f0:	80 e0       	ldi	r24, 0x00	; 0
    a8f2:	90 e0       	ldi	r25, 0x00	; 0
    a8f4:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    a8f8:	5b 01       	movw	r10, r22
    a8fa:	6c 01       	movw	r12, r24
    a8fc:	96 94       	lsr	r9
    a8fe:	87 94       	ror	r8
    a900:	96 94       	lsr	r9
    a902:	87 94       	ror	r8
    a904:	96 94       	lsr	r9
    a906:	87 94       	ror	r8
    a908:	b4 01       	movw	r22, r8
    a90a:	80 e0       	ldi	r24, 0x00	; 0
    a90c:	90 e0       	ldi	r25, 0x00	; 0
    a90e:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    a912:	f2 01       	movw	r30, r4
    a914:	60 83       	st	Z, r22
    a916:	71 83       	std	Z+1, r23	; 0x01
    a918:	82 83       	std	Z+2, r24	; 0x02
    a91a:	93 83       	std	Z+3, r25	; 0x03
    a91c:	c8 01       	movw	r24, r16
    a91e:	b7 01       	movw	r22, r14
    a920:	20 e0       	ldi	r18, 0x00	; 0
    a922:	30 e0       	ldi	r19, 0x00	; 0
    a924:	a9 01       	movw	r20, r18
    a926:	0f 2e       	mov	r0, r31
    a928:	f0 e0       	ldi	r31, 0x00	; 0
    a92a:	ef 2e       	mov	r14, r31
    a92c:	f0 e0       	ldi	r31, 0x00	; 0
    a92e:	ff 2e       	mov	r15, r31
    a930:	f4 e3       	ldi	r31, 0x34	; 52
    a932:	0f 2f       	mov	r16, r31
    a934:	f3 e4       	ldi	r31, 0x43	; 67
    a936:	1f 2f       	mov	r17, r31
    a938:	f0 2d       	mov	r31, r0
    a93a:	0e 94 a0 08 	call	0x1140	; 0x1140 <_Z3mapddddd>
    a93e:	0f 90       	pop	r0
    a940:	0f 90       	pop	r0
    a942:	0f 90       	pop	r0
    a944:	0f 90       	pop	r0
        OCR5A=ICR5-vAl;
    a946:	c0 91 26 01 	lds	r28, 0x0126
    a94a:	d0 91 27 01 	lds	r29, 0x0127
      case 8:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
        OCR4C=ICR4-vAl;
        break;
      case 46:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    a94e:	0e 94 bb 79 	call	0xf376	; 0xf376 <__fixsfsi>
        OCR5A=ICR5-vAl;
    a952:	c6 1b       	sub	r28, r22
    a954:	d7 0b       	sbc	r29, r23
    a956:	d0 93 29 01 	sts	0x0129, r29
    a95a:	c0 93 28 01 	sts	0x0128, r28
    a95e:	a3 c0       	rjmp	.+326    	; 0xaaa6 <_Z6angle5i+0x1754>
        break;
      case 45:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    a960:	e6 e8       	ldi	r30, 0x86	; 134
    a962:	f0 e0       	ldi	r31, 0x00	; 0
    a964:	c0 81       	ld	r28, Z
    a966:	d1 81       	ldd	r29, Z+1	; 0x01
    a968:	80 80       	ld	r8, Z
    a96a:	91 80       	ldd	r9, Z+1	; 0x01
    a96c:	00 d0       	rcall	.+0      	; 0xa96e <_Z6angle5i+0x161c>
    a96e:	0f 92       	push	r0
    a970:	4d b6       	in	r4, 0x3d	; 61
    a972:	5e b6       	in	r5, 0x3e	; 62
    a974:	08 94       	sec
    a976:	41 1c       	adc	r4, r1
    a978:	51 1c       	adc	r5, r1
    a97a:	88 27       	eor	r24, r24
    a97c:	77 fd       	sbrc	r23, 7
    a97e:	80 95       	com	r24
    a980:	98 2f       	mov	r25, r24
    a982:	0e 94 ee 79 	call	0xf3dc	; 0xf3dc <__floatsisf>
    a986:	7b 01       	movw	r14, r22
    a988:	8c 01       	movw	r16, r24
    a98a:	ce 01       	movw	r24, r28
    a98c:	68 e2       	ldi	r22, 0x28	; 40
    a98e:	70 e0       	ldi	r23, 0x00	; 0
    a990:	0e 94 05 7b 	call	0xf60a	; 0xf60a <__udivmodhi4>
    a994:	80 e0       	ldi	r24, 0x00	; 0
    a996:	90 e0       	ldi	r25, 0x00	; 0
    a998:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    a99c:	5b 01       	movw	r10, r22
    a99e:	6c 01       	movw	r12, r24
    a9a0:	96 94       	lsr	r9
    a9a2:	87 94       	ror	r8
    a9a4:	96 94       	lsr	r9
    a9a6:	87 94       	ror	r8
    a9a8:	96 94       	lsr	r9
    a9aa:	87 94       	ror	r8
    a9ac:	b4 01       	movw	r22, r8
    a9ae:	80 e0       	ldi	r24, 0x00	; 0
    a9b0:	90 e0       	ldi	r25, 0x00	; 0
    a9b2:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    a9b6:	f2 01       	movw	r30, r4
    a9b8:	60 83       	st	Z, r22
    a9ba:	71 83       	std	Z+1, r23	; 0x01
    a9bc:	82 83       	std	Z+2, r24	; 0x02
    a9be:	93 83       	std	Z+3, r25	; 0x03
    a9c0:	c8 01       	movw	r24, r16
    a9c2:	b7 01       	movw	r22, r14
    a9c4:	20 e0       	ldi	r18, 0x00	; 0
    a9c6:	30 e0       	ldi	r19, 0x00	; 0
    a9c8:	a9 01       	movw	r20, r18
    a9ca:	0f 2e       	mov	r0, r31
    a9cc:	f0 e0       	ldi	r31, 0x00	; 0
    a9ce:	ef 2e       	mov	r14, r31
    a9d0:	f0 e0       	ldi	r31, 0x00	; 0
    a9d2:	ff 2e       	mov	r15, r31
    a9d4:	f4 e3       	ldi	r31, 0x34	; 52
    a9d6:	0f 2f       	mov	r16, r31
    a9d8:	f3 e4       	ldi	r31, 0x43	; 67
    a9da:	1f 2f       	mov	r17, r31
    a9dc:	f0 2d       	mov	r31, r0
    a9de:	0e 94 a0 08 	call	0x1140	; 0x1140 <_Z3mapddddd>
    a9e2:	0f 90       	pop	r0
    a9e4:	0f 90       	pop	r0
    a9e6:	0f 90       	pop	r0
    a9e8:	0f 90       	pop	r0
        OCR5B=ICR5-vAl;
    a9ea:	c0 91 26 01 	lds	r28, 0x0126
    a9ee:	d0 91 27 01 	lds	r29, 0x0127
      case 46:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
        OCR5A=ICR5-vAl;
        break;
      case 45:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    a9f2:	0e 94 bb 79 	call	0xf376	; 0xf376 <__fixsfsi>
        OCR5B=ICR5-vAl;
    a9f6:	c6 1b       	sub	r28, r22
    a9f8:	d7 0b       	sbc	r29, r23
    a9fa:	d0 93 2b 01 	sts	0x012B, r29
    a9fe:	c0 93 2a 01 	sts	0x012A, r28
    aa02:	51 c0       	rjmp	.+162    	; 0xaaa6 <_Z6angle5i+0x1754>
        break;
      case 44:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    aa04:	e6 e8       	ldi	r30, 0x86	; 134
    aa06:	f0 e0       	ldi	r31, 0x00	; 0
    aa08:	c0 81       	ld	r28, Z
    aa0a:	d1 81       	ldd	r29, Z+1	; 0x01
    aa0c:	80 80       	ld	r8, Z
    aa0e:	91 80       	ldd	r9, Z+1	; 0x01
    aa10:	00 d0       	rcall	.+0      	; 0xaa12 <_Z6angle5i+0x16c0>
    aa12:	0f 92       	push	r0
    aa14:	4d b6       	in	r4, 0x3d	; 61
    aa16:	5e b6       	in	r5, 0x3e	; 62
    aa18:	08 94       	sec
    aa1a:	41 1c       	adc	r4, r1
    aa1c:	51 1c       	adc	r5, r1
    aa1e:	88 27       	eor	r24, r24
    aa20:	77 fd       	sbrc	r23, 7
    aa22:	80 95       	com	r24
    aa24:	98 2f       	mov	r25, r24
    aa26:	0e 94 ee 79 	call	0xf3dc	; 0xf3dc <__floatsisf>
    aa2a:	7b 01       	movw	r14, r22
    aa2c:	8c 01       	movw	r16, r24
    aa2e:	ce 01       	movw	r24, r28
    aa30:	68 e2       	ldi	r22, 0x28	; 40
    aa32:	70 e0       	ldi	r23, 0x00	; 0
    aa34:	0e 94 05 7b 	call	0xf60a	; 0xf60a <__udivmodhi4>
    aa38:	80 e0       	ldi	r24, 0x00	; 0
    aa3a:	90 e0       	ldi	r25, 0x00	; 0
    aa3c:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    aa40:	5b 01       	movw	r10, r22
    aa42:	6c 01       	movw	r12, r24
    aa44:	96 94       	lsr	r9
    aa46:	87 94       	ror	r8
    aa48:	96 94       	lsr	r9
    aa4a:	87 94       	ror	r8
    aa4c:	96 94       	lsr	r9
    aa4e:	87 94       	ror	r8
    aa50:	b4 01       	movw	r22, r8
    aa52:	80 e0       	ldi	r24, 0x00	; 0
    aa54:	90 e0       	ldi	r25, 0x00	; 0
    aa56:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    aa5a:	f2 01       	movw	r30, r4
    aa5c:	60 83       	st	Z, r22
    aa5e:	71 83       	std	Z+1, r23	; 0x01
    aa60:	82 83       	std	Z+2, r24	; 0x02
    aa62:	93 83       	std	Z+3, r25	; 0x03
    aa64:	c8 01       	movw	r24, r16
    aa66:	b7 01       	movw	r22, r14
    aa68:	20 e0       	ldi	r18, 0x00	; 0
    aa6a:	30 e0       	ldi	r19, 0x00	; 0
    aa6c:	a9 01       	movw	r20, r18
    aa6e:	0f 2e       	mov	r0, r31
    aa70:	f0 e0       	ldi	r31, 0x00	; 0
    aa72:	ef 2e       	mov	r14, r31
    aa74:	f0 e0       	ldi	r31, 0x00	; 0
    aa76:	ff 2e       	mov	r15, r31
    aa78:	f4 e3       	ldi	r31, 0x34	; 52
    aa7a:	0f 2f       	mov	r16, r31
    aa7c:	f3 e4       	ldi	r31, 0x43	; 67
    aa7e:	1f 2f       	mov	r17, r31
    aa80:	f0 2d       	mov	r31, r0
    aa82:	0e 94 a0 08 	call	0x1140	; 0x1140 <_Z3mapddddd>
    aa86:	0f 90       	pop	r0
    aa88:	0f 90       	pop	r0
    aa8a:	0f 90       	pop	r0
    aa8c:	0f 90       	pop	r0
        OCR5C=ICR5-vAl;
    aa8e:	c0 91 26 01 	lds	r28, 0x0126
    aa92:	d0 91 27 01 	lds	r29, 0x0127
      case 45:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
        OCR5B=ICR5-vAl;
        break;
      case 44:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    aa96:	0e 94 bb 79 	call	0xf376	; 0xf376 <__fixsfsi>
        OCR5C=ICR5-vAl;
    aa9a:	c6 1b       	sub	r28, r22
    aa9c:	d7 0b       	sbc	r29, r23
    aa9e:	d0 93 2d 01 	sts	0x012D, r29
    aaa2:	c0 93 2c 01 	sts	0x012C, r28
		s.write(w);
    aaa6:	60 91 d0 02 	lds	r22, 0x02D0
    aaaa:	70 91 d1 02 	lds	r23, 0x02D1
     }
  }

  void write(int vAl)           //PIN=servo pin no. on mega,vAl=angle F_CPU for the servo at pin
  {
    switch(pIn)
    aaae:	80 91 d7 02 	lds	r24, 0x02D7
    aab2:	88 30       	cpi	r24, 0x08	; 8
    aab4:	09 f4       	brne	.+2      	; 0xaab8 <_Z6angle5i+0x1766>
    aab6:	63 c2       	rjmp	.+1222   	; 0xaf7e <_Z6angle5i+0x1c2c>
    aab8:	89 30       	cpi	r24, 0x09	; 9
    aaba:	98 f4       	brcc	.+38     	; 0xaae2 <_Z6angle5i+0x1790>
    aabc:	85 30       	cpi	r24, 0x05	; 5
    aabe:	09 f4       	brne	.+2      	; 0xaac2 <_Z6angle5i+0x1770>
    aac0:	c4 c0       	rjmp	.+392    	; 0xac4a <_Z6angle5i+0x18f8>
    aac2:	86 30       	cpi	r24, 0x06	; 6
    aac4:	38 f4       	brcc	.+14     	; 0xaad4 <_Z6angle5i+0x1782>
    aac6:	82 30       	cpi	r24, 0x02	; 2
    aac8:	09 f4       	brne	.+2      	; 0xaacc <_Z6angle5i+0x177a>
    aaca:	11 c1       	rjmp	.+546    	; 0xacee <_Z6angle5i+0x199c>
    aacc:	83 30       	cpi	r24, 0x03	; 3
    aace:	09 f0       	breq	.+2      	; 0xaad2 <_Z6angle5i+0x1780>
    aad0:	9d c3       	rjmp	.+1850   	; 0xb20c <_Z6angle5i+0x1eba>
    aad2:	5f c1       	rjmp	.+702    	; 0xad92 <_Z6angle5i+0x1a40>
    aad4:	86 30       	cpi	r24, 0x06	; 6
    aad6:	09 f4       	brne	.+2      	; 0xaada <_Z6angle5i+0x1788>
    aad8:	ae c1       	rjmp	.+860    	; 0xae36 <_Z6angle5i+0x1ae4>
    aada:	87 30       	cpi	r24, 0x07	; 7
    aadc:	09 f0       	breq	.+2      	; 0xaae0 <_Z6angle5i+0x178e>
    aade:	96 c3       	rjmp	.+1836   	; 0xb20c <_Z6angle5i+0x1eba>
    aae0:	fc c1       	rjmp	.+1016   	; 0xaeda <_Z6angle5i+0x1b88>
    aae2:	8c 32       	cpi	r24, 0x2C	; 44
    aae4:	09 f4       	brne	.+2      	; 0xaae8 <_Z6angle5i+0x1796>
    aae6:	41 c3       	rjmp	.+1666   	; 0xb16a <_Z6angle5i+0x1e18>
    aae8:	8d 32       	cpi	r24, 0x2D	; 45
    aaea:	30 f4       	brcc	.+12     	; 0xaaf8 <_Z6angle5i+0x17a6>
    aaec:	8b 30       	cpi	r24, 0x0B	; 11
    aaee:	59 f0       	breq	.+22     	; 0xab06 <_Z6angle5i+0x17b4>
    aaf0:	8c 30       	cpi	r24, 0x0C	; 12
    aaf2:	09 f0       	breq	.+2      	; 0xaaf6 <_Z6angle5i+0x17a4>
    aaf4:	8b c3       	rjmp	.+1814   	; 0xb20c <_Z6angle5i+0x1eba>
    aaf6:	58 c0       	rjmp	.+176    	; 0xaba8 <_Z6angle5i+0x1856>
    aaf8:	8d 32       	cpi	r24, 0x2D	; 45
    aafa:	09 f4       	brne	.+2      	; 0xaafe <_Z6angle5i+0x17ac>
    aafc:	e4 c2       	rjmp	.+1480   	; 0xb0c6 <_Z6angle5i+0x1d74>
    aafe:	8e 32       	cpi	r24, 0x2E	; 46
    ab00:	09 f0       	breq	.+2      	; 0xab04 <_Z6angle5i+0x17b2>
    ab02:	84 c3       	rjmp	.+1800   	; 0xb20c <_Z6angle5i+0x1eba>
    ab04:	8e c2       	rjmp	.+1308   	; 0xb022 <_Z6angle5i+0x1cd0>
    {
     case 11:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    ab06:	c6 e8       	ldi	r28, 0x86	; 134
    ab08:	d0 e0       	ldi	r29, 0x00	; 0
    ab0a:	08 81       	ld	r16, Y
    ab0c:	19 81       	ldd	r17, Y+1	; 0x01
    ab0e:	e8 80       	ld	r14, Y
    ab10:	f9 80       	ldd	r15, Y+1	; 0x01
    ab12:	00 d0       	rcall	.+0      	; 0xab14 <_Z6angle5i+0x17c2>
    ab14:	0f 92       	push	r0
    ab16:	8d b6       	in	r8, 0x3d	; 61
    ab18:	9e b6       	in	r9, 0x3e	; 62
    ab1a:	08 94       	sec
    ab1c:	81 1c       	adc	r8, r1
    ab1e:	91 1c       	adc	r9, r1
    ab20:	88 27       	eor	r24, r24
    ab22:	77 fd       	sbrc	r23, 7
    ab24:	80 95       	com	r24
    ab26:	98 2f       	mov	r25, r24
    ab28:	0e 94 ee 79 	call	0xf3dc	; 0xf3dc <__floatsisf>
    ab2c:	2b 01       	movw	r4, r22
    ab2e:	3c 01       	movw	r6, r24
    ab30:	c8 01       	movw	r24, r16
    ab32:	68 e2       	ldi	r22, 0x28	; 40
    ab34:	70 e0       	ldi	r23, 0x00	; 0
    ab36:	0e 94 05 7b 	call	0xf60a	; 0xf60a <__udivmodhi4>
    ab3a:	80 e0       	ldi	r24, 0x00	; 0
    ab3c:	90 e0       	ldi	r25, 0x00	; 0
    ab3e:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    ab42:	5b 01       	movw	r10, r22
    ab44:	6c 01       	movw	r12, r24
    ab46:	f6 94       	lsr	r15
    ab48:	e7 94       	ror	r14
    ab4a:	f6 94       	lsr	r15
    ab4c:	e7 94       	ror	r14
    ab4e:	f6 94       	lsr	r15
    ab50:	e7 94       	ror	r14
    ab52:	b7 01       	movw	r22, r14
    ab54:	80 e0       	ldi	r24, 0x00	; 0
    ab56:	90 e0       	ldi	r25, 0x00	; 0
    ab58:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    ab5c:	f4 01       	movw	r30, r8
    ab5e:	60 83       	st	Z, r22
    ab60:	71 83       	std	Z+1, r23	; 0x01
    ab62:	82 83       	std	Z+2, r24	; 0x02
    ab64:	93 83       	std	Z+3, r25	; 0x03
    ab66:	c3 01       	movw	r24, r6
    ab68:	b2 01       	movw	r22, r4
    ab6a:	20 e0       	ldi	r18, 0x00	; 0
    ab6c:	30 e0       	ldi	r19, 0x00	; 0
    ab6e:	a9 01       	movw	r20, r18
    ab70:	0f 2e       	mov	r0, r31
    ab72:	f0 e0       	ldi	r31, 0x00	; 0
    ab74:	ef 2e       	mov	r14, r31
    ab76:	f0 e0       	ldi	r31, 0x00	; 0
    ab78:	ff 2e       	mov	r15, r31
    ab7a:	f4 e3       	ldi	r31, 0x34	; 52
    ab7c:	0f 2f       	mov	r16, r31
    ab7e:	f3 e4       	ldi	r31, 0x43	; 67
    ab80:	1f 2f       	mov	r17, r31
    ab82:	f0 2d       	mov	r31, r0
    ab84:	0e 94 a0 08 	call	0x1140	; 0x1140 <_Z3mapddddd>
    ab88:	0f 90       	pop	r0
    ab8a:	0f 90       	pop	r0
    ab8c:	0f 90       	pop	r0
    ab8e:	0f 90       	pop	r0
        OCR1A=ICR1-vAl;
    ab90:	09 90       	ld	r0, Y+
    ab92:	d8 81       	ld	r29, Y
    ab94:	c0 2d       	mov	r28, r0
  void write(int vAl)           //PIN=servo pin no. on mega,vAl=angle F_CPU for the servo at pin
  {
    switch(pIn)
    {
     case 11:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    ab96:	0e 94 bb 79 	call	0xf376	; 0xf376 <__fixsfsi>
        OCR1A=ICR1-vAl;
    ab9a:	c6 1b       	sub	r28, r22
    ab9c:	d7 0b       	sbc	r29, r23
    ab9e:	d0 93 89 00 	sts	0x0089, r29
    aba2:	c0 93 88 00 	sts	0x0088, r28
    aba6:	32 c3       	rjmp	.+1636   	; 0xb20c <_Z6angle5i+0x1eba>
        break;
      case 12:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    aba8:	c6 e8       	ldi	r28, 0x86	; 134
    abaa:	d0 e0       	ldi	r29, 0x00	; 0
    abac:	08 81       	ld	r16, Y
    abae:	19 81       	ldd	r17, Y+1	; 0x01
    abb0:	e8 80       	ld	r14, Y
    abb2:	f9 80       	ldd	r15, Y+1	; 0x01
    abb4:	00 d0       	rcall	.+0      	; 0xabb6 <_Z6angle5i+0x1864>
    abb6:	0f 92       	push	r0
    abb8:	8d b6       	in	r8, 0x3d	; 61
    abba:	9e b6       	in	r9, 0x3e	; 62
    abbc:	08 94       	sec
    abbe:	81 1c       	adc	r8, r1
    abc0:	91 1c       	adc	r9, r1
    abc2:	88 27       	eor	r24, r24
    abc4:	77 fd       	sbrc	r23, 7
    abc6:	80 95       	com	r24
    abc8:	98 2f       	mov	r25, r24
    abca:	0e 94 ee 79 	call	0xf3dc	; 0xf3dc <__floatsisf>
    abce:	2b 01       	movw	r4, r22
    abd0:	3c 01       	movw	r6, r24
    abd2:	c8 01       	movw	r24, r16
    abd4:	68 e2       	ldi	r22, 0x28	; 40
    abd6:	70 e0       	ldi	r23, 0x00	; 0
    abd8:	0e 94 05 7b 	call	0xf60a	; 0xf60a <__udivmodhi4>
    abdc:	80 e0       	ldi	r24, 0x00	; 0
    abde:	90 e0       	ldi	r25, 0x00	; 0
    abe0:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    abe4:	5b 01       	movw	r10, r22
    abe6:	6c 01       	movw	r12, r24
    abe8:	f6 94       	lsr	r15
    abea:	e7 94       	ror	r14
    abec:	f6 94       	lsr	r15
    abee:	e7 94       	ror	r14
    abf0:	f6 94       	lsr	r15
    abf2:	e7 94       	ror	r14
    abf4:	b7 01       	movw	r22, r14
    abf6:	80 e0       	ldi	r24, 0x00	; 0
    abf8:	90 e0       	ldi	r25, 0x00	; 0
    abfa:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    abfe:	f4 01       	movw	r30, r8
    ac00:	60 83       	st	Z, r22
    ac02:	71 83       	std	Z+1, r23	; 0x01
    ac04:	82 83       	std	Z+2, r24	; 0x02
    ac06:	93 83       	std	Z+3, r25	; 0x03
    ac08:	c3 01       	movw	r24, r6
    ac0a:	b2 01       	movw	r22, r4
    ac0c:	20 e0       	ldi	r18, 0x00	; 0
    ac0e:	30 e0       	ldi	r19, 0x00	; 0
    ac10:	a9 01       	movw	r20, r18
    ac12:	0f 2e       	mov	r0, r31
    ac14:	f0 e0       	ldi	r31, 0x00	; 0
    ac16:	ef 2e       	mov	r14, r31
    ac18:	f0 e0       	ldi	r31, 0x00	; 0
    ac1a:	ff 2e       	mov	r15, r31
    ac1c:	f4 e3       	ldi	r31, 0x34	; 52
    ac1e:	0f 2f       	mov	r16, r31
    ac20:	f3 e4       	ldi	r31, 0x43	; 67
    ac22:	1f 2f       	mov	r17, r31
    ac24:	f0 2d       	mov	r31, r0
    ac26:	0e 94 a0 08 	call	0x1140	; 0x1140 <_Z3mapddddd>
    ac2a:	0f 90       	pop	r0
    ac2c:	0f 90       	pop	r0
    ac2e:	0f 90       	pop	r0
    ac30:	0f 90       	pop	r0
        OCR1B=ICR1-vAl;
    ac32:	09 90       	ld	r0, Y+
    ac34:	d8 81       	ld	r29, Y
    ac36:	c0 2d       	mov	r28, r0
     case 11:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
        OCR1A=ICR1-vAl;
        break;
      case 12:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    ac38:	0e 94 bb 79 	call	0xf376	; 0xf376 <__fixsfsi>
        OCR1B=ICR1-vAl;
    ac3c:	c6 1b       	sub	r28, r22
    ac3e:	d7 0b       	sbc	r29, r23
    ac40:	d0 93 8b 00 	sts	0x008B, r29
    ac44:	c0 93 8a 00 	sts	0x008A, r28
    ac48:	e1 c2       	rjmp	.+1474   	; 0xb20c <_Z6angle5i+0x1eba>
        break;
      case 5:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    ac4a:	e6 e8       	ldi	r30, 0x86	; 134
    ac4c:	f0 e0       	ldi	r31, 0x00	; 0
    ac4e:	c0 81       	ld	r28, Z
    ac50:	d1 81       	ldd	r29, Z+1	; 0x01
    ac52:	80 80       	ld	r8, Z
    ac54:	91 80       	ldd	r9, Z+1	; 0x01
    ac56:	00 d0       	rcall	.+0      	; 0xac58 <_Z6angle5i+0x1906>
    ac58:	0f 92       	push	r0
    ac5a:	4d b6       	in	r4, 0x3d	; 61
    ac5c:	5e b6       	in	r5, 0x3e	; 62
    ac5e:	08 94       	sec
    ac60:	41 1c       	adc	r4, r1
    ac62:	51 1c       	adc	r5, r1
    ac64:	88 27       	eor	r24, r24
    ac66:	77 fd       	sbrc	r23, 7
    ac68:	80 95       	com	r24
    ac6a:	98 2f       	mov	r25, r24
    ac6c:	0e 94 ee 79 	call	0xf3dc	; 0xf3dc <__floatsisf>
    ac70:	7b 01       	movw	r14, r22
    ac72:	8c 01       	movw	r16, r24
    ac74:	ce 01       	movw	r24, r28
    ac76:	68 e2       	ldi	r22, 0x28	; 40
    ac78:	70 e0       	ldi	r23, 0x00	; 0
    ac7a:	0e 94 05 7b 	call	0xf60a	; 0xf60a <__udivmodhi4>
    ac7e:	80 e0       	ldi	r24, 0x00	; 0
    ac80:	90 e0       	ldi	r25, 0x00	; 0
    ac82:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    ac86:	5b 01       	movw	r10, r22
    ac88:	6c 01       	movw	r12, r24
    ac8a:	96 94       	lsr	r9
    ac8c:	87 94       	ror	r8
    ac8e:	96 94       	lsr	r9
    ac90:	87 94       	ror	r8
    ac92:	96 94       	lsr	r9
    ac94:	87 94       	ror	r8
    ac96:	b4 01       	movw	r22, r8
    ac98:	80 e0       	ldi	r24, 0x00	; 0
    ac9a:	90 e0       	ldi	r25, 0x00	; 0
    ac9c:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    aca0:	f2 01       	movw	r30, r4
    aca2:	60 83       	st	Z, r22
    aca4:	71 83       	std	Z+1, r23	; 0x01
    aca6:	82 83       	std	Z+2, r24	; 0x02
    aca8:	93 83       	std	Z+3, r25	; 0x03
    acaa:	c8 01       	movw	r24, r16
    acac:	b7 01       	movw	r22, r14
    acae:	20 e0       	ldi	r18, 0x00	; 0
    acb0:	30 e0       	ldi	r19, 0x00	; 0
    acb2:	a9 01       	movw	r20, r18
    acb4:	0f 2e       	mov	r0, r31
    acb6:	f0 e0       	ldi	r31, 0x00	; 0
    acb8:	ef 2e       	mov	r14, r31
    acba:	f0 e0       	ldi	r31, 0x00	; 0
    acbc:	ff 2e       	mov	r15, r31
    acbe:	f4 e3       	ldi	r31, 0x34	; 52
    acc0:	0f 2f       	mov	r16, r31
    acc2:	f3 e4       	ldi	r31, 0x43	; 67
    acc4:	1f 2f       	mov	r17, r31
    acc6:	f0 2d       	mov	r31, r0
    acc8:	0e 94 a0 08 	call	0x1140	; 0x1140 <_Z3mapddddd>
    accc:	0f 90       	pop	r0
    acce:	0f 90       	pop	r0
    acd0:	0f 90       	pop	r0
    acd2:	0f 90       	pop	r0
        OCR3A=ICR3-vAl;
    acd4:	c0 91 96 00 	lds	r28, 0x0096
    acd8:	d0 91 97 00 	lds	r29, 0x0097
      case 12:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
        OCR1B=ICR1-vAl;
        break;
      case 5:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    acdc:	0e 94 bb 79 	call	0xf376	; 0xf376 <__fixsfsi>
        OCR3A=ICR3-vAl;
    ace0:	c6 1b       	sub	r28, r22
    ace2:	d7 0b       	sbc	r29, r23
    ace4:	d0 93 99 00 	sts	0x0099, r29
    ace8:	c0 93 98 00 	sts	0x0098, r28
    acec:	8f c2       	rjmp	.+1310   	; 0xb20c <_Z6angle5i+0x1eba>
        break;
      case 2:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    acee:	e6 e8       	ldi	r30, 0x86	; 134
    acf0:	f0 e0       	ldi	r31, 0x00	; 0
    acf2:	c0 81       	ld	r28, Z
    acf4:	d1 81       	ldd	r29, Z+1	; 0x01
    acf6:	80 80       	ld	r8, Z
    acf8:	91 80       	ldd	r9, Z+1	; 0x01
    acfa:	00 d0       	rcall	.+0      	; 0xacfc <_Z6angle5i+0x19aa>
    acfc:	0f 92       	push	r0
    acfe:	4d b6       	in	r4, 0x3d	; 61
    ad00:	5e b6       	in	r5, 0x3e	; 62
    ad02:	08 94       	sec
    ad04:	41 1c       	adc	r4, r1
    ad06:	51 1c       	adc	r5, r1
    ad08:	88 27       	eor	r24, r24
    ad0a:	77 fd       	sbrc	r23, 7
    ad0c:	80 95       	com	r24
    ad0e:	98 2f       	mov	r25, r24
    ad10:	0e 94 ee 79 	call	0xf3dc	; 0xf3dc <__floatsisf>
    ad14:	7b 01       	movw	r14, r22
    ad16:	8c 01       	movw	r16, r24
    ad18:	ce 01       	movw	r24, r28
    ad1a:	68 e2       	ldi	r22, 0x28	; 40
    ad1c:	70 e0       	ldi	r23, 0x00	; 0
    ad1e:	0e 94 05 7b 	call	0xf60a	; 0xf60a <__udivmodhi4>
    ad22:	80 e0       	ldi	r24, 0x00	; 0
    ad24:	90 e0       	ldi	r25, 0x00	; 0
    ad26:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    ad2a:	5b 01       	movw	r10, r22
    ad2c:	6c 01       	movw	r12, r24
    ad2e:	96 94       	lsr	r9
    ad30:	87 94       	ror	r8
    ad32:	96 94       	lsr	r9
    ad34:	87 94       	ror	r8
    ad36:	96 94       	lsr	r9
    ad38:	87 94       	ror	r8
    ad3a:	b4 01       	movw	r22, r8
    ad3c:	80 e0       	ldi	r24, 0x00	; 0
    ad3e:	90 e0       	ldi	r25, 0x00	; 0
    ad40:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    ad44:	f2 01       	movw	r30, r4
    ad46:	60 83       	st	Z, r22
    ad48:	71 83       	std	Z+1, r23	; 0x01
    ad4a:	82 83       	std	Z+2, r24	; 0x02
    ad4c:	93 83       	std	Z+3, r25	; 0x03
    ad4e:	c8 01       	movw	r24, r16
    ad50:	b7 01       	movw	r22, r14
    ad52:	20 e0       	ldi	r18, 0x00	; 0
    ad54:	30 e0       	ldi	r19, 0x00	; 0
    ad56:	a9 01       	movw	r20, r18
    ad58:	0f 2e       	mov	r0, r31
    ad5a:	f0 e0       	ldi	r31, 0x00	; 0
    ad5c:	ef 2e       	mov	r14, r31
    ad5e:	f0 e0       	ldi	r31, 0x00	; 0
    ad60:	ff 2e       	mov	r15, r31
    ad62:	f4 e3       	ldi	r31, 0x34	; 52
    ad64:	0f 2f       	mov	r16, r31
    ad66:	f3 e4       	ldi	r31, 0x43	; 67
    ad68:	1f 2f       	mov	r17, r31
    ad6a:	f0 2d       	mov	r31, r0
    ad6c:	0e 94 a0 08 	call	0x1140	; 0x1140 <_Z3mapddddd>
    ad70:	0f 90       	pop	r0
    ad72:	0f 90       	pop	r0
    ad74:	0f 90       	pop	r0
    ad76:	0f 90       	pop	r0
        OCR3B=ICR3-vAl;
    ad78:	c0 91 96 00 	lds	r28, 0x0096
    ad7c:	d0 91 97 00 	lds	r29, 0x0097
      case 5:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
        OCR3A=ICR3-vAl;
        break;
      case 2:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    ad80:	0e 94 bb 79 	call	0xf376	; 0xf376 <__fixsfsi>
        OCR3B=ICR3-vAl;
    ad84:	c6 1b       	sub	r28, r22
    ad86:	d7 0b       	sbc	r29, r23
    ad88:	d0 93 9b 00 	sts	0x009B, r29
    ad8c:	c0 93 9a 00 	sts	0x009A, r28
    ad90:	3d c2       	rjmp	.+1146   	; 0xb20c <_Z6angle5i+0x1eba>
        break;
      case 3:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    ad92:	e6 e8       	ldi	r30, 0x86	; 134
    ad94:	f0 e0       	ldi	r31, 0x00	; 0
    ad96:	c0 81       	ld	r28, Z
    ad98:	d1 81       	ldd	r29, Z+1	; 0x01
    ad9a:	80 80       	ld	r8, Z
    ad9c:	91 80       	ldd	r9, Z+1	; 0x01
    ad9e:	00 d0       	rcall	.+0      	; 0xada0 <_Z6angle5i+0x1a4e>
    ada0:	0f 92       	push	r0
    ada2:	4d b6       	in	r4, 0x3d	; 61
    ada4:	5e b6       	in	r5, 0x3e	; 62
    ada6:	08 94       	sec
    ada8:	41 1c       	adc	r4, r1
    adaa:	51 1c       	adc	r5, r1
    adac:	88 27       	eor	r24, r24
    adae:	77 fd       	sbrc	r23, 7
    adb0:	80 95       	com	r24
    adb2:	98 2f       	mov	r25, r24
    adb4:	0e 94 ee 79 	call	0xf3dc	; 0xf3dc <__floatsisf>
    adb8:	7b 01       	movw	r14, r22
    adba:	8c 01       	movw	r16, r24
    adbc:	ce 01       	movw	r24, r28
    adbe:	68 e2       	ldi	r22, 0x28	; 40
    adc0:	70 e0       	ldi	r23, 0x00	; 0
    adc2:	0e 94 05 7b 	call	0xf60a	; 0xf60a <__udivmodhi4>
    adc6:	80 e0       	ldi	r24, 0x00	; 0
    adc8:	90 e0       	ldi	r25, 0x00	; 0
    adca:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    adce:	5b 01       	movw	r10, r22
    add0:	6c 01       	movw	r12, r24
    add2:	96 94       	lsr	r9
    add4:	87 94       	ror	r8
    add6:	96 94       	lsr	r9
    add8:	87 94       	ror	r8
    adda:	96 94       	lsr	r9
    addc:	87 94       	ror	r8
    adde:	b4 01       	movw	r22, r8
    ade0:	80 e0       	ldi	r24, 0x00	; 0
    ade2:	90 e0       	ldi	r25, 0x00	; 0
    ade4:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    ade8:	f2 01       	movw	r30, r4
    adea:	60 83       	st	Z, r22
    adec:	71 83       	std	Z+1, r23	; 0x01
    adee:	82 83       	std	Z+2, r24	; 0x02
    adf0:	93 83       	std	Z+3, r25	; 0x03
    adf2:	c8 01       	movw	r24, r16
    adf4:	b7 01       	movw	r22, r14
    adf6:	20 e0       	ldi	r18, 0x00	; 0
    adf8:	30 e0       	ldi	r19, 0x00	; 0
    adfa:	a9 01       	movw	r20, r18
    adfc:	0f 2e       	mov	r0, r31
    adfe:	f0 e0       	ldi	r31, 0x00	; 0
    ae00:	ef 2e       	mov	r14, r31
    ae02:	f0 e0       	ldi	r31, 0x00	; 0
    ae04:	ff 2e       	mov	r15, r31
    ae06:	f4 e3       	ldi	r31, 0x34	; 52
    ae08:	0f 2f       	mov	r16, r31
    ae0a:	f3 e4       	ldi	r31, 0x43	; 67
    ae0c:	1f 2f       	mov	r17, r31
    ae0e:	f0 2d       	mov	r31, r0
    ae10:	0e 94 a0 08 	call	0x1140	; 0x1140 <_Z3mapddddd>
    ae14:	0f 90       	pop	r0
    ae16:	0f 90       	pop	r0
    ae18:	0f 90       	pop	r0
    ae1a:	0f 90       	pop	r0
        OCR3C=ICR3-vAl;
    ae1c:	c0 91 96 00 	lds	r28, 0x0096
    ae20:	d0 91 97 00 	lds	r29, 0x0097
      case 2:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
        OCR3B=ICR3-vAl;
        break;
      case 3:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    ae24:	0e 94 bb 79 	call	0xf376	; 0xf376 <__fixsfsi>
        OCR3C=ICR3-vAl;
    ae28:	c6 1b       	sub	r28, r22
    ae2a:	d7 0b       	sbc	r29, r23
    ae2c:	d0 93 9d 00 	sts	0x009D, r29
    ae30:	c0 93 9c 00 	sts	0x009C, r28
    ae34:	eb c1       	rjmp	.+982    	; 0xb20c <_Z6angle5i+0x1eba>
        break;
      case 6:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    ae36:	e6 e8       	ldi	r30, 0x86	; 134
    ae38:	f0 e0       	ldi	r31, 0x00	; 0
    ae3a:	c0 81       	ld	r28, Z
    ae3c:	d1 81       	ldd	r29, Z+1	; 0x01
    ae3e:	80 80       	ld	r8, Z
    ae40:	91 80       	ldd	r9, Z+1	; 0x01
    ae42:	00 d0       	rcall	.+0      	; 0xae44 <_Z6angle5i+0x1af2>
    ae44:	0f 92       	push	r0
    ae46:	4d b6       	in	r4, 0x3d	; 61
    ae48:	5e b6       	in	r5, 0x3e	; 62
    ae4a:	08 94       	sec
    ae4c:	41 1c       	adc	r4, r1
    ae4e:	51 1c       	adc	r5, r1
    ae50:	88 27       	eor	r24, r24
    ae52:	77 fd       	sbrc	r23, 7
    ae54:	80 95       	com	r24
    ae56:	98 2f       	mov	r25, r24
    ae58:	0e 94 ee 79 	call	0xf3dc	; 0xf3dc <__floatsisf>
    ae5c:	7b 01       	movw	r14, r22
    ae5e:	8c 01       	movw	r16, r24
    ae60:	ce 01       	movw	r24, r28
    ae62:	68 e2       	ldi	r22, 0x28	; 40
    ae64:	70 e0       	ldi	r23, 0x00	; 0
    ae66:	0e 94 05 7b 	call	0xf60a	; 0xf60a <__udivmodhi4>
    ae6a:	80 e0       	ldi	r24, 0x00	; 0
    ae6c:	90 e0       	ldi	r25, 0x00	; 0
    ae6e:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    ae72:	5b 01       	movw	r10, r22
    ae74:	6c 01       	movw	r12, r24
    ae76:	96 94       	lsr	r9
    ae78:	87 94       	ror	r8
    ae7a:	96 94       	lsr	r9
    ae7c:	87 94       	ror	r8
    ae7e:	96 94       	lsr	r9
    ae80:	87 94       	ror	r8
    ae82:	b4 01       	movw	r22, r8
    ae84:	80 e0       	ldi	r24, 0x00	; 0
    ae86:	90 e0       	ldi	r25, 0x00	; 0
    ae88:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    ae8c:	f2 01       	movw	r30, r4
    ae8e:	60 83       	st	Z, r22
    ae90:	71 83       	std	Z+1, r23	; 0x01
    ae92:	82 83       	std	Z+2, r24	; 0x02
    ae94:	93 83       	std	Z+3, r25	; 0x03
    ae96:	c8 01       	movw	r24, r16
    ae98:	b7 01       	movw	r22, r14
    ae9a:	20 e0       	ldi	r18, 0x00	; 0
    ae9c:	30 e0       	ldi	r19, 0x00	; 0
    ae9e:	a9 01       	movw	r20, r18
    aea0:	0f 2e       	mov	r0, r31
    aea2:	f0 e0       	ldi	r31, 0x00	; 0
    aea4:	ef 2e       	mov	r14, r31
    aea6:	f0 e0       	ldi	r31, 0x00	; 0
    aea8:	ff 2e       	mov	r15, r31
    aeaa:	f4 e3       	ldi	r31, 0x34	; 52
    aeac:	0f 2f       	mov	r16, r31
    aeae:	f3 e4       	ldi	r31, 0x43	; 67
    aeb0:	1f 2f       	mov	r17, r31
    aeb2:	f0 2d       	mov	r31, r0
    aeb4:	0e 94 a0 08 	call	0x1140	; 0x1140 <_Z3mapddddd>
    aeb8:	0f 90       	pop	r0
    aeba:	0f 90       	pop	r0
    aebc:	0f 90       	pop	r0
    aebe:	0f 90       	pop	r0
        OCR4A=ICR4-vAl;
    aec0:	c0 91 a6 00 	lds	r28, 0x00A6
    aec4:	d0 91 a7 00 	lds	r29, 0x00A7
      case 3:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
        OCR3C=ICR3-vAl;
        break;
      case 6:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    aec8:	0e 94 bb 79 	call	0xf376	; 0xf376 <__fixsfsi>
        OCR4A=ICR4-vAl;
    aecc:	c6 1b       	sub	r28, r22
    aece:	d7 0b       	sbc	r29, r23
    aed0:	d0 93 a9 00 	sts	0x00A9, r29
    aed4:	c0 93 a8 00 	sts	0x00A8, r28
    aed8:	99 c1       	rjmp	.+818    	; 0xb20c <_Z6angle5i+0x1eba>
        break;
      case 7:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    aeda:	e6 e8       	ldi	r30, 0x86	; 134
    aedc:	f0 e0       	ldi	r31, 0x00	; 0
    aede:	c0 81       	ld	r28, Z
    aee0:	d1 81       	ldd	r29, Z+1	; 0x01
    aee2:	80 80       	ld	r8, Z
    aee4:	91 80       	ldd	r9, Z+1	; 0x01
    aee6:	00 d0       	rcall	.+0      	; 0xaee8 <_Z6angle5i+0x1b96>
    aee8:	0f 92       	push	r0
    aeea:	4d b6       	in	r4, 0x3d	; 61
    aeec:	5e b6       	in	r5, 0x3e	; 62
    aeee:	08 94       	sec
    aef0:	41 1c       	adc	r4, r1
    aef2:	51 1c       	adc	r5, r1
    aef4:	88 27       	eor	r24, r24
    aef6:	77 fd       	sbrc	r23, 7
    aef8:	80 95       	com	r24
    aefa:	98 2f       	mov	r25, r24
    aefc:	0e 94 ee 79 	call	0xf3dc	; 0xf3dc <__floatsisf>
    af00:	7b 01       	movw	r14, r22
    af02:	8c 01       	movw	r16, r24
    af04:	ce 01       	movw	r24, r28
    af06:	68 e2       	ldi	r22, 0x28	; 40
    af08:	70 e0       	ldi	r23, 0x00	; 0
    af0a:	0e 94 05 7b 	call	0xf60a	; 0xf60a <__udivmodhi4>
    af0e:	80 e0       	ldi	r24, 0x00	; 0
    af10:	90 e0       	ldi	r25, 0x00	; 0
    af12:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    af16:	5b 01       	movw	r10, r22
    af18:	6c 01       	movw	r12, r24
    af1a:	96 94       	lsr	r9
    af1c:	87 94       	ror	r8
    af1e:	96 94       	lsr	r9
    af20:	87 94       	ror	r8
    af22:	96 94       	lsr	r9
    af24:	87 94       	ror	r8
    af26:	b4 01       	movw	r22, r8
    af28:	80 e0       	ldi	r24, 0x00	; 0
    af2a:	90 e0       	ldi	r25, 0x00	; 0
    af2c:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    af30:	f2 01       	movw	r30, r4
    af32:	60 83       	st	Z, r22
    af34:	71 83       	std	Z+1, r23	; 0x01
    af36:	82 83       	std	Z+2, r24	; 0x02
    af38:	93 83       	std	Z+3, r25	; 0x03
    af3a:	c8 01       	movw	r24, r16
    af3c:	b7 01       	movw	r22, r14
    af3e:	20 e0       	ldi	r18, 0x00	; 0
    af40:	30 e0       	ldi	r19, 0x00	; 0
    af42:	a9 01       	movw	r20, r18
    af44:	0f 2e       	mov	r0, r31
    af46:	f0 e0       	ldi	r31, 0x00	; 0
    af48:	ef 2e       	mov	r14, r31
    af4a:	f0 e0       	ldi	r31, 0x00	; 0
    af4c:	ff 2e       	mov	r15, r31
    af4e:	f4 e3       	ldi	r31, 0x34	; 52
    af50:	0f 2f       	mov	r16, r31
    af52:	f3 e4       	ldi	r31, 0x43	; 67
    af54:	1f 2f       	mov	r17, r31
    af56:	f0 2d       	mov	r31, r0
    af58:	0e 94 a0 08 	call	0x1140	; 0x1140 <_Z3mapddddd>
    af5c:	0f 90       	pop	r0
    af5e:	0f 90       	pop	r0
    af60:	0f 90       	pop	r0
    af62:	0f 90       	pop	r0
        OCR4B=ICR4-vAl;
    af64:	c0 91 a6 00 	lds	r28, 0x00A6
    af68:	d0 91 a7 00 	lds	r29, 0x00A7
      case 6:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
        OCR4A=ICR4-vAl;
        break;
      case 7:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    af6c:	0e 94 bb 79 	call	0xf376	; 0xf376 <__fixsfsi>
        OCR4B=ICR4-vAl;
    af70:	c6 1b       	sub	r28, r22
    af72:	d7 0b       	sbc	r29, r23
    af74:	d0 93 ab 00 	sts	0x00AB, r29
    af78:	c0 93 aa 00 	sts	0x00AA, r28
    af7c:	47 c1       	rjmp	.+654    	; 0xb20c <_Z6angle5i+0x1eba>
        break; 
      case 8:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    af7e:	e6 e8       	ldi	r30, 0x86	; 134
    af80:	f0 e0       	ldi	r31, 0x00	; 0
    af82:	c0 81       	ld	r28, Z
    af84:	d1 81       	ldd	r29, Z+1	; 0x01
    af86:	80 80       	ld	r8, Z
    af88:	91 80       	ldd	r9, Z+1	; 0x01
    af8a:	00 d0       	rcall	.+0      	; 0xaf8c <_Z6angle5i+0x1c3a>
    af8c:	0f 92       	push	r0
    af8e:	4d b6       	in	r4, 0x3d	; 61
    af90:	5e b6       	in	r5, 0x3e	; 62
    af92:	08 94       	sec
    af94:	41 1c       	adc	r4, r1
    af96:	51 1c       	adc	r5, r1
    af98:	88 27       	eor	r24, r24
    af9a:	77 fd       	sbrc	r23, 7
    af9c:	80 95       	com	r24
    af9e:	98 2f       	mov	r25, r24
    afa0:	0e 94 ee 79 	call	0xf3dc	; 0xf3dc <__floatsisf>
    afa4:	7b 01       	movw	r14, r22
    afa6:	8c 01       	movw	r16, r24
    afa8:	ce 01       	movw	r24, r28
    afaa:	68 e2       	ldi	r22, 0x28	; 40
    afac:	70 e0       	ldi	r23, 0x00	; 0
    afae:	0e 94 05 7b 	call	0xf60a	; 0xf60a <__udivmodhi4>
    afb2:	80 e0       	ldi	r24, 0x00	; 0
    afb4:	90 e0       	ldi	r25, 0x00	; 0
    afb6:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    afba:	5b 01       	movw	r10, r22
    afbc:	6c 01       	movw	r12, r24
    afbe:	96 94       	lsr	r9
    afc0:	87 94       	ror	r8
    afc2:	96 94       	lsr	r9
    afc4:	87 94       	ror	r8
    afc6:	96 94       	lsr	r9
    afc8:	87 94       	ror	r8
    afca:	b4 01       	movw	r22, r8
    afcc:	80 e0       	ldi	r24, 0x00	; 0
    afce:	90 e0       	ldi	r25, 0x00	; 0
    afd0:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    afd4:	f2 01       	movw	r30, r4
    afd6:	60 83       	st	Z, r22
    afd8:	71 83       	std	Z+1, r23	; 0x01
    afda:	82 83       	std	Z+2, r24	; 0x02
    afdc:	93 83       	std	Z+3, r25	; 0x03
    afde:	c8 01       	movw	r24, r16
    afe0:	b7 01       	movw	r22, r14
    afe2:	20 e0       	ldi	r18, 0x00	; 0
    afe4:	30 e0       	ldi	r19, 0x00	; 0
    afe6:	a9 01       	movw	r20, r18
    afe8:	0f 2e       	mov	r0, r31
    afea:	f0 e0       	ldi	r31, 0x00	; 0
    afec:	ef 2e       	mov	r14, r31
    afee:	f0 e0       	ldi	r31, 0x00	; 0
    aff0:	ff 2e       	mov	r15, r31
    aff2:	f4 e3       	ldi	r31, 0x34	; 52
    aff4:	0f 2f       	mov	r16, r31
    aff6:	f3 e4       	ldi	r31, 0x43	; 67
    aff8:	1f 2f       	mov	r17, r31
    affa:	f0 2d       	mov	r31, r0
    affc:	0e 94 a0 08 	call	0x1140	; 0x1140 <_Z3mapddddd>
    b000:	0f 90       	pop	r0
    b002:	0f 90       	pop	r0
    b004:	0f 90       	pop	r0
    b006:	0f 90       	pop	r0
        OCR4C=ICR4-vAl;
    b008:	c0 91 a6 00 	lds	r28, 0x00A6
    b00c:	d0 91 a7 00 	lds	r29, 0x00A7
      case 7:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
        OCR4B=ICR4-vAl;
        break; 
      case 8:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    b010:	0e 94 bb 79 	call	0xf376	; 0xf376 <__fixsfsi>
        OCR4C=ICR4-vAl;
    b014:	c6 1b       	sub	r28, r22
    b016:	d7 0b       	sbc	r29, r23
    b018:	d0 93 ad 00 	sts	0x00AD, r29
    b01c:	c0 93 ac 00 	sts	0x00AC, r28
    b020:	f5 c0       	rjmp	.+490    	; 0xb20c <_Z6angle5i+0x1eba>
        break;
      case 46:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    b022:	e6 e8       	ldi	r30, 0x86	; 134
    b024:	f0 e0       	ldi	r31, 0x00	; 0
    b026:	c0 81       	ld	r28, Z
    b028:	d1 81       	ldd	r29, Z+1	; 0x01
    b02a:	80 80       	ld	r8, Z
    b02c:	91 80       	ldd	r9, Z+1	; 0x01
    b02e:	00 d0       	rcall	.+0      	; 0xb030 <_Z6angle5i+0x1cde>
    b030:	0f 92       	push	r0
    b032:	4d b6       	in	r4, 0x3d	; 61
    b034:	5e b6       	in	r5, 0x3e	; 62
    b036:	08 94       	sec
    b038:	41 1c       	adc	r4, r1
    b03a:	51 1c       	adc	r5, r1
    b03c:	88 27       	eor	r24, r24
    b03e:	77 fd       	sbrc	r23, 7
    b040:	80 95       	com	r24
    b042:	98 2f       	mov	r25, r24
    b044:	0e 94 ee 79 	call	0xf3dc	; 0xf3dc <__floatsisf>
    b048:	7b 01       	movw	r14, r22
    b04a:	8c 01       	movw	r16, r24
    b04c:	ce 01       	movw	r24, r28
    b04e:	68 e2       	ldi	r22, 0x28	; 40
    b050:	70 e0       	ldi	r23, 0x00	; 0
    b052:	0e 94 05 7b 	call	0xf60a	; 0xf60a <__udivmodhi4>
    b056:	80 e0       	ldi	r24, 0x00	; 0
    b058:	90 e0       	ldi	r25, 0x00	; 0
    b05a:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    b05e:	5b 01       	movw	r10, r22
    b060:	6c 01       	movw	r12, r24
    b062:	96 94       	lsr	r9
    b064:	87 94       	ror	r8
    b066:	96 94       	lsr	r9
    b068:	87 94       	ror	r8
    b06a:	96 94       	lsr	r9
    b06c:	87 94       	ror	r8
    b06e:	b4 01       	movw	r22, r8
    b070:	80 e0       	ldi	r24, 0x00	; 0
    b072:	90 e0       	ldi	r25, 0x00	; 0
    b074:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    b078:	f2 01       	movw	r30, r4
    b07a:	60 83       	st	Z, r22
    b07c:	71 83       	std	Z+1, r23	; 0x01
    b07e:	82 83       	std	Z+2, r24	; 0x02
    b080:	93 83       	std	Z+3, r25	; 0x03
    b082:	c8 01       	movw	r24, r16
    b084:	b7 01       	movw	r22, r14
    b086:	20 e0       	ldi	r18, 0x00	; 0
    b088:	30 e0       	ldi	r19, 0x00	; 0
    b08a:	a9 01       	movw	r20, r18
    b08c:	0f 2e       	mov	r0, r31
    b08e:	f0 e0       	ldi	r31, 0x00	; 0
    b090:	ef 2e       	mov	r14, r31
    b092:	f0 e0       	ldi	r31, 0x00	; 0
    b094:	ff 2e       	mov	r15, r31
    b096:	f4 e3       	ldi	r31, 0x34	; 52
    b098:	0f 2f       	mov	r16, r31
    b09a:	f3 e4       	ldi	r31, 0x43	; 67
    b09c:	1f 2f       	mov	r17, r31
    b09e:	f0 2d       	mov	r31, r0
    b0a0:	0e 94 a0 08 	call	0x1140	; 0x1140 <_Z3mapddddd>
    b0a4:	0f 90       	pop	r0
    b0a6:	0f 90       	pop	r0
    b0a8:	0f 90       	pop	r0
    b0aa:	0f 90       	pop	r0
        OCR5A=ICR5-vAl;
    b0ac:	c0 91 26 01 	lds	r28, 0x0126
    b0b0:	d0 91 27 01 	lds	r29, 0x0127
      case 8:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
        OCR4C=ICR4-vAl;
        break;
      case 46:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    b0b4:	0e 94 bb 79 	call	0xf376	; 0xf376 <__fixsfsi>
        OCR5A=ICR5-vAl;
    b0b8:	c6 1b       	sub	r28, r22
    b0ba:	d7 0b       	sbc	r29, r23
    b0bc:	d0 93 29 01 	sts	0x0129, r29
    b0c0:	c0 93 28 01 	sts	0x0128, r28
    b0c4:	a3 c0       	rjmp	.+326    	; 0xb20c <_Z6angle5i+0x1eba>
        break;
      case 45:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    b0c6:	e6 e8       	ldi	r30, 0x86	; 134
    b0c8:	f0 e0       	ldi	r31, 0x00	; 0
    b0ca:	c0 81       	ld	r28, Z
    b0cc:	d1 81       	ldd	r29, Z+1	; 0x01
    b0ce:	80 80       	ld	r8, Z
    b0d0:	91 80       	ldd	r9, Z+1	; 0x01
    b0d2:	00 d0       	rcall	.+0      	; 0xb0d4 <_Z6angle5i+0x1d82>
    b0d4:	0f 92       	push	r0
    b0d6:	4d b6       	in	r4, 0x3d	; 61
    b0d8:	5e b6       	in	r5, 0x3e	; 62
    b0da:	08 94       	sec
    b0dc:	41 1c       	adc	r4, r1
    b0de:	51 1c       	adc	r5, r1
    b0e0:	88 27       	eor	r24, r24
    b0e2:	77 fd       	sbrc	r23, 7
    b0e4:	80 95       	com	r24
    b0e6:	98 2f       	mov	r25, r24
    b0e8:	0e 94 ee 79 	call	0xf3dc	; 0xf3dc <__floatsisf>
    b0ec:	7b 01       	movw	r14, r22
    b0ee:	8c 01       	movw	r16, r24
    b0f0:	ce 01       	movw	r24, r28
    b0f2:	68 e2       	ldi	r22, 0x28	; 40
    b0f4:	70 e0       	ldi	r23, 0x00	; 0
    b0f6:	0e 94 05 7b 	call	0xf60a	; 0xf60a <__udivmodhi4>
    b0fa:	80 e0       	ldi	r24, 0x00	; 0
    b0fc:	90 e0       	ldi	r25, 0x00	; 0
    b0fe:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    b102:	5b 01       	movw	r10, r22
    b104:	6c 01       	movw	r12, r24
    b106:	96 94       	lsr	r9
    b108:	87 94       	ror	r8
    b10a:	96 94       	lsr	r9
    b10c:	87 94       	ror	r8
    b10e:	96 94       	lsr	r9
    b110:	87 94       	ror	r8
    b112:	b4 01       	movw	r22, r8
    b114:	80 e0       	ldi	r24, 0x00	; 0
    b116:	90 e0       	ldi	r25, 0x00	; 0
    b118:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    b11c:	f2 01       	movw	r30, r4
    b11e:	60 83       	st	Z, r22
    b120:	71 83       	std	Z+1, r23	; 0x01
    b122:	82 83       	std	Z+2, r24	; 0x02
    b124:	93 83       	std	Z+3, r25	; 0x03
    b126:	c8 01       	movw	r24, r16
    b128:	b7 01       	movw	r22, r14
    b12a:	20 e0       	ldi	r18, 0x00	; 0
    b12c:	30 e0       	ldi	r19, 0x00	; 0
    b12e:	a9 01       	movw	r20, r18
    b130:	0f 2e       	mov	r0, r31
    b132:	f0 e0       	ldi	r31, 0x00	; 0
    b134:	ef 2e       	mov	r14, r31
    b136:	f0 e0       	ldi	r31, 0x00	; 0
    b138:	ff 2e       	mov	r15, r31
    b13a:	f4 e3       	ldi	r31, 0x34	; 52
    b13c:	0f 2f       	mov	r16, r31
    b13e:	f3 e4       	ldi	r31, 0x43	; 67
    b140:	1f 2f       	mov	r17, r31
    b142:	f0 2d       	mov	r31, r0
    b144:	0e 94 a0 08 	call	0x1140	; 0x1140 <_Z3mapddddd>
    b148:	0f 90       	pop	r0
    b14a:	0f 90       	pop	r0
    b14c:	0f 90       	pop	r0
    b14e:	0f 90       	pop	r0
        OCR5B=ICR5-vAl;
    b150:	c0 91 26 01 	lds	r28, 0x0126
    b154:	d0 91 27 01 	lds	r29, 0x0127
      case 46:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
        OCR5A=ICR5-vAl;
        break;
      case 45:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    b158:	0e 94 bb 79 	call	0xf376	; 0xf376 <__fixsfsi>
        OCR5B=ICR5-vAl;
    b15c:	c6 1b       	sub	r28, r22
    b15e:	d7 0b       	sbc	r29, r23
    b160:	d0 93 2b 01 	sts	0x012B, r29
    b164:	c0 93 2a 01 	sts	0x012A, r28
    b168:	51 c0       	rjmp	.+162    	; 0xb20c <_Z6angle5i+0x1eba>
        break;
      case 44:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    b16a:	e6 e8       	ldi	r30, 0x86	; 134
    b16c:	f0 e0       	ldi	r31, 0x00	; 0
    b16e:	c0 81       	ld	r28, Z
    b170:	d1 81       	ldd	r29, Z+1	; 0x01
    b172:	80 80       	ld	r8, Z
    b174:	91 80       	ldd	r9, Z+1	; 0x01
    b176:	00 d0       	rcall	.+0      	; 0xb178 <_Z6angle5i+0x1e26>
    b178:	0f 92       	push	r0
    b17a:	4d b6       	in	r4, 0x3d	; 61
    b17c:	5e b6       	in	r5, 0x3e	; 62
    b17e:	08 94       	sec
    b180:	41 1c       	adc	r4, r1
    b182:	51 1c       	adc	r5, r1
    b184:	88 27       	eor	r24, r24
    b186:	77 fd       	sbrc	r23, 7
    b188:	80 95       	com	r24
    b18a:	98 2f       	mov	r25, r24
    b18c:	0e 94 ee 79 	call	0xf3dc	; 0xf3dc <__floatsisf>
    b190:	7b 01       	movw	r14, r22
    b192:	8c 01       	movw	r16, r24
    b194:	ce 01       	movw	r24, r28
    b196:	68 e2       	ldi	r22, 0x28	; 40
    b198:	70 e0       	ldi	r23, 0x00	; 0
    b19a:	0e 94 05 7b 	call	0xf60a	; 0xf60a <__udivmodhi4>
    b19e:	80 e0       	ldi	r24, 0x00	; 0
    b1a0:	90 e0       	ldi	r25, 0x00	; 0
    b1a2:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    b1a6:	5b 01       	movw	r10, r22
    b1a8:	6c 01       	movw	r12, r24
    b1aa:	96 94       	lsr	r9
    b1ac:	87 94       	ror	r8
    b1ae:	96 94       	lsr	r9
    b1b0:	87 94       	ror	r8
    b1b2:	96 94       	lsr	r9
    b1b4:	87 94       	ror	r8
    b1b6:	b4 01       	movw	r22, r8
    b1b8:	80 e0       	ldi	r24, 0x00	; 0
    b1ba:	90 e0       	ldi	r25, 0x00	; 0
    b1bc:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    b1c0:	f2 01       	movw	r30, r4
    b1c2:	60 83       	st	Z, r22
    b1c4:	71 83       	std	Z+1, r23	; 0x01
    b1c6:	82 83       	std	Z+2, r24	; 0x02
    b1c8:	93 83       	std	Z+3, r25	; 0x03
    b1ca:	c8 01       	movw	r24, r16
    b1cc:	b7 01       	movw	r22, r14
    b1ce:	20 e0       	ldi	r18, 0x00	; 0
    b1d0:	30 e0       	ldi	r19, 0x00	; 0
    b1d2:	a9 01       	movw	r20, r18
    b1d4:	0f 2e       	mov	r0, r31
    b1d6:	f0 e0       	ldi	r31, 0x00	; 0
    b1d8:	ef 2e       	mov	r14, r31
    b1da:	f0 e0       	ldi	r31, 0x00	; 0
    b1dc:	ff 2e       	mov	r15, r31
    b1de:	f4 e3       	ldi	r31, 0x34	; 52
    b1e0:	0f 2f       	mov	r16, r31
    b1e2:	f3 e4       	ldi	r31, 0x43	; 67
    b1e4:	1f 2f       	mov	r17, r31
    b1e6:	f0 2d       	mov	r31, r0
    b1e8:	0e 94 a0 08 	call	0x1140	; 0x1140 <_Z3mapddddd>
    b1ec:	0f 90       	pop	r0
    b1ee:	0f 90       	pop	r0
    b1f0:	0f 90       	pop	r0
    b1f2:	0f 90       	pop	r0
        OCR5C=ICR5-vAl;
    b1f4:	c0 91 26 01 	lds	r28, 0x0126
    b1f8:	d0 91 27 01 	lds	r29, 0x0127
      case 45:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
        OCR5B=ICR5-vAl;
        break;
      case 44:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    b1fc:	0e 94 bb 79 	call	0xf376	; 0xf376 <__fixsfsi>
        OCR5C=ICR5-vAl;
    b200:	c6 1b       	sub	r28, r22
    b202:	d7 0b       	sbc	r29, r23
    b204:	d0 93 2d 01 	sts	0x012D, r29
    b208:	c0 93 2c 01 	sts	0x012C, r28
		
	}
    b20c:	df 91       	pop	r29
    b20e:	cf 91       	pop	r28
    b210:	1f 91       	pop	r17
    b212:	0f 91       	pop	r16
    b214:	ff 90       	pop	r15
    b216:	ef 90       	pop	r14
    b218:	df 90       	pop	r13
    b21a:	cf 90       	pop	r12
    b21c:	bf 90       	pop	r11
    b21e:	af 90       	pop	r10
    b220:	9f 90       	pop	r9
    b222:	8f 90       	pop	r8
    b224:	7f 90       	pop	r7
    b226:	6f 90       	pop	r6
    b228:	5f 90       	pop	r5
    b22a:	4f 90       	pop	r4
    b22c:	3f 90       	pop	r3
    b22e:	2f 90       	pop	r2
    b230:	08 95       	ret

0000b232 <_Z6angle6i>:
	void angle6(int dist)
	{
    b232:	2f 92       	push	r2
    b234:	3f 92       	push	r3
    b236:	4f 92       	push	r4
    b238:	5f 92       	push	r5
    b23a:	6f 92       	push	r6
    b23c:	7f 92       	push	r7
    b23e:	8f 92       	push	r8
    b240:	9f 92       	push	r9
    b242:	af 92       	push	r10
    b244:	bf 92       	push	r11
    b246:	cf 92       	push	r12
    b248:	df 92       	push	r13
    b24a:	ef 92       	push	r14
    b24c:	ff 92       	push	r15
    b24e:	0f 93       	push	r16
    b250:	1f 93       	push	r17
    b252:	cf 93       	push	r28
    b254:	df 93       	push	r29
		v=(ang1-90)+ (dist-4250)*k;
    b256:	bc 01       	movw	r22, r24
    b258:	6a 59       	subi	r22, 0x9A	; 154
    b25a:	70 41       	sbci	r23, 0x10	; 16
    b25c:	88 27       	eor	r24, r24
    b25e:	77 fd       	sbrc	r23, 7
    b260:	80 95       	com	r24
    b262:	98 2f       	mov	r25, r24
    b264:	0e 94 ee 79 	call	0xf3dc	; 0xf3dc <__floatsisf>
    b268:	20 91 b4 02 	lds	r18, 0x02B4
    b26c:	30 91 b5 02 	lds	r19, 0x02B5
    b270:	40 91 b6 02 	lds	r20, 0x02B6
    b274:	50 91 b7 02 	lds	r21, 0x02B7
    b278:	0e 94 a2 7a 	call	0xf544	; 0xf544 <__mulsf3>
    b27c:	f6 2e       	mov	r15, r22
    b27e:	07 2f       	mov	r16, r23
    b280:	18 2f       	mov	r17, r24
    b282:	e9 2e       	mov	r14, r25
    b284:	60 91 b8 02 	lds	r22, 0x02B8
    b288:	70 91 b9 02 	lds	r23, 0x02B9
    b28c:	6a 55       	subi	r22, 0x5A	; 90
    b28e:	70 40       	sbci	r23, 0x00	; 0
    b290:	88 27       	eor	r24, r24
    b292:	77 fd       	sbrc	r23, 7
    b294:	80 95       	com	r24
    b296:	98 2f       	mov	r25, r24
    b298:	0e 94 ee 79 	call	0xf3dc	; 0xf3dc <__floatsisf>
    b29c:	2f 2d       	mov	r18, r15
    b29e:	30 2f       	mov	r19, r16
    b2a0:	41 2f       	mov	r20, r17
    b2a2:	5e 2d       	mov	r21, r14
    b2a4:	0e 94 eb 78 	call	0xf1d6	; 0xf1d6 <__addsf3>
    b2a8:	0e 94 bb 79 	call	0xf376	; 0xf376 <__fixsfsi>
    b2ac:	eb 01       	movw	r28, r22
    b2ae:	70 93 cb 02 	sts	0x02CB, r23
    b2b2:	60 93 ca 02 	sts	0x02CA, r22
		y=(ang2-90)+ (dist-4250)*k;
    b2b6:	60 91 ba 02 	lds	r22, 0x02BA
    b2ba:	70 91 bb 02 	lds	r23, 0x02BB
    b2be:	6a 55       	subi	r22, 0x5A	; 90
    b2c0:	70 40       	sbci	r23, 0x00	; 0
    b2c2:	88 27       	eor	r24, r24
    b2c4:	77 fd       	sbrc	r23, 7
    b2c6:	80 95       	com	r24
    b2c8:	98 2f       	mov	r25, r24
    b2ca:	0e 94 ee 79 	call	0xf3dc	; 0xf3dc <__floatsisf>
    b2ce:	9b 01       	movw	r18, r22
    b2d0:	ac 01       	movw	r20, r24
    b2d2:	6f 2d       	mov	r22, r15
    b2d4:	70 2f       	mov	r23, r16
    b2d6:	81 2f       	mov	r24, r17
    b2d8:	9e 2d       	mov	r25, r14
    b2da:	0e 94 eb 78 	call	0xf1d6	; 0xf1d6 <__addsf3>
    b2de:	0e 94 bb 79 	call	0xf376	; 0xf376 <__fixsfsi>
    b2e2:	70 93 cd 02 	sts	0x02CD, r23
    b2e6:	60 93 cc 02 	sts	0x02CC, r22
		z=(ang3-90)+ (dist-4250)*k;
    b2ea:	60 91 bc 02 	lds	r22, 0x02BC
    b2ee:	70 91 bd 02 	lds	r23, 0x02BD
    b2f2:	6a 55       	subi	r22, 0x5A	; 90
    b2f4:	70 40       	sbci	r23, 0x00	; 0
    b2f6:	88 27       	eor	r24, r24
    b2f8:	77 fd       	sbrc	r23, 7
    b2fa:	80 95       	com	r24
    b2fc:	98 2f       	mov	r25, r24
    b2fe:	0e 94 ee 79 	call	0xf3dc	; 0xf3dc <__floatsisf>
    b302:	9b 01       	movw	r18, r22
    b304:	ac 01       	movw	r20, r24
    b306:	6f 2d       	mov	r22, r15
    b308:	70 2f       	mov	r23, r16
    b30a:	81 2f       	mov	r24, r17
    b30c:	9e 2d       	mov	r25, r14
    b30e:	0e 94 eb 78 	call	0xf1d6	; 0xf1d6 <__addsf3>
    b312:	0e 94 bb 79 	call	0xf376	; 0xf376 <__fixsfsi>
    b316:	70 93 cf 02 	sts	0x02CF, r23
    b31a:	60 93 ce 02 	sts	0x02CE, r22
		w=(ang4-90)+ (dist-4250)*k;
    b31e:	60 91 be 02 	lds	r22, 0x02BE
    b322:	70 91 bf 02 	lds	r23, 0x02BF
    b326:	6a 55       	subi	r22, 0x5A	; 90
    b328:	70 40       	sbci	r23, 0x00	; 0
    b32a:	88 27       	eor	r24, r24
    b32c:	77 fd       	sbrc	r23, 7
    b32e:	80 95       	com	r24
    b330:	98 2f       	mov	r25, r24
    b332:	0e 94 ee 79 	call	0xf3dc	; 0xf3dc <__floatsisf>
    b336:	9b 01       	movw	r18, r22
    b338:	ac 01       	movw	r20, r24
    b33a:	6f 2d       	mov	r22, r15
    b33c:	70 2f       	mov	r23, r16
    b33e:	81 2f       	mov	r24, r17
    b340:	9e 2d       	mov	r25, r14
    b342:	0e 94 eb 78 	call	0xf1d6	; 0xf1d6 <__addsf3>
    b346:	0e 94 bb 79 	call	0xf376	; 0xf376 <__fixsfsi>
    b34a:	70 93 d1 02 	sts	0x02D1, r23
    b34e:	60 93 d0 02 	sts	0x02D0, r22
     }
  }

  void write(int vAl)           //PIN=servo pin no. on mega,vAl=angle F_CPU for the servo at pin
  {
    switch(pIn)
    b352:	80 91 d4 02 	lds	r24, 0x02D4
    b356:	88 30       	cpi	r24, 0x08	; 8
    b358:	09 f4       	brne	.+2      	; 0xb35c <_Z6angle6i+0x12a>
    b35a:	72 c2       	rjmp	.+1252   	; 0xb840 <_Z6angle6i+0x60e>
    b35c:	89 30       	cpi	r24, 0x09	; 9
    b35e:	98 f4       	brcc	.+38     	; 0xb386 <_Z6angle6i+0x154>
    b360:	85 30       	cpi	r24, 0x05	; 5
    b362:	09 f4       	brne	.+2      	; 0xb366 <_Z6angle6i+0x134>
    b364:	ce c0       	rjmp	.+412    	; 0xb502 <_Z6angle6i+0x2d0>
    b366:	86 30       	cpi	r24, 0x06	; 6
    b368:	38 f4       	brcc	.+14     	; 0xb378 <_Z6angle6i+0x146>
    b36a:	82 30       	cpi	r24, 0x02	; 2
    b36c:	09 f4       	brne	.+2      	; 0xb370 <_Z6angle6i+0x13e>
    b36e:	1c c1       	rjmp	.+568    	; 0xb5a8 <_Z6angle6i+0x376>
    b370:	83 30       	cpi	r24, 0x03	; 3
    b372:	09 f0       	breq	.+2      	; 0xb376 <_Z6angle6i+0x144>
    b374:	b0 c3       	rjmp	.+1888   	; 0xbad6 <_Z6angle6i+0x8a4>
    b376:	6b c1       	rjmp	.+726    	; 0xb64e <_Z6angle6i+0x41c>
    b378:	86 30       	cpi	r24, 0x06	; 6
    b37a:	09 f4       	brne	.+2      	; 0xb37e <_Z6angle6i+0x14c>
    b37c:	bb c1       	rjmp	.+886    	; 0xb6f4 <_Z6angle6i+0x4c2>
    b37e:	87 30       	cpi	r24, 0x07	; 7
    b380:	09 f0       	breq	.+2      	; 0xb384 <_Z6angle6i+0x152>
    b382:	a9 c3       	rjmp	.+1874   	; 0xbad6 <_Z6angle6i+0x8a4>
    b384:	0a c2       	rjmp	.+1044   	; 0xb79a <_Z6angle6i+0x568>
    b386:	8c 32       	cpi	r24, 0x2C	; 44
    b388:	09 f4       	brne	.+2      	; 0xb38c <_Z6angle6i+0x15a>
    b38a:	53 c3       	rjmp	.+1702   	; 0xba32 <_Z6angle6i+0x800>
    b38c:	8d 32       	cpi	r24, 0x2D	; 45
    b38e:	30 f4       	brcc	.+12     	; 0xb39c <_Z6angle6i+0x16a>
    b390:	8b 30       	cpi	r24, 0x0B	; 11
    b392:	59 f0       	breq	.+22     	; 0xb3aa <_Z6angle6i+0x178>
    b394:	8c 30       	cpi	r24, 0x0C	; 12
    b396:	09 f0       	breq	.+2      	; 0xb39a <_Z6angle6i+0x168>
    b398:	9e c3       	rjmp	.+1852   	; 0xbad6 <_Z6angle6i+0x8a4>
    b39a:	5d c0       	rjmp	.+186    	; 0xb456 <_Z6angle6i+0x224>
    b39c:	8d 32       	cpi	r24, 0x2D	; 45
    b39e:	09 f4       	brne	.+2      	; 0xb3a2 <_Z6angle6i+0x170>
    b3a0:	f5 c2       	rjmp	.+1514   	; 0xb98c <_Z6angle6i+0x75a>
    b3a2:	8e 32       	cpi	r24, 0x2E	; 46
    b3a4:	09 f0       	breq	.+2      	; 0xb3a8 <_Z6angle6i+0x176>
    b3a6:	97 c3       	rjmp	.+1838   	; 0xbad6 <_Z6angle6i+0x8a4>
    b3a8:	9e c2       	rjmp	.+1340   	; 0xb8e6 <_Z6angle6i+0x6b4>
    {
     case 11:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    b3aa:	0f 2e       	mov	r0, r31
    b3ac:	f6 e8       	ldi	r31, 0x86	; 134
    b3ae:	8f 2e       	mov	r8, r31
    b3b0:	99 24       	eor	r9, r9
    b3b2:	f0 2d       	mov	r31, r0
    b3b4:	f4 01       	movw	r30, r8
    b3b6:	00 81       	ld	r16, Z
    b3b8:	11 81       	ldd	r17, Z+1	; 0x01
    b3ba:	e0 80       	ld	r14, Z
    b3bc:	f1 80       	ldd	r15, Z+1	; 0x01
    b3be:	00 d0       	rcall	.+0      	; 0xb3c0 <_Z6angle6i+0x18e>
    b3c0:	0f 92       	push	r0
    b3c2:	2d b6       	in	r2, 0x3d	; 61
    b3c4:	3e b6       	in	r3, 0x3e	; 62
    b3c6:	08 94       	sec
    b3c8:	21 1c       	adc	r2, r1
    b3ca:	31 1c       	adc	r3, r1
    b3cc:	be 01       	movw	r22, r28
    b3ce:	88 27       	eor	r24, r24
    b3d0:	77 fd       	sbrc	r23, 7
    b3d2:	80 95       	com	r24
    b3d4:	98 2f       	mov	r25, r24
    b3d6:	0e 94 ee 79 	call	0xf3dc	; 0xf3dc <__floatsisf>
    b3da:	2b 01       	movw	r4, r22
    b3dc:	3c 01       	movw	r6, r24
    b3de:	c8 01       	movw	r24, r16
    b3e0:	68 e2       	ldi	r22, 0x28	; 40
    b3e2:	70 e0       	ldi	r23, 0x00	; 0
    b3e4:	0e 94 05 7b 	call	0xf60a	; 0xf60a <__udivmodhi4>
    b3e8:	80 e0       	ldi	r24, 0x00	; 0
    b3ea:	90 e0       	ldi	r25, 0x00	; 0
    b3ec:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    b3f0:	5b 01       	movw	r10, r22
    b3f2:	6c 01       	movw	r12, r24
    b3f4:	f6 94       	lsr	r15
    b3f6:	e7 94       	ror	r14
    b3f8:	f6 94       	lsr	r15
    b3fa:	e7 94       	ror	r14
    b3fc:	f6 94       	lsr	r15
    b3fe:	e7 94       	ror	r14
    b400:	b7 01       	movw	r22, r14
    b402:	80 e0       	ldi	r24, 0x00	; 0
    b404:	90 e0       	ldi	r25, 0x00	; 0
    b406:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    b40a:	f1 01       	movw	r30, r2
    b40c:	60 83       	st	Z, r22
    b40e:	71 83       	std	Z+1, r23	; 0x01
    b410:	82 83       	std	Z+2, r24	; 0x02
    b412:	93 83       	std	Z+3, r25	; 0x03
    b414:	c3 01       	movw	r24, r6
    b416:	b2 01       	movw	r22, r4
    b418:	20 e0       	ldi	r18, 0x00	; 0
    b41a:	30 e0       	ldi	r19, 0x00	; 0
    b41c:	a9 01       	movw	r20, r18
    b41e:	0f 2e       	mov	r0, r31
    b420:	f0 e0       	ldi	r31, 0x00	; 0
    b422:	ef 2e       	mov	r14, r31
    b424:	f0 e0       	ldi	r31, 0x00	; 0
    b426:	ff 2e       	mov	r15, r31
    b428:	f4 e3       	ldi	r31, 0x34	; 52
    b42a:	0f 2f       	mov	r16, r31
    b42c:	f3 e4       	ldi	r31, 0x43	; 67
    b42e:	1f 2f       	mov	r17, r31
    b430:	f0 2d       	mov	r31, r0
    b432:	0e 94 a0 08 	call	0x1140	; 0x1140 <_Z3mapddddd>
    b436:	0f 90       	pop	r0
    b438:	0f 90       	pop	r0
    b43a:	0f 90       	pop	r0
    b43c:	0f 90       	pop	r0
        OCR1A=ICR1-vAl;
    b43e:	f4 01       	movw	r30, r8
    b440:	c0 81       	ld	r28, Z
    b442:	d1 81       	ldd	r29, Z+1	; 0x01
  void write(int vAl)           //PIN=servo pin no. on mega,vAl=angle F_CPU for the servo at pin
  {
    switch(pIn)
    {
     case 11:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    b444:	0e 94 bb 79 	call	0xf376	; 0xf376 <__fixsfsi>
        OCR1A=ICR1-vAl;
    b448:	c6 1b       	sub	r28, r22
    b44a:	d7 0b       	sbc	r29, r23
    b44c:	d0 93 89 00 	sts	0x0089, r29
    b450:	c0 93 88 00 	sts	0x0088, r28
    b454:	40 c3       	rjmp	.+1664   	; 0xbad6 <_Z6angle6i+0x8a4>
        break;
      case 12:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    b456:	0f 2e       	mov	r0, r31
    b458:	f6 e8       	ldi	r31, 0x86	; 134
    b45a:	8f 2e       	mov	r8, r31
    b45c:	99 24       	eor	r9, r9
    b45e:	f0 2d       	mov	r31, r0
    b460:	f4 01       	movw	r30, r8
    b462:	00 81       	ld	r16, Z
    b464:	11 81       	ldd	r17, Z+1	; 0x01
    b466:	e0 80       	ld	r14, Z
    b468:	f1 80       	ldd	r15, Z+1	; 0x01
    b46a:	00 d0       	rcall	.+0      	; 0xb46c <_Z6angle6i+0x23a>
    b46c:	0f 92       	push	r0
    b46e:	2d b6       	in	r2, 0x3d	; 61
    b470:	3e b6       	in	r3, 0x3e	; 62
    b472:	08 94       	sec
    b474:	21 1c       	adc	r2, r1
    b476:	31 1c       	adc	r3, r1
    b478:	be 01       	movw	r22, r28
    b47a:	88 27       	eor	r24, r24
    b47c:	77 fd       	sbrc	r23, 7
    b47e:	80 95       	com	r24
    b480:	98 2f       	mov	r25, r24
    b482:	0e 94 ee 79 	call	0xf3dc	; 0xf3dc <__floatsisf>
    b486:	2b 01       	movw	r4, r22
    b488:	3c 01       	movw	r6, r24
    b48a:	c8 01       	movw	r24, r16
    b48c:	68 e2       	ldi	r22, 0x28	; 40
    b48e:	70 e0       	ldi	r23, 0x00	; 0
    b490:	0e 94 05 7b 	call	0xf60a	; 0xf60a <__udivmodhi4>
    b494:	80 e0       	ldi	r24, 0x00	; 0
    b496:	90 e0       	ldi	r25, 0x00	; 0
    b498:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    b49c:	5b 01       	movw	r10, r22
    b49e:	6c 01       	movw	r12, r24
    b4a0:	f6 94       	lsr	r15
    b4a2:	e7 94       	ror	r14
    b4a4:	f6 94       	lsr	r15
    b4a6:	e7 94       	ror	r14
    b4a8:	f6 94       	lsr	r15
    b4aa:	e7 94       	ror	r14
    b4ac:	b7 01       	movw	r22, r14
    b4ae:	80 e0       	ldi	r24, 0x00	; 0
    b4b0:	90 e0       	ldi	r25, 0x00	; 0
    b4b2:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    b4b6:	f1 01       	movw	r30, r2
    b4b8:	60 83       	st	Z, r22
    b4ba:	71 83       	std	Z+1, r23	; 0x01
    b4bc:	82 83       	std	Z+2, r24	; 0x02
    b4be:	93 83       	std	Z+3, r25	; 0x03
    b4c0:	c3 01       	movw	r24, r6
    b4c2:	b2 01       	movw	r22, r4
    b4c4:	20 e0       	ldi	r18, 0x00	; 0
    b4c6:	30 e0       	ldi	r19, 0x00	; 0
    b4c8:	a9 01       	movw	r20, r18
    b4ca:	0f 2e       	mov	r0, r31
    b4cc:	f0 e0       	ldi	r31, 0x00	; 0
    b4ce:	ef 2e       	mov	r14, r31
    b4d0:	f0 e0       	ldi	r31, 0x00	; 0
    b4d2:	ff 2e       	mov	r15, r31
    b4d4:	f4 e3       	ldi	r31, 0x34	; 52
    b4d6:	0f 2f       	mov	r16, r31
    b4d8:	f3 e4       	ldi	r31, 0x43	; 67
    b4da:	1f 2f       	mov	r17, r31
    b4dc:	f0 2d       	mov	r31, r0
    b4de:	0e 94 a0 08 	call	0x1140	; 0x1140 <_Z3mapddddd>
    b4e2:	0f 90       	pop	r0
    b4e4:	0f 90       	pop	r0
    b4e6:	0f 90       	pop	r0
    b4e8:	0f 90       	pop	r0
        OCR1B=ICR1-vAl;
    b4ea:	f4 01       	movw	r30, r8
    b4ec:	c0 81       	ld	r28, Z
    b4ee:	d1 81       	ldd	r29, Z+1	; 0x01
     case 11:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
        OCR1A=ICR1-vAl;
        break;
      case 12:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    b4f0:	0e 94 bb 79 	call	0xf376	; 0xf376 <__fixsfsi>
        OCR1B=ICR1-vAl;
    b4f4:	c6 1b       	sub	r28, r22
    b4f6:	d7 0b       	sbc	r29, r23
    b4f8:	d0 93 8b 00 	sts	0x008B, r29
    b4fc:	c0 93 8a 00 	sts	0x008A, r28
    b500:	ea c2       	rjmp	.+1492   	; 0xbad6 <_Z6angle6i+0x8a4>
        break;
      case 5:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    b502:	e6 e8       	ldi	r30, 0x86	; 134
    b504:	f0 e0       	ldi	r31, 0x00	; 0
    b506:	a0 80       	ld	r10, Z
    b508:	b1 80       	ldd	r11, Z+1	; 0x01
    b50a:	80 80       	ld	r8, Z
    b50c:	91 80       	ldd	r9, Z+1	; 0x01
    b50e:	00 d0       	rcall	.+0      	; 0xb510 <_Z6angle6i+0x2de>
    b510:	0f 92       	push	r0
    b512:	4d b6       	in	r4, 0x3d	; 61
    b514:	5e b6       	in	r5, 0x3e	; 62
    b516:	08 94       	sec
    b518:	41 1c       	adc	r4, r1
    b51a:	51 1c       	adc	r5, r1
    b51c:	be 01       	movw	r22, r28
    b51e:	88 27       	eor	r24, r24
    b520:	77 fd       	sbrc	r23, 7
    b522:	80 95       	com	r24
    b524:	98 2f       	mov	r25, r24
    b526:	0e 94 ee 79 	call	0xf3dc	; 0xf3dc <__floatsisf>
    b52a:	7b 01       	movw	r14, r22
    b52c:	8c 01       	movw	r16, r24
    b52e:	c5 01       	movw	r24, r10
    b530:	68 e2       	ldi	r22, 0x28	; 40
    b532:	70 e0       	ldi	r23, 0x00	; 0
    b534:	0e 94 05 7b 	call	0xf60a	; 0xf60a <__udivmodhi4>
    b538:	80 e0       	ldi	r24, 0x00	; 0
    b53a:	90 e0       	ldi	r25, 0x00	; 0
    b53c:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    b540:	5b 01       	movw	r10, r22
    b542:	6c 01       	movw	r12, r24
    b544:	96 94       	lsr	r9
    b546:	87 94       	ror	r8
    b548:	96 94       	lsr	r9
    b54a:	87 94       	ror	r8
    b54c:	96 94       	lsr	r9
    b54e:	87 94       	ror	r8
    b550:	b4 01       	movw	r22, r8
    b552:	80 e0       	ldi	r24, 0x00	; 0
    b554:	90 e0       	ldi	r25, 0x00	; 0
    b556:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    b55a:	f2 01       	movw	r30, r4
    b55c:	60 83       	st	Z, r22
    b55e:	71 83       	std	Z+1, r23	; 0x01
    b560:	82 83       	std	Z+2, r24	; 0x02
    b562:	93 83       	std	Z+3, r25	; 0x03
    b564:	c8 01       	movw	r24, r16
    b566:	b7 01       	movw	r22, r14
    b568:	20 e0       	ldi	r18, 0x00	; 0
    b56a:	30 e0       	ldi	r19, 0x00	; 0
    b56c:	a9 01       	movw	r20, r18
    b56e:	0f 2e       	mov	r0, r31
    b570:	f0 e0       	ldi	r31, 0x00	; 0
    b572:	ef 2e       	mov	r14, r31
    b574:	f0 e0       	ldi	r31, 0x00	; 0
    b576:	ff 2e       	mov	r15, r31
    b578:	f4 e3       	ldi	r31, 0x34	; 52
    b57a:	0f 2f       	mov	r16, r31
    b57c:	f3 e4       	ldi	r31, 0x43	; 67
    b57e:	1f 2f       	mov	r17, r31
    b580:	f0 2d       	mov	r31, r0
    b582:	0e 94 a0 08 	call	0x1140	; 0x1140 <_Z3mapddddd>
    b586:	0f 90       	pop	r0
    b588:	0f 90       	pop	r0
    b58a:	0f 90       	pop	r0
    b58c:	0f 90       	pop	r0
        OCR3A=ICR3-vAl;
    b58e:	c0 91 96 00 	lds	r28, 0x0096
    b592:	d0 91 97 00 	lds	r29, 0x0097
      case 12:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
        OCR1B=ICR1-vAl;
        break;
      case 5:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    b596:	0e 94 bb 79 	call	0xf376	; 0xf376 <__fixsfsi>
        OCR3A=ICR3-vAl;
    b59a:	c6 1b       	sub	r28, r22
    b59c:	d7 0b       	sbc	r29, r23
    b59e:	d0 93 99 00 	sts	0x0099, r29
    b5a2:	c0 93 98 00 	sts	0x0098, r28
    b5a6:	97 c2       	rjmp	.+1326   	; 0xbad6 <_Z6angle6i+0x8a4>
        break;
      case 2:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    b5a8:	e6 e8       	ldi	r30, 0x86	; 134
    b5aa:	f0 e0       	ldi	r31, 0x00	; 0
    b5ac:	a0 80       	ld	r10, Z
    b5ae:	b1 80       	ldd	r11, Z+1	; 0x01
    b5b0:	80 80       	ld	r8, Z
    b5b2:	91 80       	ldd	r9, Z+1	; 0x01
    b5b4:	00 d0       	rcall	.+0      	; 0xb5b6 <_Z6angle6i+0x384>
    b5b6:	0f 92       	push	r0
    b5b8:	4d b6       	in	r4, 0x3d	; 61
    b5ba:	5e b6       	in	r5, 0x3e	; 62
    b5bc:	08 94       	sec
    b5be:	41 1c       	adc	r4, r1
    b5c0:	51 1c       	adc	r5, r1
    b5c2:	be 01       	movw	r22, r28
    b5c4:	88 27       	eor	r24, r24
    b5c6:	77 fd       	sbrc	r23, 7
    b5c8:	80 95       	com	r24
    b5ca:	98 2f       	mov	r25, r24
    b5cc:	0e 94 ee 79 	call	0xf3dc	; 0xf3dc <__floatsisf>
    b5d0:	7b 01       	movw	r14, r22
    b5d2:	8c 01       	movw	r16, r24
    b5d4:	c5 01       	movw	r24, r10
    b5d6:	68 e2       	ldi	r22, 0x28	; 40
    b5d8:	70 e0       	ldi	r23, 0x00	; 0
    b5da:	0e 94 05 7b 	call	0xf60a	; 0xf60a <__udivmodhi4>
    b5de:	80 e0       	ldi	r24, 0x00	; 0
    b5e0:	90 e0       	ldi	r25, 0x00	; 0
    b5e2:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    b5e6:	5b 01       	movw	r10, r22
    b5e8:	6c 01       	movw	r12, r24
    b5ea:	96 94       	lsr	r9
    b5ec:	87 94       	ror	r8
    b5ee:	96 94       	lsr	r9
    b5f0:	87 94       	ror	r8
    b5f2:	96 94       	lsr	r9
    b5f4:	87 94       	ror	r8
    b5f6:	b4 01       	movw	r22, r8
    b5f8:	80 e0       	ldi	r24, 0x00	; 0
    b5fa:	90 e0       	ldi	r25, 0x00	; 0
    b5fc:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    b600:	f2 01       	movw	r30, r4
    b602:	60 83       	st	Z, r22
    b604:	71 83       	std	Z+1, r23	; 0x01
    b606:	82 83       	std	Z+2, r24	; 0x02
    b608:	93 83       	std	Z+3, r25	; 0x03
    b60a:	c8 01       	movw	r24, r16
    b60c:	b7 01       	movw	r22, r14
    b60e:	20 e0       	ldi	r18, 0x00	; 0
    b610:	30 e0       	ldi	r19, 0x00	; 0
    b612:	a9 01       	movw	r20, r18
    b614:	0f 2e       	mov	r0, r31
    b616:	f0 e0       	ldi	r31, 0x00	; 0
    b618:	ef 2e       	mov	r14, r31
    b61a:	f0 e0       	ldi	r31, 0x00	; 0
    b61c:	ff 2e       	mov	r15, r31
    b61e:	f4 e3       	ldi	r31, 0x34	; 52
    b620:	0f 2f       	mov	r16, r31
    b622:	f3 e4       	ldi	r31, 0x43	; 67
    b624:	1f 2f       	mov	r17, r31
    b626:	f0 2d       	mov	r31, r0
    b628:	0e 94 a0 08 	call	0x1140	; 0x1140 <_Z3mapddddd>
    b62c:	0f 90       	pop	r0
    b62e:	0f 90       	pop	r0
    b630:	0f 90       	pop	r0
    b632:	0f 90       	pop	r0
        OCR3B=ICR3-vAl;
    b634:	c0 91 96 00 	lds	r28, 0x0096
    b638:	d0 91 97 00 	lds	r29, 0x0097
      case 5:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
        OCR3A=ICR3-vAl;
        break;
      case 2:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    b63c:	0e 94 bb 79 	call	0xf376	; 0xf376 <__fixsfsi>
        OCR3B=ICR3-vAl;
    b640:	c6 1b       	sub	r28, r22
    b642:	d7 0b       	sbc	r29, r23
    b644:	d0 93 9b 00 	sts	0x009B, r29
    b648:	c0 93 9a 00 	sts	0x009A, r28
    b64c:	44 c2       	rjmp	.+1160   	; 0xbad6 <_Z6angle6i+0x8a4>
        break;
      case 3:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    b64e:	e6 e8       	ldi	r30, 0x86	; 134
    b650:	f0 e0       	ldi	r31, 0x00	; 0
    b652:	a0 80       	ld	r10, Z
    b654:	b1 80       	ldd	r11, Z+1	; 0x01
    b656:	80 80       	ld	r8, Z
    b658:	91 80       	ldd	r9, Z+1	; 0x01
    b65a:	00 d0       	rcall	.+0      	; 0xb65c <_Z6angle6i+0x42a>
    b65c:	0f 92       	push	r0
    b65e:	4d b6       	in	r4, 0x3d	; 61
    b660:	5e b6       	in	r5, 0x3e	; 62
    b662:	08 94       	sec
    b664:	41 1c       	adc	r4, r1
    b666:	51 1c       	adc	r5, r1
    b668:	be 01       	movw	r22, r28
    b66a:	88 27       	eor	r24, r24
    b66c:	77 fd       	sbrc	r23, 7
    b66e:	80 95       	com	r24
    b670:	98 2f       	mov	r25, r24
    b672:	0e 94 ee 79 	call	0xf3dc	; 0xf3dc <__floatsisf>
    b676:	7b 01       	movw	r14, r22
    b678:	8c 01       	movw	r16, r24
    b67a:	c5 01       	movw	r24, r10
    b67c:	68 e2       	ldi	r22, 0x28	; 40
    b67e:	70 e0       	ldi	r23, 0x00	; 0
    b680:	0e 94 05 7b 	call	0xf60a	; 0xf60a <__udivmodhi4>
    b684:	80 e0       	ldi	r24, 0x00	; 0
    b686:	90 e0       	ldi	r25, 0x00	; 0
    b688:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    b68c:	5b 01       	movw	r10, r22
    b68e:	6c 01       	movw	r12, r24
    b690:	96 94       	lsr	r9
    b692:	87 94       	ror	r8
    b694:	96 94       	lsr	r9
    b696:	87 94       	ror	r8
    b698:	96 94       	lsr	r9
    b69a:	87 94       	ror	r8
    b69c:	b4 01       	movw	r22, r8
    b69e:	80 e0       	ldi	r24, 0x00	; 0
    b6a0:	90 e0       	ldi	r25, 0x00	; 0
    b6a2:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    b6a6:	f2 01       	movw	r30, r4
    b6a8:	60 83       	st	Z, r22
    b6aa:	71 83       	std	Z+1, r23	; 0x01
    b6ac:	82 83       	std	Z+2, r24	; 0x02
    b6ae:	93 83       	std	Z+3, r25	; 0x03
    b6b0:	c8 01       	movw	r24, r16
    b6b2:	b7 01       	movw	r22, r14
    b6b4:	20 e0       	ldi	r18, 0x00	; 0
    b6b6:	30 e0       	ldi	r19, 0x00	; 0
    b6b8:	a9 01       	movw	r20, r18
    b6ba:	0f 2e       	mov	r0, r31
    b6bc:	f0 e0       	ldi	r31, 0x00	; 0
    b6be:	ef 2e       	mov	r14, r31
    b6c0:	f0 e0       	ldi	r31, 0x00	; 0
    b6c2:	ff 2e       	mov	r15, r31
    b6c4:	f4 e3       	ldi	r31, 0x34	; 52
    b6c6:	0f 2f       	mov	r16, r31
    b6c8:	f3 e4       	ldi	r31, 0x43	; 67
    b6ca:	1f 2f       	mov	r17, r31
    b6cc:	f0 2d       	mov	r31, r0
    b6ce:	0e 94 a0 08 	call	0x1140	; 0x1140 <_Z3mapddddd>
    b6d2:	0f 90       	pop	r0
    b6d4:	0f 90       	pop	r0
    b6d6:	0f 90       	pop	r0
    b6d8:	0f 90       	pop	r0
        OCR3C=ICR3-vAl;
    b6da:	c0 91 96 00 	lds	r28, 0x0096
    b6de:	d0 91 97 00 	lds	r29, 0x0097
      case 2:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
        OCR3B=ICR3-vAl;
        break;
      case 3:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    b6e2:	0e 94 bb 79 	call	0xf376	; 0xf376 <__fixsfsi>
        OCR3C=ICR3-vAl;
    b6e6:	c6 1b       	sub	r28, r22
    b6e8:	d7 0b       	sbc	r29, r23
    b6ea:	d0 93 9d 00 	sts	0x009D, r29
    b6ee:	c0 93 9c 00 	sts	0x009C, r28
    b6f2:	f1 c1       	rjmp	.+994    	; 0xbad6 <_Z6angle6i+0x8a4>
        break;
      case 6:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    b6f4:	e6 e8       	ldi	r30, 0x86	; 134
    b6f6:	f0 e0       	ldi	r31, 0x00	; 0
    b6f8:	a0 80       	ld	r10, Z
    b6fa:	b1 80       	ldd	r11, Z+1	; 0x01
    b6fc:	80 80       	ld	r8, Z
    b6fe:	91 80       	ldd	r9, Z+1	; 0x01
    b700:	00 d0       	rcall	.+0      	; 0xb702 <_Z6angle6i+0x4d0>
    b702:	0f 92       	push	r0
    b704:	4d b6       	in	r4, 0x3d	; 61
    b706:	5e b6       	in	r5, 0x3e	; 62
    b708:	08 94       	sec
    b70a:	41 1c       	adc	r4, r1
    b70c:	51 1c       	adc	r5, r1
    b70e:	be 01       	movw	r22, r28
    b710:	88 27       	eor	r24, r24
    b712:	77 fd       	sbrc	r23, 7
    b714:	80 95       	com	r24
    b716:	98 2f       	mov	r25, r24
    b718:	0e 94 ee 79 	call	0xf3dc	; 0xf3dc <__floatsisf>
    b71c:	7b 01       	movw	r14, r22
    b71e:	8c 01       	movw	r16, r24
    b720:	c5 01       	movw	r24, r10
    b722:	68 e2       	ldi	r22, 0x28	; 40
    b724:	70 e0       	ldi	r23, 0x00	; 0
    b726:	0e 94 05 7b 	call	0xf60a	; 0xf60a <__udivmodhi4>
    b72a:	80 e0       	ldi	r24, 0x00	; 0
    b72c:	90 e0       	ldi	r25, 0x00	; 0
    b72e:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    b732:	5b 01       	movw	r10, r22
    b734:	6c 01       	movw	r12, r24
    b736:	96 94       	lsr	r9
    b738:	87 94       	ror	r8
    b73a:	96 94       	lsr	r9
    b73c:	87 94       	ror	r8
    b73e:	96 94       	lsr	r9
    b740:	87 94       	ror	r8
    b742:	b4 01       	movw	r22, r8
    b744:	80 e0       	ldi	r24, 0x00	; 0
    b746:	90 e0       	ldi	r25, 0x00	; 0
    b748:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    b74c:	f2 01       	movw	r30, r4
    b74e:	60 83       	st	Z, r22
    b750:	71 83       	std	Z+1, r23	; 0x01
    b752:	82 83       	std	Z+2, r24	; 0x02
    b754:	93 83       	std	Z+3, r25	; 0x03
    b756:	c8 01       	movw	r24, r16
    b758:	b7 01       	movw	r22, r14
    b75a:	20 e0       	ldi	r18, 0x00	; 0
    b75c:	30 e0       	ldi	r19, 0x00	; 0
    b75e:	a9 01       	movw	r20, r18
    b760:	0f 2e       	mov	r0, r31
    b762:	f0 e0       	ldi	r31, 0x00	; 0
    b764:	ef 2e       	mov	r14, r31
    b766:	f0 e0       	ldi	r31, 0x00	; 0
    b768:	ff 2e       	mov	r15, r31
    b76a:	f4 e3       	ldi	r31, 0x34	; 52
    b76c:	0f 2f       	mov	r16, r31
    b76e:	f3 e4       	ldi	r31, 0x43	; 67
    b770:	1f 2f       	mov	r17, r31
    b772:	f0 2d       	mov	r31, r0
    b774:	0e 94 a0 08 	call	0x1140	; 0x1140 <_Z3mapddddd>
    b778:	0f 90       	pop	r0
    b77a:	0f 90       	pop	r0
    b77c:	0f 90       	pop	r0
    b77e:	0f 90       	pop	r0
        OCR4A=ICR4-vAl;
    b780:	c0 91 a6 00 	lds	r28, 0x00A6
    b784:	d0 91 a7 00 	lds	r29, 0x00A7
      case 3:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
        OCR3C=ICR3-vAl;
        break;
      case 6:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    b788:	0e 94 bb 79 	call	0xf376	; 0xf376 <__fixsfsi>
        OCR4A=ICR4-vAl;
    b78c:	c6 1b       	sub	r28, r22
    b78e:	d7 0b       	sbc	r29, r23
    b790:	d0 93 a9 00 	sts	0x00A9, r29
    b794:	c0 93 a8 00 	sts	0x00A8, r28
    b798:	9e c1       	rjmp	.+828    	; 0xbad6 <_Z6angle6i+0x8a4>
        break;
      case 7:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    b79a:	e6 e8       	ldi	r30, 0x86	; 134
    b79c:	f0 e0       	ldi	r31, 0x00	; 0
    b79e:	a0 80       	ld	r10, Z
    b7a0:	b1 80       	ldd	r11, Z+1	; 0x01
    b7a2:	80 80       	ld	r8, Z
    b7a4:	91 80       	ldd	r9, Z+1	; 0x01
    b7a6:	00 d0       	rcall	.+0      	; 0xb7a8 <_Z6angle6i+0x576>
    b7a8:	0f 92       	push	r0
    b7aa:	4d b6       	in	r4, 0x3d	; 61
    b7ac:	5e b6       	in	r5, 0x3e	; 62
    b7ae:	08 94       	sec
    b7b0:	41 1c       	adc	r4, r1
    b7b2:	51 1c       	adc	r5, r1
    b7b4:	be 01       	movw	r22, r28
    b7b6:	88 27       	eor	r24, r24
    b7b8:	77 fd       	sbrc	r23, 7
    b7ba:	80 95       	com	r24
    b7bc:	98 2f       	mov	r25, r24
    b7be:	0e 94 ee 79 	call	0xf3dc	; 0xf3dc <__floatsisf>
    b7c2:	7b 01       	movw	r14, r22
    b7c4:	8c 01       	movw	r16, r24
    b7c6:	c5 01       	movw	r24, r10
    b7c8:	68 e2       	ldi	r22, 0x28	; 40
    b7ca:	70 e0       	ldi	r23, 0x00	; 0
    b7cc:	0e 94 05 7b 	call	0xf60a	; 0xf60a <__udivmodhi4>
    b7d0:	80 e0       	ldi	r24, 0x00	; 0
    b7d2:	90 e0       	ldi	r25, 0x00	; 0
    b7d4:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    b7d8:	5b 01       	movw	r10, r22
    b7da:	6c 01       	movw	r12, r24
    b7dc:	96 94       	lsr	r9
    b7de:	87 94       	ror	r8
    b7e0:	96 94       	lsr	r9
    b7e2:	87 94       	ror	r8
    b7e4:	96 94       	lsr	r9
    b7e6:	87 94       	ror	r8
    b7e8:	b4 01       	movw	r22, r8
    b7ea:	80 e0       	ldi	r24, 0x00	; 0
    b7ec:	90 e0       	ldi	r25, 0x00	; 0
    b7ee:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    b7f2:	f2 01       	movw	r30, r4
    b7f4:	60 83       	st	Z, r22
    b7f6:	71 83       	std	Z+1, r23	; 0x01
    b7f8:	82 83       	std	Z+2, r24	; 0x02
    b7fa:	93 83       	std	Z+3, r25	; 0x03
    b7fc:	c8 01       	movw	r24, r16
    b7fe:	b7 01       	movw	r22, r14
    b800:	20 e0       	ldi	r18, 0x00	; 0
    b802:	30 e0       	ldi	r19, 0x00	; 0
    b804:	a9 01       	movw	r20, r18
    b806:	0f 2e       	mov	r0, r31
    b808:	f0 e0       	ldi	r31, 0x00	; 0
    b80a:	ef 2e       	mov	r14, r31
    b80c:	f0 e0       	ldi	r31, 0x00	; 0
    b80e:	ff 2e       	mov	r15, r31
    b810:	f4 e3       	ldi	r31, 0x34	; 52
    b812:	0f 2f       	mov	r16, r31
    b814:	f3 e4       	ldi	r31, 0x43	; 67
    b816:	1f 2f       	mov	r17, r31
    b818:	f0 2d       	mov	r31, r0
    b81a:	0e 94 a0 08 	call	0x1140	; 0x1140 <_Z3mapddddd>
    b81e:	0f 90       	pop	r0
    b820:	0f 90       	pop	r0
    b822:	0f 90       	pop	r0
    b824:	0f 90       	pop	r0
        OCR4B=ICR4-vAl;
    b826:	c0 91 a6 00 	lds	r28, 0x00A6
    b82a:	d0 91 a7 00 	lds	r29, 0x00A7
      case 6:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
        OCR4A=ICR4-vAl;
        break;
      case 7:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    b82e:	0e 94 bb 79 	call	0xf376	; 0xf376 <__fixsfsi>
        OCR4B=ICR4-vAl;
    b832:	c6 1b       	sub	r28, r22
    b834:	d7 0b       	sbc	r29, r23
    b836:	d0 93 ab 00 	sts	0x00AB, r29
    b83a:	c0 93 aa 00 	sts	0x00AA, r28
    b83e:	4b c1       	rjmp	.+662    	; 0xbad6 <_Z6angle6i+0x8a4>
        break; 
      case 8:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    b840:	e6 e8       	ldi	r30, 0x86	; 134
    b842:	f0 e0       	ldi	r31, 0x00	; 0
    b844:	a0 80       	ld	r10, Z
    b846:	b1 80       	ldd	r11, Z+1	; 0x01
    b848:	80 80       	ld	r8, Z
    b84a:	91 80       	ldd	r9, Z+1	; 0x01
    b84c:	00 d0       	rcall	.+0      	; 0xb84e <_Z6angle6i+0x61c>
    b84e:	0f 92       	push	r0
    b850:	4d b6       	in	r4, 0x3d	; 61
    b852:	5e b6       	in	r5, 0x3e	; 62
    b854:	08 94       	sec
    b856:	41 1c       	adc	r4, r1
    b858:	51 1c       	adc	r5, r1
    b85a:	be 01       	movw	r22, r28
    b85c:	88 27       	eor	r24, r24
    b85e:	77 fd       	sbrc	r23, 7
    b860:	80 95       	com	r24
    b862:	98 2f       	mov	r25, r24
    b864:	0e 94 ee 79 	call	0xf3dc	; 0xf3dc <__floatsisf>
    b868:	7b 01       	movw	r14, r22
    b86a:	8c 01       	movw	r16, r24
    b86c:	c5 01       	movw	r24, r10
    b86e:	68 e2       	ldi	r22, 0x28	; 40
    b870:	70 e0       	ldi	r23, 0x00	; 0
    b872:	0e 94 05 7b 	call	0xf60a	; 0xf60a <__udivmodhi4>
    b876:	80 e0       	ldi	r24, 0x00	; 0
    b878:	90 e0       	ldi	r25, 0x00	; 0
    b87a:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    b87e:	5b 01       	movw	r10, r22
    b880:	6c 01       	movw	r12, r24
    b882:	96 94       	lsr	r9
    b884:	87 94       	ror	r8
    b886:	96 94       	lsr	r9
    b888:	87 94       	ror	r8
    b88a:	96 94       	lsr	r9
    b88c:	87 94       	ror	r8
    b88e:	b4 01       	movw	r22, r8
    b890:	80 e0       	ldi	r24, 0x00	; 0
    b892:	90 e0       	ldi	r25, 0x00	; 0
    b894:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    b898:	f2 01       	movw	r30, r4
    b89a:	60 83       	st	Z, r22
    b89c:	71 83       	std	Z+1, r23	; 0x01
    b89e:	82 83       	std	Z+2, r24	; 0x02
    b8a0:	93 83       	std	Z+3, r25	; 0x03
    b8a2:	c8 01       	movw	r24, r16
    b8a4:	b7 01       	movw	r22, r14
    b8a6:	20 e0       	ldi	r18, 0x00	; 0
    b8a8:	30 e0       	ldi	r19, 0x00	; 0
    b8aa:	a9 01       	movw	r20, r18
    b8ac:	0f 2e       	mov	r0, r31
    b8ae:	f0 e0       	ldi	r31, 0x00	; 0
    b8b0:	ef 2e       	mov	r14, r31
    b8b2:	f0 e0       	ldi	r31, 0x00	; 0
    b8b4:	ff 2e       	mov	r15, r31
    b8b6:	f4 e3       	ldi	r31, 0x34	; 52
    b8b8:	0f 2f       	mov	r16, r31
    b8ba:	f3 e4       	ldi	r31, 0x43	; 67
    b8bc:	1f 2f       	mov	r17, r31
    b8be:	f0 2d       	mov	r31, r0
    b8c0:	0e 94 a0 08 	call	0x1140	; 0x1140 <_Z3mapddddd>
    b8c4:	0f 90       	pop	r0
    b8c6:	0f 90       	pop	r0
    b8c8:	0f 90       	pop	r0
    b8ca:	0f 90       	pop	r0
        OCR4C=ICR4-vAl;
    b8cc:	c0 91 a6 00 	lds	r28, 0x00A6
    b8d0:	d0 91 a7 00 	lds	r29, 0x00A7
      case 7:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
        OCR4B=ICR4-vAl;
        break; 
      case 8:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    b8d4:	0e 94 bb 79 	call	0xf376	; 0xf376 <__fixsfsi>
        OCR4C=ICR4-vAl;
    b8d8:	c6 1b       	sub	r28, r22
    b8da:	d7 0b       	sbc	r29, r23
    b8dc:	d0 93 ad 00 	sts	0x00AD, r29
    b8e0:	c0 93 ac 00 	sts	0x00AC, r28
    b8e4:	f8 c0       	rjmp	.+496    	; 0xbad6 <_Z6angle6i+0x8a4>
        break;
      case 46:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    b8e6:	e6 e8       	ldi	r30, 0x86	; 134
    b8e8:	f0 e0       	ldi	r31, 0x00	; 0
    b8ea:	a0 80       	ld	r10, Z
    b8ec:	b1 80       	ldd	r11, Z+1	; 0x01
    b8ee:	80 80       	ld	r8, Z
    b8f0:	91 80       	ldd	r9, Z+1	; 0x01
    b8f2:	00 d0       	rcall	.+0      	; 0xb8f4 <_Z6angle6i+0x6c2>
    b8f4:	0f 92       	push	r0
    b8f6:	4d b6       	in	r4, 0x3d	; 61
    b8f8:	5e b6       	in	r5, 0x3e	; 62
    b8fa:	08 94       	sec
    b8fc:	41 1c       	adc	r4, r1
    b8fe:	51 1c       	adc	r5, r1
    b900:	be 01       	movw	r22, r28
    b902:	88 27       	eor	r24, r24
    b904:	77 fd       	sbrc	r23, 7
    b906:	80 95       	com	r24
    b908:	98 2f       	mov	r25, r24
    b90a:	0e 94 ee 79 	call	0xf3dc	; 0xf3dc <__floatsisf>
    b90e:	7b 01       	movw	r14, r22
    b910:	8c 01       	movw	r16, r24
    b912:	c5 01       	movw	r24, r10
    b914:	68 e2       	ldi	r22, 0x28	; 40
    b916:	70 e0       	ldi	r23, 0x00	; 0
    b918:	0e 94 05 7b 	call	0xf60a	; 0xf60a <__udivmodhi4>
    b91c:	80 e0       	ldi	r24, 0x00	; 0
    b91e:	90 e0       	ldi	r25, 0x00	; 0
    b920:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    b924:	5b 01       	movw	r10, r22
    b926:	6c 01       	movw	r12, r24
    b928:	96 94       	lsr	r9
    b92a:	87 94       	ror	r8
    b92c:	96 94       	lsr	r9
    b92e:	87 94       	ror	r8
    b930:	96 94       	lsr	r9
    b932:	87 94       	ror	r8
    b934:	b4 01       	movw	r22, r8
    b936:	80 e0       	ldi	r24, 0x00	; 0
    b938:	90 e0       	ldi	r25, 0x00	; 0
    b93a:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    b93e:	f2 01       	movw	r30, r4
    b940:	60 83       	st	Z, r22
    b942:	71 83       	std	Z+1, r23	; 0x01
    b944:	82 83       	std	Z+2, r24	; 0x02
    b946:	93 83       	std	Z+3, r25	; 0x03
    b948:	c8 01       	movw	r24, r16
    b94a:	b7 01       	movw	r22, r14
    b94c:	20 e0       	ldi	r18, 0x00	; 0
    b94e:	30 e0       	ldi	r19, 0x00	; 0
    b950:	a9 01       	movw	r20, r18
    b952:	0f 2e       	mov	r0, r31
    b954:	f0 e0       	ldi	r31, 0x00	; 0
    b956:	ef 2e       	mov	r14, r31
    b958:	f0 e0       	ldi	r31, 0x00	; 0
    b95a:	ff 2e       	mov	r15, r31
    b95c:	f4 e3       	ldi	r31, 0x34	; 52
    b95e:	0f 2f       	mov	r16, r31
    b960:	f3 e4       	ldi	r31, 0x43	; 67
    b962:	1f 2f       	mov	r17, r31
    b964:	f0 2d       	mov	r31, r0
    b966:	0e 94 a0 08 	call	0x1140	; 0x1140 <_Z3mapddddd>
    b96a:	0f 90       	pop	r0
    b96c:	0f 90       	pop	r0
    b96e:	0f 90       	pop	r0
    b970:	0f 90       	pop	r0
        OCR5A=ICR5-vAl;
    b972:	c0 91 26 01 	lds	r28, 0x0126
    b976:	d0 91 27 01 	lds	r29, 0x0127
      case 8:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
        OCR4C=ICR4-vAl;
        break;
      case 46:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    b97a:	0e 94 bb 79 	call	0xf376	; 0xf376 <__fixsfsi>
        OCR5A=ICR5-vAl;
    b97e:	c6 1b       	sub	r28, r22
    b980:	d7 0b       	sbc	r29, r23
    b982:	d0 93 29 01 	sts	0x0129, r29
    b986:	c0 93 28 01 	sts	0x0128, r28
    b98a:	a5 c0       	rjmp	.+330    	; 0xbad6 <_Z6angle6i+0x8a4>
        break;
      case 45:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    b98c:	e6 e8       	ldi	r30, 0x86	; 134
    b98e:	f0 e0       	ldi	r31, 0x00	; 0
    b990:	a0 80       	ld	r10, Z
    b992:	b1 80       	ldd	r11, Z+1	; 0x01
    b994:	80 80       	ld	r8, Z
    b996:	91 80       	ldd	r9, Z+1	; 0x01
    b998:	00 d0       	rcall	.+0      	; 0xb99a <_Z6angle6i+0x768>
    b99a:	0f 92       	push	r0
    b99c:	4d b6       	in	r4, 0x3d	; 61
    b99e:	5e b6       	in	r5, 0x3e	; 62
    b9a0:	08 94       	sec
    b9a2:	41 1c       	adc	r4, r1
    b9a4:	51 1c       	adc	r5, r1
    b9a6:	be 01       	movw	r22, r28
    b9a8:	88 27       	eor	r24, r24
    b9aa:	77 fd       	sbrc	r23, 7
    b9ac:	80 95       	com	r24
    b9ae:	98 2f       	mov	r25, r24
    b9b0:	0e 94 ee 79 	call	0xf3dc	; 0xf3dc <__floatsisf>
    b9b4:	7b 01       	movw	r14, r22
    b9b6:	8c 01       	movw	r16, r24
    b9b8:	c5 01       	movw	r24, r10
    b9ba:	68 e2       	ldi	r22, 0x28	; 40
    b9bc:	70 e0       	ldi	r23, 0x00	; 0
    b9be:	0e 94 05 7b 	call	0xf60a	; 0xf60a <__udivmodhi4>
    b9c2:	80 e0       	ldi	r24, 0x00	; 0
    b9c4:	90 e0       	ldi	r25, 0x00	; 0
    b9c6:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    b9ca:	5b 01       	movw	r10, r22
    b9cc:	6c 01       	movw	r12, r24
    b9ce:	96 94       	lsr	r9
    b9d0:	87 94       	ror	r8
    b9d2:	96 94       	lsr	r9
    b9d4:	87 94       	ror	r8
    b9d6:	96 94       	lsr	r9
    b9d8:	87 94       	ror	r8
    b9da:	b4 01       	movw	r22, r8
    b9dc:	80 e0       	ldi	r24, 0x00	; 0
    b9de:	90 e0       	ldi	r25, 0x00	; 0
    b9e0:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    b9e4:	f2 01       	movw	r30, r4
    b9e6:	60 83       	st	Z, r22
    b9e8:	71 83       	std	Z+1, r23	; 0x01
    b9ea:	82 83       	std	Z+2, r24	; 0x02
    b9ec:	93 83       	std	Z+3, r25	; 0x03
    b9ee:	c8 01       	movw	r24, r16
    b9f0:	b7 01       	movw	r22, r14
    b9f2:	20 e0       	ldi	r18, 0x00	; 0
    b9f4:	30 e0       	ldi	r19, 0x00	; 0
    b9f6:	a9 01       	movw	r20, r18
    b9f8:	0f 2e       	mov	r0, r31
    b9fa:	f0 e0       	ldi	r31, 0x00	; 0
    b9fc:	ef 2e       	mov	r14, r31
    b9fe:	f0 e0       	ldi	r31, 0x00	; 0
    ba00:	ff 2e       	mov	r15, r31
    ba02:	f4 e3       	ldi	r31, 0x34	; 52
    ba04:	0f 2f       	mov	r16, r31
    ba06:	f3 e4       	ldi	r31, 0x43	; 67
    ba08:	1f 2f       	mov	r17, r31
    ba0a:	f0 2d       	mov	r31, r0
    ba0c:	0e 94 a0 08 	call	0x1140	; 0x1140 <_Z3mapddddd>
    ba10:	0f 90       	pop	r0
    ba12:	0f 90       	pop	r0
    ba14:	0f 90       	pop	r0
    ba16:	0f 90       	pop	r0
        OCR5B=ICR5-vAl;
    ba18:	c0 91 26 01 	lds	r28, 0x0126
    ba1c:	d0 91 27 01 	lds	r29, 0x0127
      case 46:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
        OCR5A=ICR5-vAl;
        break;
      case 45:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    ba20:	0e 94 bb 79 	call	0xf376	; 0xf376 <__fixsfsi>
        OCR5B=ICR5-vAl;
    ba24:	c6 1b       	sub	r28, r22
    ba26:	d7 0b       	sbc	r29, r23
    ba28:	d0 93 2b 01 	sts	0x012B, r29
    ba2c:	c0 93 2a 01 	sts	0x012A, r28
    ba30:	52 c0       	rjmp	.+164    	; 0xbad6 <_Z6angle6i+0x8a4>
        break;
      case 44:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    ba32:	e6 e8       	ldi	r30, 0x86	; 134
    ba34:	f0 e0       	ldi	r31, 0x00	; 0
    ba36:	a0 80       	ld	r10, Z
    ba38:	b1 80       	ldd	r11, Z+1	; 0x01
    ba3a:	80 80       	ld	r8, Z
    ba3c:	91 80       	ldd	r9, Z+1	; 0x01
    ba3e:	00 d0       	rcall	.+0      	; 0xba40 <_Z6angle6i+0x80e>
    ba40:	0f 92       	push	r0
    ba42:	4d b6       	in	r4, 0x3d	; 61
    ba44:	5e b6       	in	r5, 0x3e	; 62
    ba46:	08 94       	sec
    ba48:	41 1c       	adc	r4, r1
    ba4a:	51 1c       	adc	r5, r1
    ba4c:	be 01       	movw	r22, r28
    ba4e:	88 27       	eor	r24, r24
    ba50:	77 fd       	sbrc	r23, 7
    ba52:	80 95       	com	r24
    ba54:	98 2f       	mov	r25, r24
    ba56:	0e 94 ee 79 	call	0xf3dc	; 0xf3dc <__floatsisf>
    ba5a:	7b 01       	movw	r14, r22
    ba5c:	8c 01       	movw	r16, r24
    ba5e:	c5 01       	movw	r24, r10
    ba60:	68 e2       	ldi	r22, 0x28	; 40
    ba62:	70 e0       	ldi	r23, 0x00	; 0
    ba64:	0e 94 05 7b 	call	0xf60a	; 0xf60a <__udivmodhi4>
    ba68:	80 e0       	ldi	r24, 0x00	; 0
    ba6a:	90 e0       	ldi	r25, 0x00	; 0
    ba6c:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    ba70:	5b 01       	movw	r10, r22
    ba72:	6c 01       	movw	r12, r24
    ba74:	96 94       	lsr	r9
    ba76:	87 94       	ror	r8
    ba78:	96 94       	lsr	r9
    ba7a:	87 94       	ror	r8
    ba7c:	96 94       	lsr	r9
    ba7e:	87 94       	ror	r8
    ba80:	b4 01       	movw	r22, r8
    ba82:	80 e0       	ldi	r24, 0x00	; 0
    ba84:	90 e0       	ldi	r25, 0x00	; 0
    ba86:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    ba8a:	f2 01       	movw	r30, r4
    ba8c:	60 83       	st	Z, r22
    ba8e:	71 83       	std	Z+1, r23	; 0x01
    ba90:	82 83       	std	Z+2, r24	; 0x02
    ba92:	93 83       	std	Z+3, r25	; 0x03
    ba94:	c8 01       	movw	r24, r16
    ba96:	b7 01       	movw	r22, r14
    ba98:	20 e0       	ldi	r18, 0x00	; 0
    ba9a:	30 e0       	ldi	r19, 0x00	; 0
    ba9c:	a9 01       	movw	r20, r18
    ba9e:	0f 2e       	mov	r0, r31
    baa0:	f0 e0       	ldi	r31, 0x00	; 0
    baa2:	ef 2e       	mov	r14, r31
    baa4:	f0 e0       	ldi	r31, 0x00	; 0
    baa6:	ff 2e       	mov	r15, r31
    baa8:	f4 e3       	ldi	r31, 0x34	; 52
    baaa:	0f 2f       	mov	r16, r31
    baac:	f3 e4       	ldi	r31, 0x43	; 67
    baae:	1f 2f       	mov	r17, r31
    bab0:	f0 2d       	mov	r31, r0
    bab2:	0e 94 a0 08 	call	0x1140	; 0x1140 <_Z3mapddddd>
    bab6:	0f 90       	pop	r0
    bab8:	0f 90       	pop	r0
    baba:	0f 90       	pop	r0
    babc:	0f 90       	pop	r0
        OCR5C=ICR5-vAl;
    babe:	c0 91 26 01 	lds	r28, 0x0126
    bac2:	d0 91 27 01 	lds	r29, 0x0127
      case 45:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
        OCR5B=ICR5-vAl;
        break;
      case 44:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    bac6:	0e 94 bb 79 	call	0xf376	; 0xf376 <__fixsfsi>
        OCR5C=ICR5-vAl;
    baca:	c6 1b       	sub	r28, r22
    bacc:	d7 0b       	sbc	r29, r23
    bace:	d0 93 2d 01 	sts	0x012D, r29
    bad2:	c0 93 2c 01 	sts	0x012C, r28

		p.write(v);
		q.write(y);
    bad6:	60 91 cc 02 	lds	r22, 0x02CC
    bada:	70 91 cd 02 	lds	r23, 0x02CD
     }
  }

  void write(int vAl)           //PIN=servo pin no. on mega,vAl=angle F_CPU for the servo at pin
  {
    switch(pIn)
    bade:	80 91 d5 02 	lds	r24, 0x02D5
    bae2:	88 30       	cpi	r24, 0x08	; 8
    bae4:	09 f4       	brne	.+2      	; 0xbae8 <_Z6angle6i+0x8b6>
    bae6:	63 c2       	rjmp	.+1222   	; 0xbfae <_Z6angle6i+0xd7c>
    bae8:	89 30       	cpi	r24, 0x09	; 9
    baea:	98 f4       	brcc	.+38     	; 0xbb12 <_Z6angle6i+0x8e0>
    baec:	85 30       	cpi	r24, 0x05	; 5
    baee:	09 f4       	brne	.+2      	; 0xbaf2 <_Z6angle6i+0x8c0>
    baf0:	c4 c0       	rjmp	.+392    	; 0xbc7a <_Z6angle6i+0xa48>
    baf2:	86 30       	cpi	r24, 0x06	; 6
    baf4:	38 f4       	brcc	.+14     	; 0xbb04 <_Z6angle6i+0x8d2>
    baf6:	82 30       	cpi	r24, 0x02	; 2
    baf8:	09 f4       	brne	.+2      	; 0xbafc <_Z6angle6i+0x8ca>
    bafa:	11 c1       	rjmp	.+546    	; 0xbd1e <_Z6angle6i+0xaec>
    bafc:	83 30       	cpi	r24, 0x03	; 3
    bafe:	09 f0       	breq	.+2      	; 0xbb02 <_Z6angle6i+0x8d0>
    bb00:	9d c3       	rjmp	.+1850   	; 0xc23c <_Z6angle6i+0x100a>
    bb02:	5f c1       	rjmp	.+702    	; 0xbdc2 <_Z6angle6i+0xb90>
    bb04:	86 30       	cpi	r24, 0x06	; 6
    bb06:	09 f4       	brne	.+2      	; 0xbb0a <_Z6angle6i+0x8d8>
    bb08:	ae c1       	rjmp	.+860    	; 0xbe66 <_Z6angle6i+0xc34>
    bb0a:	87 30       	cpi	r24, 0x07	; 7
    bb0c:	09 f0       	breq	.+2      	; 0xbb10 <_Z6angle6i+0x8de>
    bb0e:	96 c3       	rjmp	.+1836   	; 0xc23c <_Z6angle6i+0x100a>
    bb10:	fc c1       	rjmp	.+1016   	; 0xbf0a <_Z6angle6i+0xcd8>
    bb12:	8c 32       	cpi	r24, 0x2C	; 44
    bb14:	09 f4       	brne	.+2      	; 0xbb18 <_Z6angle6i+0x8e6>
    bb16:	41 c3       	rjmp	.+1666   	; 0xc19a <_Z6angle6i+0xf68>
    bb18:	8d 32       	cpi	r24, 0x2D	; 45
    bb1a:	30 f4       	brcc	.+12     	; 0xbb28 <_Z6angle6i+0x8f6>
    bb1c:	8b 30       	cpi	r24, 0x0B	; 11
    bb1e:	59 f0       	breq	.+22     	; 0xbb36 <_Z6angle6i+0x904>
    bb20:	8c 30       	cpi	r24, 0x0C	; 12
    bb22:	09 f0       	breq	.+2      	; 0xbb26 <_Z6angle6i+0x8f4>
    bb24:	8b c3       	rjmp	.+1814   	; 0xc23c <_Z6angle6i+0x100a>
    bb26:	58 c0       	rjmp	.+176    	; 0xbbd8 <_Z6angle6i+0x9a6>
    bb28:	8d 32       	cpi	r24, 0x2D	; 45
    bb2a:	09 f4       	brne	.+2      	; 0xbb2e <_Z6angle6i+0x8fc>
    bb2c:	e4 c2       	rjmp	.+1480   	; 0xc0f6 <_Z6angle6i+0xec4>
    bb2e:	8e 32       	cpi	r24, 0x2E	; 46
    bb30:	09 f0       	breq	.+2      	; 0xbb34 <_Z6angle6i+0x902>
    bb32:	84 c3       	rjmp	.+1800   	; 0xc23c <_Z6angle6i+0x100a>
    bb34:	8e c2       	rjmp	.+1308   	; 0xc052 <_Z6angle6i+0xe20>
    {
     case 11:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    bb36:	c6 e8       	ldi	r28, 0x86	; 134
    bb38:	d0 e0       	ldi	r29, 0x00	; 0
    bb3a:	08 81       	ld	r16, Y
    bb3c:	19 81       	ldd	r17, Y+1	; 0x01
    bb3e:	e8 80       	ld	r14, Y
    bb40:	f9 80       	ldd	r15, Y+1	; 0x01
    bb42:	00 d0       	rcall	.+0      	; 0xbb44 <_Z6angle6i+0x912>
    bb44:	0f 92       	push	r0
    bb46:	8d b6       	in	r8, 0x3d	; 61
    bb48:	9e b6       	in	r9, 0x3e	; 62
    bb4a:	08 94       	sec
    bb4c:	81 1c       	adc	r8, r1
    bb4e:	91 1c       	adc	r9, r1
    bb50:	88 27       	eor	r24, r24
    bb52:	77 fd       	sbrc	r23, 7
    bb54:	80 95       	com	r24
    bb56:	98 2f       	mov	r25, r24
    bb58:	0e 94 ee 79 	call	0xf3dc	; 0xf3dc <__floatsisf>
    bb5c:	2b 01       	movw	r4, r22
    bb5e:	3c 01       	movw	r6, r24
    bb60:	c8 01       	movw	r24, r16
    bb62:	68 e2       	ldi	r22, 0x28	; 40
    bb64:	70 e0       	ldi	r23, 0x00	; 0
    bb66:	0e 94 05 7b 	call	0xf60a	; 0xf60a <__udivmodhi4>
    bb6a:	80 e0       	ldi	r24, 0x00	; 0
    bb6c:	90 e0       	ldi	r25, 0x00	; 0
    bb6e:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    bb72:	5b 01       	movw	r10, r22
    bb74:	6c 01       	movw	r12, r24
    bb76:	f6 94       	lsr	r15
    bb78:	e7 94       	ror	r14
    bb7a:	f6 94       	lsr	r15
    bb7c:	e7 94       	ror	r14
    bb7e:	f6 94       	lsr	r15
    bb80:	e7 94       	ror	r14
    bb82:	b7 01       	movw	r22, r14
    bb84:	80 e0       	ldi	r24, 0x00	; 0
    bb86:	90 e0       	ldi	r25, 0x00	; 0
    bb88:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    bb8c:	f4 01       	movw	r30, r8
    bb8e:	60 83       	st	Z, r22
    bb90:	71 83       	std	Z+1, r23	; 0x01
    bb92:	82 83       	std	Z+2, r24	; 0x02
    bb94:	93 83       	std	Z+3, r25	; 0x03
    bb96:	c3 01       	movw	r24, r6
    bb98:	b2 01       	movw	r22, r4
    bb9a:	20 e0       	ldi	r18, 0x00	; 0
    bb9c:	30 e0       	ldi	r19, 0x00	; 0
    bb9e:	a9 01       	movw	r20, r18
    bba0:	0f 2e       	mov	r0, r31
    bba2:	f0 e0       	ldi	r31, 0x00	; 0
    bba4:	ef 2e       	mov	r14, r31
    bba6:	f0 e0       	ldi	r31, 0x00	; 0
    bba8:	ff 2e       	mov	r15, r31
    bbaa:	f4 e3       	ldi	r31, 0x34	; 52
    bbac:	0f 2f       	mov	r16, r31
    bbae:	f3 e4       	ldi	r31, 0x43	; 67
    bbb0:	1f 2f       	mov	r17, r31
    bbb2:	f0 2d       	mov	r31, r0
    bbb4:	0e 94 a0 08 	call	0x1140	; 0x1140 <_Z3mapddddd>
    bbb8:	0f 90       	pop	r0
    bbba:	0f 90       	pop	r0
    bbbc:	0f 90       	pop	r0
    bbbe:	0f 90       	pop	r0
        OCR1A=ICR1-vAl;
    bbc0:	09 90       	ld	r0, Y+
    bbc2:	d8 81       	ld	r29, Y
    bbc4:	c0 2d       	mov	r28, r0
  void write(int vAl)           //PIN=servo pin no. on mega,vAl=angle F_CPU for the servo at pin
  {
    switch(pIn)
    {
     case 11:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    bbc6:	0e 94 bb 79 	call	0xf376	; 0xf376 <__fixsfsi>
        OCR1A=ICR1-vAl;
    bbca:	c6 1b       	sub	r28, r22
    bbcc:	d7 0b       	sbc	r29, r23
    bbce:	d0 93 89 00 	sts	0x0089, r29
    bbd2:	c0 93 88 00 	sts	0x0088, r28
    bbd6:	32 c3       	rjmp	.+1636   	; 0xc23c <_Z6angle6i+0x100a>
        break;
      case 12:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    bbd8:	c6 e8       	ldi	r28, 0x86	; 134
    bbda:	d0 e0       	ldi	r29, 0x00	; 0
    bbdc:	08 81       	ld	r16, Y
    bbde:	19 81       	ldd	r17, Y+1	; 0x01
    bbe0:	e8 80       	ld	r14, Y
    bbe2:	f9 80       	ldd	r15, Y+1	; 0x01
    bbe4:	00 d0       	rcall	.+0      	; 0xbbe6 <_Z6angle6i+0x9b4>
    bbe6:	0f 92       	push	r0
    bbe8:	8d b6       	in	r8, 0x3d	; 61
    bbea:	9e b6       	in	r9, 0x3e	; 62
    bbec:	08 94       	sec
    bbee:	81 1c       	adc	r8, r1
    bbf0:	91 1c       	adc	r9, r1
    bbf2:	88 27       	eor	r24, r24
    bbf4:	77 fd       	sbrc	r23, 7
    bbf6:	80 95       	com	r24
    bbf8:	98 2f       	mov	r25, r24
    bbfa:	0e 94 ee 79 	call	0xf3dc	; 0xf3dc <__floatsisf>
    bbfe:	2b 01       	movw	r4, r22
    bc00:	3c 01       	movw	r6, r24
    bc02:	c8 01       	movw	r24, r16
    bc04:	68 e2       	ldi	r22, 0x28	; 40
    bc06:	70 e0       	ldi	r23, 0x00	; 0
    bc08:	0e 94 05 7b 	call	0xf60a	; 0xf60a <__udivmodhi4>
    bc0c:	80 e0       	ldi	r24, 0x00	; 0
    bc0e:	90 e0       	ldi	r25, 0x00	; 0
    bc10:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    bc14:	5b 01       	movw	r10, r22
    bc16:	6c 01       	movw	r12, r24
    bc18:	f6 94       	lsr	r15
    bc1a:	e7 94       	ror	r14
    bc1c:	f6 94       	lsr	r15
    bc1e:	e7 94       	ror	r14
    bc20:	f6 94       	lsr	r15
    bc22:	e7 94       	ror	r14
    bc24:	b7 01       	movw	r22, r14
    bc26:	80 e0       	ldi	r24, 0x00	; 0
    bc28:	90 e0       	ldi	r25, 0x00	; 0
    bc2a:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    bc2e:	f4 01       	movw	r30, r8
    bc30:	60 83       	st	Z, r22
    bc32:	71 83       	std	Z+1, r23	; 0x01
    bc34:	82 83       	std	Z+2, r24	; 0x02
    bc36:	93 83       	std	Z+3, r25	; 0x03
    bc38:	c3 01       	movw	r24, r6
    bc3a:	b2 01       	movw	r22, r4
    bc3c:	20 e0       	ldi	r18, 0x00	; 0
    bc3e:	30 e0       	ldi	r19, 0x00	; 0
    bc40:	a9 01       	movw	r20, r18
    bc42:	0f 2e       	mov	r0, r31
    bc44:	f0 e0       	ldi	r31, 0x00	; 0
    bc46:	ef 2e       	mov	r14, r31
    bc48:	f0 e0       	ldi	r31, 0x00	; 0
    bc4a:	ff 2e       	mov	r15, r31
    bc4c:	f4 e3       	ldi	r31, 0x34	; 52
    bc4e:	0f 2f       	mov	r16, r31
    bc50:	f3 e4       	ldi	r31, 0x43	; 67
    bc52:	1f 2f       	mov	r17, r31
    bc54:	f0 2d       	mov	r31, r0
    bc56:	0e 94 a0 08 	call	0x1140	; 0x1140 <_Z3mapddddd>
    bc5a:	0f 90       	pop	r0
    bc5c:	0f 90       	pop	r0
    bc5e:	0f 90       	pop	r0
    bc60:	0f 90       	pop	r0
        OCR1B=ICR1-vAl;
    bc62:	09 90       	ld	r0, Y+
    bc64:	d8 81       	ld	r29, Y
    bc66:	c0 2d       	mov	r28, r0
     case 11:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
        OCR1A=ICR1-vAl;
        break;
      case 12:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    bc68:	0e 94 bb 79 	call	0xf376	; 0xf376 <__fixsfsi>
        OCR1B=ICR1-vAl;
    bc6c:	c6 1b       	sub	r28, r22
    bc6e:	d7 0b       	sbc	r29, r23
    bc70:	d0 93 8b 00 	sts	0x008B, r29
    bc74:	c0 93 8a 00 	sts	0x008A, r28
    bc78:	e1 c2       	rjmp	.+1474   	; 0xc23c <_Z6angle6i+0x100a>
        break;
      case 5:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    bc7a:	e6 e8       	ldi	r30, 0x86	; 134
    bc7c:	f0 e0       	ldi	r31, 0x00	; 0
    bc7e:	c0 81       	ld	r28, Z
    bc80:	d1 81       	ldd	r29, Z+1	; 0x01
    bc82:	80 80       	ld	r8, Z
    bc84:	91 80       	ldd	r9, Z+1	; 0x01
    bc86:	00 d0       	rcall	.+0      	; 0xbc88 <_Z6angle6i+0xa56>
    bc88:	0f 92       	push	r0
    bc8a:	4d b6       	in	r4, 0x3d	; 61
    bc8c:	5e b6       	in	r5, 0x3e	; 62
    bc8e:	08 94       	sec
    bc90:	41 1c       	adc	r4, r1
    bc92:	51 1c       	adc	r5, r1
    bc94:	88 27       	eor	r24, r24
    bc96:	77 fd       	sbrc	r23, 7
    bc98:	80 95       	com	r24
    bc9a:	98 2f       	mov	r25, r24
    bc9c:	0e 94 ee 79 	call	0xf3dc	; 0xf3dc <__floatsisf>
    bca0:	7b 01       	movw	r14, r22
    bca2:	8c 01       	movw	r16, r24
    bca4:	ce 01       	movw	r24, r28
    bca6:	68 e2       	ldi	r22, 0x28	; 40
    bca8:	70 e0       	ldi	r23, 0x00	; 0
    bcaa:	0e 94 05 7b 	call	0xf60a	; 0xf60a <__udivmodhi4>
    bcae:	80 e0       	ldi	r24, 0x00	; 0
    bcb0:	90 e0       	ldi	r25, 0x00	; 0
    bcb2:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    bcb6:	5b 01       	movw	r10, r22
    bcb8:	6c 01       	movw	r12, r24
    bcba:	96 94       	lsr	r9
    bcbc:	87 94       	ror	r8
    bcbe:	96 94       	lsr	r9
    bcc0:	87 94       	ror	r8
    bcc2:	96 94       	lsr	r9
    bcc4:	87 94       	ror	r8
    bcc6:	b4 01       	movw	r22, r8
    bcc8:	80 e0       	ldi	r24, 0x00	; 0
    bcca:	90 e0       	ldi	r25, 0x00	; 0
    bccc:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    bcd0:	f2 01       	movw	r30, r4
    bcd2:	60 83       	st	Z, r22
    bcd4:	71 83       	std	Z+1, r23	; 0x01
    bcd6:	82 83       	std	Z+2, r24	; 0x02
    bcd8:	93 83       	std	Z+3, r25	; 0x03
    bcda:	c8 01       	movw	r24, r16
    bcdc:	b7 01       	movw	r22, r14
    bcde:	20 e0       	ldi	r18, 0x00	; 0
    bce0:	30 e0       	ldi	r19, 0x00	; 0
    bce2:	a9 01       	movw	r20, r18
    bce4:	0f 2e       	mov	r0, r31
    bce6:	f0 e0       	ldi	r31, 0x00	; 0
    bce8:	ef 2e       	mov	r14, r31
    bcea:	f0 e0       	ldi	r31, 0x00	; 0
    bcec:	ff 2e       	mov	r15, r31
    bcee:	f4 e3       	ldi	r31, 0x34	; 52
    bcf0:	0f 2f       	mov	r16, r31
    bcf2:	f3 e4       	ldi	r31, 0x43	; 67
    bcf4:	1f 2f       	mov	r17, r31
    bcf6:	f0 2d       	mov	r31, r0
    bcf8:	0e 94 a0 08 	call	0x1140	; 0x1140 <_Z3mapddddd>
    bcfc:	0f 90       	pop	r0
    bcfe:	0f 90       	pop	r0
    bd00:	0f 90       	pop	r0
    bd02:	0f 90       	pop	r0
        OCR3A=ICR3-vAl;
    bd04:	c0 91 96 00 	lds	r28, 0x0096
    bd08:	d0 91 97 00 	lds	r29, 0x0097
      case 12:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
        OCR1B=ICR1-vAl;
        break;
      case 5:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    bd0c:	0e 94 bb 79 	call	0xf376	; 0xf376 <__fixsfsi>
        OCR3A=ICR3-vAl;
    bd10:	c6 1b       	sub	r28, r22
    bd12:	d7 0b       	sbc	r29, r23
    bd14:	d0 93 99 00 	sts	0x0099, r29
    bd18:	c0 93 98 00 	sts	0x0098, r28
    bd1c:	8f c2       	rjmp	.+1310   	; 0xc23c <_Z6angle6i+0x100a>
        break;
      case 2:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    bd1e:	e6 e8       	ldi	r30, 0x86	; 134
    bd20:	f0 e0       	ldi	r31, 0x00	; 0
    bd22:	c0 81       	ld	r28, Z
    bd24:	d1 81       	ldd	r29, Z+1	; 0x01
    bd26:	80 80       	ld	r8, Z
    bd28:	91 80       	ldd	r9, Z+1	; 0x01
    bd2a:	00 d0       	rcall	.+0      	; 0xbd2c <_Z6angle6i+0xafa>
    bd2c:	0f 92       	push	r0
    bd2e:	4d b6       	in	r4, 0x3d	; 61
    bd30:	5e b6       	in	r5, 0x3e	; 62
    bd32:	08 94       	sec
    bd34:	41 1c       	adc	r4, r1
    bd36:	51 1c       	adc	r5, r1
    bd38:	88 27       	eor	r24, r24
    bd3a:	77 fd       	sbrc	r23, 7
    bd3c:	80 95       	com	r24
    bd3e:	98 2f       	mov	r25, r24
    bd40:	0e 94 ee 79 	call	0xf3dc	; 0xf3dc <__floatsisf>
    bd44:	7b 01       	movw	r14, r22
    bd46:	8c 01       	movw	r16, r24
    bd48:	ce 01       	movw	r24, r28
    bd4a:	68 e2       	ldi	r22, 0x28	; 40
    bd4c:	70 e0       	ldi	r23, 0x00	; 0
    bd4e:	0e 94 05 7b 	call	0xf60a	; 0xf60a <__udivmodhi4>
    bd52:	80 e0       	ldi	r24, 0x00	; 0
    bd54:	90 e0       	ldi	r25, 0x00	; 0
    bd56:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    bd5a:	5b 01       	movw	r10, r22
    bd5c:	6c 01       	movw	r12, r24
    bd5e:	96 94       	lsr	r9
    bd60:	87 94       	ror	r8
    bd62:	96 94       	lsr	r9
    bd64:	87 94       	ror	r8
    bd66:	96 94       	lsr	r9
    bd68:	87 94       	ror	r8
    bd6a:	b4 01       	movw	r22, r8
    bd6c:	80 e0       	ldi	r24, 0x00	; 0
    bd6e:	90 e0       	ldi	r25, 0x00	; 0
    bd70:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    bd74:	f2 01       	movw	r30, r4
    bd76:	60 83       	st	Z, r22
    bd78:	71 83       	std	Z+1, r23	; 0x01
    bd7a:	82 83       	std	Z+2, r24	; 0x02
    bd7c:	93 83       	std	Z+3, r25	; 0x03
    bd7e:	c8 01       	movw	r24, r16
    bd80:	b7 01       	movw	r22, r14
    bd82:	20 e0       	ldi	r18, 0x00	; 0
    bd84:	30 e0       	ldi	r19, 0x00	; 0
    bd86:	a9 01       	movw	r20, r18
    bd88:	0f 2e       	mov	r0, r31
    bd8a:	f0 e0       	ldi	r31, 0x00	; 0
    bd8c:	ef 2e       	mov	r14, r31
    bd8e:	f0 e0       	ldi	r31, 0x00	; 0
    bd90:	ff 2e       	mov	r15, r31
    bd92:	f4 e3       	ldi	r31, 0x34	; 52
    bd94:	0f 2f       	mov	r16, r31
    bd96:	f3 e4       	ldi	r31, 0x43	; 67
    bd98:	1f 2f       	mov	r17, r31
    bd9a:	f0 2d       	mov	r31, r0
    bd9c:	0e 94 a0 08 	call	0x1140	; 0x1140 <_Z3mapddddd>
    bda0:	0f 90       	pop	r0
    bda2:	0f 90       	pop	r0
    bda4:	0f 90       	pop	r0
    bda6:	0f 90       	pop	r0
        OCR3B=ICR3-vAl;
    bda8:	c0 91 96 00 	lds	r28, 0x0096
    bdac:	d0 91 97 00 	lds	r29, 0x0097
      case 5:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
        OCR3A=ICR3-vAl;
        break;
      case 2:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    bdb0:	0e 94 bb 79 	call	0xf376	; 0xf376 <__fixsfsi>
        OCR3B=ICR3-vAl;
    bdb4:	c6 1b       	sub	r28, r22
    bdb6:	d7 0b       	sbc	r29, r23
    bdb8:	d0 93 9b 00 	sts	0x009B, r29
    bdbc:	c0 93 9a 00 	sts	0x009A, r28
    bdc0:	3d c2       	rjmp	.+1146   	; 0xc23c <_Z6angle6i+0x100a>
        break;
      case 3:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    bdc2:	e6 e8       	ldi	r30, 0x86	; 134
    bdc4:	f0 e0       	ldi	r31, 0x00	; 0
    bdc6:	c0 81       	ld	r28, Z
    bdc8:	d1 81       	ldd	r29, Z+1	; 0x01
    bdca:	80 80       	ld	r8, Z
    bdcc:	91 80       	ldd	r9, Z+1	; 0x01
    bdce:	00 d0       	rcall	.+0      	; 0xbdd0 <_Z6angle6i+0xb9e>
    bdd0:	0f 92       	push	r0
    bdd2:	4d b6       	in	r4, 0x3d	; 61
    bdd4:	5e b6       	in	r5, 0x3e	; 62
    bdd6:	08 94       	sec
    bdd8:	41 1c       	adc	r4, r1
    bdda:	51 1c       	adc	r5, r1
    bddc:	88 27       	eor	r24, r24
    bdde:	77 fd       	sbrc	r23, 7
    bde0:	80 95       	com	r24
    bde2:	98 2f       	mov	r25, r24
    bde4:	0e 94 ee 79 	call	0xf3dc	; 0xf3dc <__floatsisf>
    bde8:	7b 01       	movw	r14, r22
    bdea:	8c 01       	movw	r16, r24
    bdec:	ce 01       	movw	r24, r28
    bdee:	68 e2       	ldi	r22, 0x28	; 40
    bdf0:	70 e0       	ldi	r23, 0x00	; 0
    bdf2:	0e 94 05 7b 	call	0xf60a	; 0xf60a <__udivmodhi4>
    bdf6:	80 e0       	ldi	r24, 0x00	; 0
    bdf8:	90 e0       	ldi	r25, 0x00	; 0
    bdfa:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    bdfe:	5b 01       	movw	r10, r22
    be00:	6c 01       	movw	r12, r24
    be02:	96 94       	lsr	r9
    be04:	87 94       	ror	r8
    be06:	96 94       	lsr	r9
    be08:	87 94       	ror	r8
    be0a:	96 94       	lsr	r9
    be0c:	87 94       	ror	r8
    be0e:	b4 01       	movw	r22, r8
    be10:	80 e0       	ldi	r24, 0x00	; 0
    be12:	90 e0       	ldi	r25, 0x00	; 0
    be14:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    be18:	f2 01       	movw	r30, r4
    be1a:	60 83       	st	Z, r22
    be1c:	71 83       	std	Z+1, r23	; 0x01
    be1e:	82 83       	std	Z+2, r24	; 0x02
    be20:	93 83       	std	Z+3, r25	; 0x03
    be22:	c8 01       	movw	r24, r16
    be24:	b7 01       	movw	r22, r14
    be26:	20 e0       	ldi	r18, 0x00	; 0
    be28:	30 e0       	ldi	r19, 0x00	; 0
    be2a:	a9 01       	movw	r20, r18
    be2c:	0f 2e       	mov	r0, r31
    be2e:	f0 e0       	ldi	r31, 0x00	; 0
    be30:	ef 2e       	mov	r14, r31
    be32:	f0 e0       	ldi	r31, 0x00	; 0
    be34:	ff 2e       	mov	r15, r31
    be36:	f4 e3       	ldi	r31, 0x34	; 52
    be38:	0f 2f       	mov	r16, r31
    be3a:	f3 e4       	ldi	r31, 0x43	; 67
    be3c:	1f 2f       	mov	r17, r31
    be3e:	f0 2d       	mov	r31, r0
    be40:	0e 94 a0 08 	call	0x1140	; 0x1140 <_Z3mapddddd>
    be44:	0f 90       	pop	r0
    be46:	0f 90       	pop	r0
    be48:	0f 90       	pop	r0
    be4a:	0f 90       	pop	r0
        OCR3C=ICR3-vAl;
    be4c:	c0 91 96 00 	lds	r28, 0x0096
    be50:	d0 91 97 00 	lds	r29, 0x0097
      case 2:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
        OCR3B=ICR3-vAl;
        break;
      case 3:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    be54:	0e 94 bb 79 	call	0xf376	; 0xf376 <__fixsfsi>
        OCR3C=ICR3-vAl;
    be58:	c6 1b       	sub	r28, r22
    be5a:	d7 0b       	sbc	r29, r23
    be5c:	d0 93 9d 00 	sts	0x009D, r29
    be60:	c0 93 9c 00 	sts	0x009C, r28
    be64:	eb c1       	rjmp	.+982    	; 0xc23c <_Z6angle6i+0x100a>
        break;
      case 6:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    be66:	e6 e8       	ldi	r30, 0x86	; 134
    be68:	f0 e0       	ldi	r31, 0x00	; 0
    be6a:	c0 81       	ld	r28, Z
    be6c:	d1 81       	ldd	r29, Z+1	; 0x01
    be6e:	80 80       	ld	r8, Z
    be70:	91 80       	ldd	r9, Z+1	; 0x01
    be72:	00 d0       	rcall	.+0      	; 0xbe74 <_Z6angle6i+0xc42>
    be74:	0f 92       	push	r0
    be76:	4d b6       	in	r4, 0x3d	; 61
    be78:	5e b6       	in	r5, 0x3e	; 62
    be7a:	08 94       	sec
    be7c:	41 1c       	adc	r4, r1
    be7e:	51 1c       	adc	r5, r1
    be80:	88 27       	eor	r24, r24
    be82:	77 fd       	sbrc	r23, 7
    be84:	80 95       	com	r24
    be86:	98 2f       	mov	r25, r24
    be88:	0e 94 ee 79 	call	0xf3dc	; 0xf3dc <__floatsisf>
    be8c:	7b 01       	movw	r14, r22
    be8e:	8c 01       	movw	r16, r24
    be90:	ce 01       	movw	r24, r28
    be92:	68 e2       	ldi	r22, 0x28	; 40
    be94:	70 e0       	ldi	r23, 0x00	; 0
    be96:	0e 94 05 7b 	call	0xf60a	; 0xf60a <__udivmodhi4>
    be9a:	80 e0       	ldi	r24, 0x00	; 0
    be9c:	90 e0       	ldi	r25, 0x00	; 0
    be9e:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    bea2:	5b 01       	movw	r10, r22
    bea4:	6c 01       	movw	r12, r24
    bea6:	96 94       	lsr	r9
    bea8:	87 94       	ror	r8
    beaa:	96 94       	lsr	r9
    beac:	87 94       	ror	r8
    beae:	96 94       	lsr	r9
    beb0:	87 94       	ror	r8
    beb2:	b4 01       	movw	r22, r8
    beb4:	80 e0       	ldi	r24, 0x00	; 0
    beb6:	90 e0       	ldi	r25, 0x00	; 0
    beb8:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    bebc:	f2 01       	movw	r30, r4
    bebe:	60 83       	st	Z, r22
    bec0:	71 83       	std	Z+1, r23	; 0x01
    bec2:	82 83       	std	Z+2, r24	; 0x02
    bec4:	93 83       	std	Z+3, r25	; 0x03
    bec6:	c8 01       	movw	r24, r16
    bec8:	b7 01       	movw	r22, r14
    beca:	20 e0       	ldi	r18, 0x00	; 0
    becc:	30 e0       	ldi	r19, 0x00	; 0
    bece:	a9 01       	movw	r20, r18
    bed0:	0f 2e       	mov	r0, r31
    bed2:	f0 e0       	ldi	r31, 0x00	; 0
    bed4:	ef 2e       	mov	r14, r31
    bed6:	f0 e0       	ldi	r31, 0x00	; 0
    bed8:	ff 2e       	mov	r15, r31
    beda:	f4 e3       	ldi	r31, 0x34	; 52
    bedc:	0f 2f       	mov	r16, r31
    bede:	f3 e4       	ldi	r31, 0x43	; 67
    bee0:	1f 2f       	mov	r17, r31
    bee2:	f0 2d       	mov	r31, r0
    bee4:	0e 94 a0 08 	call	0x1140	; 0x1140 <_Z3mapddddd>
    bee8:	0f 90       	pop	r0
    beea:	0f 90       	pop	r0
    beec:	0f 90       	pop	r0
    beee:	0f 90       	pop	r0
        OCR4A=ICR4-vAl;
    bef0:	c0 91 a6 00 	lds	r28, 0x00A6
    bef4:	d0 91 a7 00 	lds	r29, 0x00A7
      case 3:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
        OCR3C=ICR3-vAl;
        break;
      case 6:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    bef8:	0e 94 bb 79 	call	0xf376	; 0xf376 <__fixsfsi>
        OCR4A=ICR4-vAl;
    befc:	c6 1b       	sub	r28, r22
    befe:	d7 0b       	sbc	r29, r23
    bf00:	d0 93 a9 00 	sts	0x00A9, r29
    bf04:	c0 93 a8 00 	sts	0x00A8, r28
    bf08:	99 c1       	rjmp	.+818    	; 0xc23c <_Z6angle6i+0x100a>
        break;
      case 7:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    bf0a:	e6 e8       	ldi	r30, 0x86	; 134
    bf0c:	f0 e0       	ldi	r31, 0x00	; 0
    bf0e:	c0 81       	ld	r28, Z
    bf10:	d1 81       	ldd	r29, Z+1	; 0x01
    bf12:	80 80       	ld	r8, Z
    bf14:	91 80       	ldd	r9, Z+1	; 0x01
    bf16:	00 d0       	rcall	.+0      	; 0xbf18 <_Z6angle6i+0xce6>
    bf18:	0f 92       	push	r0
    bf1a:	4d b6       	in	r4, 0x3d	; 61
    bf1c:	5e b6       	in	r5, 0x3e	; 62
    bf1e:	08 94       	sec
    bf20:	41 1c       	adc	r4, r1
    bf22:	51 1c       	adc	r5, r1
    bf24:	88 27       	eor	r24, r24
    bf26:	77 fd       	sbrc	r23, 7
    bf28:	80 95       	com	r24
    bf2a:	98 2f       	mov	r25, r24
    bf2c:	0e 94 ee 79 	call	0xf3dc	; 0xf3dc <__floatsisf>
    bf30:	7b 01       	movw	r14, r22
    bf32:	8c 01       	movw	r16, r24
    bf34:	ce 01       	movw	r24, r28
    bf36:	68 e2       	ldi	r22, 0x28	; 40
    bf38:	70 e0       	ldi	r23, 0x00	; 0
    bf3a:	0e 94 05 7b 	call	0xf60a	; 0xf60a <__udivmodhi4>
    bf3e:	80 e0       	ldi	r24, 0x00	; 0
    bf40:	90 e0       	ldi	r25, 0x00	; 0
    bf42:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    bf46:	5b 01       	movw	r10, r22
    bf48:	6c 01       	movw	r12, r24
    bf4a:	96 94       	lsr	r9
    bf4c:	87 94       	ror	r8
    bf4e:	96 94       	lsr	r9
    bf50:	87 94       	ror	r8
    bf52:	96 94       	lsr	r9
    bf54:	87 94       	ror	r8
    bf56:	b4 01       	movw	r22, r8
    bf58:	80 e0       	ldi	r24, 0x00	; 0
    bf5a:	90 e0       	ldi	r25, 0x00	; 0
    bf5c:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    bf60:	f2 01       	movw	r30, r4
    bf62:	60 83       	st	Z, r22
    bf64:	71 83       	std	Z+1, r23	; 0x01
    bf66:	82 83       	std	Z+2, r24	; 0x02
    bf68:	93 83       	std	Z+3, r25	; 0x03
    bf6a:	c8 01       	movw	r24, r16
    bf6c:	b7 01       	movw	r22, r14
    bf6e:	20 e0       	ldi	r18, 0x00	; 0
    bf70:	30 e0       	ldi	r19, 0x00	; 0
    bf72:	a9 01       	movw	r20, r18
    bf74:	0f 2e       	mov	r0, r31
    bf76:	f0 e0       	ldi	r31, 0x00	; 0
    bf78:	ef 2e       	mov	r14, r31
    bf7a:	f0 e0       	ldi	r31, 0x00	; 0
    bf7c:	ff 2e       	mov	r15, r31
    bf7e:	f4 e3       	ldi	r31, 0x34	; 52
    bf80:	0f 2f       	mov	r16, r31
    bf82:	f3 e4       	ldi	r31, 0x43	; 67
    bf84:	1f 2f       	mov	r17, r31
    bf86:	f0 2d       	mov	r31, r0
    bf88:	0e 94 a0 08 	call	0x1140	; 0x1140 <_Z3mapddddd>
    bf8c:	0f 90       	pop	r0
    bf8e:	0f 90       	pop	r0
    bf90:	0f 90       	pop	r0
    bf92:	0f 90       	pop	r0
        OCR4B=ICR4-vAl;
    bf94:	c0 91 a6 00 	lds	r28, 0x00A6
    bf98:	d0 91 a7 00 	lds	r29, 0x00A7
      case 6:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
        OCR4A=ICR4-vAl;
        break;
      case 7:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    bf9c:	0e 94 bb 79 	call	0xf376	; 0xf376 <__fixsfsi>
        OCR4B=ICR4-vAl;
    bfa0:	c6 1b       	sub	r28, r22
    bfa2:	d7 0b       	sbc	r29, r23
    bfa4:	d0 93 ab 00 	sts	0x00AB, r29
    bfa8:	c0 93 aa 00 	sts	0x00AA, r28
    bfac:	47 c1       	rjmp	.+654    	; 0xc23c <_Z6angle6i+0x100a>
        break; 
      case 8:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    bfae:	e6 e8       	ldi	r30, 0x86	; 134
    bfb0:	f0 e0       	ldi	r31, 0x00	; 0
    bfb2:	c0 81       	ld	r28, Z
    bfb4:	d1 81       	ldd	r29, Z+1	; 0x01
    bfb6:	80 80       	ld	r8, Z
    bfb8:	91 80       	ldd	r9, Z+1	; 0x01
    bfba:	00 d0       	rcall	.+0      	; 0xbfbc <_Z6angle6i+0xd8a>
    bfbc:	0f 92       	push	r0
    bfbe:	4d b6       	in	r4, 0x3d	; 61
    bfc0:	5e b6       	in	r5, 0x3e	; 62
    bfc2:	08 94       	sec
    bfc4:	41 1c       	adc	r4, r1
    bfc6:	51 1c       	adc	r5, r1
    bfc8:	88 27       	eor	r24, r24
    bfca:	77 fd       	sbrc	r23, 7
    bfcc:	80 95       	com	r24
    bfce:	98 2f       	mov	r25, r24
    bfd0:	0e 94 ee 79 	call	0xf3dc	; 0xf3dc <__floatsisf>
    bfd4:	7b 01       	movw	r14, r22
    bfd6:	8c 01       	movw	r16, r24
    bfd8:	ce 01       	movw	r24, r28
    bfda:	68 e2       	ldi	r22, 0x28	; 40
    bfdc:	70 e0       	ldi	r23, 0x00	; 0
    bfde:	0e 94 05 7b 	call	0xf60a	; 0xf60a <__udivmodhi4>
    bfe2:	80 e0       	ldi	r24, 0x00	; 0
    bfe4:	90 e0       	ldi	r25, 0x00	; 0
    bfe6:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    bfea:	5b 01       	movw	r10, r22
    bfec:	6c 01       	movw	r12, r24
    bfee:	96 94       	lsr	r9
    bff0:	87 94       	ror	r8
    bff2:	96 94       	lsr	r9
    bff4:	87 94       	ror	r8
    bff6:	96 94       	lsr	r9
    bff8:	87 94       	ror	r8
    bffa:	b4 01       	movw	r22, r8
    bffc:	80 e0       	ldi	r24, 0x00	; 0
    bffe:	90 e0       	ldi	r25, 0x00	; 0
    c000:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    c004:	f2 01       	movw	r30, r4
    c006:	60 83       	st	Z, r22
    c008:	71 83       	std	Z+1, r23	; 0x01
    c00a:	82 83       	std	Z+2, r24	; 0x02
    c00c:	93 83       	std	Z+3, r25	; 0x03
    c00e:	c8 01       	movw	r24, r16
    c010:	b7 01       	movw	r22, r14
    c012:	20 e0       	ldi	r18, 0x00	; 0
    c014:	30 e0       	ldi	r19, 0x00	; 0
    c016:	a9 01       	movw	r20, r18
    c018:	0f 2e       	mov	r0, r31
    c01a:	f0 e0       	ldi	r31, 0x00	; 0
    c01c:	ef 2e       	mov	r14, r31
    c01e:	f0 e0       	ldi	r31, 0x00	; 0
    c020:	ff 2e       	mov	r15, r31
    c022:	f4 e3       	ldi	r31, 0x34	; 52
    c024:	0f 2f       	mov	r16, r31
    c026:	f3 e4       	ldi	r31, 0x43	; 67
    c028:	1f 2f       	mov	r17, r31
    c02a:	f0 2d       	mov	r31, r0
    c02c:	0e 94 a0 08 	call	0x1140	; 0x1140 <_Z3mapddddd>
    c030:	0f 90       	pop	r0
    c032:	0f 90       	pop	r0
    c034:	0f 90       	pop	r0
    c036:	0f 90       	pop	r0
        OCR4C=ICR4-vAl;
    c038:	c0 91 a6 00 	lds	r28, 0x00A6
    c03c:	d0 91 a7 00 	lds	r29, 0x00A7
      case 7:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
        OCR4B=ICR4-vAl;
        break; 
      case 8:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    c040:	0e 94 bb 79 	call	0xf376	; 0xf376 <__fixsfsi>
        OCR4C=ICR4-vAl;
    c044:	c6 1b       	sub	r28, r22
    c046:	d7 0b       	sbc	r29, r23
    c048:	d0 93 ad 00 	sts	0x00AD, r29
    c04c:	c0 93 ac 00 	sts	0x00AC, r28
    c050:	f5 c0       	rjmp	.+490    	; 0xc23c <_Z6angle6i+0x100a>
        break;
      case 46:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    c052:	e6 e8       	ldi	r30, 0x86	; 134
    c054:	f0 e0       	ldi	r31, 0x00	; 0
    c056:	c0 81       	ld	r28, Z
    c058:	d1 81       	ldd	r29, Z+1	; 0x01
    c05a:	80 80       	ld	r8, Z
    c05c:	91 80       	ldd	r9, Z+1	; 0x01
    c05e:	00 d0       	rcall	.+0      	; 0xc060 <_Z6angle6i+0xe2e>
    c060:	0f 92       	push	r0
    c062:	4d b6       	in	r4, 0x3d	; 61
    c064:	5e b6       	in	r5, 0x3e	; 62
    c066:	08 94       	sec
    c068:	41 1c       	adc	r4, r1
    c06a:	51 1c       	adc	r5, r1
    c06c:	88 27       	eor	r24, r24
    c06e:	77 fd       	sbrc	r23, 7
    c070:	80 95       	com	r24
    c072:	98 2f       	mov	r25, r24
    c074:	0e 94 ee 79 	call	0xf3dc	; 0xf3dc <__floatsisf>
    c078:	7b 01       	movw	r14, r22
    c07a:	8c 01       	movw	r16, r24
    c07c:	ce 01       	movw	r24, r28
    c07e:	68 e2       	ldi	r22, 0x28	; 40
    c080:	70 e0       	ldi	r23, 0x00	; 0
    c082:	0e 94 05 7b 	call	0xf60a	; 0xf60a <__udivmodhi4>
    c086:	80 e0       	ldi	r24, 0x00	; 0
    c088:	90 e0       	ldi	r25, 0x00	; 0
    c08a:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    c08e:	5b 01       	movw	r10, r22
    c090:	6c 01       	movw	r12, r24
    c092:	96 94       	lsr	r9
    c094:	87 94       	ror	r8
    c096:	96 94       	lsr	r9
    c098:	87 94       	ror	r8
    c09a:	96 94       	lsr	r9
    c09c:	87 94       	ror	r8
    c09e:	b4 01       	movw	r22, r8
    c0a0:	80 e0       	ldi	r24, 0x00	; 0
    c0a2:	90 e0       	ldi	r25, 0x00	; 0
    c0a4:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    c0a8:	f2 01       	movw	r30, r4
    c0aa:	60 83       	st	Z, r22
    c0ac:	71 83       	std	Z+1, r23	; 0x01
    c0ae:	82 83       	std	Z+2, r24	; 0x02
    c0b0:	93 83       	std	Z+3, r25	; 0x03
    c0b2:	c8 01       	movw	r24, r16
    c0b4:	b7 01       	movw	r22, r14
    c0b6:	20 e0       	ldi	r18, 0x00	; 0
    c0b8:	30 e0       	ldi	r19, 0x00	; 0
    c0ba:	a9 01       	movw	r20, r18
    c0bc:	0f 2e       	mov	r0, r31
    c0be:	f0 e0       	ldi	r31, 0x00	; 0
    c0c0:	ef 2e       	mov	r14, r31
    c0c2:	f0 e0       	ldi	r31, 0x00	; 0
    c0c4:	ff 2e       	mov	r15, r31
    c0c6:	f4 e3       	ldi	r31, 0x34	; 52
    c0c8:	0f 2f       	mov	r16, r31
    c0ca:	f3 e4       	ldi	r31, 0x43	; 67
    c0cc:	1f 2f       	mov	r17, r31
    c0ce:	f0 2d       	mov	r31, r0
    c0d0:	0e 94 a0 08 	call	0x1140	; 0x1140 <_Z3mapddddd>
    c0d4:	0f 90       	pop	r0
    c0d6:	0f 90       	pop	r0
    c0d8:	0f 90       	pop	r0
    c0da:	0f 90       	pop	r0
        OCR5A=ICR5-vAl;
    c0dc:	c0 91 26 01 	lds	r28, 0x0126
    c0e0:	d0 91 27 01 	lds	r29, 0x0127
      case 8:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
        OCR4C=ICR4-vAl;
        break;
      case 46:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    c0e4:	0e 94 bb 79 	call	0xf376	; 0xf376 <__fixsfsi>
        OCR5A=ICR5-vAl;
    c0e8:	c6 1b       	sub	r28, r22
    c0ea:	d7 0b       	sbc	r29, r23
    c0ec:	d0 93 29 01 	sts	0x0129, r29
    c0f0:	c0 93 28 01 	sts	0x0128, r28
    c0f4:	a3 c0       	rjmp	.+326    	; 0xc23c <_Z6angle6i+0x100a>
        break;
      case 45:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    c0f6:	e6 e8       	ldi	r30, 0x86	; 134
    c0f8:	f0 e0       	ldi	r31, 0x00	; 0
    c0fa:	c0 81       	ld	r28, Z
    c0fc:	d1 81       	ldd	r29, Z+1	; 0x01
    c0fe:	80 80       	ld	r8, Z
    c100:	91 80       	ldd	r9, Z+1	; 0x01
    c102:	00 d0       	rcall	.+0      	; 0xc104 <_Z6angle6i+0xed2>
    c104:	0f 92       	push	r0
    c106:	4d b6       	in	r4, 0x3d	; 61
    c108:	5e b6       	in	r5, 0x3e	; 62
    c10a:	08 94       	sec
    c10c:	41 1c       	adc	r4, r1
    c10e:	51 1c       	adc	r5, r1
    c110:	88 27       	eor	r24, r24
    c112:	77 fd       	sbrc	r23, 7
    c114:	80 95       	com	r24
    c116:	98 2f       	mov	r25, r24
    c118:	0e 94 ee 79 	call	0xf3dc	; 0xf3dc <__floatsisf>
    c11c:	7b 01       	movw	r14, r22
    c11e:	8c 01       	movw	r16, r24
    c120:	ce 01       	movw	r24, r28
    c122:	68 e2       	ldi	r22, 0x28	; 40
    c124:	70 e0       	ldi	r23, 0x00	; 0
    c126:	0e 94 05 7b 	call	0xf60a	; 0xf60a <__udivmodhi4>
    c12a:	80 e0       	ldi	r24, 0x00	; 0
    c12c:	90 e0       	ldi	r25, 0x00	; 0
    c12e:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    c132:	5b 01       	movw	r10, r22
    c134:	6c 01       	movw	r12, r24
    c136:	96 94       	lsr	r9
    c138:	87 94       	ror	r8
    c13a:	96 94       	lsr	r9
    c13c:	87 94       	ror	r8
    c13e:	96 94       	lsr	r9
    c140:	87 94       	ror	r8
    c142:	b4 01       	movw	r22, r8
    c144:	80 e0       	ldi	r24, 0x00	; 0
    c146:	90 e0       	ldi	r25, 0x00	; 0
    c148:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    c14c:	f2 01       	movw	r30, r4
    c14e:	60 83       	st	Z, r22
    c150:	71 83       	std	Z+1, r23	; 0x01
    c152:	82 83       	std	Z+2, r24	; 0x02
    c154:	93 83       	std	Z+3, r25	; 0x03
    c156:	c8 01       	movw	r24, r16
    c158:	b7 01       	movw	r22, r14
    c15a:	20 e0       	ldi	r18, 0x00	; 0
    c15c:	30 e0       	ldi	r19, 0x00	; 0
    c15e:	a9 01       	movw	r20, r18
    c160:	0f 2e       	mov	r0, r31
    c162:	f0 e0       	ldi	r31, 0x00	; 0
    c164:	ef 2e       	mov	r14, r31
    c166:	f0 e0       	ldi	r31, 0x00	; 0
    c168:	ff 2e       	mov	r15, r31
    c16a:	f4 e3       	ldi	r31, 0x34	; 52
    c16c:	0f 2f       	mov	r16, r31
    c16e:	f3 e4       	ldi	r31, 0x43	; 67
    c170:	1f 2f       	mov	r17, r31
    c172:	f0 2d       	mov	r31, r0
    c174:	0e 94 a0 08 	call	0x1140	; 0x1140 <_Z3mapddddd>
    c178:	0f 90       	pop	r0
    c17a:	0f 90       	pop	r0
    c17c:	0f 90       	pop	r0
    c17e:	0f 90       	pop	r0
        OCR5B=ICR5-vAl;
    c180:	c0 91 26 01 	lds	r28, 0x0126
    c184:	d0 91 27 01 	lds	r29, 0x0127
      case 46:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
        OCR5A=ICR5-vAl;
        break;
      case 45:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    c188:	0e 94 bb 79 	call	0xf376	; 0xf376 <__fixsfsi>
        OCR5B=ICR5-vAl;
    c18c:	c6 1b       	sub	r28, r22
    c18e:	d7 0b       	sbc	r29, r23
    c190:	d0 93 2b 01 	sts	0x012B, r29
    c194:	c0 93 2a 01 	sts	0x012A, r28
    c198:	51 c0       	rjmp	.+162    	; 0xc23c <_Z6angle6i+0x100a>
        break;
      case 44:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    c19a:	e6 e8       	ldi	r30, 0x86	; 134
    c19c:	f0 e0       	ldi	r31, 0x00	; 0
    c19e:	c0 81       	ld	r28, Z
    c1a0:	d1 81       	ldd	r29, Z+1	; 0x01
    c1a2:	80 80       	ld	r8, Z
    c1a4:	91 80       	ldd	r9, Z+1	; 0x01
    c1a6:	00 d0       	rcall	.+0      	; 0xc1a8 <_Z6angle6i+0xf76>
    c1a8:	0f 92       	push	r0
    c1aa:	4d b6       	in	r4, 0x3d	; 61
    c1ac:	5e b6       	in	r5, 0x3e	; 62
    c1ae:	08 94       	sec
    c1b0:	41 1c       	adc	r4, r1
    c1b2:	51 1c       	adc	r5, r1
    c1b4:	88 27       	eor	r24, r24
    c1b6:	77 fd       	sbrc	r23, 7
    c1b8:	80 95       	com	r24
    c1ba:	98 2f       	mov	r25, r24
    c1bc:	0e 94 ee 79 	call	0xf3dc	; 0xf3dc <__floatsisf>
    c1c0:	7b 01       	movw	r14, r22
    c1c2:	8c 01       	movw	r16, r24
    c1c4:	ce 01       	movw	r24, r28
    c1c6:	68 e2       	ldi	r22, 0x28	; 40
    c1c8:	70 e0       	ldi	r23, 0x00	; 0
    c1ca:	0e 94 05 7b 	call	0xf60a	; 0xf60a <__udivmodhi4>
    c1ce:	80 e0       	ldi	r24, 0x00	; 0
    c1d0:	90 e0       	ldi	r25, 0x00	; 0
    c1d2:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    c1d6:	5b 01       	movw	r10, r22
    c1d8:	6c 01       	movw	r12, r24
    c1da:	96 94       	lsr	r9
    c1dc:	87 94       	ror	r8
    c1de:	96 94       	lsr	r9
    c1e0:	87 94       	ror	r8
    c1e2:	96 94       	lsr	r9
    c1e4:	87 94       	ror	r8
    c1e6:	b4 01       	movw	r22, r8
    c1e8:	80 e0       	ldi	r24, 0x00	; 0
    c1ea:	90 e0       	ldi	r25, 0x00	; 0
    c1ec:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    c1f0:	f2 01       	movw	r30, r4
    c1f2:	60 83       	st	Z, r22
    c1f4:	71 83       	std	Z+1, r23	; 0x01
    c1f6:	82 83       	std	Z+2, r24	; 0x02
    c1f8:	93 83       	std	Z+3, r25	; 0x03
    c1fa:	c8 01       	movw	r24, r16
    c1fc:	b7 01       	movw	r22, r14
    c1fe:	20 e0       	ldi	r18, 0x00	; 0
    c200:	30 e0       	ldi	r19, 0x00	; 0
    c202:	a9 01       	movw	r20, r18
    c204:	0f 2e       	mov	r0, r31
    c206:	f0 e0       	ldi	r31, 0x00	; 0
    c208:	ef 2e       	mov	r14, r31
    c20a:	f0 e0       	ldi	r31, 0x00	; 0
    c20c:	ff 2e       	mov	r15, r31
    c20e:	f4 e3       	ldi	r31, 0x34	; 52
    c210:	0f 2f       	mov	r16, r31
    c212:	f3 e4       	ldi	r31, 0x43	; 67
    c214:	1f 2f       	mov	r17, r31
    c216:	f0 2d       	mov	r31, r0
    c218:	0e 94 a0 08 	call	0x1140	; 0x1140 <_Z3mapddddd>
    c21c:	0f 90       	pop	r0
    c21e:	0f 90       	pop	r0
    c220:	0f 90       	pop	r0
    c222:	0f 90       	pop	r0
        OCR5C=ICR5-vAl;
    c224:	c0 91 26 01 	lds	r28, 0x0126
    c228:	d0 91 27 01 	lds	r29, 0x0127
      case 45:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
        OCR5B=ICR5-vAl;
        break;
      case 44:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    c22c:	0e 94 bb 79 	call	0xf376	; 0xf376 <__fixsfsi>
        OCR5C=ICR5-vAl;
    c230:	c6 1b       	sub	r28, r22
    c232:	d7 0b       	sbc	r29, r23
    c234:	d0 93 2d 01 	sts	0x012D, r29
    c238:	c0 93 2c 01 	sts	0x012C, r28
		r.write(z);
    c23c:	60 91 ce 02 	lds	r22, 0x02CE
    c240:	70 91 cf 02 	lds	r23, 0x02CF
     }
  }

  void write(int vAl)           //PIN=servo pin no. on mega,vAl=angle F_CPU for the servo at pin
  {
    switch(pIn)
    c244:	80 91 d6 02 	lds	r24, 0x02D6
    c248:	88 30       	cpi	r24, 0x08	; 8
    c24a:	09 f4       	brne	.+2      	; 0xc24e <_Z6angle6i+0x101c>
    c24c:	63 c2       	rjmp	.+1222   	; 0xc714 <_Z6angle6i+0x14e2>
    c24e:	89 30       	cpi	r24, 0x09	; 9
    c250:	98 f4       	brcc	.+38     	; 0xc278 <_Z6angle6i+0x1046>
    c252:	85 30       	cpi	r24, 0x05	; 5
    c254:	09 f4       	brne	.+2      	; 0xc258 <_Z6angle6i+0x1026>
    c256:	c4 c0       	rjmp	.+392    	; 0xc3e0 <_Z6angle6i+0x11ae>
    c258:	86 30       	cpi	r24, 0x06	; 6
    c25a:	38 f4       	brcc	.+14     	; 0xc26a <_Z6angle6i+0x1038>
    c25c:	82 30       	cpi	r24, 0x02	; 2
    c25e:	09 f4       	brne	.+2      	; 0xc262 <_Z6angle6i+0x1030>
    c260:	11 c1       	rjmp	.+546    	; 0xc484 <_Z6angle6i+0x1252>
    c262:	83 30       	cpi	r24, 0x03	; 3
    c264:	09 f0       	breq	.+2      	; 0xc268 <_Z6angle6i+0x1036>
    c266:	9d c3       	rjmp	.+1850   	; 0xc9a2 <_Z6angle6i+0x1770>
    c268:	5f c1       	rjmp	.+702    	; 0xc528 <_Z6angle6i+0x12f6>
    c26a:	86 30       	cpi	r24, 0x06	; 6
    c26c:	09 f4       	brne	.+2      	; 0xc270 <_Z6angle6i+0x103e>
    c26e:	ae c1       	rjmp	.+860    	; 0xc5cc <_Z6angle6i+0x139a>
    c270:	87 30       	cpi	r24, 0x07	; 7
    c272:	09 f0       	breq	.+2      	; 0xc276 <_Z6angle6i+0x1044>
    c274:	96 c3       	rjmp	.+1836   	; 0xc9a2 <_Z6angle6i+0x1770>
    c276:	fc c1       	rjmp	.+1016   	; 0xc670 <_Z6angle6i+0x143e>
    c278:	8c 32       	cpi	r24, 0x2C	; 44
    c27a:	09 f4       	brne	.+2      	; 0xc27e <_Z6angle6i+0x104c>
    c27c:	41 c3       	rjmp	.+1666   	; 0xc900 <_Z6angle6i+0x16ce>
    c27e:	8d 32       	cpi	r24, 0x2D	; 45
    c280:	30 f4       	brcc	.+12     	; 0xc28e <_Z6angle6i+0x105c>
    c282:	8b 30       	cpi	r24, 0x0B	; 11
    c284:	59 f0       	breq	.+22     	; 0xc29c <_Z6angle6i+0x106a>
    c286:	8c 30       	cpi	r24, 0x0C	; 12
    c288:	09 f0       	breq	.+2      	; 0xc28c <_Z6angle6i+0x105a>
    c28a:	8b c3       	rjmp	.+1814   	; 0xc9a2 <_Z6angle6i+0x1770>
    c28c:	58 c0       	rjmp	.+176    	; 0xc33e <_Z6angle6i+0x110c>
    c28e:	8d 32       	cpi	r24, 0x2D	; 45
    c290:	09 f4       	brne	.+2      	; 0xc294 <_Z6angle6i+0x1062>
    c292:	e4 c2       	rjmp	.+1480   	; 0xc85c <_Z6angle6i+0x162a>
    c294:	8e 32       	cpi	r24, 0x2E	; 46
    c296:	09 f0       	breq	.+2      	; 0xc29a <_Z6angle6i+0x1068>
    c298:	84 c3       	rjmp	.+1800   	; 0xc9a2 <_Z6angle6i+0x1770>
    c29a:	8e c2       	rjmp	.+1308   	; 0xc7b8 <_Z6angle6i+0x1586>
    {
     case 11:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    c29c:	c6 e8       	ldi	r28, 0x86	; 134
    c29e:	d0 e0       	ldi	r29, 0x00	; 0
    c2a0:	08 81       	ld	r16, Y
    c2a2:	19 81       	ldd	r17, Y+1	; 0x01
    c2a4:	e8 80       	ld	r14, Y
    c2a6:	f9 80       	ldd	r15, Y+1	; 0x01
    c2a8:	00 d0       	rcall	.+0      	; 0xc2aa <_Z6angle6i+0x1078>
    c2aa:	0f 92       	push	r0
    c2ac:	8d b6       	in	r8, 0x3d	; 61
    c2ae:	9e b6       	in	r9, 0x3e	; 62
    c2b0:	08 94       	sec
    c2b2:	81 1c       	adc	r8, r1
    c2b4:	91 1c       	adc	r9, r1
    c2b6:	88 27       	eor	r24, r24
    c2b8:	77 fd       	sbrc	r23, 7
    c2ba:	80 95       	com	r24
    c2bc:	98 2f       	mov	r25, r24
    c2be:	0e 94 ee 79 	call	0xf3dc	; 0xf3dc <__floatsisf>
    c2c2:	2b 01       	movw	r4, r22
    c2c4:	3c 01       	movw	r6, r24
    c2c6:	c8 01       	movw	r24, r16
    c2c8:	68 e2       	ldi	r22, 0x28	; 40
    c2ca:	70 e0       	ldi	r23, 0x00	; 0
    c2cc:	0e 94 05 7b 	call	0xf60a	; 0xf60a <__udivmodhi4>
    c2d0:	80 e0       	ldi	r24, 0x00	; 0
    c2d2:	90 e0       	ldi	r25, 0x00	; 0
    c2d4:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    c2d8:	5b 01       	movw	r10, r22
    c2da:	6c 01       	movw	r12, r24
    c2dc:	f6 94       	lsr	r15
    c2de:	e7 94       	ror	r14
    c2e0:	f6 94       	lsr	r15
    c2e2:	e7 94       	ror	r14
    c2e4:	f6 94       	lsr	r15
    c2e6:	e7 94       	ror	r14
    c2e8:	b7 01       	movw	r22, r14
    c2ea:	80 e0       	ldi	r24, 0x00	; 0
    c2ec:	90 e0       	ldi	r25, 0x00	; 0
    c2ee:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    c2f2:	f4 01       	movw	r30, r8
    c2f4:	60 83       	st	Z, r22
    c2f6:	71 83       	std	Z+1, r23	; 0x01
    c2f8:	82 83       	std	Z+2, r24	; 0x02
    c2fa:	93 83       	std	Z+3, r25	; 0x03
    c2fc:	c3 01       	movw	r24, r6
    c2fe:	b2 01       	movw	r22, r4
    c300:	20 e0       	ldi	r18, 0x00	; 0
    c302:	30 e0       	ldi	r19, 0x00	; 0
    c304:	a9 01       	movw	r20, r18
    c306:	0f 2e       	mov	r0, r31
    c308:	f0 e0       	ldi	r31, 0x00	; 0
    c30a:	ef 2e       	mov	r14, r31
    c30c:	f0 e0       	ldi	r31, 0x00	; 0
    c30e:	ff 2e       	mov	r15, r31
    c310:	f4 e3       	ldi	r31, 0x34	; 52
    c312:	0f 2f       	mov	r16, r31
    c314:	f3 e4       	ldi	r31, 0x43	; 67
    c316:	1f 2f       	mov	r17, r31
    c318:	f0 2d       	mov	r31, r0
    c31a:	0e 94 a0 08 	call	0x1140	; 0x1140 <_Z3mapddddd>
    c31e:	0f 90       	pop	r0
    c320:	0f 90       	pop	r0
    c322:	0f 90       	pop	r0
    c324:	0f 90       	pop	r0
        OCR1A=ICR1-vAl;
    c326:	09 90       	ld	r0, Y+
    c328:	d8 81       	ld	r29, Y
    c32a:	c0 2d       	mov	r28, r0
  void write(int vAl)           //PIN=servo pin no. on mega,vAl=angle F_CPU for the servo at pin
  {
    switch(pIn)
    {
     case 11:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    c32c:	0e 94 bb 79 	call	0xf376	; 0xf376 <__fixsfsi>
        OCR1A=ICR1-vAl;
    c330:	c6 1b       	sub	r28, r22
    c332:	d7 0b       	sbc	r29, r23
    c334:	d0 93 89 00 	sts	0x0089, r29
    c338:	c0 93 88 00 	sts	0x0088, r28
    c33c:	32 c3       	rjmp	.+1636   	; 0xc9a2 <_Z6angle6i+0x1770>
        break;
      case 12:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    c33e:	c6 e8       	ldi	r28, 0x86	; 134
    c340:	d0 e0       	ldi	r29, 0x00	; 0
    c342:	08 81       	ld	r16, Y
    c344:	19 81       	ldd	r17, Y+1	; 0x01
    c346:	e8 80       	ld	r14, Y
    c348:	f9 80       	ldd	r15, Y+1	; 0x01
    c34a:	00 d0       	rcall	.+0      	; 0xc34c <_Z6angle6i+0x111a>
    c34c:	0f 92       	push	r0
    c34e:	8d b6       	in	r8, 0x3d	; 61
    c350:	9e b6       	in	r9, 0x3e	; 62
    c352:	08 94       	sec
    c354:	81 1c       	adc	r8, r1
    c356:	91 1c       	adc	r9, r1
    c358:	88 27       	eor	r24, r24
    c35a:	77 fd       	sbrc	r23, 7
    c35c:	80 95       	com	r24
    c35e:	98 2f       	mov	r25, r24
    c360:	0e 94 ee 79 	call	0xf3dc	; 0xf3dc <__floatsisf>
    c364:	2b 01       	movw	r4, r22
    c366:	3c 01       	movw	r6, r24
    c368:	c8 01       	movw	r24, r16
    c36a:	68 e2       	ldi	r22, 0x28	; 40
    c36c:	70 e0       	ldi	r23, 0x00	; 0
    c36e:	0e 94 05 7b 	call	0xf60a	; 0xf60a <__udivmodhi4>
    c372:	80 e0       	ldi	r24, 0x00	; 0
    c374:	90 e0       	ldi	r25, 0x00	; 0
    c376:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    c37a:	5b 01       	movw	r10, r22
    c37c:	6c 01       	movw	r12, r24
    c37e:	f6 94       	lsr	r15
    c380:	e7 94       	ror	r14
    c382:	f6 94       	lsr	r15
    c384:	e7 94       	ror	r14
    c386:	f6 94       	lsr	r15
    c388:	e7 94       	ror	r14
    c38a:	b7 01       	movw	r22, r14
    c38c:	80 e0       	ldi	r24, 0x00	; 0
    c38e:	90 e0       	ldi	r25, 0x00	; 0
    c390:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    c394:	f4 01       	movw	r30, r8
    c396:	60 83       	st	Z, r22
    c398:	71 83       	std	Z+1, r23	; 0x01
    c39a:	82 83       	std	Z+2, r24	; 0x02
    c39c:	93 83       	std	Z+3, r25	; 0x03
    c39e:	c3 01       	movw	r24, r6
    c3a0:	b2 01       	movw	r22, r4
    c3a2:	20 e0       	ldi	r18, 0x00	; 0
    c3a4:	30 e0       	ldi	r19, 0x00	; 0
    c3a6:	a9 01       	movw	r20, r18
    c3a8:	0f 2e       	mov	r0, r31
    c3aa:	f0 e0       	ldi	r31, 0x00	; 0
    c3ac:	ef 2e       	mov	r14, r31
    c3ae:	f0 e0       	ldi	r31, 0x00	; 0
    c3b0:	ff 2e       	mov	r15, r31
    c3b2:	f4 e3       	ldi	r31, 0x34	; 52
    c3b4:	0f 2f       	mov	r16, r31
    c3b6:	f3 e4       	ldi	r31, 0x43	; 67
    c3b8:	1f 2f       	mov	r17, r31
    c3ba:	f0 2d       	mov	r31, r0
    c3bc:	0e 94 a0 08 	call	0x1140	; 0x1140 <_Z3mapddddd>
    c3c0:	0f 90       	pop	r0
    c3c2:	0f 90       	pop	r0
    c3c4:	0f 90       	pop	r0
    c3c6:	0f 90       	pop	r0
        OCR1B=ICR1-vAl;
    c3c8:	09 90       	ld	r0, Y+
    c3ca:	d8 81       	ld	r29, Y
    c3cc:	c0 2d       	mov	r28, r0
     case 11:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
        OCR1A=ICR1-vAl;
        break;
      case 12:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    c3ce:	0e 94 bb 79 	call	0xf376	; 0xf376 <__fixsfsi>
        OCR1B=ICR1-vAl;
    c3d2:	c6 1b       	sub	r28, r22
    c3d4:	d7 0b       	sbc	r29, r23
    c3d6:	d0 93 8b 00 	sts	0x008B, r29
    c3da:	c0 93 8a 00 	sts	0x008A, r28
    c3de:	e1 c2       	rjmp	.+1474   	; 0xc9a2 <_Z6angle6i+0x1770>
        break;
      case 5:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    c3e0:	e6 e8       	ldi	r30, 0x86	; 134
    c3e2:	f0 e0       	ldi	r31, 0x00	; 0
    c3e4:	c0 81       	ld	r28, Z
    c3e6:	d1 81       	ldd	r29, Z+1	; 0x01
    c3e8:	80 80       	ld	r8, Z
    c3ea:	91 80       	ldd	r9, Z+1	; 0x01
    c3ec:	00 d0       	rcall	.+0      	; 0xc3ee <_Z6angle6i+0x11bc>
    c3ee:	0f 92       	push	r0
    c3f0:	4d b6       	in	r4, 0x3d	; 61
    c3f2:	5e b6       	in	r5, 0x3e	; 62
    c3f4:	08 94       	sec
    c3f6:	41 1c       	adc	r4, r1
    c3f8:	51 1c       	adc	r5, r1
    c3fa:	88 27       	eor	r24, r24
    c3fc:	77 fd       	sbrc	r23, 7
    c3fe:	80 95       	com	r24
    c400:	98 2f       	mov	r25, r24
    c402:	0e 94 ee 79 	call	0xf3dc	; 0xf3dc <__floatsisf>
    c406:	7b 01       	movw	r14, r22
    c408:	8c 01       	movw	r16, r24
    c40a:	ce 01       	movw	r24, r28
    c40c:	68 e2       	ldi	r22, 0x28	; 40
    c40e:	70 e0       	ldi	r23, 0x00	; 0
    c410:	0e 94 05 7b 	call	0xf60a	; 0xf60a <__udivmodhi4>
    c414:	80 e0       	ldi	r24, 0x00	; 0
    c416:	90 e0       	ldi	r25, 0x00	; 0
    c418:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    c41c:	5b 01       	movw	r10, r22
    c41e:	6c 01       	movw	r12, r24
    c420:	96 94       	lsr	r9
    c422:	87 94       	ror	r8
    c424:	96 94       	lsr	r9
    c426:	87 94       	ror	r8
    c428:	96 94       	lsr	r9
    c42a:	87 94       	ror	r8
    c42c:	b4 01       	movw	r22, r8
    c42e:	80 e0       	ldi	r24, 0x00	; 0
    c430:	90 e0       	ldi	r25, 0x00	; 0
    c432:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    c436:	f2 01       	movw	r30, r4
    c438:	60 83       	st	Z, r22
    c43a:	71 83       	std	Z+1, r23	; 0x01
    c43c:	82 83       	std	Z+2, r24	; 0x02
    c43e:	93 83       	std	Z+3, r25	; 0x03
    c440:	c8 01       	movw	r24, r16
    c442:	b7 01       	movw	r22, r14
    c444:	20 e0       	ldi	r18, 0x00	; 0
    c446:	30 e0       	ldi	r19, 0x00	; 0
    c448:	a9 01       	movw	r20, r18
    c44a:	0f 2e       	mov	r0, r31
    c44c:	f0 e0       	ldi	r31, 0x00	; 0
    c44e:	ef 2e       	mov	r14, r31
    c450:	f0 e0       	ldi	r31, 0x00	; 0
    c452:	ff 2e       	mov	r15, r31
    c454:	f4 e3       	ldi	r31, 0x34	; 52
    c456:	0f 2f       	mov	r16, r31
    c458:	f3 e4       	ldi	r31, 0x43	; 67
    c45a:	1f 2f       	mov	r17, r31
    c45c:	f0 2d       	mov	r31, r0
    c45e:	0e 94 a0 08 	call	0x1140	; 0x1140 <_Z3mapddddd>
    c462:	0f 90       	pop	r0
    c464:	0f 90       	pop	r0
    c466:	0f 90       	pop	r0
    c468:	0f 90       	pop	r0
        OCR3A=ICR3-vAl;
    c46a:	c0 91 96 00 	lds	r28, 0x0096
    c46e:	d0 91 97 00 	lds	r29, 0x0097
      case 12:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
        OCR1B=ICR1-vAl;
        break;
      case 5:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    c472:	0e 94 bb 79 	call	0xf376	; 0xf376 <__fixsfsi>
        OCR3A=ICR3-vAl;
    c476:	c6 1b       	sub	r28, r22
    c478:	d7 0b       	sbc	r29, r23
    c47a:	d0 93 99 00 	sts	0x0099, r29
    c47e:	c0 93 98 00 	sts	0x0098, r28
    c482:	8f c2       	rjmp	.+1310   	; 0xc9a2 <_Z6angle6i+0x1770>
        break;
      case 2:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    c484:	e6 e8       	ldi	r30, 0x86	; 134
    c486:	f0 e0       	ldi	r31, 0x00	; 0
    c488:	c0 81       	ld	r28, Z
    c48a:	d1 81       	ldd	r29, Z+1	; 0x01
    c48c:	80 80       	ld	r8, Z
    c48e:	91 80       	ldd	r9, Z+1	; 0x01
    c490:	00 d0       	rcall	.+0      	; 0xc492 <_Z6angle6i+0x1260>
    c492:	0f 92       	push	r0
    c494:	4d b6       	in	r4, 0x3d	; 61
    c496:	5e b6       	in	r5, 0x3e	; 62
    c498:	08 94       	sec
    c49a:	41 1c       	adc	r4, r1
    c49c:	51 1c       	adc	r5, r1
    c49e:	88 27       	eor	r24, r24
    c4a0:	77 fd       	sbrc	r23, 7
    c4a2:	80 95       	com	r24
    c4a4:	98 2f       	mov	r25, r24
    c4a6:	0e 94 ee 79 	call	0xf3dc	; 0xf3dc <__floatsisf>
    c4aa:	7b 01       	movw	r14, r22
    c4ac:	8c 01       	movw	r16, r24
    c4ae:	ce 01       	movw	r24, r28
    c4b0:	68 e2       	ldi	r22, 0x28	; 40
    c4b2:	70 e0       	ldi	r23, 0x00	; 0
    c4b4:	0e 94 05 7b 	call	0xf60a	; 0xf60a <__udivmodhi4>
    c4b8:	80 e0       	ldi	r24, 0x00	; 0
    c4ba:	90 e0       	ldi	r25, 0x00	; 0
    c4bc:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    c4c0:	5b 01       	movw	r10, r22
    c4c2:	6c 01       	movw	r12, r24
    c4c4:	96 94       	lsr	r9
    c4c6:	87 94       	ror	r8
    c4c8:	96 94       	lsr	r9
    c4ca:	87 94       	ror	r8
    c4cc:	96 94       	lsr	r9
    c4ce:	87 94       	ror	r8
    c4d0:	b4 01       	movw	r22, r8
    c4d2:	80 e0       	ldi	r24, 0x00	; 0
    c4d4:	90 e0       	ldi	r25, 0x00	; 0
    c4d6:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    c4da:	f2 01       	movw	r30, r4
    c4dc:	60 83       	st	Z, r22
    c4de:	71 83       	std	Z+1, r23	; 0x01
    c4e0:	82 83       	std	Z+2, r24	; 0x02
    c4e2:	93 83       	std	Z+3, r25	; 0x03
    c4e4:	c8 01       	movw	r24, r16
    c4e6:	b7 01       	movw	r22, r14
    c4e8:	20 e0       	ldi	r18, 0x00	; 0
    c4ea:	30 e0       	ldi	r19, 0x00	; 0
    c4ec:	a9 01       	movw	r20, r18
    c4ee:	0f 2e       	mov	r0, r31
    c4f0:	f0 e0       	ldi	r31, 0x00	; 0
    c4f2:	ef 2e       	mov	r14, r31
    c4f4:	f0 e0       	ldi	r31, 0x00	; 0
    c4f6:	ff 2e       	mov	r15, r31
    c4f8:	f4 e3       	ldi	r31, 0x34	; 52
    c4fa:	0f 2f       	mov	r16, r31
    c4fc:	f3 e4       	ldi	r31, 0x43	; 67
    c4fe:	1f 2f       	mov	r17, r31
    c500:	f0 2d       	mov	r31, r0
    c502:	0e 94 a0 08 	call	0x1140	; 0x1140 <_Z3mapddddd>
    c506:	0f 90       	pop	r0
    c508:	0f 90       	pop	r0
    c50a:	0f 90       	pop	r0
    c50c:	0f 90       	pop	r0
        OCR3B=ICR3-vAl;
    c50e:	c0 91 96 00 	lds	r28, 0x0096
    c512:	d0 91 97 00 	lds	r29, 0x0097
      case 5:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
        OCR3A=ICR3-vAl;
        break;
      case 2:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    c516:	0e 94 bb 79 	call	0xf376	; 0xf376 <__fixsfsi>
        OCR3B=ICR3-vAl;
    c51a:	c6 1b       	sub	r28, r22
    c51c:	d7 0b       	sbc	r29, r23
    c51e:	d0 93 9b 00 	sts	0x009B, r29
    c522:	c0 93 9a 00 	sts	0x009A, r28
    c526:	3d c2       	rjmp	.+1146   	; 0xc9a2 <_Z6angle6i+0x1770>
        break;
      case 3:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    c528:	e6 e8       	ldi	r30, 0x86	; 134
    c52a:	f0 e0       	ldi	r31, 0x00	; 0
    c52c:	c0 81       	ld	r28, Z
    c52e:	d1 81       	ldd	r29, Z+1	; 0x01
    c530:	80 80       	ld	r8, Z
    c532:	91 80       	ldd	r9, Z+1	; 0x01
    c534:	00 d0       	rcall	.+0      	; 0xc536 <_Z6angle6i+0x1304>
    c536:	0f 92       	push	r0
    c538:	4d b6       	in	r4, 0x3d	; 61
    c53a:	5e b6       	in	r5, 0x3e	; 62
    c53c:	08 94       	sec
    c53e:	41 1c       	adc	r4, r1
    c540:	51 1c       	adc	r5, r1
    c542:	88 27       	eor	r24, r24
    c544:	77 fd       	sbrc	r23, 7
    c546:	80 95       	com	r24
    c548:	98 2f       	mov	r25, r24
    c54a:	0e 94 ee 79 	call	0xf3dc	; 0xf3dc <__floatsisf>
    c54e:	7b 01       	movw	r14, r22
    c550:	8c 01       	movw	r16, r24
    c552:	ce 01       	movw	r24, r28
    c554:	68 e2       	ldi	r22, 0x28	; 40
    c556:	70 e0       	ldi	r23, 0x00	; 0
    c558:	0e 94 05 7b 	call	0xf60a	; 0xf60a <__udivmodhi4>
    c55c:	80 e0       	ldi	r24, 0x00	; 0
    c55e:	90 e0       	ldi	r25, 0x00	; 0
    c560:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    c564:	5b 01       	movw	r10, r22
    c566:	6c 01       	movw	r12, r24
    c568:	96 94       	lsr	r9
    c56a:	87 94       	ror	r8
    c56c:	96 94       	lsr	r9
    c56e:	87 94       	ror	r8
    c570:	96 94       	lsr	r9
    c572:	87 94       	ror	r8
    c574:	b4 01       	movw	r22, r8
    c576:	80 e0       	ldi	r24, 0x00	; 0
    c578:	90 e0       	ldi	r25, 0x00	; 0
    c57a:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    c57e:	f2 01       	movw	r30, r4
    c580:	60 83       	st	Z, r22
    c582:	71 83       	std	Z+1, r23	; 0x01
    c584:	82 83       	std	Z+2, r24	; 0x02
    c586:	93 83       	std	Z+3, r25	; 0x03
    c588:	c8 01       	movw	r24, r16
    c58a:	b7 01       	movw	r22, r14
    c58c:	20 e0       	ldi	r18, 0x00	; 0
    c58e:	30 e0       	ldi	r19, 0x00	; 0
    c590:	a9 01       	movw	r20, r18
    c592:	0f 2e       	mov	r0, r31
    c594:	f0 e0       	ldi	r31, 0x00	; 0
    c596:	ef 2e       	mov	r14, r31
    c598:	f0 e0       	ldi	r31, 0x00	; 0
    c59a:	ff 2e       	mov	r15, r31
    c59c:	f4 e3       	ldi	r31, 0x34	; 52
    c59e:	0f 2f       	mov	r16, r31
    c5a0:	f3 e4       	ldi	r31, 0x43	; 67
    c5a2:	1f 2f       	mov	r17, r31
    c5a4:	f0 2d       	mov	r31, r0
    c5a6:	0e 94 a0 08 	call	0x1140	; 0x1140 <_Z3mapddddd>
    c5aa:	0f 90       	pop	r0
    c5ac:	0f 90       	pop	r0
    c5ae:	0f 90       	pop	r0
    c5b0:	0f 90       	pop	r0
        OCR3C=ICR3-vAl;
    c5b2:	c0 91 96 00 	lds	r28, 0x0096
    c5b6:	d0 91 97 00 	lds	r29, 0x0097
      case 2:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
        OCR3B=ICR3-vAl;
        break;
      case 3:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    c5ba:	0e 94 bb 79 	call	0xf376	; 0xf376 <__fixsfsi>
        OCR3C=ICR3-vAl;
    c5be:	c6 1b       	sub	r28, r22
    c5c0:	d7 0b       	sbc	r29, r23
    c5c2:	d0 93 9d 00 	sts	0x009D, r29
    c5c6:	c0 93 9c 00 	sts	0x009C, r28
    c5ca:	eb c1       	rjmp	.+982    	; 0xc9a2 <_Z6angle6i+0x1770>
        break;
      case 6:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    c5cc:	e6 e8       	ldi	r30, 0x86	; 134
    c5ce:	f0 e0       	ldi	r31, 0x00	; 0
    c5d0:	c0 81       	ld	r28, Z
    c5d2:	d1 81       	ldd	r29, Z+1	; 0x01
    c5d4:	80 80       	ld	r8, Z
    c5d6:	91 80       	ldd	r9, Z+1	; 0x01
    c5d8:	00 d0       	rcall	.+0      	; 0xc5da <_Z6angle6i+0x13a8>
    c5da:	0f 92       	push	r0
    c5dc:	4d b6       	in	r4, 0x3d	; 61
    c5de:	5e b6       	in	r5, 0x3e	; 62
    c5e0:	08 94       	sec
    c5e2:	41 1c       	adc	r4, r1
    c5e4:	51 1c       	adc	r5, r1
    c5e6:	88 27       	eor	r24, r24
    c5e8:	77 fd       	sbrc	r23, 7
    c5ea:	80 95       	com	r24
    c5ec:	98 2f       	mov	r25, r24
    c5ee:	0e 94 ee 79 	call	0xf3dc	; 0xf3dc <__floatsisf>
    c5f2:	7b 01       	movw	r14, r22
    c5f4:	8c 01       	movw	r16, r24
    c5f6:	ce 01       	movw	r24, r28
    c5f8:	68 e2       	ldi	r22, 0x28	; 40
    c5fa:	70 e0       	ldi	r23, 0x00	; 0
    c5fc:	0e 94 05 7b 	call	0xf60a	; 0xf60a <__udivmodhi4>
    c600:	80 e0       	ldi	r24, 0x00	; 0
    c602:	90 e0       	ldi	r25, 0x00	; 0
    c604:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    c608:	5b 01       	movw	r10, r22
    c60a:	6c 01       	movw	r12, r24
    c60c:	96 94       	lsr	r9
    c60e:	87 94       	ror	r8
    c610:	96 94       	lsr	r9
    c612:	87 94       	ror	r8
    c614:	96 94       	lsr	r9
    c616:	87 94       	ror	r8
    c618:	b4 01       	movw	r22, r8
    c61a:	80 e0       	ldi	r24, 0x00	; 0
    c61c:	90 e0       	ldi	r25, 0x00	; 0
    c61e:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    c622:	f2 01       	movw	r30, r4
    c624:	60 83       	st	Z, r22
    c626:	71 83       	std	Z+1, r23	; 0x01
    c628:	82 83       	std	Z+2, r24	; 0x02
    c62a:	93 83       	std	Z+3, r25	; 0x03
    c62c:	c8 01       	movw	r24, r16
    c62e:	b7 01       	movw	r22, r14
    c630:	20 e0       	ldi	r18, 0x00	; 0
    c632:	30 e0       	ldi	r19, 0x00	; 0
    c634:	a9 01       	movw	r20, r18
    c636:	0f 2e       	mov	r0, r31
    c638:	f0 e0       	ldi	r31, 0x00	; 0
    c63a:	ef 2e       	mov	r14, r31
    c63c:	f0 e0       	ldi	r31, 0x00	; 0
    c63e:	ff 2e       	mov	r15, r31
    c640:	f4 e3       	ldi	r31, 0x34	; 52
    c642:	0f 2f       	mov	r16, r31
    c644:	f3 e4       	ldi	r31, 0x43	; 67
    c646:	1f 2f       	mov	r17, r31
    c648:	f0 2d       	mov	r31, r0
    c64a:	0e 94 a0 08 	call	0x1140	; 0x1140 <_Z3mapddddd>
    c64e:	0f 90       	pop	r0
    c650:	0f 90       	pop	r0
    c652:	0f 90       	pop	r0
    c654:	0f 90       	pop	r0
        OCR4A=ICR4-vAl;
    c656:	c0 91 a6 00 	lds	r28, 0x00A6
    c65a:	d0 91 a7 00 	lds	r29, 0x00A7
      case 3:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
        OCR3C=ICR3-vAl;
        break;
      case 6:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    c65e:	0e 94 bb 79 	call	0xf376	; 0xf376 <__fixsfsi>
        OCR4A=ICR4-vAl;
    c662:	c6 1b       	sub	r28, r22
    c664:	d7 0b       	sbc	r29, r23
    c666:	d0 93 a9 00 	sts	0x00A9, r29
    c66a:	c0 93 a8 00 	sts	0x00A8, r28
    c66e:	99 c1       	rjmp	.+818    	; 0xc9a2 <_Z6angle6i+0x1770>
        break;
      case 7:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    c670:	e6 e8       	ldi	r30, 0x86	; 134
    c672:	f0 e0       	ldi	r31, 0x00	; 0
    c674:	c0 81       	ld	r28, Z
    c676:	d1 81       	ldd	r29, Z+1	; 0x01
    c678:	80 80       	ld	r8, Z
    c67a:	91 80       	ldd	r9, Z+1	; 0x01
    c67c:	00 d0       	rcall	.+0      	; 0xc67e <_Z6angle6i+0x144c>
    c67e:	0f 92       	push	r0
    c680:	4d b6       	in	r4, 0x3d	; 61
    c682:	5e b6       	in	r5, 0x3e	; 62
    c684:	08 94       	sec
    c686:	41 1c       	adc	r4, r1
    c688:	51 1c       	adc	r5, r1
    c68a:	88 27       	eor	r24, r24
    c68c:	77 fd       	sbrc	r23, 7
    c68e:	80 95       	com	r24
    c690:	98 2f       	mov	r25, r24
    c692:	0e 94 ee 79 	call	0xf3dc	; 0xf3dc <__floatsisf>
    c696:	7b 01       	movw	r14, r22
    c698:	8c 01       	movw	r16, r24
    c69a:	ce 01       	movw	r24, r28
    c69c:	68 e2       	ldi	r22, 0x28	; 40
    c69e:	70 e0       	ldi	r23, 0x00	; 0
    c6a0:	0e 94 05 7b 	call	0xf60a	; 0xf60a <__udivmodhi4>
    c6a4:	80 e0       	ldi	r24, 0x00	; 0
    c6a6:	90 e0       	ldi	r25, 0x00	; 0
    c6a8:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    c6ac:	5b 01       	movw	r10, r22
    c6ae:	6c 01       	movw	r12, r24
    c6b0:	96 94       	lsr	r9
    c6b2:	87 94       	ror	r8
    c6b4:	96 94       	lsr	r9
    c6b6:	87 94       	ror	r8
    c6b8:	96 94       	lsr	r9
    c6ba:	87 94       	ror	r8
    c6bc:	b4 01       	movw	r22, r8
    c6be:	80 e0       	ldi	r24, 0x00	; 0
    c6c0:	90 e0       	ldi	r25, 0x00	; 0
    c6c2:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    c6c6:	f2 01       	movw	r30, r4
    c6c8:	60 83       	st	Z, r22
    c6ca:	71 83       	std	Z+1, r23	; 0x01
    c6cc:	82 83       	std	Z+2, r24	; 0x02
    c6ce:	93 83       	std	Z+3, r25	; 0x03
    c6d0:	c8 01       	movw	r24, r16
    c6d2:	b7 01       	movw	r22, r14
    c6d4:	20 e0       	ldi	r18, 0x00	; 0
    c6d6:	30 e0       	ldi	r19, 0x00	; 0
    c6d8:	a9 01       	movw	r20, r18
    c6da:	0f 2e       	mov	r0, r31
    c6dc:	f0 e0       	ldi	r31, 0x00	; 0
    c6de:	ef 2e       	mov	r14, r31
    c6e0:	f0 e0       	ldi	r31, 0x00	; 0
    c6e2:	ff 2e       	mov	r15, r31
    c6e4:	f4 e3       	ldi	r31, 0x34	; 52
    c6e6:	0f 2f       	mov	r16, r31
    c6e8:	f3 e4       	ldi	r31, 0x43	; 67
    c6ea:	1f 2f       	mov	r17, r31
    c6ec:	f0 2d       	mov	r31, r0
    c6ee:	0e 94 a0 08 	call	0x1140	; 0x1140 <_Z3mapddddd>
    c6f2:	0f 90       	pop	r0
    c6f4:	0f 90       	pop	r0
    c6f6:	0f 90       	pop	r0
    c6f8:	0f 90       	pop	r0
        OCR4B=ICR4-vAl;
    c6fa:	c0 91 a6 00 	lds	r28, 0x00A6
    c6fe:	d0 91 a7 00 	lds	r29, 0x00A7
      case 6:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
        OCR4A=ICR4-vAl;
        break;
      case 7:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    c702:	0e 94 bb 79 	call	0xf376	; 0xf376 <__fixsfsi>
        OCR4B=ICR4-vAl;
    c706:	c6 1b       	sub	r28, r22
    c708:	d7 0b       	sbc	r29, r23
    c70a:	d0 93 ab 00 	sts	0x00AB, r29
    c70e:	c0 93 aa 00 	sts	0x00AA, r28
    c712:	47 c1       	rjmp	.+654    	; 0xc9a2 <_Z6angle6i+0x1770>
        break; 
      case 8:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    c714:	e6 e8       	ldi	r30, 0x86	; 134
    c716:	f0 e0       	ldi	r31, 0x00	; 0
    c718:	c0 81       	ld	r28, Z
    c71a:	d1 81       	ldd	r29, Z+1	; 0x01
    c71c:	80 80       	ld	r8, Z
    c71e:	91 80       	ldd	r9, Z+1	; 0x01
    c720:	00 d0       	rcall	.+0      	; 0xc722 <_Z6angle6i+0x14f0>
    c722:	0f 92       	push	r0
    c724:	4d b6       	in	r4, 0x3d	; 61
    c726:	5e b6       	in	r5, 0x3e	; 62
    c728:	08 94       	sec
    c72a:	41 1c       	adc	r4, r1
    c72c:	51 1c       	adc	r5, r1
    c72e:	88 27       	eor	r24, r24
    c730:	77 fd       	sbrc	r23, 7
    c732:	80 95       	com	r24
    c734:	98 2f       	mov	r25, r24
    c736:	0e 94 ee 79 	call	0xf3dc	; 0xf3dc <__floatsisf>
    c73a:	7b 01       	movw	r14, r22
    c73c:	8c 01       	movw	r16, r24
    c73e:	ce 01       	movw	r24, r28
    c740:	68 e2       	ldi	r22, 0x28	; 40
    c742:	70 e0       	ldi	r23, 0x00	; 0
    c744:	0e 94 05 7b 	call	0xf60a	; 0xf60a <__udivmodhi4>
    c748:	80 e0       	ldi	r24, 0x00	; 0
    c74a:	90 e0       	ldi	r25, 0x00	; 0
    c74c:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    c750:	5b 01       	movw	r10, r22
    c752:	6c 01       	movw	r12, r24
    c754:	96 94       	lsr	r9
    c756:	87 94       	ror	r8
    c758:	96 94       	lsr	r9
    c75a:	87 94       	ror	r8
    c75c:	96 94       	lsr	r9
    c75e:	87 94       	ror	r8
    c760:	b4 01       	movw	r22, r8
    c762:	80 e0       	ldi	r24, 0x00	; 0
    c764:	90 e0       	ldi	r25, 0x00	; 0
    c766:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    c76a:	f2 01       	movw	r30, r4
    c76c:	60 83       	st	Z, r22
    c76e:	71 83       	std	Z+1, r23	; 0x01
    c770:	82 83       	std	Z+2, r24	; 0x02
    c772:	93 83       	std	Z+3, r25	; 0x03
    c774:	c8 01       	movw	r24, r16
    c776:	b7 01       	movw	r22, r14
    c778:	20 e0       	ldi	r18, 0x00	; 0
    c77a:	30 e0       	ldi	r19, 0x00	; 0
    c77c:	a9 01       	movw	r20, r18
    c77e:	0f 2e       	mov	r0, r31
    c780:	f0 e0       	ldi	r31, 0x00	; 0
    c782:	ef 2e       	mov	r14, r31
    c784:	f0 e0       	ldi	r31, 0x00	; 0
    c786:	ff 2e       	mov	r15, r31
    c788:	f4 e3       	ldi	r31, 0x34	; 52
    c78a:	0f 2f       	mov	r16, r31
    c78c:	f3 e4       	ldi	r31, 0x43	; 67
    c78e:	1f 2f       	mov	r17, r31
    c790:	f0 2d       	mov	r31, r0
    c792:	0e 94 a0 08 	call	0x1140	; 0x1140 <_Z3mapddddd>
    c796:	0f 90       	pop	r0
    c798:	0f 90       	pop	r0
    c79a:	0f 90       	pop	r0
    c79c:	0f 90       	pop	r0
        OCR4C=ICR4-vAl;
    c79e:	c0 91 a6 00 	lds	r28, 0x00A6
    c7a2:	d0 91 a7 00 	lds	r29, 0x00A7
      case 7:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
        OCR4B=ICR4-vAl;
        break; 
      case 8:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    c7a6:	0e 94 bb 79 	call	0xf376	; 0xf376 <__fixsfsi>
        OCR4C=ICR4-vAl;
    c7aa:	c6 1b       	sub	r28, r22
    c7ac:	d7 0b       	sbc	r29, r23
    c7ae:	d0 93 ad 00 	sts	0x00AD, r29
    c7b2:	c0 93 ac 00 	sts	0x00AC, r28
    c7b6:	f5 c0       	rjmp	.+490    	; 0xc9a2 <_Z6angle6i+0x1770>
        break;
      case 46:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    c7b8:	e6 e8       	ldi	r30, 0x86	; 134
    c7ba:	f0 e0       	ldi	r31, 0x00	; 0
    c7bc:	c0 81       	ld	r28, Z
    c7be:	d1 81       	ldd	r29, Z+1	; 0x01
    c7c0:	80 80       	ld	r8, Z
    c7c2:	91 80       	ldd	r9, Z+1	; 0x01
    c7c4:	00 d0       	rcall	.+0      	; 0xc7c6 <_Z6angle6i+0x1594>
    c7c6:	0f 92       	push	r0
    c7c8:	4d b6       	in	r4, 0x3d	; 61
    c7ca:	5e b6       	in	r5, 0x3e	; 62
    c7cc:	08 94       	sec
    c7ce:	41 1c       	adc	r4, r1
    c7d0:	51 1c       	adc	r5, r1
    c7d2:	88 27       	eor	r24, r24
    c7d4:	77 fd       	sbrc	r23, 7
    c7d6:	80 95       	com	r24
    c7d8:	98 2f       	mov	r25, r24
    c7da:	0e 94 ee 79 	call	0xf3dc	; 0xf3dc <__floatsisf>
    c7de:	7b 01       	movw	r14, r22
    c7e0:	8c 01       	movw	r16, r24
    c7e2:	ce 01       	movw	r24, r28
    c7e4:	68 e2       	ldi	r22, 0x28	; 40
    c7e6:	70 e0       	ldi	r23, 0x00	; 0
    c7e8:	0e 94 05 7b 	call	0xf60a	; 0xf60a <__udivmodhi4>
    c7ec:	80 e0       	ldi	r24, 0x00	; 0
    c7ee:	90 e0       	ldi	r25, 0x00	; 0
    c7f0:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    c7f4:	5b 01       	movw	r10, r22
    c7f6:	6c 01       	movw	r12, r24
    c7f8:	96 94       	lsr	r9
    c7fa:	87 94       	ror	r8
    c7fc:	96 94       	lsr	r9
    c7fe:	87 94       	ror	r8
    c800:	96 94       	lsr	r9
    c802:	87 94       	ror	r8
    c804:	b4 01       	movw	r22, r8
    c806:	80 e0       	ldi	r24, 0x00	; 0
    c808:	90 e0       	ldi	r25, 0x00	; 0
    c80a:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    c80e:	f2 01       	movw	r30, r4
    c810:	60 83       	st	Z, r22
    c812:	71 83       	std	Z+1, r23	; 0x01
    c814:	82 83       	std	Z+2, r24	; 0x02
    c816:	93 83       	std	Z+3, r25	; 0x03
    c818:	c8 01       	movw	r24, r16
    c81a:	b7 01       	movw	r22, r14
    c81c:	20 e0       	ldi	r18, 0x00	; 0
    c81e:	30 e0       	ldi	r19, 0x00	; 0
    c820:	a9 01       	movw	r20, r18
    c822:	0f 2e       	mov	r0, r31
    c824:	f0 e0       	ldi	r31, 0x00	; 0
    c826:	ef 2e       	mov	r14, r31
    c828:	f0 e0       	ldi	r31, 0x00	; 0
    c82a:	ff 2e       	mov	r15, r31
    c82c:	f4 e3       	ldi	r31, 0x34	; 52
    c82e:	0f 2f       	mov	r16, r31
    c830:	f3 e4       	ldi	r31, 0x43	; 67
    c832:	1f 2f       	mov	r17, r31
    c834:	f0 2d       	mov	r31, r0
    c836:	0e 94 a0 08 	call	0x1140	; 0x1140 <_Z3mapddddd>
    c83a:	0f 90       	pop	r0
    c83c:	0f 90       	pop	r0
    c83e:	0f 90       	pop	r0
    c840:	0f 90       	pop	r0
        OCR5A=ICR5-vAl;
    c842:	c0 91 26 01 	lds	r28, 0x0126
    c846:	d0 91 27 01 	lds	r29, 0x0127
      case 8:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
        OCR4C=ICR4-vAl;
        break;
      case 46:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    c84a:	0e 94 bb 79 	call	0xf376	; 0xf376 <__fixsfsi>
        OCR5A=ICR5-vAl;
    c84e:	c6 1b       	sub	r28, r22
    c850:	d7 0b       	sbc	r29, r23
    c852:	d0 93 29 01 	sts	0x0129, r29
    c856:	c0 93 28 01 	sts	0x0128, r28
    c85a:	a3 c0       	rjmp	.+326    	; 0xc9a2 <_Z6angle6i+0x1770>
        break;
      case 45:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    c85c:	e6 e8       	ldi	r30, 0x86	; 134
    c85e:	f0 e0       	ldi	r31, 0x00	; 0
    c860:	c0 81       	ld	r28, Z
    c862:	d1 81       	ldd	r29, Z+1	; 0x01
    c864:	80 80       	ld	r8, Z
    c866:	91 80       	ldd	r9, Z+1	; 0x01
    c868:	00 d0       	rcall	.+0      	; 0xc86a <_Z6angle6i+0x1638>
    c86a:	0f 92       	push	r0
    c86c:	4d b6       	in	r4, 0x3d	; 61
    c86e:	5e b6       	in	r5, 0x3e	; 62
    c870:	08 94       	sec
    c872:	41 1c       	adc	r4, r1
    c874:	51 1c       	adc	r5, r1
    c876:	88 27       	eor	r24, r24
    c878:	77 fd       	sbrc	r23, 7
    c87a:	80 95       	com	r24
    c87c:	98 2f       	mov	r25, r24
    c87e:	0e 94 ee 79 	call	0xf3dc	; 0xf3dc <__floatsisf>
    c882:	7b 01       	movw	r14, r22
    c884:	8c 01       	movw	r16, r24
    c886:	ce 01       	movw	r24, r28
    c888:	68 e2       	ldi	r22, 0x28	; 40
    c88a:	70 e0       	ldi	r23, 0x00	; 0
    c88c:	0e 94 05 7b 	call	0xf60a	; 0xf60a <__udivmodhi4>
    c890:	80 e0       	ldi	r24, 0x00	; 0
    c892:	90 e0       	ldi	r25, 0x00	; 0
    c894:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    c898:	5b 01       	movw	r10, r22
    c89a:	6c 01       	movw	r12, r24
    c89c:	96 94       	lsr	r9
    c89e:	87 94       	ror	r8
    c8a0:	96 94       	lsr	r9
    c8a2:	87 94       	ror	r8
    c8a4:	96 94       	lsr	r9
    c8a6:	87 94       	ror	r8
    c8a8:	b4 01       	movw	r22, r8
    c8aa:	80 e0       	ldi	r24, 0x00	; 0
    c8ac:	90 e0       	ldi	r25, 0x00	; 0
    c8ae:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    c8b2:	f2 01       	movw	r30, r4
    c8b4:	60 83       	st	Z, r22
    c8b6:	71 83       	std	Z+1, r23	; 0x01
    c8b8:	82 83       	std	Z+2, r24	; 0x02
    c8ba:	93 83       	std	Z+3, r25	; 0x03
    c8bc:	c8 01       	movw	r24, r16
    c8be:	b7 01       	movw	r22, r14
    c8c0:	20 e0       	ldi	r18, 0x00	; 0
    c8c2:	30 e0       	ldi	r19, 0x00	; 0
    c8c4:	a9 01       	movw	r20, r18
    c8c6:	0f 2e       	mov	r0, r31
    c8c8:	f0 e0       	ldi	r31, 0x00	; 0
    c8ca:	ef 2e       	mov	r14, r31
    c8cc:	f0 e0       	ldi	r31, 0x00	; 0
    c8ce:	ff 2e       	mov	r15, r31
    c8d0:	f4 e3       	ldi	r31, 0x34	; 52
    c8d2:	0f 2f       	mov	r16, r31
    c8d4:	f3 e4       	ldi	r31, 0x43	; 67
    c8d6:	1f 2f       	mov	r17, r31
    c8d8:	f0 2d       	mov	r31, r0
    c8da:	0e 94 a0 08 	call	0x1140	; 0x1140 <_Z3mapddddd>
    c8de:	0f 90       	pop	r0
    c8e0:	0f 90       	pop	r0
    c8e2:	0f 90       	pop	r0
    c8e4:	0f 90       	pop	r0
        OCR5B=ICR5-vAl;
    c8e6:	c0 91 26 01 	lds	r28, 0x0126
    c8ea:	d0 91 27 01 	lds	r29, 0x0127
      case 46:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
        OCR5A=ICR5-vAl;
        break;
      case 45:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    c8ee:	0e 94 bb 79 	call	0xf376	; 0xf376 <__fixsfsi>
        OCR5B=ICR5-vAl;
    c8f2:	c6 1b       	sub	r28, r22
    c8f4:	d7 0b       	sbc	r29, r23
    c8f6:	d0 93 2b 01 	sts	0x012B, r29
    c8fa:	c0 93 2a 01 	sts	0x012A, r28
    c8fe:	51 c0       	rjmp	.+162    	; 0xc9a2 <_Z6angle6i+0x1770>
        break;
      case 44:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    c900:	e6 e8       	ldi	r30, 0x86	; 134
    c902:	f0 e0       	ldi	r31, 0x00	; 0
    c904:	c0 81       	ld	r28, Z
    c906:	d1 81       	ldd	r29, Z+1	; 0x01
    c908:	80 80       	ld	r8, Z
    c90a:	91 80       	ldd	r9, Z+1	; 0x01
    c90c:	00 d0       	rcall	.+0      	; 0xc90e <_Z6angle6i+0x16dc>
    c90e:	0f 92       	push	r0
    c910:	4d b6       	in	r4, 0x3d	; 61
    c912:	5e b6       	in	r5, 0x3e	; 62
    c914:	08 94       	sec
    c916:	41 1c       	adc	r4, r1
    c918:	51 1c       	adc	r5, r1
    c91a:	88 27       	eor	r24, r24
    c91c:	77 fd       	sbrc	r23, 7
    c91e:	80 95       	com	r24
    c920:	98 2f       	mov	r25, r24
    c922:	0e 94 ee 79 	call	0xf3dc	; 0xf3dc <__floatsisf>
    c926:	7b 01       	movw	r14, r22
    c928:	8c 01       	movw	r16, r24
    c92a:	ce 01       	movw	r24, r28
    c92c:	68 e2       	ldi	r22, 0x28	; 40
    c92e:	70 e0       	ldi	r23, 0x00	; 0
    c930:	0e 94 05 7b 	call	0xf60a	; 0xf60a <__udivmodhi4>
    c934:	80 e0       	ldi	r24, 0x00	; 0
    c936:	90 e0       	ldi	r25, 0x00	; 0
    c938:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    c93c:	5b 01       	movw	r10, r22
    c93e:	6c 01       	movw	r12, r24
    c940:	96 94       	lsr	r9
    c942:	87 94       	ror	r8
    c944:	96 94       	lsr	r9
    c946:	87 94       	ror	r8
    c948:	96 94       	lsr	r9
    c94a:	87 94       	ror	r8
    c94c:	b4 01       	movw	r22, r8
    c94e:	80 e0       	ldi	r24, 0x00	; 0
    c950:	90 e0       	ldi	r25, 0x00	; 0
    c952:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    c956:	f2 01       	movw	r30, r4
    c958:	60 83       	st	Z, r22
    c95a:	71 83       	std	Z+1, r23	; 0x01
    c95c:	82 83       	std	Z+2, r24	; 0x02
    c95e:	93 83       	std	Z+3, r25	; 0x03
    c960:	c8 01       	movw	r24, r16
    c962:	b7 01       	movw	r22, r14
    c964:	20 e0       	ldi	r18, 0x00	; 0
    c966:	30 e0       	ldi	r19, 0x00	; 0
    c968:	a9 01       	movw	r20, r18
    c96a:	0f 2e       	mov	r0, r31
    c96c:	f0 e0       	ldi	r31, 0x00	; 0
    c96e:	ef 2e       	mov	r14, r31
    c970:	f0 e0       	ldi	r31, 0x00	; 0
    c972:	ff 2e       	mov	r15, r31
    c974:	f4 e3       	ldi	r31, 0x34	; 52
    c976:	0f 2f       	mov	r16, r31
    c978:	f3 e4       	ldi	r31, 0x43	; 67
    c97a:	1f 2f       	mov	r17, r31
    c97c:	f0 2d       	mov	r31, r0
    c97e:	0e 94 a0 08 	call	0x1140	; 0x1140 <_Z3mapddddd>
    c982:	0f 90       	pop	r0
    c984:	0f 90       	pop	r0
    c986:	0f 90       	pop	r0
    c988:	0f 90       	pop	r0
        OCR5C=ICR5-vAl;
    c98a:	c0 91 26 01 	lds	r28, 0x0126
    c98e:	d0 91 27 01 	lds	r29, 0x0127
      case 45:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
        OCR5B=ICR5-vAl;
        break;
      case 44:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    c992:	0e 94 bb 79 	call	0xf376	; 0xf376 <__fixsfsi>
        OCR5C=ICR5-vAl;
    c996:	c6 1b       	sub	r28, r22
    c998:	d7 0b       	sbc	r29, r23
    c99a:	d0 93 2d 01 	sts	0x012D, r29
    c99e:	c0 93 2c 01 	sts	0x012C, r28
		s.write(w);
    c9a2:	60 91 d0 02 	lds	r22, 0x02D0
    c9a6:	70 91 d1 02 	lds	r23, 0x02D1
     }
  }

  void write(int vAl)           //PIN=servo pin no. on mega,vAl=angle F_CPU for the servo at pin
  {
    switch(pIn)
    c9aa:	80 91 d7 02 	lds	r24, 0x02D7
    c9ae:	88 30       	cpi	r24, 0x08	; 8
    c9b0:	09 f4       	brne	.+2      	; 0xc9b4 <_Z6angle6i+0x1782>
    c9b2:	63 c2       	rjmp	.+1222   	; 0xce7a <_Z6angle6i+0x1c48>
    c9b4:	89 30       	cpi	r24, 0x09	; 9
    c9b6:	98 f4       	brcc	.+38     	; 0xc9de <_Z6angle6i+0x17ac>
    c9b8:	85 30       	cpi	r24, 0x05	; 5
    c9ba:	09 f4       	brne	.+2      	; 0xc9be <_Z6angle6i+0x178c>
    c9bc:	c4 c0       	rjmp	.+392    	; 0xcb46 <_Z6angle6i+0x1914>
    c9be:	86 30       	cpi	r24, 0x06	; 6
    c9c0:	38 f4       	brcc	.+14     	; 0xc9d0 <_Z6angle6i+0x179e>
    c9c2:	82 30       	cpi	r24, 0x02	; 2
    c9c4:	09 f4       	brne	.+2      	; 0xc9c8 <_Z6angle6i+0x1796>
    c9c6:	11 c1       	rjmp	.+546    	; 0xcbea <_Z6angle6i+0x19b8>
    c9c8:	83 30       	cpi	r24, 0x03	; 3
    c9ca:	09 f0       	breq	.+2      	; 0xc9ce <_Z6angle6i+0x179c>
    c9cc:	9d c3       	rjmp	.+1850   	; 0xd108 <_Z6angle6i+0x1ed6>
    c9ce:	5f c1       	rjmp	.+702    	; 0xcc8e <_Z6angle6i+0x1a5c>
    c9d0:	86 30       	cpi	r24, 0x06	; 6
    c9d2:	09 f4       	brne	.+2      	; 0xc9d6 <_Z6angle6i+0x17a4>
    c9d4:	ae c1       	rjmp	.+860    	; 0xcd32 <_Z6angle6i+0x1b00>
    c9d6:	87 30       	cpi	r24, 0x07	; 7
    c9d8:	09 f0       	breq	.+2      	; 0xc9dc <_Z6angle6i+0x17aa>
    c9da:	96 c3       	rjmp	.+1836   	; 0xd108 <_Z6angle6i+0x1ed6>
    c9dc:	fc c1       	rjmp	.+1016   	; 0xcdd6 <_Z6angle6i+0x1ba4>
    c9de:	8c 32       	cpi	r24, 0x2C	; 44
    c9e0:	09 f4       	brne	.+2      	; 0xc9e4 <_Z6angle6i+0x17b2>
    c9e2:	41 c3       	rjmp	.+1666   	; 0xd066 <_Z6angle6i+0x1e34>
    c9e4:	8d 32       	cpi	r24, 0x2D	; 45
    c9e6:	30 f4       	brcc	.+12     	; 0xc9f4 <_Z6angle6i+0x17c2>
    c9e8:	8b 30       	cpi	r24, 0x0B	; 11
    c9ea:	59 f0       	breq	.+22     	; 0xca02 <_Z6angle6i+0x17d0>
    c9ec:	8c 30       	cpi	r24, 0x0C	; 12
    c9ee:	09 f0       	breq	.+2      	; 0xc9f2 <_Z6angle6i+0x17c0>
    c9f0:	8b c3       	rjmp	.+1814   	; 0xd108 <_Z6angle6i+0x1ed6>
    c9f2:	58 c0       	rjmp	.+176    	; 0xcaa4 <_Z6angle6i+0x1872>
    c9f4:	8d 32       	cpi	r24, 0x2D	; 45
    c9f6:	09 f4       	brne	.+2      	; 0xc9fa <_Z6angle6i+0x17c8>
    c9f8:	e4 c2       	rjmp	.+1480   	; 0xcfc2 <_Z6angle6i+0x1d90>
    c9fa:	8e 32       	cpi	r24, 0x2E	; 46
    c9fc:	09 f0       	breq	.+2      	; 0xca00 <_Z6angle6i+0x17ce>
    c9fe:	84 c3       	rjmp	.+1800   	; 0xd108 <_Z6angle6i+0x1ed6>
    ca00:	8e c2       	rjmp	.+1308   	; 0xcf1e <_Z6angle6i+0x1cec>
    {
     case 11:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    ca02:	c6 e8       	ldi	r28, 0x86	; 134
    ca04:	d0 e0       	ldi	r29, 0x00	; 0
    ca06:	08 81       	ld	r16, Y
    ca08:	19 81       	ldd	r17, Y+1	; 0x01
    ca0a:	e8 80       	ld	r14, Y
    ca0c:	f9 80       	ldd	r15, Y+1	; 0x01
    ca0e:	00 d0       	rcall	.+0      	; 0xca10 <_Z6angle6i+0x17de>
    ca10:	0f 92       	push	r0
    ca12:	8d b6       	in	r8, 0x3d	; 61
    ca14:	9e b6       	in	r9, 0x3e	; 62
    ca16:	08 94       	sec
    ca18:	81 1c       	adc	r8, r1
    ca1a:	91 1c       	adc	r9, r1
    ca1c:	88 27       	eor	r24, r24
    ca1e:	77 fd       	sbrc	r23, 7
    ca20:	80 95       	com	r24
    ca22:	98 2f       	mov	r25, r24
    ca24:	0e 94 ee 79 	call	0xf3dc	; 0xf3dc <__floatsisf>
    ca28:	2b 01       	movw	r4, r22
    ca2a:	3c 01       	movw	r6, r24
    ca2c:	c8 01       	movw	r24, r16
    ca2e:	68 e2       	ldi	r22, 0x28	; 40
    ca30:	70 e0       	ldi	r23, 0x00	; 0
    ca32:	0e 94 05 7b 	call	0xf60a	; 0xf60a <__udivmodhi4>
    ca36:	80 e0       	ldi	r24, 0x00	; 0
    ca38:	90 e0       	ldi	r25, 0x00	; 0
    ca3a:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    ca3e:	5b 01       	movw	r10, r22
    ca40:	6c 01       	movw	r12, r24
    ca42:	f6 94       	lsr	r15
    ca44:	e7 94       	ror	r14
    ca46:	f6 94       	lsr	r15
    ca48:	e7 94       	ror	r14
    ca4a:	f6 94       	lsr	r15
    ca4c:	e7 94       	ror	r14
    ca4e:	b7 01       	movw	r22, r14
    ca50:	80 e0       	ldi	r24, 0x00	; 0
    ca52:	90 e0       	ldi	r25, 0x00	; 0
    ca54:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    ca58:	f4 01       	movw	r30, r8
    ca5a:	60 83       	st	Z, r22
    ca5c:	71 83       	std	Z+1, r23	; 0x01
    ca5e:	82 83       	std	Z+2, r24	; 0x02
    ca60:	93 83       	std	Z+3, r25	; 0x03
    ca62:	c3 01       	movw	r24, r6
    ca64:	b2 01       	movw	r22, r4
    ca66:	20 e0       	ldi	r18, 0x00	; 0
    ca68:	30 e0       	ldi	r19, 0x00	; 0
    ca6a:	a9 01       	movw	r20, r18
    ca6c:	0f 2e       	mov	r0, r31
    ca6e:	f0 e0       	ldi	r31, 0x00	; 0
    ca70:	ef 2e       	mov	r14, r31
    ca72:	f0 e0       	ldi	r31, 0x00	; 0
    ca74:	ff 2e       	mov	r15, r31
    ca76:	f4 e3       	ldi	r31, 0x34	; 52
    ca78:	0f 2f       	mov	r16, r31
    ca7a:	f3 e4       	ldi	r31, 0x43	; 67
    ca7c:	1f 2f       	mov	r17, r31
    ca7e:	f0 2d       	mov	r31, r0
    ca80:	0e 94 a0 08 	call	0x1140	; 0x1140 <_Z3mapddddd>
    ca84:	0f 90       	pop	r0
    ca86:	0f 90       	pop	r0
    ca88:	0f 90       	pop	r0
    ca8a:	0f 90       	pop	r0
        OCR1A=ICR1-vAl;
    ca8c:	09 90       	ld	r0, Y+
    ca8e:	d8 81       	ld	r29, Y
    ca90:	c0 2d       	mov	r28, r0
  void write(int vAl)           //PIN=servo pin no. on mega,vAl=angle F_CPU for the servo at pin
  {
    switch(pIn)
    {
     case 11:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    ca92:	0e 94 bb 79 	call	0xf376	; 0xf376 <__fixsfsi>
        OCR1A=ICR1-vAl;
    ca96:	c6 1b       	sub	r28, r22
    ca98:	d7 0b       	sbc	r29, r23
    ca9a:	d0 93 89 00 	sts	0x0089, r29
    ca9e:	c0 93 88 00 	sts	0x0088, r28
    caa2:	32 c3       	rjmp	.+1636   	; 0xd108 <_Z6angle6i+0x1ed6>
        break;
      case 12:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    caa4:	c6 e8       	ldi	r28, 0x86	; 134
    caa6:	d0 e0       	ldi	r29, 0x00	; 0
    caa8:	08 81       	ld	r16, Y
    caaa:	19 81       	ldd	r17, Y+1	; 0x01
    caac:	e8 80       	ld	r14, Y
    caae:	f9 80       	ldd	r15, Y+1	; 0x01
    cab0:	00 d0       	rcall	.+0      	; 0xcab2 <_Z6angle6i+0x1880>
    cab2:	0f 92       	push	r0
    cab4:	8d b6       	in	r8, 0x3d	; 61
    cab6:	9e b6       	in	r9, 0x3e	; 62
    cab8:	08 94       	sec
    caba:	81 1c       	adc	r8, r1
    cabc:	91 1c       	adc	r9, r1
    cabe:	88 27       	eor	r24, r24
    cac0:	77 fd       	sbrc	r23, 7
    cac2:	80 95       	com	r24
    cac4:	98 2f       	mov	r25, r24
    cac6:	0e 94 ee 79 	call	0xf3dc	; 0xf3dc <__floatsisf>
    caca:	2b 01       	movw	r4, r22
    cacc:	3c 01       	movw	r6, r24
    cace:	c8 01       	movw	r24, r16
    cad0:	68 e2       	ldi	r22, 0x28	; 40
    cad2:	70 e0       	ldi	r23, 0x00	; 0
    cad4:	0e 94 05 7b 	call	0xf60a	; 0xf60a <__udivmodhi4>
    cad8:	80 e0       	ldi	r24, 0x00	; 0
    cada:	90 e0       	ldi	r25, 0x00	; 0
    cadc:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    cae0:	5b 01       	movw	r10, r22
    cae2:	6c 01       	movw	r12, r24
    cae4:	f6 94       	lsr	r15
    cae6:	e7 94       	ror	r14
    cae8:	f6 94       	lsr	r15
    caea:	e7 94       	ror	r14
    caec:	f6 94       	lsr	r15
    caee:	e7 94       	ror	r14
    caf0:	b7 01       	movw	r22, r14
    caf2:	80 e0       	ldi	r24, 0x00	; 0
    caf4:	90 e0       	ldi	r25, 0x00	; 0
    caf6:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    cafa:	f4 01       	movw	r30, r8
    cafc:	60 83       	st	Z, r22
    cafe:	71 83       	std	Z+1, r23	; 0x01
    cb00:	82 83       	std	Z+2, r24	; 0x02
    cb02:	93 83       	std	Z+3, r25	; 0x03
    cb04:	c3 01       	movw	r24, r6
    cb06:	b2 01       	movw	r22, r4
    cb08:	20 e0       	ldi	r18, 0x00	; 0
    cb0a:	30 e0       	ldi	r19, 0x00	; 0
    cb0c:	a9 01       	movw	r20, r18
    cb0e:	0f 2e       	mov	r0, r31
    cb10:	f0 e0       	ldi	r31, 0x00	; 0
    cb12:	ef 2e       	mov	r14, r31
    cb14:	f0 e0       	ldi	r31, 0x00	; 0
    cb16:	ff 2e       	mov	r15, r31
    cb18:	f4 e3       	ldi	r31, 0x34	; 52
    cb1a:	0f 2f       	mov	r16, r31
    cb1c:	f3 e4       	ldi	r31, 0x43	; 67
    cb1e:	1f 2f       	mov	r17, r31
    cb20:	f0 2d       	mov	r31, r0
    cb22:	0e 94 a0 08 	call	0x1140	; 0x1140 <_Z3mapddddd>
    cb26:	0f 90       	pop	r0
    cb28:	0f 90       	pop	r0
    cb2a:	0f 90       	pop	r0
    cb2c:	0f 90       	pop	r0
        OCR1B=ICR1-vAl;
    cb2e:	09 90       	ld	r0, Y+
    cb30:	d8 81       	ld	r29, Y
    cb32:	c0 2d       	mov	r28, r0
     case 11:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
        OCR1A=ICR1-vAl;
        break;
      case 12:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    cb34:	0e 94 bb 79 	call	0xf376	; 0xf376 <__fixsfsi>
        OCR1B=ICR1-vAl;
    cb38:	c6 1b       	sub	r28, r22
    cb3a:	d7 0b       	sbc	r29, r23
    cb3c:	d0 93 8b 00 	sts	0x008B, r29
    cb40:	c0 93 8a 00 	sts	0x008A, r28
    cb44:	e1 c2       	rjmp	.+1474   	; 0xd108 <_Z6angle6i+0x1ed6>
        break;
      case 5:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    cb46:	e6 e8       	ldi	r30, 0x86	; 134
    cb48:	f0 e0       	ldi	r31, 0x00	; 0
    cb4a:	c0 81       	ld	r28, Z
    cb4c:	d1 81       	ldd	r29, Z+1	; 0x01
    cb4e:	80 80       	ld	r8, Z
    cb50:	91 80       	ldd	r9, Z+1	; 0x01
    cb52:	00 d0       	rcall	.+0      	; 0xcb54 <_Z6angle6i+0x1922>
    cb54:	0f 92       	push	r0
    cb56:	4d b6       	in	r4, 0x3d	; 61
    cb58:	5e b6       	in	r5, 0x3e	; 62
    cb5a:	08 94       	sec
    cb5c:	41 1c       	adc	r4, r1
    cb5e:	51 1c       	adc	r5, r1
    cb60:	88 27       	eor	r24, r24
    cb62:	77 fd       	sbrc	r23, 7
    cb64:	80 95       	com	r24
    cb66:	98 2f       	mov	r25, r24
    cb68:	0e 94 ee 79 	call	0xf3dc	; 0xf3dc <__floatsisf>
    cb6c:	7b 01       	movw	r14, r22
    cb6e:	8c 01       	movw	r16, r24
    cb70:	ce 01       	movw	r24, r28
    cb72:	68 e2       	ldi	r22, 0x28	; 40
    cb74:	70 e0       	ldi	r23, 0x00	; 0
    cb76:	0e 94 05 7b 	call	0xf60a	; 0xf60a <__udivmodhi4>
    cb7a:	80 e0       	ldi	r24, 0x00	; 0
    cb7c:	90 e0       	ldi	r25, 0x00	; 0
    cb7e:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    cb82:	5b 01       	movw	r10, r22
    cb84:	6c 01       	movw	r12, r24
    cb86:	96 94       	lsr	r9
    cb88:	87 94       	ror	r8
    cb8a:	96 94       	lsr	r9
    cb8c:	87 94       	ror	r8
    cb8e:	96 94       	lsr	r9
    cb90:	87 94       	ror	r8
    cb92:	b4 01       	movw	r22, r8
    cb94:	80 e0       	ldi	r24, 0x00	; 0
    cb96:	90 e0       	ldi	r25, 0x00	; 0
    cb98:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    cb9c:	f2 01       	movw	r30, r4
    cb9e:	60 83       	st	Z, r22
    cba0:	71 83       	std	Z+1, r23	; 0x01
    cba2:	82 83       	std	Z+2, r24	; 0x02
    cba4:	93 83       	std	Z+3, r25	; 0x03
    cba6:	c8 01       	movw	r24, r16
    cba8:	b7 01       	movw	r22, r14
    cbaa:	20 e0       	ldi	r18, 0x00	; 0
    cbac:	30 e0       	ldi	r19, 0x00	; 0
    cbae:	a9 01       	movw	r20, r18
    cbb0:	0f 2e       	mov	r0, r31
    cbb2:	f0 e0       	ldi	r31, 0x00	; 0
    cbb4:	ef 2e       	mov	r14, r31
    cbb6:	f0 e0       	ldi	r31, 0x00	; 0
    cbb8:	ff 2e       	mov	r15, r31
    cbba:	f4 e3       	ldi	r31, 0x34	; 52
    cbbc:	0f 2f       	mov	r16, r31
    cbbe:	f3 e4       	ldi	r31, 0x43	; 67
    cbc0:	1f 2f       	mov	r17, r31
    cbc2:	f0 2d       	mov	r31, r0
    cbc4:	0e 94 a0 08 	call	0x1140	; 0x1140 <_Z3mapddddd>
    cbc8:	0f 90       	pop	r0
    cbca:	0f 90       	pop	r0
    cbcc:	0f 90       	pop	r0
    cbce:	0f 90       	pop	r0
        OCR3A=ICR3-vAl;
    cbd0:	c0 91 96 00 	lds	r28, 0x0096
    cbd4:	d0 91 97 00 	lds	r29, 0x0097
      case 12:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
        OCR1B=ICR1-vAl;
        break;
      case 5:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    cbd8:	0e 94 bb 79 	call	0xf376	; 0xf376 <__fixsfsi>
        OCR3A=ICR3-vAl;
    cbdc:	c6 1b       	sub	r28, r22
    cbde:	d7 0b       	sbc	r29, r23
    cbe0:	d0 93 99 00 	sts	0x0099, r29
    cbe4:	c0 93 98 00 	sts	0x0098, r28
    cbe8:	8f c2       	rjmp	.+1310   	; 0xd108 <_Z6angle6i+0x1ed6>
        break;
      case 2:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    cbea:	e6 e8       	ldi	r30, 0x86	; 134
    cbec:	f0 e0       	ldi	r31, 0x00	; 0
    cbee:	c0 81       	ld	r28, Z
    cbf0:	d1 81       	ldd	r29, Z+1	; 0x01
    cbf2:	80 80       	ld	r8, Z
    cbf4:	91 80       	ldd	r9, Z+1	; 0x01
    cbf6:	00 d0       	rcall	.+0      	; 0xcbf8 <_Z6angle6i+0x19c6>
    cbf8:	0f 92       	push	r0
    cbfa:	4d b6       	in	r4, 0x3d	; 61
    cbfc:	5e b6       	in	r5, 0x3e	; 62
    cbfe:	08 94       	sec
    cc00:	41 1c       	adc	r4, r1
    cc02:	51 1c       	adc	r5, r1
    cc04:	88 27       	eor	r24, r24
    cc06:	77 fd       	sbrc	r23, 7
    cc08:	80 95       	com	r24
    cc0a:	98 2f       	mov	r25, r24
    cc0c:	0e 94 ee 79 	call	0xf3dc	; 0xf3dc <__floatsisf>
    cc10:	7b 01       	movw	r14, r22
    cc12:	8c 01       	movw	r16, r24
    cc14:	ce 01       	movw	r24, r28
    cc16:	68 e2       	ldi	r22, 0x28	; 40
    cc18:	70 e0       	ldi	r23, 0x00	; 0
    cc1a:	0e 94 05 7b 	call	0xf60a	; 0xf60a <__udivmodhi4>
    cc1e:	80 e0       	ldi	r24, 0x00	; 0
    cc20:	90 e0       	ldi	r25, 0x00	; 0
    cc22:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    cc26:	5b 01       	movw	r10, r22
    cc28:	6c 01       	movw	r12, r24
    cc2a:	96 94       	lsr	r9
    cc2c:	87 94       	ror	r8
    cc2e:	96 94       	lsr	r9
    cc30:	87 94       	ror	r8
    cc32:	96 94       	lsr	r9
    cc34:	87 94       	ror	r8
    cc36:	b4 01       	movw	r22, r8
    cc38:	80 e0       	ldi	r24, 0x00	; 0
    cc3a:	90 e0       	ldi	r25, 0x00	; 0
    cc3c:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    cc40:	f2 01       	movw	r30, r4
    cc42:	60 83       	st	Z, r22
    cc44:	71 83       	std	Z+1, r23	; 0x01
    cc46:	82 83       	std	Z+2, r24	; 0x02
    cc48:	93 83       	std	Z+3, r25	; 0x03
    cc4a:	c8 01       	movw	r24, r16
    cc4c:	b7 01       	movw	r22, r14
    cc4e:	20 e0       	ldi	r18, 0x00	; 0
    cc50:	30 e0       	ldi	r19, 0x00	; 0
    cc52:	a9 01       	movw	r20, r18
    cc54:	0f 2e       	mov	r0, r31
    cc56:	f0 e0       	ldi	r31, 0x00	; 0
    cc58:	ef 2e       	mov	r14, r31
    cc5a:	f0 e0       	ldi	r31, 0x00	; 0
    cc5c:	ff 2e       	mov	r15, r31
    cc5e:	f4 e3       	ldi	r31, 0x34	; 52
    cc60:	0f 2f       	mov	r16, r31
    cc62:	f3 e4       	ldi	r31, 0x43	; 67
    cc64:	1f 2f       	mov	r17, r31
    cc66:	f0 2d       	mov	r31, r0
    cc68:	0e 94 a0 08 	call	0x1140	; 0x1140 <_Z3mapddddd>
    cc6c:	0f 90       	pop	r0
    cc6e:	0f 90       	pop	r0
    cc70:	0f 90       	pop	r0
    cc72:	0f 90       	pop	r0
        OCR3B=ICR3-vAl;
    cc74:	c0 91 96 00 	lds	r28, 0x0096
    cc78:	d0 91 97 00 	lds	r29, 0x0097
      case 5:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
        OCR3A=ICR3-vAl;
        break;
      case 2:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    cc7c:	0e 94 bb 79 	call	0xf376	; 0xf376 <__fixsfsi>
        OCR3B=ICR3-vAl;
    cc80:	c6 1b       	sub	r28, r22
    cc82:	d7 0b       	sbc	r29, r23
    cc84:	d0 93 9b 00 	sts	0x009B, r29
    cc88:	c0 93 9a 00 	sts	0x009A, r28
    cc8c:	3d c2       	rjmp	.+1146   	; 0xd108 <_Z6angle6i+0x1ed6>
        break;
      case 3:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    cc8e:	e6 e8       	ldi	r30, 0x86	; 134
    cc90:	f0 e0       	ldi	r31, 0x00	; 0
    cc92:	c0 81       	ld	r28, Z
    cc94:	d1 81       	ldd	r29, Z+1	; 0x01
    cc96:	80 80       	ld	r8, Z
    cc98:	91 80       	ldd	r9, Z+1	; 0x01
    cc9a:	00 d0       	rcall	.+0      	; 0xcc9c <_Z6angle6i+0x1a6a>
    cc9c:	0f 92       	push	r0
    cc9e:	4d b6       	in	r4, 0x3d	; 61
    cca0:	5e b6       	in	r5, 0x3e	; 62
    cca2:	08 94       	sec
    cca4:	41 1c       	adc	r4, r1
    cca6:	51 1c       	adc	r5, r1
    cca8:	88 27       	eor	r24, r24
    ccaa:	77 fd       	sbrc	r23, 7
    ccac:	80 95       	com	r24
    ccae:	98 2f       	mov	r25, r24
    ccb0:	0e 94 ee 79 	call	0xf3dc	; 0xf3dc <__floatsisf>
    ccb4:	7b 01       	movw	r14, r22
    ccb6:	8c 01       	movw	r16, r24
    ccb8:	ce 01       	movw	r24, r28
    ccba:	68 e2       	ldi	r22, 0x28	; 40
    ccbc:	70 e0       	ldi	r23, 0x00	; 0
    ccbe:	0e 94 05 7b 	call	0xf60a	; 0xf60a <__udivmodhi4>
    ccc2:	80 e0       	ldi	r24, 0x00	; 0
    ccc4:	90 e0       	ldi	r25, 0x00	; 0
    ccc6:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    ccca:	5b 01       	movw	r10, r22
    cccc:	6c 01       	movw	r12, r24
    ccce:	96 94       	lsr	r9
    ccd0:	87 94       	ror	r8
    ccd2:	96 94       	lsr	r9
    ccd4:	87 94       	ror	r8
    ccd6:	96 94       	lsr	r9
    ccd8:	87 94       	ror	r8
    ccda:	b4 01       	movw	r22, r8
    ccdc:	80 e0       	ldi	r24, 0x00	; 0
    ccde:	90 e0       	ldi	r25, 0x00	; 0
    cce0:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    cce4:	f2 01       	movw	r30, r4
    cce6:	60 83       	st	Z, r22
    cce8:	71 83       	std	Z+1, r23	; 0x01
    ccea:	82 83       	std	Z+2, r24	; 0x02
    ccec:	93 83       	std	Z+3, r25	; 0x03
    ccee:	c8 01       	movw	r24, r16
    ccf0:	b7 01       	movw	r22, r14
    ccf2:	20 e0       	ldi	r18, 0x00	; 0
    ccf4:	30 e0       	ldi	r19, 0x00	; 0
    ccf6:	a9 01       	movw	r20, r18
    ccf8:	0f 2e       	mov	r0, r31
    ccfa:	f0 e0       	ldi	r31, 0x00	; 0
    ccfc:	ef 2e       	mov	r14, r31
    ccfe:	f0 e0       	ldi	r31, 0x00	; 0
    cd00:	ff 2e       	mov	r15, r31
    cd02:	f4 e3       	ldi	r31, 0x34	; 52
    cd04:	0f 2f       	mov	r16, r31
    cd06:	f3 e4       	ldi	r31, 0x43	; 67
    cd08:	1f 2f       	mov	r17, r31
    cd0a:	f0 2d       	mov	r31, r0
    cd0c:	0e 94 a0 08 	call	0x1140	; 0x1140 <_Z3mapddddd>
    cd10:	0f 90       	pop	r0
    cd12:	0f 90       	pop	r0
    cd14:	0f 90       	pop	r0
    cd16:	0f 90       	pop	r0
        OCR3C=ICR3-vAl;
    cd18:	c0 91 96 00 	lds	r28, 0x0096
    cd1c:	d0 91 97 00 	lds	r29, 0x0097
      case 2:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
        OCR3B=ICR3-vAl;
        break;
      case 3:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    cd20:	0e 94 bb 79 	call	0xf376	; 0xf376 <__fixsfsi>
        OCR3C=ICR3-vAl;
    cd24:	c6 1b       	sub	r28, r22
    cd26:	d7 0b       	sbc	r29, r23
    cd28:	d0 93 9d 00 	sts	0x009D, r29
    cd2c:	c0 93 9c 00 	sts	0x009C, r28
    cd30:	eb c1       	rjmp	.+982    	; 0xd108 <_Z6angle6i+0x1ed6>
        break;
      case 6:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    cd32:	e6 e8       	ldi	r30, 0x86	; 134
    cd34:	f0 e0       	ldi	r31, 0x00	; 0
    cd36:	c0 81       	ld	r28, Z
    cd38:	d1 81       	ldd	r29, Z+1	; 0x01
    cd3a:	80 80       	ld	r8, Z
    cd3c:	91 80       	ldd	r9, Z+1	; 0x01
    cd3e:	00 d0       	rcall	.+0      	; 0xcd40 <_Z6angle6i+0x1b0e>
    cd40:	0f 92       	push	r0
    cd42:	4d b6       	in	r4, 0x3d	; 61
    cd44:	5e b6       	in	r5, 0x3e	; 62
    cd46:	08 94       	sec
    cd48:	41 1c       	adc	r4, r1
    cd4a:	51 1c       	adc	r5, r1
    cd4c:	88 27       	eor	r24, r24
    cd4e:	77 fd       	sbrc	r23, 7
    cd50:	80 95       	com	r24
    cd52:	98 2f       	mov	r25, r24
    cd54:	0e 94 ee 79 	call	0xf3dc	; 0xf3dc <__floatsisf>
    cd58:	7b 01       	movw	r14, r22
    cd5a:	8c 01       	movw	r16, r24
    cd5c:	ce 01       	movw	r24, r28
    cd5e:	68 e2       	ldi	r22, 0x28	; 40
    cd60:	70 e0       	ldi	r23, 0x00	; 0
    cd62:	0e 94 05 7b 	call	0xf60a	; 0xf60a <__udivmodhi4>
    cd66:	80 e0       	ldi	r24, 0x00	; 0
    cd68:	90 e0       	ldi	r25, 0x00	; 0
    cd6a:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    cd6e:	5b 01       	movw	r10, r22
    cd70:	6c 01       	movw	r12, r24
    cd72:	96 94       	lsr	r9
    cd74:	87 94       	ror	r8
    cd76:	96 94       	lsr	r9
    cd78:	87 94       	ror	r8
    cd7a:	96 94       	lsr	r9
    cd7c:	87 94       	ror	r8
    cd7e:	b4 01       	movw	r22, r8
    cd80:	80 e0       	ldi	r24, 0x00	; 0
    cd82:	90 e0       	ldi	r25, 0x00	; 0
    cd84:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    cd88:	f2 01       	movw	r30, r4
    cd8a:	60 83       	st	Z, r22
    cd8c:	71 83       	std	Z+1, r23	; 0x01
    cd8e:	82 83       	std	Z+2, r24	; 0x02
    cd90:	93 83       	std	Z+3, r25	; 0x03
    cd92:	c8 01       	movw	r24, r16
    cd94:	b7 01       	movw	r22, r14
    cd96:	20 e0       	ldi	r18, 0x00	; 0
    cd98:	30 e0       	ldi	r19, 0x00	; 0
    cd9a:	a9 01       	movw	r20, r18
    cd9c:	0f 2e       	mov	r0, r31
    cd9e:	f0 e0       	ldi	r31, 0x00	; 0
    cda0:	ef 2e       	mov	r14, r31
    cda2:	f0 e0       	ldi	r31, 0x00	; 0
    cda4:	ff 2e       	mov	r15, r31
    cda6:	f4 e3       	ldi	r31, 0x34	; 52
    cda8:	0f 2f       	mov	r16, r31
    cdaa:	f3 e4       	ldi	r31, 0x43	; 67
    cdac:	1f 2f       	mov	r17, r31
    cdae:	f0 2d       	mov	r31, r0
    cdb0:	0e 94 a0 08 	call	0x1140	; 0x1140 <_Z3mapddddd>
    cdb4:	0f 90       	pop	r0
    cdb6:	0f 90       	pop	r0
    cdb8:	0f 90       	pop	r0
    cdba:	0f 90       	pop	r0
        OCR4A=ICR4-vAl;
    cdbc:	c0 91 a6 00 	lds	r28, 0x00A6
    cdc0:	d0 91 a7 00 	lds	r29, 0x00A7
      case 3:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
        OCR3C=ICR3-vAl;
        break;
      case 6:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    cdc4:	0e 94 bb 79 	call	0xf376	; 0xf376 <__fixsfsi>
        OCR4A=ICR4-vAl;
    cdc8:	c6 1b       	sub	r28, r22
    cdca:	d7 0b       	sbc	r29, r23
    cdcc:	d0 93 a9 00 	sts	0x00A9, r29
    cdd0:	c0 93 a8 00 	sts	0x00A8, r28
    cdd4:	99 c1       	rjmp	.+818    	; 0xd108 <_Z6angle6i+0x1ed6>
        break;
      case 7:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    cdd6:	e6 e8       	ldi	r30, 0x86	; 134
    cdd8:	f0 e0       	ldi	r31, 0x00	; 0
    cdda:	c0 81       	ld	r28, Z
    cddc:	d1 81       	ldd	r29, Z+1	; 0x01
    cdde:	80 80       	ld	r8, Z
    cde0:	91 80       	ldd	r9, Z+1	; 0x01
    cde2:	00 d0       	rcall	.+0      	; 0xcde4 <_Z6angle6i+0x1bb2>
    cde4:	0f 92       	push	r0
    cde6:	4d b6       	in	r4, 0x3d	; 61
    cde8:	5e b6       	in	r5, 0x3e	; 62
    cdea:	08 94       	sec
    cdec:	41 1c       	adc	r4, r1
    cdee:	51 1c       	adc	r5, r1
    cdf0:	88 27       	eor	r24, r24
    cdf2:	77 fd       	sbrc	r23, 7
    cdf4:	80 95       	com	r24
    cdf6:	98 2f       	mov	r25, r24
    cdf8:	0e 94 ee 79 	call	0xf3dc	; 0xf3dc <__floatsisf>
    cdfc:	7b 01       	movw	r14, r22
    cdfe:	8c 01       	movw	r16, r24
    ce00:	ce 01       	movw	r24, r28
    ce02:	68 e2       	ldi	r22, 0x28	; 40
    ce04:	70 e0       	ldi	r23, 0x00	; 0
    ce06:	0e 94 05 7b 	call	0xf60a	; 0xf60a <__udivmodhi4>
    ce0a:	80 e0       	ldi	r24, 0x00	; 0
    ce0c:	90 e0       	ldi	r25, 0x00	; 0
    ce0e:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    ce12:	5b 01       	movw	r10, r22
    ce14:	6c 01       	movw	r12, r24
    ce16:	96 94       	lsr	r9
    ce18:	87 94       	ror	r8
    ce1a:	96 94       	lsr	r9
    ce1c:	87 94       	ror	r8
    ce1e:	96 94       	lsr	r9
    ce20:	87 94       	ror	r8
    ce22:	b4 01       	movw	r22, r8
    ce24:	80 e0       	ldi	r24, 0x00	; 0
    ce26:	90 e0       	ldi	r25, 0x00	; 0
    ce28:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    ce2c:	f2 01       	movw	r30, r4
    ce2e:	60 83       	st	Z, r22
    ce30:	71 83       	std	Z+1, r23	; 0x01
    ce32:	82 83       	std	Z+2, r24	; 0x02
    ce34:	93 83       	std	Z+3, r25	; 0x03
    ce36:	c8 01       	movw	r24, r16
    ce38:	b7 01       	movw	r22, r14
    ce3a:	20 e0       	ldi	r18, 0x00	; 0
    ce3c:	30 e0       	ldi	r19, 0x00	; 0
    ce3e:	a9 01       	movw	r20, r18
    ce40:	0f 2e       	mov	r0, r31
    ce42:	f0 e0       	ldi	r31, 0x00	; 0
    ce44:	ef 2e       	mov	r14, r31
    ce46:	f0 e0       	ldi	r31, 0x00	; 0
    ce48:	ff 2e       	mov	r15, r31
    ce4a:	f4 e3       	ldi	r31, 0x34	; 52
    ce4c:	0f 2f       	mov	r16, r31
    ce4e:	f3 e4       	ldi	r31, 0x43	; 67
    ce50:	1f 2f       	mov	r17, r31
    ce52:	f0 2d       	mov	r31, r0
    ce54:	0e 94 a0 08 	call	0x1140	; 0x1140 <_Z3mapddddd>
    ce58:	0f 90       	pop	r0
    ce5a:	0f 90       	pop	r0
    ce5c:	0f 90       	pop	r0
    ce5e:	0f 90       	pop	r0
        OCR4B=ICR4-vAl;
    ce60:	c0 91 a6 00 	lds	r28, 0x00A6
    ce64:	d0 91 a7 00 	lds	r29, 0x00A7
      case 6:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
        OCR4A=ICR4-vAl;
        break;
      case 7:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    ce68:	0e 94 bb 79 	call	0xf376	; 0xf376 <__fixsfsi>
        OCR4B=ICR4-vAl;
    ce6c:	c6 1b       	sub	r28, r22
    ce6e:	d7 0b       	sbc	r29, r23
    ce70:	d0 93 ab 00 	sts	0x00AB, r29
    ce74:	c0 93 aa 00 	sts	0x00AA, r28
    ce78:	47 c1       	rjmp	.+654    	; 0xd108 <_Z6angle6i+0x1ed6>
        break; 
      case 8:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    ce7a:	e6 e8       	ldi	r30, 0x86	; 134
    ce7c:	f0 e0       	ldi	r31, 0x00	; 0
    ce7e:	c0 81       	ld	r28, Z
    ce80:	d1 81       	ldd	r29, Z+1	; 0x01
    ce82:	80 80       	ld	r8, Z
    ce84:	91 80       	ldd	r9, Z+1	; 0x01
    ce86:	00 d0       	rcall	.+0      	; 0xce88 <_Z6angle6i+0x1c56>
    ce88:	0f 92       	push	r0
    ce8a:	4d b6       	in	r4, 0x3d	; 61
    ce8c:	5e b6       	in	r5, 0x3e	; 62
    ce8e:	08 94       	sec
    ce90:	41 1c       	adc	r4, r1
    ce92:	51 1c       	adc	r5, r1
    ce94:	88 27       	eor	r24, r24
    ce96:	77 fd       	sbrc	r23, 7
    ce98:	80 95       	com	r24
    ce9a:	98 2f       	mov	r25, r24
    ce9c:	0e 94 ee 79 	call	0xf3dc	; 0xf3dc <__floatsisf>
    cea0:	7b 01       	movw	r14, r22
    cea2:	8c 01       	movw	r16, r24
    cea4:	ce 01       	movw	r24, r28
    cea6:	68 e2       	ldi	r22, 0x28	; 40
    cea8:	70 e0       	ldi	r23, 0x00	; 0
    ceaa:	0e 94 05 7b 	call	0xf60a	; 0xf60a <__udivmodhi4>
    ceae:	80 e0       	ldi	r24, 0x00	; 0
    ceb0:	90 e0       	ldi	r25, 0x00	; 0
    ceb2:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    ceb6:	5b 01       	movw	r10, r22
    ceb8:	6c 01       	movw	r12, r24
    ceba:	96 94       	lsr	r9
    cebc:	87 94       	ror	r8
    cebe:	96 94       	lsr	r9
    cec0:	87 94       	ror	r8
    cec2:	96 94       	lsr	r9
    cec4:	87 94       	ror	r8
    cec6:	b4 01       	movw	r22, r8
    cec8:	80 e0       	ldi	r24, 0x00	; 0
    ceca:	90 e0       	ldi	r25, 0x00	; 0
    cecc:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    ced0:	f2 01       	movw	r30, r4
    ced2:	60 83       	st	Z, r22
    ced4:	71 83       	std	Z+1, r23	; 0x01
    ced6:	82 83       	std	Z+2, r24	; 0x02
    ced8:	93 83       	std	Z+3, r25	; 0x03
    ceda:	c8 01       	movw	r24, r16
    cedc:	b7 01       	movw	r22, r14
    cede:	20 e0       	ldi	r18, 0x00	; 0
    cee0:	30 e0       	ldi	r19, 0x00	; 0
    cee2:	a9 01       	movw	r20, r18
    cee4:	0f 2e       	mov	r0, r31
    cee6:	f0 e0       	ldi	r31, 0x00	; 0
    cee8:	ef 2e       	mov	r14, r31
    ceea:	f0 e0       	ldi	r31, 0x00	; 0
    ceec:	ff 2e       	mov	r15, r31
    ceee:	f4 e3       	ldi	r31, 0x34	; 52
    cef0:	0f 2f       	mov	r16, r31
    cef2:	f3 e4       	ldi	r31, 0x43	; 67
    cef4:	1f 2f       	mov	r17, r31
    cef6:	f0 2d       	mov	r31, r0
    cef8:	0e 94 a0 08 	call	0x1140	; 0x1140 <_Z3mapddddd>
    cefc:	0f 90       	pop	r0
    cefe:	0f 90       	pop	r0
    cf00:	0f 90       	pop	r0
    cf02:	0f 90       	pop	r0
        OCR4C=ICR4-vAl;
    cf04:	c0 91 a6 00 	lds	r28, 0x00A6
    cf08:	d0 91 a7 00 	lds	r29, 0x00A7
      case 7:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
        OCR4B=ICR4-vAl;
        break; 
      case 8:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    cf0c:	0e 94 bb 79 	call	0xf376	; 0xf376 <__fixsfsi>
        OCR4C=ICR4-vAl;
    cf10:	c6 1b       	sub	r28, r22
    cf12:	d7 0b       	sbc	r29, r23
    cf14:	d0 93 ad 00 	sts	0x00AD, r29
    cf18:	c0 93 ac 00 	sts	0x00AC, r28
    cf1c:	f5 c0       	rjmp	.+490    	; 0xd108 <_Z6angle6i+0x1ed6>
        break;
      case 46:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    cf1e:	e6 e8       	ldi	r30, 0x86	; 134
    cf20:	f0 e0       	ldi	r31, 0x00	; 0
    cf22:	c0 81       	ld	r28, Z
    cf24:	d1 81       	ldd	r29, Z+1	; 0x01
    cf26:	80 80       	ld	r8, Z
    cf28:	91 80       	ldd	r9, Z+1	; 0x01
    cf2a:	00 d0       	rcall	.+0      	; 0xcf2c <_Z6angle6i+0x1cfa>
    cf2c:	0f 92       	push	r0
    cf2e:	4d b6       	in	r4, 0x3d	; 61
    cf30:	5e b6       	in	r5, 0x3e	; 62
    cf32:	08 94       	sec
    cf34:	41 1c       	adc	r4, r1
    cf36:	51 1c       	adc	r5, r1
    cf38:	88 27       	eor	r24, r24
    cf3a:	77 fd       	sbrc	r23, 7
    cf3c:	80 95       	com	r24
    cf3e:	98 2f       	mov	r25, r24
    cf40:	0e 94 ee 79 	call	0xf3dc	; 0xf3dc <__floatsisf>
    cf44:	7b 01       	movw	r14, r22
    cf46:	8c 01       	movw	r16, r24
    cf48:	ce 01       	movw	r24, r28
    cf4a:	68 e2       	ldi	r22, 0x28	; 40
    cf4c:	70 e0       	ldi	r23, 0x00	; 0
    cf4e:	0e 94 05 7b 	call	0xf60a	; 0xf60a <__udivmodhi4>
    cf52:	80 e0       	ldi	r24, 0x00	; 0
    cf54:	90 e0       	ldi	r25, 0x00	; 0
    cf56:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    cf5a:	5b 01       	movw	r10, r22
    cf5c:	6c 01       	movw	r12, r24
    cf5e:	96 94       	lsr	r9
    cf60:	87 94       	ror	r8
    cf62:	96 94       	lsr	r9
    cf64:	87 94       	ror	r8
    cf66:	96 94       	lsr	r9
    cf68:	87 94       	ror	r8
    cf6a:	b4 01       	movw	r22, r8
    cf6c:	80 e0       	ldi	r24, 0x00	; 0
    cf6e:	90 e0       	ldi	r25, 0x00	; 0
    cf70:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    cf74:	f2 01       	movw	r30, r4
    cf76:	60 83       	st	Z, r22
    cf78:	71 83       	std	Z+1, r23	; 0x01
    cf7a:	82 83       	std	Z+2, r24	; 0x02
    cf7c:	93 83       	std	Z+3, r25	; 0x03
    cf7e:	c8 01       	movw	r24, r16
    cf80:	b7 01       	movw	r22, r14
    cf82:	20 e0       	ldi	r18, 0x00	; 0
    cf84:	30 e0       	ldi	r19, 0x00	; 0
    cf86:	a9 01       	movw	r20, r18
    cf88:	0f 2e       	mov	r0, r31
    cf8a:	f0 e0       	ldi	r31, 0x00	; 0
    cf8c:	ef 2e       	mov	r14, r31
    cf8e:	f0 e0       	ldi	r31, 0x00	; 0
    cf90:	ff 2e       	mov	r15, r31
    cf92:	f4 e3       	ldi	r31, 0x34	; 52
    cf94:	0f 2f       	mov	r16, r31
    cf96:	f3 e4       	ldi	r31, 0x43	; 67
    cf98:	1f 2f       	mov	r17, r31
    cf9a:	f0 2d       	mov	r31, r0
    cf9c:	0e 94 a0 08 	call	0x1140	; 0x1140 <_Z3mapddddd>
    cfa0:	0f 90       	pop	r0
    cfa2:	0f 90       	pop	r0
    cfa4:	0f 90       	pop	r0
    cfa6:	0f 90       	pop	r0
        OCR5A=ICR5-vAl;
    cfa8:	c0 91 26 01 	lds	r28, 0x0126
    cfac:	d0 91 27 01 	lds	r29, 0x0127
      case 8:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
        OCR4C=ICR4-vAl;
        break;
      case 46:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    cfb0:	0e 94 bb 79 	call	0xf376	; 0xf376 <__fixsfsi>
        OCR5A=ICR5-vAl;
    cfb4:	c6 1b       	sub	r28, r22
    cfb6:	d7 0b       	sbc	r29, r23
    cfb8:	d0 93 29 01 	sts	0x0129, r29
    cfbc:	c0 93 28 01 	sts	0x0128, r28
    cfc0:	a3 c0       	rjmp	.+326    	; 0xd108 <_Z6angle6i+0x1ed6>
        break;
      case 45:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    cfc2:	e6 e8       	ldi	r30, 0x86	; 134
    cfc4:	f0 e0       	ldi	r31, 0x00	; 0
    cfc6:	c0 81       	ld	r28, Z
    cfc8:	d1 81       	ldd	r29, Z+1	; 0x01
    cfca:	80 80       	ld	r8, Z
    cfcc:	91 80       	ldd	r9, Z+1	; 0x01
    cfce:	00 d0       	rcall	.+0      	; 0xcfd0 <_Z6angle6i+0x1d9e>
    cfd0:	0f 92       	push	r0
    cfd2:	4d b6       	in	r4, 0x3d	; 61
    cfd4:	5e b6       	in	r5, 0x3e	; 62
    cfd6:	08 94       	sec
    cfd8:	41 1c       	adc	r4, r1
    cfda:	51 1c       	adc	r5, r1
    cfdc:	88 27       	eor	r24, r24
    cfde:	77 fd       	sbrc	r23, 7
    cfe0:	80 95       	com	r24
    cfe2:	98 2f       	mov	r25, r24
    cfe4:	0e 94 ee 79 	call	0xf3dc	; 0xf3dc <__floatsisf>
    cfe8:	7b 01       	movw	r14, r22
    cfea:	8c 01       	movw	r16, r24
    cfec:	ce 01       	movw	r24, r28
    cfee:	68 e2       	ldi	r22, 0x28	; 40
    cff0:	70 e0       	ldi	r23, 0x00	; 0
    cff2:	0e 94 05 7b 	call	0xf60a	; 0xf60a <__udivmodhi4>
    cff6:	80 e0       	ldi	r24, 0x00	; 0
    cff8:	90 e0       	ldi	r25, 0x00	; 0
    cffa:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    cffe:	5b 01       	movw	r10, r22
    d000:	6c 01       	movw	r12, r24
    d002:	96 94       	lsr	r9
    d004:	87 94       	ror	r8
    d006:	96 94       	lsr	r9
    d008:	87 94       	ror	r8
    d00a:	96 94       	lsr	r9
    d00c:	87 94       	ror	r8
    d00e:	b4 01       	movw	r22, r8
    d010:	80 e0       	ldi	r24, 0x00	; 0
    d012:	90 e0       	ldi	r25, 0x00	; 0
    d014:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    d018:	f2 01       	movw	r30, r4
    d01a:	60 83       	st	Z, r22
    d01c:	71 83       	std	Z+1, r23	; 0x01
    d01e:	82 83       	std	Z+2, r24	; 0x02
    d020:	93 83       	std	Z+3, r25	; 0x03
    d022:	c8 01       	movw	r24, r16
    d024:	b7 01       	movw	r22, r14
    d026:	20 e0       	ldi	r18, 0x00	; 0
    d028:	30 e0       	ldi	r19, 0x00	; 0
    d02a:	a9 01       	movw	r20, r18
    d02c:	0f 2e       	mov	r0, r31
    d02e:	f0 e0       	ldi	r31, 0x00	; 0
    d030:	ef 2e       	mov	r14, r31
    d032:	f0 e0       	ldi	r31, 0x00	; 0
    d034:	ff 2e       	mov	r15, r31
    d036:	f4 e3       	ldi	r31, 0x34	; 52
    d038:	0f 2f       	mov	r16, r31
    d03a:	f3 e4       	ldi	r31, 0x43	; 67
    d03c:	1f 2f       	mov	r17, r31
    d03e:	f0 2d       	mov	r31, r0
    d040:	0e 94 a0 08 	call	0x1140	; 0x1140 <_Z3mapddddd>
    d044:	0f 90       	pop	r0
    d046:	0f 90       	pop	r0
    d048:	0f 90       	pop	r0
    d04a:	0f 90       	pop	r0
        OCR5B=ICR5-vAl;
    d04c:	c0 91 26 01 	lds	r28, 0x0126
    d050:	d0 91 27 01 	lds	r29, 0x0127
      case 46:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
        OCR5A=ICR5-vAl;
        break;
      case 45:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    d054:	0e 94 bb 79 	call	0xf376	; 0xf376 <__fixsfsi>
        OCR5B=ICR5-vAl;
    d058:	c6 1b       	sub	r28, r22
    d05a:	d7 0b       	sbc	r29, r23
    d05c:	d0 93 2b 01 	sts	0x012B, r29
    d060:	c0 93 2a 01 	sts	0x012A, r28
    d064:	51 c0       	rjmp	.+162    	; 0xd108 <_Z6angle6i+0x1ed6>
        break;
      case 44:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    d066:	e6 e8       	ldi	r30, 0x86	; 134
    d068:	f0 e0       	ldi	r31, 0x00	; 0
    d06a:	c0 81       	ld	r28, Z
    d06c:	d1 81       	ldd	r29, Z+1	; 0x01
    d06e:	80 80       	ld	r8, Z
    d070:	91 80       	ldd	r9, Z+1	; 0x01
    d072:	00 d0       	rcall	.+0      	; 0xd074 <_Z6angle6i+0x1e42>
    d074:	0f 92       	push	r0
    d076:	4d b6       	in	r4, 0x3d	; 61
    d078:	5e b6       	in	r5, 0x3e	; 62
    d07a:	08 94       	sec
    d07c:	41 1c       	adc	r4, r1
    d07e:	51 1c       	adc	r5, r1
    d080:	88 27       	eor	r24, r24
    d082:	77 fd       	sbrc	r23, 7
    d084:	80 95       	com	r24
    d086:	98 2f       	mov	r25, r24
    d088:	0e 94 ee 79 	call	0xf3dc	; 0xf3dc <__floatsisf>
    d08c:	7b 01       	movw	r14, r22
    d08e:	8c 01       	movw	r16, r24
    d090:	ce 01       	movw	r24, r28
    d092:	68 e2       	ldi	r22, 0x28	; 40
    d094:	70 e0       	ldi	r23, 0x00	; 0
    d096:	0e 94 05 7b 	call	0xf60a	; 0xf60a <__udivmodhi4>
    d09a:	80 e0       	ldi	r24, 0x00	; 0
    d09c:	90 e0       	ldi	r25, 0x00	; 0
    d09e:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    d0a2:	5b 01       	movw	r10, r22
    d0a4:	6c 01       	movw	r12, r24
    d0a6:	96 94       	lsr	r9
    d0a8:	87 94       	ror	r8
    d0aa:	96 94       	lsr	r9
    d0ac:	87 94       	ror	r8
    d0ae:	96 94       	lsr	r9
    d0b0:	87 94       	ror	r8
    d0b2:	b4 01       	movw	r22, r8
    d0b4:	80 e0       	ldi	r24, 0x00	; 0
    d0b6:	90 e0       	ldi	r25, 0x00	; 0
    d0b8:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    d0bc:	f2 01       	movw	r30, r4
    d0be:	60 83       	st	Z, r22
    d0c0:	71 83       	std	Z+1, r23	; 0x01
    d0c2:	82 83       	std	Z+2, r24	; 0x02
    d0c4:	93 83       	std	Z+3, r25	; 0x03
    d0c6:	c8 01       	movw	r24, r16
    d0c8:	b7 01       	movw	r22, r14
    d0ca:	20 e0       	ldi	r18, 0x00	; 0
    d0cc:	30 e0       	ldi	r19, 0x00	; 0
    d0ce:	a9 01       	movw	r20, r18
    d0d0:	0f 2e       	mov	r0, r31
    d0d2:	f0 e0       	ldi	r31, 0x00	; 0
    d0d4:	ef 2e       	mov	r14, r31
    d0d6:	f0 e0       	ldi	r31, 0x00	; 0
    d0d8:	ff 2e       	mov	r15, r31
    d0da:	f4 e3       	ldi	r31, 0x34	; 52
    d0dc:	0f 2f       	mov	r16, r31
    d0de:	f3 e4       	ldi	r31, 0x43	; 67
    d0e0:	1f 2f       	mov	r17, r31
    d0e2:	f0 2d       	mov	r31, r0
    d0e4:	0e 94 a0 08 	call	0x1140	; 0x1140 <_Z3mapddddd>
    d0e8:	0f 90       	pop	r0
    d0ea:	0f 90       	pop	r0
    d0ec:	0f 90       	pop	r0
    d0ee:	0f 90       	pop	r0
        OCR5C=ICR5-vAl;
    d0f0:	c0 91 26 01 	lds	r28, 0x0126
    d0f4:	d0 91 27 01 	lds	r29, 0x0127
      case 45:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
        OCR5B=ICR5-vAl;
        break;
      case 44:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    d0f8:	0e 94 bb 79 	call	0xf376	; 0xf376 <__fixsfsi>
        OCR5C=ICR5-vAl;
    d0fc:	c6 1b       	sub	r28, r22
    d0fe:	d7 0b       	sbc	r29, r23
    d100:	d0 93 2d 01 	sts	0x012D, r29
    d104:	c0 93 2c 01 	sts	0x012C, r28
	}
    d108:	df 91       	pop	r29
    d10a:	cf 91       	pop	r28
    d10c:	1f 91       	pop	r17
    d10e:	0f 91       	pop	r16
    d110:	ff 90       	pop	r15
    d112:	ef 90       	pop	r14
    d114:	df 90       	pop	r13
    d116:	cf 90       	pop	r12
    d118:	bf 90       	pop	r11
    d11a:	af 90       	pop	r10
    d11c:	9f 90       	pop	r9
    d11e:	8f 90       	pop	r8
    d120:	7f 90       	pop	r7
    d122:	6f 90       	pop	r6
    d124:	5f 90       	pop	r5
    d126:	4f 90       	pop	r4
    d128:	3f 90       	pop	r3
    d12a:	2f 90       	pop	r2
    d12c:	08 95       	ret

0000d12e <_Z6angle7i>:
	void angle7(int dist)
	{
    d12e:	2f 92       	push	r2
    d130:	3f 92       	push	r3
    d132:	4f 92       	push	r4
    d134:	5f 92       	push	r5
    d136:	6f 92       	push	r6
    d138:	7f 92       	push	r7
    d13a:	8f 92       	push	r8
    d13c:	9f 92       	push	r9
    d13e:	af 92       	push	r10
    d140:	bf 92       	push	r11
    d142:	cf 92       	push	r12
    d144:	df 92       	push	r13
    d146:	ef 92       	push	r14
    d148:	ff 92       	push	r15
    d14a:	0f 93       	push	r16
    d14c:	1f 93       	push	r17
    d14e:	cf 93       	push	r28
    d150:	df 93       	push	r29
		v=ang1+(dist-5000)*k;
    d152:	bc 01       	movw	r22, r24
    d154:	68 58       	subi	r22, 0x88	; 136
    d156:	73 41       	sbci	r23, 0x13	; 19
    d158:	88 27       	eor	r24, r24
    d15a:	77 fd       	sbrc	r23, 7
    d15c:	80 95       	com	r24
    d15e:	98 2f       	mov	r25, r24
    d160:	0e 94 ee 79 	call	0xf3dc	; 0xf3dc <__floatsisf>
    d164:	20 91 b4 02 	lds	r18, 0x02B4
    d168:	30 91 b5 02 	lds	r19, 0x02B5
    d16c:	40 91 b6 02 	lds	r20, 0x02B6
    d170:	50 91 b7 02 	lds	r21, 0x02B7
    d174:	0e 94 a2 7a 	call	0xf544	; 0xf544 <__mulsf3>
    d178:	f6 2e       	mov	r15, r22
    d17a:	07 2f       	mov	r16, r23
    d17c:	18 2f       	mov	r17, r24
    d17e:	e9 2e       	mov	r14, r25
    d180:	60 91 b8 02 	lds	r22, 0x02B8
    d184:	70 91 b9 02 	lds	r23, 0x02B9
    d188:	88 27       	eor	r24, r24
    d18a:	77 fd       	sbrc	r23, 7
    d18c:	80 95       	com	r24
    d18e:	98 2f       	mov	r25, r24
    d190:	0e 94 ee 79 	call	0xf3dc	; 0xf3dc <__floatsisf>
    d194:	2f 2d       	mov	r18, r15
    d196:	30 2f       	mov	r19, r16
    d198:	41 2f       	mov	r20, r17
    d19a:	5e 2d       	mov	r21, r14
    d19c:	0e 94 eb 78 	call	0xf1d6	; 0xf1d6 <__addsf3>
    d1a0:	0e 94 bb 79 	call	0xf376	; 0xf376 <__fixsfsi>
    d1a4:	eb 01       	movw	r28, r22
    d1a6:	70 93 cb 02 	sts	0x02CB, r23
    d1aa:	60 93 ca 02 	sts	0x02CA, r22
		y=ang2+(dist-5000)*k;
    d1ae:	60 91 ba 02 	lds	r22, 0x02BA
    d1b2:	70 91 bb 02 	lds	r23, 0x02BB
    d1b6:	88 27       	eor	r24, r24
    d1b8:	77 fd       	sbrc	r23, 7
    d1ba:	80 95       	com	r24
    d1bc:	98 2f       	mov	r25, r24
    d1be:	0e 94 ee 79 	call	0xf3dc	; 0xf3dc <__floatsisf>
    d1c2:	9b 01       	movw	r18, r22
    d1c4:	ac 01       	movw	r20, r24
    d1c6:	6f 2d       	mov	r22, r15
    d1c8:	70 2f       	mov	r23, r16
    d1ca:	81 2f       	mov	r24, r17
    d1cc:	9e 2d       	mov	r25, r14
    d1ce:	0e 94 eb 78 	call	0xf1d6	; 0xf1d6 <__addsf3>
    d1d2:	0e 94 bb 79 	call	0xf376	; 0xf376 <__fixsfsi>
    d1d6:	70 93 cd 02 	sts	0x02CD, r23
    d1da:	60 93 cc 02 	sts	0x02CC, r22
		z=ang3+(dist-5000)*k;
    d1de:	60 91 bc 02 	lds	r22, 0x02BC
    d1e2:	70 91 bd 02 	lds	r23, 0x02BD
    d1e6:	88 27       	eor	r24, r24
    d1e8:	77 fd       	sbrc	r23, 7
    d1ea:	80 95       	com	r24
    d1ec:	98 2f       	mov	r25, r24
    d1ee:	0e 94 ee 79 	call	0xf3dc	; 0xf3dc <__floatsisf>
    d1f2:	9b 01       	movw	r18, r22
    d1f4:	ac 01       	movw	r20, r24
    d1f6:	6f 2d       	mov	r22, r15
    d1f8:	70 2f       	mov	r23, r16
    d1fa:	81 2f       	mov	r24, r17
    d1fc:	9e 2d       	mov	r25, r14
    d1fe:	0e 94 eb 78 	call	0xf1d6	; 0xf1d6 <__addsf3>
    d202:	0e 94 bb 79 	call	0xf376	; 0xf376 <__fixsfsi>
    d206:	70 93 cf 02 	sts	0x02CF, r23
    d20a:	60 93 ce 02 	sts	0x02CE, r22
		w=ang3+(dist-5000)*k;
    d20e:	70 93 d1 02 	sts	0x02D1, r23
    d212:	60 93 d0 02 	sts	0x02D0, r22
     }
  }

  void write(int vAl)           //PIN=servo pin no. on mega,vAl=angle F_CPU for the servo at pin
  {
    switch(pIn)
    d216:	80 91 d4 02 	lds	r24, 0x02D4
    d21a:	88 30       	cpi	r24, 0x08	; 8
    d21c:	09 f4       	brne	.+2      	; 0xd220 <_Z6angle7i+0xf2>
    d21e:	72 c2       	rjmp	.+1252   	; 0xd704 <_Z6angle7i+0x5d6>
    d220:	89 30       	cpi	r24, 0x09	; 9
    d222:	98 f4       	brcc	.+38     	; 0xd24a <_Z6angle7i+0x11c>
    d224:	85 30       	cpi	r24, 0x05	; 5
    d226:	09 f4       	brne	.+2      	; 0xd22a <_Z6angle7i+0xfc>
    d228:	ce c0       	rjmp	.+412    	; 0xd3c6 <_Z6angle7i+0x298>
    d22a:	86 30       	cpi	r24, 0x06	; 6
    d22c:	38 f4       	brcc	.+14     	; 0xd23c <_Z6angle7i+0x10e>
    d22e:	82 30       	cpi	r24, 0x02	; 2
    d230:	09 f4       	brne	.+2      	; 0xd234 <_Z6angle7i+0x106>
    d232:	1c c1       	rjmp	.+568    	; 0xd46c <_Z6angle7i+0x33e>
    d234:	83 30       	cpi	r24, 0x03	; 3
    d236:	09 f0       	breq	.+2      	; 0xd23a <_Z6angle7i+0x10c>
    d238:	b0 c3       	rjmp	.+1888   	; 0xd99a <_Z6angle7i+0x86c>
    d23a:	6b c1       	rjmp	.+726    	; 0xd512 <_Z6angle7i+0x3e4>
    d23c:	86 30       	cpi	r24, 0x06	; 6
    d23e:	09 f4       	brne	.+2      	; 0xd242 <_Z6angle7i+0x114>
    d240:	bb c1       	rjmp	.+886    	; 0xd5b8 <_Z6angle7i+0x48a>
    d242:	87 30       	cpi	r24, 0x07	; 7
    d244:	09 f0       	breq	.+2      	; 0xd248 <_Z6angle7i+0x11a>
    d246:	a9 c3       	rjmp	.+1874   	; 0xd99a <_Z6angle7i+0x86c>
    d248:	0a c2       	rjmp	.+1044   	; 0xd65e <_Z6angle7i+0x530>
    d24a:	8c 32       	cpi	r24, 0x2C	; 44
    d24c:	09 f4       	brne	.+2      	; 0xd250 <_Z6angle7i+0x122>
    d24e:	53 c3       	rjmp	.+1702   	; 0xd8f6 <_Z6angle7i+0x7c8>
    d250:	8d 32       	cpi	r24, 0x2D	; 45
    d252:	30 f4       	brcc	.+12     	; 0xd260 <_Z6angle7i+0x132>
    d254:	8b 30       	cpi	r24, 0x0B	; 11
    d256:	59 f0       	breq	.+22     	; 0xd26e <_Z6angle7i+0x140>
    d258:	8c 30       	cpi	r24, 0x0C	; 12
    d25a:	09 f0       	breq	.+2      	; 0xd25e <_Z6angle7i+0x130>
    d25c:	9e c3       	rjmp	.+1852   	; 0xd99a <_Z6angle7i+0x86c>
    d25e:	5d c0       	rjmp	.+186    	; 0xd31a <_Z6angle7i+0x1ec>
    d260:	8d 32       	cpi	r24, 0x2D	; 45
    d262:	09 f4       	brne	.+2      	; 0xd266 <_Z6angle7i+0x138>
    d264:	f5 c2       	rjmp	.+1514   	; 0xd850 <_Z6angle7i+0x722>
    d266:	8e 32       	cpi	r24, 0x2E	; 46
    d268:	09 f0       	breq	.+2      	; 0xd26c <_Z6angle7i+0x13e>
    d26a:	97 c3       	rjmp	.+1838   	; 0xd99a <_Z6angle7i+0x86c>
    d26c:	9e c2       	rjmp	.+1340   	; 0xd7aa <_Z6angle7i+0x67c>
    {
     case 11:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    d26e:	0f 2e       	mov	r0, r31
    d270:	f6 e8       	ldi	r31, 0x86	; 134
    d272:	8f 2e       	mov	r8, r31
    d274:	99 24       	eor	r9, r9
    d276:	f0 2d       	mov	r31, r0
    d278:	f4 01       	movw	r30, r8
    d27a:	00 81       	ld	r16, Z
    d27c:	11 81       	ldd	r17, Z+1	; 0x01
    d27e:	e0 80       	ld	r14, Z
    d280:	f1 80       	ldd	r15, Z+1	; 0x01
    d282:	00 d0       	rcall	.+0      	; 0xd284 <_Z6angle7i+0x156>
    d284:	0f 92       	push	r0
    d286:	2d b6       	in	r2, 0x3d	; 61
    d288:	3e b6       	in	r3, 0x3e	; 62
    d28a:	08 94       	sec
    d28c:	21 1c       	adc	r2, r1
    d28e:	31 1c       	adc	r3, r1
    d290:	be 01       	movw	r22, r28
    d292:	88 27       	eor	r24, r24
    d294:	77 fd       	sbrc	r23, 7
    d296:	80 95       	com	r24
    d298:	98 2f       	mov	r25, r24
    d29a:	0e 94 ee 79 	call	0xf3dc	; 0xf3dc <__floatsisf>
    d29e:	2b 01       	movw	r4, r22
    d2a0:	3c 01       	movw	r6, r24
    d2a2:	c8 01       	movw	r24, r16
    d2a4:	68 e2       	ldi	r22, 0x28	; 40
    d2a6:	70 e0       	ldi	r23, 0x00	; 0
    d2a8:	0e 94 05 7b 	call	0xf60a	; 0xf60a <__udivmodhi4>
    d2ac:	80 e0       	ldi	r24, 0x00	; 0
    d2ae:	90 e0       	ldi	r25, 0x00	; 0
    d2b0:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    d2b4:	5b 01       	movw	r10, r22
    d2b6:	6c 01       	movw	r12, r24
    d2b8:	f6 94       	lsr	r15
    d2ba:	e7 94       	ror	r14
    d2bc:	f6 94       	lsr	r15
    d2be:	e7 94       	ror	r14
    d2c0:	f6 94       	lsr	r15
    d2c2:	e7 94       	ror	r14
    d2c4:	b7 01       	movw	r22, r14
    d2c6:	80 e0       	ldi	r24, 0x00	; 0
    d2c8:	90 e0       	ldi	r25, 0x00	; 0
    d2ca:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    d2ce:	f1 01       	movw	r30, r2
    d2d0:	60 83       	st	Z, r22
    d2d2:	71 83       	std	Z+1, r23	; 0x01
    d2d4:	82 83       	std	Z+2, r24	; 0x02
    d2d6:	93 83       	std	Z+3, r25	; 0x03
    d2d8:	c3 01       	movw	r24, r6
    d2da:	b2 01       	movw	r22, r4
    d2dc:	20 e0       	ldi	r18, 0x00	; 0
    d2de:	30 e0       	ldi	r19, 0x00	; 0
    d2e0:	a9 01       	movw	r20, r18
    d2e2:	0f 2e       	mov	r0, r31
    d2e4:	f0 e0       	ldi	r31, 0x00	; 0
    d2e6:	ef 2e       	mov	r14, r31
    d2e8:	f0 e0       	ldi	r31, 0x00	; 0
    d2ea:	ff 2e       	mov	r15, r31
    d2ec:	f4 e3       	ldi	r31, 0x34	; 52
    d2ee:	0f 2f       	mov	r16, r31
    d2f0:	f3 e4       	ldi	r31, 0x43	; 67
    d2f2:	1f 2f       	mov	r17, r31
    d2f4:	f0 2d       	mov	r31, r0
    d2f6:	0e 94 a0 08 	call	0x1140	; 0x1140 <_Z3mapddddd>
    d2fa:	0f 90       	pop	r0
    d2fc:	0f 90       	pop	r0
    d2fe:	0f 90       	pop	r0
    d300:	0f 90       	pop	r0
        OCR1A=ICR1-vAl;
    d302:	f4 01       	movw	r30, r8
    d304:	c0 81       	ld	r28, Z
    d306:	d1 81       	ldd	r29, Z+1	; 0x01
  void write(int vAl)           //PIN=servo pin no. on mega,vAl=angle F_CPU for the servo at pin
  {
    switch(pIn)
    {
     case 11:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    d308:	0e 94 bb 79 	call	0xf376	; 0xf376 <__fixsfsi>
        OCR1A=ICR1-vAl;
    d30c:	c6 1b       	sub	r28, r22
    d30e:	d7 0b       	sbc	r29, r23
    d310:	d0 93 89 00 	sts	0x0089, r29
    d314:	c0 93 88 00 	sts	0x0088, r28
    d318:	40 c3       	rjmp	.+1664   	; 0xd99a <_Z6angle7i+0x86c>
        break;
      case 12:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    d31a:	0f 2e       	mov	r0, r31
    d31c:	f6 e8       	ldi	r31, 0x86	; 134
    d31e:	8f 2e       	mov	r8, r31
    d320:	99 24       	eor	r9, r9
    d322:	f0 2d       	mov	r31, r0
    d324:	f4 01       	movw	r30, r8
    d326:	00 81       	ld	r16, Z
    d328:	11 81       	ldd	r17, Z+1	; 0x01
    d32a:	e0 80       	ld	r14, Z
    d32c:	f1 80       	ldd	r15, Z+1	; 0x01
    d32e:	00 d0       	rcall	.+0      	; 0xd330 <_Z6angle7i+0x202>
    d330:	0f 92       	push	r0
    d332:	2d b6       	in	r2, 0x3d	; 61
    d334:	3e b6       	in	r3, 0x3e	; 62
    d336:	08 94       	sec
    d338:	21 1c       	adc	r2, r1
    d33a:	31 1c       	adc	r3, r1
    d33c:	be 01       	movw	r22, r28
    d33e:	88 27       	eor	r24, r24
    d340:	77 fd       	sbrc	r23, 7
    d342:	80 95       	com	r24
    d344:	98 2f       	mov	r25, r24
    d346:	0e 94 ee 79 	call	0xf3dc	; 0xf3dc <__floatsisf>
    d34a:	2b 01       	movw	r4, r22
    d34c:	3c 01       	movw	r6, r24
    d34e:	c8 01       	movw	r24, r16
    d350:	68 e2       	ldi	r22, 0x28	; 40
    d352:	70 e0       	ldi	r23, 0x00	; 0
    d354:	0e 94 05 7b 	call	0xf60a	; 0xf60a <__udivmodhi4>
    d358:	80 e0       	ldi	r24, 0x00	; 0
    d35a:	90 e0       	ldi	r25, 0x00	; 0
    d35c:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    d360:	5b 01       	movw	r10, r22
    d362:	6c 01       	movw	r12, r24
    d364:	f6 94       	lsr	r15
    d366:	e7 94       	ror	r14
    d368:	f6 94       	lsr	r15
    d36a:	e7 94       	ror	r14
    d36c:	f6 94       	lsr	r15
    d36e:	e7 94       	ror	r14
    d370:	b7 01       	movw	r22, r14
    d372:	80 e0       	ldi	r24, 0x00	; 0
    d374:	90 e0       	ldi	r25, 0x00	; 0
    d376:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    d37a:	f1 01       	movw	r30, r2
    d37c:	60 83       	st	Z, r22
    d37e:	71 83       	std	Z+1, r23	; 0x01
    d380:	82 83       	std	Z+2, r24	; 0x02
    d382:	93 83       	std	Z+3, r25	; 0x03
    d384:	c3 01       	movw	r24, r6
    d386:	b2 01       	movw	r22, r4
    d388:	20 e0       	ldi	r18, 0x00	; 0
    d38a:	30 e0       	ldi	r19, 0x00	; 0
    d38c:	a9 01       	movw	r20, r18
    d38e:	0f 2e       	mov	r0, r31
    d390:	f0 e0       	ldi	r31, 0x00	; 0
    d392:	ef 2e       	mov	r14, r31
    d394:	f0 e0       	ldi	r31, 0x00	; 0
    d396:	ff 2e       	mov	r15, r31
    d398:	f4 e3       	ldi	r31, 0x34	; 52
    d39a:	0f 2f       	mov	r16, r31
    d39c:	f3 e4       	ldi	r31, 0x43	; 67
    d39e:	1f 2f       	mov	r17, r31
    d3a0:	f0 2d       	mov	r31, r0
    d3a2:	0e 94 a0 08 	call	0x1140	; 0x1140 <_Z3mapddddd>
    d3a6:	0f 90       	pop	r0
    d3a8:	0f 90       	pop	r0
    d3aa:	0f 90       	pop	r0
    d3ac:	0f 90       	pop	r0
        OCR1B=ICR1-vAl;
    d3ae:	f4 01       	movw	r30, r8
    d3b0:	c0 81       	ld	r28, Z
    d3b2:	d1 81       	ldd	r29, Z+1	; 0x01
     case 11:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
        OCR1A=ICR1-vAl;
        break;
      case 12:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    d3b4:	0e 94 bb 79 	call	0xf376	; 0xf376 <__fixsfsi>
        OCR1B=ICR1-vAl;
    d3b8:	c6 1b       	sub	r28, r22
    d3ba:	d7 0b       	sbc	r29, r23
    d3bc:	d0 93 8b 00 	sts	0x008B, r29
    d3c0:	c0 93 8a 00 	sts	0x008A, r28
    d3c4:	ea c2       	rjmp	.+1492   	; 0xd99a <_Z6angle7i+0x86c>
        break;
      case 5:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    d3c6:	e6 e8       	ldi	r30, 0x86	; 134
    d3c8:	f0 e0       	ldi	r31, 0x00	; 0
    d3ca:	a0 80       	ld	r10, Z
    d3cc:	b1 80       	ldd	r11, Z+1	; 0x01
    d3ce:	80 80       	ld	r8, Z
    d3d0:	91 80       	ldd	r9, Z+1	; 0x01
    d3d2:	00 d0       	rcall	.+0      	; 0xd3d4 <_Z6angle7i+0x2a6>
    d3d4:	0f 92       	push	r0
    d3d6:	4d b6       	in	r4, 0x3d	; 61
    d3d8:	5e b6       	in	r5, 0x3e	; 62
    d3da:	08 94       	sec
    d3dc:	41 1c       	adc	r4, r1
    d3de:	51 1c       	adc	r5, r1
    d3e0:	be 01       	movw	r22, r28
    d3e2:	88 27       	eor	r24, r24
    d3e4:	77 fd       	sbrc	r23, 7
    d3e6:	80 95       	com	r24
    d3e8:	98 2f       	mov	r25, r24
    d3ea:	0e 94 ee 79 	call	0xf3dc	; 0xf3dc <__floatsisf>
    d3ee:	7b 01       	movw	r14, r22
    d3f0:	8c 01       	movw	r16, r24
    d3f2:	c5 01       	movw	r24, r10
    d3f4:	68 e2       	ldi	r22, 0x28	; 40
    d3f6:	70 e0       	ldi	r23, 0x00	; 0
    d3f8:	0e 94 05 7b 	call	0xf60a	; 0xf60a <__udivmodhi4>
    d3fc:	80 e0       	ldi	r24, 0x00	; 0
    d3fe:	90 e0       	ldi	r25, 0x00	; 0
    d400:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    d404:	5b 01       	movw	r10, r22
    d406:	6c 01       	movw	r12, r24
    d408:	96 94       	lsr	r9
    d40a:	87 94       	ror	r8
    d40c:	96 94       	lsr	r9
    d40e:	87 94       	ror	r8
    d410:	96 94       	lsr	r9
    d412:	87 94       	ror	r8
    d414:	b4 01       	movw	r22, r8
    d416:	80 e0       	ldi	r24, 0x00	; 0
    d418:	90 e0       	ldi	r25, 0x00	; 0
    d41a:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    d41e:	f2 01       	movw	r30, r4
    d420:	60 83       	st	Z, r22
    d422:	71 83       	std	Z+1, r23	; 0x01
    d424:	82 83       	std	Z+2, r24	; 0x02
    d426:	93 83       	std	Z+3, r25	; 0x03
    d428:	c8 01       	movw	r24, r16
    d42a:	b7 01       	movw	r22, r14
    d42c:	20 e0       	ldi	r18, 0x00	; 0
    d42e:	30 e0       	ldi	r19, 0x00	; 0
    d430:	a9 01       	movw	r20, r18
    d432:	0f 2e       	mov	r0, r31
    d434:	f0 e0       	ldi	r31, 0x00	; 0
    d436:	ef 2e       	mov	r14, r31
    d438:	f0 e0       	ldi	r31, 0x00	; 0
    d43a:	ff 2e       	mov	r15, r31
    d43c:	f4 e3       	ldi	r31, 0x34	; 52
    d43e:	0f 2f       	mov	r16, r31
    d440:	f3 e4       	ldi	r31, 0x43	; 67
    d442:	1f 2f       	mov	r17, r31
    d444:	f0 2d       	mov	r31, r0
    d446:	0e 94 a0 08 	call	0x1140	; 0x1140 <_Z3mapddddd>
    d44a:	0f 90       	pop	r0
    d44c:	0f 90       	pop	r0
    d44e:	0f 90       	pop	r0
    d450:	0f 90       	pop	r0
        OCR3A=ICR3-vAl;
    d452:	c0 91 96 00 	lds	r28, 0x0096
    d456:	d0 91 97 00 	lds	r29, 0x0097
      case 12:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
        OCR1B=ICR1-vAl;
        break;
      case 5:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    d45a:	0e 94 bb 79 	call	0xf376	; 0xf376 <__fixsfsi>
        OCR3A=ICR3-vAl;
    d45e:	c6 1b       	sub	r28, r22
    d460:	d7 0b       	sbc	r29, r23
    d462:	d0 93 99 00 	sts	0x0099, r29
    d466:	c0 93 98 00 	sts	0x0098, r28
    d46a:	97 c2       	rjmp	.+1326   	; 0xd99a <_Z6angle7i+0x86c>
        break;
      case 2:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    d46c:	e6 e8       	ldi	r30, 0x86	; 134
    d46e:	f0 e0       	ldi	r31, 0x00	; 0
    d470:	a0 80       	ld	r10, Z
    d472:	b1 80       	ldd	r11, Z+1	; 0x01
    d474:	80 80       	ld	r8, Z
    d476:	91 80       	ldd	r9, Z+1	; 0x01
    d478:	00 d0       	rcall	.+0      	; 0xd47a <_Z6angle7i+0x34c>
    d47a:	0f 92       	push	r0
    d47c:	4d b6       	in	r4, 0x3d	; 61
    d47e:	5e b6       	in	r5, 0x3e	; 62
    d480:	08 94       	sec
    d482:	41 1c       	adc	r4, r1
    d484:	51 1c       	adc	r5, r1
    d486:	be 01       	movw	r22, r28
    d488:	88 27       	eor	r24, r24
    d48a:	77 fd       	sbrc	r23, 7
    d48c:	80 95       	com	r24
    d48e:	98 2f       	mov	r25, r24
    d490:	0e 94 ee 79 	call	0xf3dc	; 0xf3dc <__floatsisf>
    d494:	7b 01       	movw	r14, r22
    d496:	8c 01       	movw	r16, r24
    d498:	c5 01       	movw	r24, r10
    d49a:	68 e2       	ldi	r22, 0x28	; 40
    d49c:	70 e0       	ldi	r23, 0x00	; 0
    d49e:	0e 94 05 7b 	call	0xf60a	; 0xf60a <__udivmodhi4>
    d4a2:	80 e0       	ldi	r24, 0x00	; 0
    d4a4:	90 e0       	ldi	r25, 0x00	; 0
    d4a6:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    d4aa:	5b 01       	movw	r10, r22
    d4ac:	6c 01       	movw	r12, r24
    d4ae:	96 94       	lsr	r9
    d4b0:	87 94       	ror	r8
    d4b2:	96 94       	lsr	r9
    d4b4:	87 94       	ror	r8
    d4b6:	96 94       	lsr	r9
    d4b8:	87 94       	ror	r8
    d4ba:	b4 01       	movw	r22, r8
    d4bc:	80 e0       	ldi	r24, 0x00	; 0
    d4be:	90 e0       	ldi	r25, 0x00	; 0
    d4c0:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    d4c4:	f2 01       	movw	r30, r4
    d4c6:	60 83       	st	Z, r22
    d4c8:	71 83       	std	Z+1, r23	; 0x01
    d4ca:	82 83       	std	Z+2, r24	; 0x02
    d4cc:	93 83       	std	Z+3, r25	; 0x03
    d4ce:	c8 01       	movw	r24, r16
    d4d0:	b7 01       	movw	r22, r14
    d4d2:	20 e0       	ldi	r18, 0x00	; 0
    d4d4:	30 e0       	ldi	r19, 0x00	; 0
    d4d6:	a9 01       	movw	r20, r18
    d4d8:	0f 2e       	mov	r0, r31
    d4da:	f0 e0       	ldi	r31, 0x00	; 0
    d4dc:	ef 2e       	mov	r14, r31
    d4de:	f0 e0       	ldi	r31, 0x00	; 0
    d4e0:	ff 2e       	mov	r15, r31
    d4e2:	f4 e3       	ldi	r31, 0x34	; 52
    d4e4:	0f 2f       	mov	r16, r31
    d4e6:	f3 e4       	ldi	r31, 0x43	; 67
    d4e8:	1f 2f       	mov	r17, r31
    d4ea:	f0 2d       	mov	r31, r0
    d4ec:	0e 94 a0 08 	call	0x1140	; 0x1140 <_Z3mapddddd>
    d4f0:	0f 90       	pop	r0
    d4f2:	0f 90       	pop	r0
    d4f4:	0f 90       	pop	r0
    d4f6:	0f 90       	pop	r0
        OCR3B=ICR3-vAl;
    d4f8:	c0 91 96 00 	lds	r28, 0x0096
    d4fc:	d0 91 97 00 	lds	r29, 0x0097
      case 5:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
        OCR3A=ICR3-vAl;
        break;
      case 2:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    d500:	0e 94 bb 79 	call	0xf376	; 0xf376 <__fixsfsi>
        OCR3B=ICR3-vAl;
    d504:	c6 1b       	sub	r28, r22
    d506:	d7 0b       	sbc	r29, r23
    d508:	d0 93 9b 00 	sts	0x009B, r29
    d50c:	c0 93 9a 00 	sts	0x009A, r28
    d510:	44 c2       	rjmp	.+1160   	; 0xd99a <_Z6angle7i+0x86c>
        break;
      case 3:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    d512:	e6 e8       	ldi	r30, 0x86	; 134
    d514:	f0 e0       	ldi	r31, 0x00	; 0
    d516:	a0 80       	ld	r10, Z
    d518:	b1 80       	ldd	r11, Z+1	; 0x01
    d51a:	80 80       	ld	r8, Z
    d51c:	91 80       	ldd	r9, Z+1	; 0x01
    d51e:	00 d0       	rcall	.+0      	; 0xd520 <_Z6angle7i+0x3f2>
    d520:	0f 92       	push	r0
    d522:	4d b6       	in	r4, 0x3d	; 61
    d524:	5e b6       	in	r5, 0x3e	; 62
    d526:	08 94       	sec
    d528:	41 1c       	adc	r4, r1
    d52a:	51 1c       	adc	r5, r1
    d52c:	be 01       	movw	r22, r28
    d52e:	88 27       	eor	r24, r24
    d530:	77 fd       	sbrc	r23, 7
    d532:	80 95       	com	r24
    d534:	98 2f       	mov	r25, r24
    d536:	0e 94 ee 79 	call	0xf3dc	; 0xf3dc <__floatsisf>
    d53a:	7b 01       	movw	r14, r22
    d53c:	8c 01       	movw	r16, r24
    d53e:	c5 01       	movw	r24, r10
    d540:	68 e2       	ldi	r22, 0x28	; 40
    d542:	70 e0       	ldi	r23, 0x00	; 0
    d544:	0e 94 05 7b 	call	0xf60a	; 0xf60a <__udivmodhi4>
    d548:	80 e0       	ldi	r24, 0x00	; 0
    d54a:	90 e0       	ldi	r25, 0x00	; 0
    d54c:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    d550:	5b 01       	movw	r10, r22
    d552:	6c 01       	movw	r12, r24
    d554:	96 94       	lsr	r9
    d556:	87 94       	ror	r8
    d558:	96 94       	lsr	r9
    d55a:	87 94       	ror	r8
    d55c:	96 94       	lsr	r9
    d55e:	87 94       	ror	r8
    d560:	b4 01       	movw	r22, r8
    d562:	80 e0       	ldi	r24, 0x00	; 0
    d564:	90 e0       	ldi	r25, 0x00	; 0
    d566:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    d56a:	f2 01       	movw	r30, r4
    d56c:	60 83       	st	Z, r22
    d56e:	71 83       	std	Z+1, r23	; 0x01
    d570:	82 83       	std	Z+2, r24	; 0x02
    d572:	93 83       	std	Z+3, r25	; 0x03
    d574:	c8 01       	movw	r24, r16
    d576:	b7 01       	movw	r22, r14
    d578:	20 e0       	ldi	r18, 0x00	; 0
    d57a:	30 e0       	ldi	r19, 0x00	; 0
    d57c:	a9 01       	movw	r20, r18
    d57e:	0f 2e       	mov	r0, r31
    d580:	f0 e0       	ldi	r31, 0x00	; 0
    d582:	ef 2e       	mov	r14, r31
    d584:	f0 e0       	ldi	r31, 0x00	; 0
    d586:	ff 2e       	mov	r15, r31
    d588:	f4 e3       	ldi	r31, 0x34	; 52
    d58a:	0f 2f       	mov	r16, r31
    d58c:	f3 e4       	ldi	r31, 0x43	; 67
    d58e:	1f 2f       	mov	r17, r31
    d590:	f0 2d       	mov	r31, r0
    d592:	0e 94 a0 08 	call	0x1140	; 0x1140 <_Z3mapddddd>
    d596:	0f 90       	pop	r0
    d598:	0f 90       	pop	r0
    d59a:	0f 90       	pop	r0
    d59c:	0f 90       	pop	r0
        OCR3C=ICR3-vAl;
    d59e:	c0 91 96 00 	lds	r28, 0x0096
    d5a2:	d0 91 97 00 	lds	r29, 0x0097
      case 2:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
        OCR3B=ICR3-vAl;
        break;
      case 3:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    d5a6:	0e 94 bb 79 	call	0xf376	; 0xf376 <__fixsfsi>
        OCR3C=ICR3-vAl;
    d5aa:	c6 1b       	sub	r28, r22
    d5ac:	d7 0b       	sbc	r29, r23
    d5ae:	d0 93 9d 00 	sts	0x009D, r29
    d5b2:	c0 93 9c 00 	sts	0x009C, r28
    d5b6:	f1 c1       	rjmp	.+994    	; 0xd99a <_Z6angle7i+0x86c>
        break;
      case 6:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    d5b8:	e6 e8       	ldi	r30, 0x86	; 134
    d5ba:	f0 e0       	ldi	r31, 0x00	; 0
    d5bc:	a0 80       	ld	r10, Z
    d5be:	b1 80       	ldd	r11, Z+1	; 0x01
    d5c0:	80 80       	ld	r8, Z
    d5c2:	91 80       	ldd	r9, Z+1	; 0x01
    d5c4:	00 d0       	rcall	.+0      	; 0xd5c6 <_Z6angle7i+0x498>
    d5c6:	0f 92       	push	r0
    d5c8:	4d b6       	in	r4, 0x3d	; 61
    d5ca:	5e b6       	in	r5, 0x3e	; 62
    d5cc:	08 94       	sec
    d5ce:	41 1c       	adc	r4, r1
    d5d0:	51 1c       	adc	r5, r1
    d5d2:	be 01       	movw	r22, r28
    d5d4:	88 27       	eor	r24, r24
    d5d6:	77 fd       	sbrc	r23, 7
    d5d8:	80 95       	com	r24
    d5da:	98 2f       	mov	r25, r24
    d5dc:	0e 94 ee 79 	call	0xf3dc	; 0xf3dc <__floatsisf>
    d5e0:	7b 01       	movw	r14, r22
    d5e2:	8c 01       	movw	r16, r24
    d5e4:	c5 01       	movw	r24, r10
    d5e6:	68 e2       	ldi	r22, 0x28	; 40
    d5e8:	70 e0       	ldi	r23, 0x00	; 0
    d5ea:	0e 94 05 7b 	call	0xf60a	; 0xf60a <__udivmodhi4>
    d5ee:	80 e0       	ldi	r24, 0x00	; 0
    d5f0:	90 e0       	ldi	r25, 0x00	; 0
    d5f2:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    d5f6:	5b 01       	movw	r10, r22
    d5f8:	6c 01       	movw	r12, r24
    d5fa:	96 94       	lsr	r9
    d5fc:	87 94       	ror	r8
    d5fe:	96 94       	lsr	r9
    d600:	87 94       	ror	r8
    d602:	96 94       	lsr	r9
    d604:	87 94       	ror	r8
    d606:	b4 01       	movw	r22, r8
    d608:	80 e0       	ldi	r24, 0x00	; 0
    d60a:	90 e0       	ldi	r25, 0x00	; 0
    d60c:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    d610:	f2 01       	movw	r30, r4
    d612:	60 83       	st	Z, r22
    d614:	71 83       	std	Z+1, r23	; 0x01
    d616:	82 83       	std	Z+2, r24	; 0x02
    d618:	93 83       	std	Z+3, r25	; 0x03
    d61a:	c8 01       	movw	r24, r16
    d61c:	b7 01       	movw	r22, r14
    d61e:	20 e0       	ldi	r18, 0x00	; 0
    d620:	30 e0       	ldi	r19, 0x00	; 0
    d622:	a9 01       	movw	r20, r18
    d624:	0f 2e       	mov	r0, r31
    d626:	f0 e0       	ldi	r31, 0x00	; 0
    d628:	ef 2e       	mov	r14, r31
    d62a:	f0 e0       	ldi	r31, 0x00	; 0
    d62c:	ff 2e       	mov	r15, r31
    d62e:	f4 e3       	ldi	r31, 0x34	; 52
    d630:	0f 2f       	mov	r16, r31
    d632:	f3 e4       	ldi	r31, 0x43	; 67
    d634:	1f 2f       	mov	r17, r31
    d636:	f0 2d       	mov	r31, r0
    d638:	0e 94 a0 08 	call	0x1140	; 0x1140 <_Z3mapddddd>
    d63c:	0f 90       	pop	r0
    d63e:	0f 90       	pop	r0
    d640:	0f 90       	pop	r0
    d642:	0f 90       	pop	r0
        OCR4A=ICR4-vAl;
    d644:	c0 91 a6 00 	lds	r28, 0x00A6
    d648:	d0 91 a7 00 	lds	r29, 0x00A7
      case 3:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
        OCR3C=ICR3-vAl;
        break;
      case 6:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    d64c:	0e 94 bb 79 	call	0xf376	; 0xf376 <__fixsfsi>
        OCR4A=ICR4-vAl;
    d650:	c6 1b       	sub	r28, r22
    d652:	d7 0b       	sbc	r29, r23
    d654:	d0 93 a9 00 	sts	0x00A9, r29
    d658:	c0 93 a8 00 	sts	0x00A8, r28
    d65c:	9e c1       	rjmp	.+828    	; 0xd99a <_Z6angle7i+0x86c>
        break;
      case 7:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    d65e:	e6 e8       	ldi	r30, 0x86	; 134
    d660:	f0 e0       	ldi	r31, 0x00	; 0
    d662:	a0 80       	ld	r10, Z
    d664:	b1 80       	ldd	r11, Z+1	; 0x01
    d666:	80 80       	ld	r8, Z
    d668:	91 80       	ldd	r9, Z+1	; 0x01
    d66a:	00 d0       	rcall	.+0      	; 0xd66c <_Z6angle7i+0x53e>
    d66c:	0f 92       	push	r0
    d66e:	4d b6       	in	r4, 0x3d	; 61
    d670:	5e b6       	in	r5, 0x3e	; 62
    d672:	08 94       	sec
    d674:	41 1c       	adc	r4, r1
    d676:	51 1c       	adc	r5, r1
    d678:	be 01       	movw	r22, r28
    d67a:	88 27       	eor	r24, r24
    d67c:	77 fd       	sbrc	r23, 7
    d67e:	80 95       	com	r24
    d680:	98 2f       	mov	r25, r24
    d682:	0e 94 ee 79 	call	0xf3dc	; 0xf3dc <__floatsisf>
    d686:	7b 01       	movw	r14, r22
    d688:	8c 01       	movw	r16, r24
    d68a:	c5 01       	movw	r24, r10
    d68c:	68 e2       	ldi	r22, 0x28	; 40
    d68e:	70 e0       	ldi	r23, 0x00	; 0
    d690:	0e 94 05 7b 	call	0xf60a	; 0xf60a <__udivmodhi4>
    d694:	80 e0       	ldi	r24, 0x00	; 0
    d696:	90 e0       	ldi	r25, 0x00	; 0
    d698:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    d69c:	5b 01       	movw	r10, r22
    d69e:	6c 01       	movw	r12, r24
    d6a0:	96 94       	lsr	r9
    d6a2:	87 94       	ror	r8
    d6a4:	96 94       	lsr	r9
    d6a6:	87 94       	ror	r8
    d6a8:	96 94       	lsr	r9
    d6aa:	87 94       	ror	r8
    d6ac:	b4 01       	movw	r22, r8
    d6ae:	80 e0       	ldi	r24, 0x00	; 0
    d6b0:	90 e0       	ldi	r25, 0x00	; 0
    d6b2:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    d6b6:	f2 01       	movw	r30, r4
    d6b8:	60 83       	st	Z, r22
    d6ba:	71 83       	std	Z+1, r23	; 0x01
    d6bc:	82 83       	std	Z+2, r24	; 0x02
    d6be:	93 83       	std	Z+3, r25	; 0x03
    d6c0:	c8 01       	movw	r24, r16
    d6c2:	b7 01       	movw	r22, r14
    d6c4:	20 e0       	ldi	r18, 0x00	; 0
    d6c6:	30 e0       	ldi	r19, 0x00	; 0
    d6c8:	a9 01       	movw	r20, r18
    d6ca:	0f 2e       	mov	r0, r31
    d6cc:	f0 e0       	ldi	r31, 0x00	; 0
    d6ce:	ef 2e       	mov	r14, r31
    d6d0:	f0 e0       	ldi	r31, 0x00	; 0
    d6d2:	ff 2e       	mov	r15, r31
    d6d4:	f4 e3       	ldi	r31, 0x34	; 52
    d6d6:	0f 2f       	mov	r16, r31
    d6d8:	f3 e4       	ldi	r31, 0x43	; 67
    d6da:	1f 2f       	mov	r17, r31
    d6dc:	f0 2d       	mov	r31, r0
    d6de:	0e 94 a0 08 	call	0x1140	; 0x1140 <_Z3mapddddd>
    d6e2:	0f 90       	pop	r0
    d6e4:	0f 90       	pop	r0
    d6e6:	0f 90       	pop	r0
    d6e8:	0f 90       	pop	r0
        OCR4B=ICR4-vAl;
    d6ea:	c0 91 a6 00 	lds	r28, 0x00A6
    d6ee:	d0 91 a7 00 	lds	r29, 0x00A7
      case 6:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
        OCR4A=ICR4-vAl;
        break;
      case 7:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    d6f2:	0e 94 bb 79 	call	0xf376	; 0xf376 <__fixsfsi>
        OCR4B=ICR4-vAl;
    d6f6:	c6 1b       	sub	r28, r22
    d6f8:	d7 0b       	sbc	r29, r23
    d6fa:	d0 93 ab 00 	sts	0x00AB, r29
    d6fe:	c0 93 aa 00 	sts	0x00AA, r28
    d702:	4b c1       	rjmp	.+662    	; 0xd99a <_Z6angle7i+0x86c>
        break; 
      case 8:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    d704:	e6 e8       	ldi	r30, 0x86	; 134
    d706:	f0 e0       	ldi	r31, 0x00	; 0
    d708:	a0 80       	ld	r10, Z
    d70a:	b1 80       	ldd	r11, Z+1	; 0x01
    d70c:	80 80       	ld	r8, Z
    d70e:	91 80       	ldd	r9, Z+1	; 0x01
    d710:	00 d0       	rcall	.+0      	; 0xd712 <_Z6angle7i+0x5e4>
    d712:	0f 92       	push	r0
    d714:	4d b6       	in	r4, 0x3d	; 61
    d716:	5e b6       	in	r5, 0x3e	; 62
    d718:	08 94       	sec
    d71a:	41 1c       	adc	r4, r1
    d71c:	51 1c       	adc	r5, r1
    d71e:	be 01       	movw	r22, r28
    d720:	88 27       	eor	r24, r24
    d722:	77 fd       	sbrc	r23, 7
    d724:	80 95       	com	r24
    d726:	98 2f       	mov	r25, r24
    d728:	0e 94 ee 79 	call	0xf3dc	; 0xf3dc <__floatsisf>
    d72c:	7b 01       	movw	r14, r22
    d72e:	8c 01       	movw	r16, r24
    d730:	c5 01       	movw	r24, r10
    d732:	68 e2       	ldi	r22, 0x28	; 40
    d734:	70 e0       	ldi	r23, 0x00	; 0
    d736:	0e 94 05 7b 	call	0xf60a	; 0xf60a <__udivmodhi4>
    d73a:	80 e0       	ldi	r24, 0x00	; 0
    d73c:	90 e0       	ldi	r25, 0x00	; 0
    d73e:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    d742:	5b 01       	movw	r10, r22
    d744:	6c 01       	movw	r12, r24
    d746:	96 94       	lsr	r9
    d748:	87 94       	ror	r8
    d74a:	96 94       	lsr	r9
    d74c:	87 94       	ror	r8
    d74e:	96 94       	lsr	r9
    d750:	87 94       	ror	r8
    d752:	b4 01       	movw	r22, r8
    d754:	80 e0       	ldi	r24, 0x00	; 0
    d756:	90 e0       	ldi	r25, 0x00	; 0
    d758:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    d75c:	f2 01       	movw	r30, r4
    d75e:	60 83       	st	Z, r22
    d760:	71 83       	std	Z+1, r23	; 0x01
    d762:	82 83       	std	Z+2, r24	; 0x02
    d764:	93 83       	std	Z+3, r25	; 0x03
    d766:	c8 01       	movw	r24, r16
    d768:	b7 01       	movw	r22, r14
    d76a:	20 e0       	ldi	r18, 0x00	; 0
    d76c:	30 e0       	ldi	r19, 0x00	; 0
    d76e:	a9 01       	movw	r20, r18
    d770:	0f 2e       	mov	r0, r31
    d772:	f0 e0       	ldi	r31, 0x00	; 0
    d774:	ef 2e       	mov	r14, r31
    d776:	f0 e0       	ldi	r31, 0x00	; 0
    d778:	ff 2e       	mov	r15, r31
    d77a:	f4 e3       	ldi	r31, 0x34	; 52
    d77c:	0f 2f       	mov	r16, r31
    d77e:	f3 e4       	ldi	r31, 0x43	; 67
    d780:	1f 2f       	mov	r17, r31
    d782:	f0 2d       	mov	r31, r0
    d784:	0e 94 a0 08 	call	0x1140	; 0x1140 <_Z3mapddddd>
    d788:	0f 90       	pop	r0
    d78a:	0f 90       	pop	r0
    d78c:	0f 90       	pop	r0
    d78e:	0f 90       	pop	r0
        OCR4C=ICR4-vAl;
    d790:	c0 91 a6 00 	lds	r28, 0x00A6
    d794:	d0 91 a7 00 	lds	r29, 0x00A7
      case 7:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
        OCR4B=ICR4-vAl;
        break; 
      case 8:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    d798:	0e 94 bb 79 	call	0xf376	; 0xf376 <__fixsfsi>
        OCR4C=ICR4-vAl;
    d79c:	c6 1b       	sub	r28, r22
    d79e:	d7 0b       	sbc	r29, r23
    d7a0:	d0 93 ad 00 	sts	0x00AD, r29
    d7a4:	c0 93 ac 00 	sts	0x00AC, r28
    d7a8:	f8 c0       	rjmp	.+496    	; 0xd99a <_Z6angle7i+0x86c>
        break;
      case 46:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    d7aa:	e6 e8       	ldi	r30, 0x86	; 134
    d7ac:	f0 e0       	ldi	r31, 0x00	; 0
    d7ae:	a0 80       	ld	r10, Z
    d7b0:	b1 80       	ldd	r11, Z+1	; 0x01
    d7b2:	80 80       	ld	r8, Z
    d7b4:	91 80       	ldd	r9, Z+1	; 0x01
    d7b6:	00 d0       	rcall	.+0      	; 0xd7b8 <_Z6angle7i+0x68a>
    d7b8:	0f 92       	push	r0
    d7ba:	4d b6       	in	r4, 0x3d	; 61
    d7bc:	5e b6       	in	r5, 0x3e	; 62
    d7be:	08 94       	sec
    d7c0:	41 1c       	adc	r4, r1
    d7c2:	51 1c       	adc	r5, r1
    d7c4:	be 01       	movw	r22, r28
    d7c6:	88 27       	eor	r24, r24
    d7c8:	77 fd       	sbrc	r23, 7
    d7ca:	80 95       	com	r24
    d7cc:	98 2f       	mov	r25, r24
    d7ce:	0e 94 ee 79 	call	0xf3dc	; 0xf3dc <__floatsisf>
    d7d2:	7b 01       	movw	r14, r22
    d7d4:	8c 01       	movw	r16, r24
    d7d6:	c5 01       	movw	r24, r10
    d7d8:	68 e2       	ldi	r22, 0x28	; 40
    d7da:	70 e0       	ldi	r23, 0x00	; 0
    d7dc:	0e 94 05 7b 	call	0xf60a	; 0xf60a <__udivmodhi4>
    d7e0:	80 e0       	ldi	r24, 0x00	; 0
    d7e2:	90 e0       	ldi	r25, 0x00	; 0
    d7e4:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    d7e8:	5b 01       	movw	r10, r22
    d7ea:	6c 01       	movw	r12, r24
    d7ec:	96 94       	lsr	r9
    d7ee:	87 94       	ror	r8
    d7f0:	96 94       	lsr	r9
    d7f2:	87 94       	ror	r8
    d7f4:	96 94       	lsr	r9
    d7f6:	87 94       	ror	r8
    d7f8:	b4 01       	movw	r22, r8
    d7fa:	80 e0       	ldi	r24, 0x00	; 0
    d7fc:	90 e0       	ldi	r25, 0x00	; 0
    d7fe:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    d802:	f2 01       	movw	r30, r4
    d804:	60 83       	st	Z, r22
    d806:	71 83       	std	Z+1, r23	; 0x01
    d808:	82 83       	std	Z+2, r24	; 0x02
    d80a:	93 83       	std	Z+3, r25	; 0x03
    d80c:	c8 01       	movw	r24, r16
    d80e:	b7 01       	movw	r22, r14
    d810:	20 e0       	ldi	r18, 0x00	; 0
    d812:	30 e0       	ldi	r19, 0x00	; 0
    d814:	a9 01       	movw	r20, r18
    d816:	0f 2e       	mov	r0, r31
    d818:	f0 e0       	ldi	r31, 0x00	; 0
    d81a:	ef 2e       	mov	r14, r31
    d81c:	f0 e0       	ldi	r31, 0x00	; 0
    d81e:	ff 2e       	mov	r15, r31
    d820:	f4 e3       	ldi	r31, 0x34	; 52
    d822:	0f 2f       	mov	r16, r31
    d824:	f3 e4       	ldi	r31, 0x43	; 67
    d826:	1f 2f       	mov	r17, r31
    d828:	f0 2d       	mov	r31, r0
    d82a:	0e 94 a0 08 	call	0x1140	; 0x1140 <_Z3mapddddd>
    d82e:	0f 90       	pop	r0
    d830:	0f 90       	pop	r0
    d832:	0f 90       	pop	r0
    d834:	0f 90       	pop	r0
        OCR5A=ICR5-vAl;
    d836:	c0 91 26 01 	lds	r28, 0x0126
    d83a:	d0 91 27 01 	lds	r29, 0x0127
      case 8:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
        OCR4C=ICR4-vAl;
        break;
      case 46:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    d83e:	0e 94 bb 79 	call	0xf376	; 0xf376 <__fixsfsi>
        OCR5A=ICR5-vAl;
    d842:	c6 1b       	sub	r28, r22
    d844:	d7 0b       	sbc	r29, r23
    d846:	d0 93 29 01 	sts	0x0129, r29
    d84a:	c0 93 28 01 	sts	0x0128, r28
    d84e:	a5 c0       	rjmp	.+330    	; 0xd99a <_Z6angle7i+0x86c>
        break;
      case 45:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    d850:	e6 e8       	ldi	r30, 0x86	; 134
    d852:	f0 e0       	ldi	r31, 0x00	; 0
    d854:	a0 80       	ld	r10, Z
    d856:	b1 80       	ldd	r11, Z+1	; 0x01
    d858:	80 80       	ld	r8, Z
    d85a:	91 80       	ldd	r9, Z+1	; 0x01
    d85c:	00 d0       	rcall	.+0      	; 0xd85e <_Z6angle7i+0x730>
    d85e:	0f 92       	push	r0
    d860:	4d b6       	in	r4, 0x3d	; 61
    d862:	5e b6       	in	r5, 0x3e	; 62
    d864:	08 94       	sec
    d866:	41 1c       	adc	r4, r1
    d868:	51 1c       	adc	r5, r1
    d86a:	be 01       	movw	r22, r28
    d86c:	88 27       	eor	r24, r24
    d86e:	77 fd       	sbrc	r23, 7
    d870:	80 95       	com	r24
    d872:	98 2f       	mov	r25, r24
    d874:	0e 94 ee 79 	call	0xf3dc	; 0xf3dc <__floatsisf>
    d878:	7b 01       	movw	r14, r22
    d87a:	8c 01       	movw	r16, r24
    d87c:	c5 01       	movw	r24, r10
    d87e:	68 e2       	ldi	r22, 0x28	; 40
    d880:	70 e0       	ldi	r23, 0x00	; 0
    d882:	0e 94 05 7b 	call	0xf60a	; 0xf60a <__udivmodhi4>
    d886:	80 e0       	ldi	r24, 0x00	; 0
    d888:	90 e0       	ldi	r25, 0x00	; 0
    d88a:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    d88e:	5b 01       	movw	r10, r22
    d890:	6c 01       	movw	r12, r24
    d892:	96 94       	lsr	r9
    d894:	87 94       	ror	r8
    d896:	96 94       	lsr	r9
    d898:	87 94       	ror	r8
    d89a:	96 94       	lsr	r9
    d89c:	87 94       	ror	r8
    d89e:	b4 01       	movw	r22, r8
    d8a0:	80 e0       	ldi	r24, 0x00	; 0
    d8a2:	90 e0       	ldi	r25, 0x00	; 0
    d8a4:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    d8a8:	f2 01       	movw	r30, r4
    d8aa:	60 83       	st	Z, r22
    d8ac:	71 83       	std	Z+1, r23	; 0x01
    d8ae:	82 83       	std	Z+2, r24	; 0x02
    d8b0:	93 83       	std	Z+3, r25	; 0x03
    d8b2:	c8 01       	movw	r24, r16
    d8b4:	b7 01       	movw	r22, r14
    d8b6:	20 e0       	ldi	r18, 0x00	; 0
    d8b8:	30 e0       	ldi	r19, 0x00	; 0
    d8ba:	a9 01       	movw	r20, r18
    d8bc:	0f 2e       	mov	r0, r31
    d8be:	f0 e0       	ldi	r31, 0x00	; 0
    d8c0:	ef 2e       	mov	r14, r31
    d8c2:	f0 e0       	ldi	r31, 0x00	; 0
    d8c4:	ff 2e       	mov	r15, r31
    d8c6:	f4 e3       	ldi	r31, 0x34	; 52
    d8c8:	0f 2f       	mov	r16, r31
    d8ca:	f3 e4       	ldi	r31, 0x43	; 67
    d8cc:	1f 2f       	mov	r17, r31
    d8ce:	f0 2d       	mov	r31, r0
    d8d0:	0e 94 a0 08 	call	0x1140	; 0x1140 <_Z3mapddddd>
    d8d4:	0f 90       	pop	r0
    d8d6:	0f 90       	pop	r0
    d8d8:	0f 90       	pop	r0
    d8da:	0f 90       	pop	r0
        OCR5B=ICR5-vAl;
    d8dc:	c0 91 26 01 	lds	r28, 0x0126
    d8e0:	d0 91 27 01 	lds	r29, 0x0127
      case 46:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
        OCR5A=ICR5-vAl;
        break;
      case 45:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    d8e4:	0e 94 bb 79 	call	0xf376	; 0xf376 <__fixsfsi>
        OCR5B=ICR5-vAl;
    d8e8:	c6 1b       	sub	r28, r22
    d8ea:	d7 0b       	sbc	r29, r23
    d8ec:	d0 93 2b 01 	sts	0x012B, r29
    d8f0:	c0 93 2a 01 	sts	0x012A, r28
    d8f4:	52 c0       	rjmp	.+164    	; 0xd99a <_Z6angle7i+0x86c>
        break;
      case 44:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    d8f6:	e6 e8       	ldi	r30, 0x86	; 134
    d8f8:	f0 e0       	ldi	r31, 0x00	; 0
    d8fa:	a0 80       	ld	r10, Z
    d8fc:	b1 80       	ldd	r11, Z+1	; 0x01
    d8fe:	80 80       	ld	r8, Z
    d900:	91 80       	ldd	r9, Z+1	; 0x01
    d902:	00 d0       	rcall	.+0      	; 0xd904 <_Z6angle7i+0x7d6>
    d904:	0f 92       	push	r0
    d906:	4d b6       	in	r4, 0x3d	; 61
    d908:	5e b6       	in	r5, 0x3e	; 62
    d90a:	08 94       	sec
    d90c:	41 1c       	adc	r4, r1
    d90e:	51 1c       	adc	r5, r1
    d910:	be 01       	movw	r22, r28
    d912:	88 27       	eor	r24, r24
    d914:	77 fd       	sbrc	r23, 7
    d916:	80 95       	com	r24
    d918:	98 2f       	mov	r25, r24
    d91a:	0e 94 ee 79 	call	0xf3dc	; 0xf3dc <__floatsisf>
    d91e:	7b 01       	movw	r14, r22
    d920:	8c 01       	movw	r16, r24
    d922:	c5 01       	movw	r24, r10
    d924:	68 e2       	ldi	r22, 0x28	; 40
    d926:	70 e0       	ldi	r23, 0x00	; 0
    d928:	0e 94 05 7b 	call	0xf60a	; 0xf60a <__udivmodhi4>
    d92c:	80 e0       	ldi	r24, 0x00	; 0
    d92e:	90 e0       	ldi	r25, 0x00	; 0
    d930:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    d934:	5b 01       	movw	r10, r22
    d936:	6c 01       	movw	r12, r24
    d938:	96 94       	lsr	r9
    d93a:	87 94       	ror	r8
    d93c:	96 94       	lsr	r9
    d93e:	87 94       	ror	r8
    d940:	96 94       	lsr	r9
    d942:	87 94       	ror	r8
    d944:	b4 01       	movw	r22, r8
    d946:	80 e0       	ldi	r24, 0x00	; 0
    d948:	90 e0       	ldi	r25, 0x00	; 0
    d94a:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    d94e:	f2 01       	movw	r30, r4
    d950:	60 83       	st	Z, r22
    d952:	71 83       	std	Z+1, r23	; 0x01
    d954:	82 83       	std	Z+2, r24	; 0x02
    d956:	93 83       	std	Z+3, r25	; 0x03
    d958:	c8 01       	movw	r24, r16
    d95a:	b7 01       	movw	r22, r14
    d95c:	20 e0       	ldi	r18, 0x00	; 0
    d95e:	30 e0       	ldi	r19, 0x00	; 0
    d960:	a9 01       	movw	r20, r18
    d962:	0f 2e       	mov	r0, r31
    d964:	f0 e0       	ldi	r31, 0x00	; 0
    d966:	ef 2e       	mov	r14, r31
    d968:	f0 e0       	ldi	r31, 0x00	; 0
    d96a:	ff 2e       	mov	r15, r31
    d96c:	f4 e3       	ldi	r31, 0x34	; 52
    d96e:	0f 2f       	mov	r16, r31
    d970:	f3 e4       	ldi	r31, 0x43	; 67
    d972:	1f 2f       	mov	r17, r31
    d974:	f0 2d       	mov	r31, r0
    d976:	0e 94 a0 08 	call	0x1140	; 0x1140 <_Z3mapddddd>
    d97a:	0f 90       	pop	r0
    d97c:	0f 90       	pop	r0
    d97e:	0f 90       	pop	r0
    d980:	0f 90       	pop	r0
        OCR5C=ICR5-vAl;
    d982:	c0 91 26 01 	lds	r28, 0x0126
    d986:	d0 91 27 01 	lds	r29, 0x0127
      case 45:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
        OCR5B=ICR5-vAl;
        break;
      case 44:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    d98a:	0e 94 bb 79 	call	0xf376	; 0xf376 <__fixsfsi>
        OCR5C=ICR5-vAl;
    d98e:	c6 1b       	sub	r28, r22
    d990:	d7 0b       	sbc	r29, r23
    d992:	d0 93 2d 01 	sts	0x012D, r29
    d996:	c0 93 2c 01 	sts	0x012C, r28

		p.write(v);
		q.write(y);
    d99a:	60 91 cc 02 	lds	r22, 0x02CC
    d99e:	70 91 cd 02 	lds	r23, 0x02CD
     }
  }

  void write(int vAl)           //PIN=servo pin no. on mega,vAl=angle F_CPU for the servo at pin
  {
    switch(pIn)
    d9a2:	80 91 d5 02 	lds	r24, 0x02D5
    d9a6:	88 30       	cpi	r24, 0x08	; 8
    d9a8:	09 f4       	brne	.+2      	; 0xd9ac <_Z6angle7i+0x87e>
    d9aa:	63 c2       	rjmp	.+1222   	; 0xde72 <_Z6angle7i+0xd44>
    d9ac:	89 30       	cpi	r24, 0x09	; 9
    d9ae:	98 f4       	brcc	.+38     	; 0xd9d6 <_Z6angle7i+0x8a8>
    d9b0:	85 30       	cpi	r24, 0x05	; 5
    d9b2:	09 f4       	brne	.+2      	; 0xd9b6 <_Z6angle7i+0x888>
    d9b4:	c4 c0       	rjmp	.+392    	; 0xdb3e <_Z6angle7i+0xa10>
    d9b6:	86 30       	cpi	r24, 0x06	; 6
    d9b8:	38 f4       	brcc	.+14     	; 0xd9c8 <_Z6angle7i+0x89a>
    d9ba:	82 30       	cpi	r24, 0x02	; 2
    d9bc:	09 f4       	brne	.+2      	; 0xd9c0 <_Z6angle7i+0x892>
    d9be:	11 c1       	rjmp	.+546    	; 0xdbe2 <_Z6angle7i+0xab4>
    d9c0:	83 30       	cpi	r24, 0x03	; 3
    d9c2:	09 f0       	breq	.+2      	; 0xd9c6 <_Z6angle7i+0x898>
    d9c4:	9d c3       	rjmp	.+1850   	; 0xe100 <_Z6angle7i+0xfd2>
    d9c6:	5f c1       	rjmp	.+702    	; 0xdc86 <_Z6angle7i+0xb58>
    d9c8:	86 30       	cpi	r24, 0x06	; 6
    d9ca:	09 f4       	brne	.+2      	; 0xd9ce <_Z6angle7i+0x8a0>
    d9cc:	ae c1       	rjmp	.+860    	; 0xdd2a <_Z6angle7i+0xbfc>
    d9ce:	87 30       	cpi	r24, 0x07	; 7
    d9d0:	09 f0       	breq	.+2      	; 0xd9d4 <_Z6angle7i+0x8a6>
    d9d2:	96 c3       	rjmp	.+1836   	; 0xe100 <_Z6angle7i+0xfd2>
    d9d4:	fc c1       	rjmp	.+1016   	; 0xddce <_Z6angle7i+0xca0>
    d9d6:	8c 32       	cpi	r24, 0x2C	; 44
    d9d8:	09 f4       	brne	.+2      	; 0xd9dc <_Z6angle7i+0x8ae>
    d9da:	41 c3       	rjmp	.+1666   	; 0xe05e <_Z6angle7i+0xf30>
    d9dc:	8d 32       	cpi	r24, 0x2D	; 45
    d9de:	30 f4       	brcc	.+12     	; 0xd9ec <_Z6angle7i+0x8be>
    d9e0:	8b 30       	cpi	r24, 0x0B	; 11
    d9e2:	59 f0       	breq	.+22     	; 0xd9fa <_Z6angle7i+0x8cc>
    d9e4:	8c 30       	cpi	r24, 0x0C	; 12
    d9e6:	09 f0       	breq	.+2      	; 0xd9ea <_Z6angle7i+0x8bc>
    d9e8:	8b c3       	rjmp	.+1814   	; 0xe100 <_Z6angle7i+0xfd2>
    d9ea:	58 c0       	rjmp	.+176    	; 0xda9c <_Z6angle7i+0x96e>
    d9ec:	8d 32       	cpi	r24, 0x2D	; 45
    d9ee:	09 f4       	brne	.+2      	; 0xd9f2 <_Z6angle7i+0x8c4>
    d9f0:	e4 c2       	rjmp	.+1480   	; 0xdfba <_Z6angle7i+0xe8c>
    d9f2:	8e 32       	cpi	r24, 0x2E	; 46
    d9f4:	09 f0       	breq	.+2      	; 0xd9f8 <_Z6angle7i+0x8ca>
    d9f6:	84 c3       	rjmp	.+1800   	; 0xe100 <_Z6angle7i+0xfd2>
    d9f8:	8e c2       	rjmp	.+1308   	; 0xdf16 <_Z6angle7i+0xde8>
    {
     case 11:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    d9fa:	c6 e8       	ldi	r28, 0x86	; 134
    d9fc:	d0 e0       	ldi	r29, 0x00	; 0
    d9fe:	08 81       	ld	r16, Y
    da00:	19 81       	ldd	r17, Y+1	; 0x01
    da02:	e8 80       	ld	r14, Y
    da04:	f9 80       	ldd	r15, Y+1	; 0x01
    da06:	00 d0       	rcall	.+0      	; 0xda08 <_Z6angle7i+0x8da>
    da08:	0f 92       	push	r0
    da0a:	8d b6       	in	r8, 0x3d	; 61
    da0c:	9e b6       	in	r9, 0x3e	; 62
    da0e:	08 94       	sec
    da10:	81 1c       	adc	r8, r1
    da12:	91 1c       	adc	r9, r1
    da14:	88 27       	eor	r24, r24
    da16:	77 fd       	sbrc	r23, 7
    da18:	80 95       	com	r24
    da1a:	98 2f       	mov	r25, r24
    da1c:	0e 94 ee 79 	call	0xf3dc	; 0xf3dc <__floatsisf>
    da20:	2b 01       	movw	r4, r22
    da22:	3c 01       	movw	r6, r24
    da24:	c8 01       	movw	r24, r16
    da26:	68 e2       	ldi	r22, 0x28	; 40
    da28:	70 e0       	ldi	r23, 0x00	; 0
    da2a:	0e 94 05 7b 	call	0xf60a	; 0xf60a <__udivmodhi4>
    da2e:	80 e0       	ldi	r24, 0x00	; 0
    da30:	90 e0       	ldi	r25, 0x00	; 0
    da32:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    da36:	5b 01       	movw	r10, r22
    da38:	6c 01       	movw	r12, r24
    da3a:	f6 94       	lsr	r15
    da3c:	e7 94       	ror	r14
    da3e:	f6 94       	lsr	r15
    da40:	e7 94       	ror	r14
    da42:	f6 94       	lsr	r15
    da44:	e7 94       	ror	r14
    da46:	b7 01       	movw	r22, r14
    da48:	80 e0       	ldi	r24, 0x00	; 0
    da4a:	90 e0       	ldi	r25, 0x00	; 0
    da4c:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    da50:	f4 01       	movw	r30, r8
    da52:	60 83       	st	Z, r22
    da54:	71 83       	std	Z+1, r23	; 0x01
    da56:	82 83       	std	Z+2, r24	; 0x02
    da58:	93 83       	std	Z+3, r25	; 0x03
    da5a:	c3 01       	movw	r24, r6
    da5c:	b2 01       	movw	r22, r4
    da5e:	20 e0       	ldi	r18, 0x00	; 0
    da60:	30 e0       	ldi	r19, 0x00	; 0
    da62:	a9 01       	movw	r20, r18
    da64:	0f 2e       	mov	r0, r31
    da66:	f0 e0       	ldi	r31, 0x00	; 0
    da68:	ef 2e       	mov	r14, r31
    da6a:	f0 e0       	ldi	r31, 0x00	; 0
    da6c:	ff 2e       	mov	r15, r31
    da6e:	f4 e3       	ldi	r31, 0x34	; 52
    da70:	0f 2f       	mov	r16, r31
    da72:	f3 e4       	ldi	r31, 0x43	; 67
    da74:	1f 2f       	mov	r17, r31
    da76:	f0 2d       	mov	r31, r0
    da78:	0e 94 a0 08 	call	0x1140	; 0x1140 <_Z3mapddddd>
    da7c:	0f 90       	pop	r0
    da7e:	0f 90       	pop	r0
    da80:	0f 90       	pop	r0
    da82:	0f 90       	pop	r0
        OCR1A=ICR1-vAl;
    da84:	09 90       	ld	r0, Y+
    da86:	d8 81       	ld	r29, Y
    da88:	c0 2d       	mov	r28, r0
  void write(int vAl)           //PIN=servo pin no. on mega,vAl=angle F_CPU for the servo at pin
  {
    switch(pIn)
    {
     case 11:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    da8a:	0e 94 bb 79 	call	0xf376	; 0xf376 <__fixsfsi>
        OCR1A=ICR1-vAl;
    da8e:	c6 1b       	sub	r28, r22
    da90:	d7 0b       	sbc	r29, r23
    da92:	d0 93 89 00 	sts	0x0089, r29
    da96:	c0 93 88 00 	sts	0x0088, r28
    da9a:	32 c3       	rjmp	.+1636   	; 0xe100 <_Z6angle7i+0xfd2>
        break;
      case 12:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    da9c:	c6 e8       	ldi	r28, 0x86	; 134
    da9e:	d0 e0       	ldi	r29, 0x00	; 0
    daa0:	08 81       	ld	r16, Y
    daa2:	19 81       	ldd	r17, Y+1	; 0x01
    daa4:	e8 80       	ld	r14, Y
    daa6:	f9 80       	ldd	r15, Y+1	; 0x01
    daa8:	00 d0       	rcall	.+0      	; 0xdaaa <_Z6angle7i+0x97c>
    daaa:	0f 92       	push	r0
    daac:	8d b6       	in	r8, 0x3d	; 61
    daae:	9e b6       	in	r9, 0x3e	; 62
    dab0:	08 94       	sec
    dab2:	81 1c       	adc	r8, r1
    dab4:	91 1c       	adc	r9, r1
    dab6:	88 27       	eor	r24, r24
    dab8:	77 fd       	sbrc	r23, 7
    daba:	80 95       	com	r24
    dabc:	98 2f       	mov	r25, r24
    dabe:	0e 94 ee 79 	call	0xf3dc	; 0xf3dc <__floatsisf>
    dac2:	2b 01       	movw	r4, r22
    dac4:	3c 01       	movw	r6, r24
    dac6:	c8 01       	movw	r24, r16
    dac8:	68 e2       	ldi	r22, 0x28	; 40
    daca:	70 e0       	ldi	r23, 0x00	; 0
    dacc:	0e 94 05 7b 	call	0xf60a	; 0xf60a <__udivmodhi4>
    dad0:	80 e0       	ldi	r24, 0x00	; 0
    dad2:	90 e0       	ldi	r25, 0x00	; 0
    dad4:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    dad8:	5b 01       	movw	r10, r22
    dada:	6c 01       	movw	r12, r24
    dadc:	f6 94       	lsr	r15
    dade:	e7 94       	ror	r14
    dae0:	f6 94       	lsr	r15
    dae2:	e7 94       	ror	r14
    dae4:	f6 94       	lsr	r15
    dae6:	e7 94       	ror	r14
    dae8:	b7 01       	movw	r22, r14
    daea:	80 e0       	ldi	r24, 0x00	; 0
    daec:	90 e0       	ldi	r25, 0x00	; 0
    daee:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    daf2:	f4 01       	movw	r30, r8
    daf4:	60 83       	st	Z, r22
    daf6:	71 83       	std	Z+1, r23	; 0x01
    daf8:	82 83       	std	Z+2, r24	; 0x02
    dafa:	93 83       	std	Z+3, r25	; 0x03
    dafc:	c3 01       	movw	r24, r6
    dafe:	b2 01       	movw	r22, r4
    db00:	20 e0       	ldi	r18, 0x00	; 0
    db02:	30 e0       	ldi	r19, 0x00	; 0
    db04:	a9 01       	movw	r20, r18
    db06:	0f 2e       	mov	r0, r31
    db08:	f0 e0       	ldi	r31, 0x00	; 0
    db0a:	ef 2e       	mov	r14, r31
    db0c:	f0 e0       	ldi	r31, 0x00	; 0
    db0e:	ff 2e       	mov	r15, r31
    db10:	f4 e3       	ldi	r31, 0x34	; 52
    db12:	0f 2f       	mov	r16, r31
    db14:	f3 e4       	ldi	r31, 0x43	; 67
    db16:	1f 2f       	mov	r17, r31
    db18:	f0 2d       	mov	r31, r0
    db1a:	0e 94 a0 08 	call	0x1140	; 0x1140 <_Z3mapddddd>
    db1e:	0f 90       	pop	r0
    db20:	0f 90       	pop	r0
    db22:	0f 90       	pop	r0
    db24:	0f 90       	pop	r0
        OCR1B=ICR1-vAl;
    db26:	09 90       	ld	r0, Y+
    db28:	d8 81       	ld	r29, Y
    db2a:	c0 2d       	mov	r28, r0
     case 11:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
        OCR1A=ICR1-vAl;
        break;
      case 12:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    db2c:	0e 94 bb 79 	call	0xf376	; 0xf376 <__fixsfsi>
        OCR1B=ICR1-vAl;
    db30:	c6 1b       	sub	r28, r22
    db32:	d7 0b       	sbc	r29, r23
    db34:	d0 93 8b 00 	sts	0x008B, r29
    db38:	c0 93 8a 00 	sts	0x008A, r28
    db3c:	e1 c2       	rjmp	.+1474   	; 0xe100 <_Z6angle7i+0xfd2>
        break;
      case 5:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    db3e:	e6 e8       	ldi	r30, 0x86	; 134
    db40:	f0 e0       	ldi	r31, 0x00	; 0
    db42:	c0 81       	ld	r28, Z
    db44:	d1 81       	ldd	r29, Z+1	; 0x01
    db46:	80 80       	ld	r8, Z
    db48:	91 80       	ldd	r9, Z+1	; 0x01
    db4a:	00 d0       	rcall	.+0      	; 0xdb4c <_Z6angle7i+0xa1e>
    db4c:	0f 92       	push	r0
    db4e:	4d b6       	in	r4, 0x3d	; 61
    db50:	5e b6       	in	r5, 0x3e	; 62
    db52:	08 94       	sec
    db54:	41 1c       	adc	r4, r1
    db56:	51 1c       	adc	r5, r1
    db58:	88 27       	eor	r24, r24
    db5a:	77 fd       	sbrc	r23, 7
    db5c:	80 95       	com	r24
    db5e:	98 2f       	mov	r25, r24
    db60:	0e 94 ee 79 	call	0xf3dc	; 0xf3dc <__floatsisf>
    db64:	7b 01       	movw	r14, r22
    db66:	8c 01       	movw	r16, r24
    db68:	ce 01       	movw	r24, r28
    db6a:	68 e2       	ldi	r22, 0x28	; 40
    db6c:	70 e0       	ldi	r23, 0x00	; 0
    db6e:	0e 94 05 7b 	call	0xf60a	; 0xf60a <__udivmodhi4>
    db72:	80 e0       	ldi	r24, 0x00	; 0
    db74:	90 e0       	ldi	r25, 0x00	; 0
    db76:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    db7a:	5b 01       	movw	r10, r22
    db7c:	6c 01       	movw	r12, r24
    db7e:	96 94       	lsr	r9
    db80:	87 94       	ror	r8
    db82:	96 94       	lsr	r9
    db84:	87 94       	ror	r8
    db86:	96 94       	lsr	r9
    db88:	87 94       	ror	r8
    db8a:	b4 01       	movw	r22, r8
    db8c:	80 e0       	ldi	r24, 0x00	; 0
    db8e:	90 e0       	ldi	r25, 0x00	; 0
    db90:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    db94:	f2 01       	movw	r30, r4
    db96:	60 83       	st	Z, r22
    db98:	71 83       	std	Z+1, r23	; 0x01
    db9a:	82 83       	std	Z+2, r24	; 0x02
    db9c:	93 83       	std	Z+3, r25	; 0x03
    db9e:	c8 01       	movw	r24, r16
    dba0:	b7 01       	movw	r22, r14
    dba2:	20 e0       	ldi	r18, 0x00	; 0
    dba4:	30 e0       	ldi	r19, 0x00	; 0
    dba6:	a9 01       	movw	r20, r18
    dba8:	0f 2e       	mov	r0, r31
    dbaa:	f0 e0       	ldi	r31, 0x00	; 0
    dbac:	ef 2e       	mov	r14, r31
    dbae:	f0 e0       	ldi	r31, 0x00	; 0
    dbb0:	ff 2e       	mov	r15, r31
    dbb2:	f4 e3       	ldi	r31, 0x34	; 52
    dbb4:	0f 2f       	mov	r16, r31
    dbb6:	f3 e4       	ldi	r31, 0x43	; 67
    dbb8:	1f 2f       	mov	r17, r31
    dbba:	f0 2d       	mov	r31, r0
    dbbc:	0e 94 a0 08 	call	0x1140	; 0x1140 <_Z3mapddddd>
    dbc0:	0f 90       	pop	r0
    dbc2:	0f 90       	pop	r0
    dbc4:	0f 90       	pop	r0
    dbc6:	0f 90       	pop	r0
        OCR3A=ICR3-vAl;
    dbc8:	c0 91 96 00 	lds	r28, 0x0096
    dbcc:	d0 91 97 00 	lds	r29, 0x0097
      case 12:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
        OCR1B=ICR1-vAl;
        break;
      case 5:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    dbd0:	0e 94 bb 79 	call	0xf376	; 0xf376 <__fixsfsi>
        OCR3A=ICR3-vAl;
    dbd4:	c6 1b       	sub	r28, r22
    dbd6:	d7 0b       	sbc	r29, r23
    dbd8:	d0 93 99 00 	sts	0x0099, r29
    dbdc:	c0 93 98 00 	sts	0x0098, r28
    dbe0:	8f c2       	rjmp	.+1310   	; 0xe100 <_Z6angle7i+0xfd2>
        break;
      case 2:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    dbe2:	e6 e8       	ldi	r30, 0x86	; 134
    dbe4:	f0 e0       	ldi	r31, 0x00	; 0
    dbe6:	c0 81       	ld	r28, Z
    dbe8:	d1 81       	ldd	r29, Z+1	; 0x01
    dbea:	80 80       	ld	r8, Z
    dbec:	91 80       	ldd	r9, Z+1	; 0x01
    dbee:	00 d0       	rcall	.+0      	; 0xdbf0 <_Z6angle7i+0xac2>
    dbf0:	0f 92       	push	r0
    dbf2:	4d b6       	in	r4, 0x3d	; 61
    dbf4:	5e b6       	in	r5, 0x3e	; 62
    dbf6:	08 94       	sec
    dbf8:	41 1c       	adc	r4, r1
    dbfa:	51 1c       	adc	r5, r1
    dbfc:	88 27       	eor	r24, r24
    dbfe:	77 fd       	sbrc	r23, 7
    dc00:	80 95       	com	r24
    dc02:	98 2f       	mov	r25, r24
    dc04:	0e 94 ee 79 	call	0xf3dc	; 0xf3dc <__floatsisf>
    dc08:	7b 01       	movw	r14, r22
    dc0a:	8c 01       	movw	r16, r24
    dc0c:	ce 01       	movw	r24, r28
    dc0e:	68 e2       	ldi	r22, 0x28	; 40
    dc10:	70 e0       	ldi	r23, 0x00	; 0
    dc12:	0e 94 05 7b 	call	0xf60a	; 0xf60a <__udivmodhi4>
    dc16:	80 e0       	ldi	r24, 0x00	; 0
    dc18:	90 e0       	ldi	r25, 0x00	; 0
    dc1a:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    dc1e:	5b 01       	movw	r10, r22
    dc20:	6c 01       	movw	r12, r24
    dc22:	96 94       	lsr	r9
    dc24:	87 94       	ror	r8
    dc26:	96 94       	lsr	r9
    dc28:	87 94       	ror	r8
    dc2a:	96 94       	lsr	r9
    dc2c:	87 94       	ror	r8
    dc2e:	b4 01       	movw	r22, r8
    dc30:	80 e0       	ldi	r24, 0x00	; 0
    dc32:	90 e0       	ldi	r25, 0x00	; 0
    dc34:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    dc38:	f2 01       	movw	r30, r4
    dc3a:	60 83       	st	Z, r22
    dc3c:	71 83       	std	Z+1, r23	; 0x01
    dc3e:	82 83       	std	Z+2, r24	; 0x02
    dc40:	93 83       	std	Z+3, r25	; 0x03
    dc42:	c8 01       	movw	r24, r16
    dc44:	b7 01       	movw	r22, r14
    dc46:	20 e0       	ldi	r18, 0x00	; 0
    dc48:	30 e0       	ldi	r19, 0x00	; 0
    dc4a:	a9 01       	movw	r20, r18
    dc4c:	0f 2e       	mov	r0, r31
    dc4e:	f0 e0       	ldi	r31, 0x00	; 0
    dc50:	ef 2e       	mov	r14, r31
    dc52:	f0 e0       	ldi	r31, 0x00	; 0
    dc54:	ff 2e       	mov	r15, r31
    dc56:	f4 e3       	ldi	r31, 0x34	; 52
    dc58:	0f 2f       	mov	r16, r31
    dc5a:	f3 e4       	ldi	r31, 0x43	; 67
    dc5c:	1f 2f       	mov	r17, r31
    dc5e:	f0 2d       	mov	r31, r0
    dc60:	0e 94 a0 08 	call	0x1140	; 0x1140 <_Z3mapddddd>
    dc64:	0f 90       	pop	r0
    dc66:	0f 90       	pop	r0
    dc68:	0f 90       	pop	r0
    dc6a:	0f 90       	pop	r0
        OCR3B=ICR3-vAl;
    dc6c:	c0 91 96 00 	lds	r28, 0x0096
    dc70:	d0 91 97 00 	lds	r29, 0x0097
      case 5:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
        OCR3A=ICR3-vAl;
        break;
      case 2:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    dc74:	0e 94 bb 79 	call	0xf376	; 0xf376 <__fixsfsi>
        OCR3B=ICR3-vAl;
    dc78:	c6 1b       	sub	r28, r22
    dc7a:	d7 0b       	sbc	r29, r23
    dc7c:	d0 93 9b 00 	sts	0x009B, r29
    dc80:	c0 93 9a 00 	sts	0x009A, r28
    dc84:	3d c2       	rjmp	.+1146   	; 0xe100 <_Z6angle7i+0xfd2>
        break;
      case 3:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    dc86:	e6 e8       	ldi	r30, 0x86	; 134
    dc88:	f0 e0       	ldi	r31, 0x00	; 0
    dc8a:	c0 81       	ld	r28, Z
    dc8c:	d1 81       	ldd	r29, Z+1	; 0x01
    dc8e:	80 80       	ld	r8, Z
    dc90:	91 80       	ldd	r9, Z+1	; 0x01
    dc92:	00 d0       	rcall	.+0      	; 0xdc94 <_Z6angle7i+0xb66>
    dc94:	0f 92       	push	r0
    dc96:	4d b6       	in	r4, 0x3d	; 61
    dc98:	5e b6       	in	r5, 0x3e	; 62
    dc9a:	08 94       	sec
    dc9c:	41 1c       	adc	r4, r1
    dc9e:	51 1c       	adc	r5, r1
    dca0:	88 27       	eor	r24, r24
    dca2:	77 fd       	sbrc	r23, 7
    dca4:	80 95       	com	r24
    dca6:	98 2f       	mov	r25, r24
    dca8:	0e 94 ee 79 	call	0xf3dc	; 0xf3dc <__floatsisf>
    dcac:	7b 01       	movw	r14, r22
    dcae:	8c 01       	movw	r16, r24
    dcb0:	ce 01       	movw	r24, r28
    dcb2:	68 e2       	ldi	r22, 0x28	; 40
    dcb4:	70 e0       	ldi	r23, 0x00	; 0
    dcb6:	0e 94 05 7b 	call	0xf60a	; 0xf60a <__udivmodhi4>
    dcba:	80 e0       	ldi	r24, 0x00	; 0
    dcbc:	90 e0       	ldi	r25, 0x00	; 0
    dcbe:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    dcc2:	5b 01       	movw	r10, r22
    dcc4:	6c 01       	movw	r12, r24
    dcc6:	96 94       	lsr	r9
    dcc8:	87 94       	ror	r8
    dcca:	96 94       	lsr	r9
    dccc:	87 94       	ror	r8
    dcce:	96 94       	lsr	r9
    dcd0:	87 94       	ror	r8
    dcd2:	b4 01       	movw	r22, r8
    dcd4:	80 e0       	ldi	r24, 0x00	; 0
    dcd6:	90 e0       	ldi	r25, 0x00	; 0
    dcd8:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    dcdc:	f2 01       	movw	r30, r4
    dcde:	60 83       	st	Z, r22
    dce0:	71 83       	std	Z+1, r23	; 0x01
    dce2:	82 83       	std	Z+2, r24	; 0x02
    dce4:	93 83       	std	Z+3, r25	; 0x03
    dce6:	c8 01       	movw	r24, r16
    dce8:	b7 01       	movw	r22, r14
    dcea:	20 e0       	ldi	r18, 0x00	; 0
    dcec:	30 e0       	ldi	r19, 0x00	; 0
    dcee:	a9 01       	movw	r20, r18
    dcf0:	0f 2e       	mov	r0, r31
    dcf2:	f0 e0       	ldi	r31, 0x00	; 0
    dcf4:	ef 2e       	mov	r14, r31
    dcf6:	f0 e0       	ldi	r31, 0x00	; 0
    dcf8:	ff 2e       	mov	r15, r31
    dcfa:	f4 e3       	ldi	r31, 0x34	; 52
    dcfc:	0f 2f       	mov	r16, r31
    dcfe:	f3 e4       	ldi	r31, 0x43	; 67
    dd00:	1f 2f       	mov	r17, r31
    dd02:	f0 2d       	mov	r31, r0
    dd04:	0e 94 a0 08 	call	0x1140	; 0x1140 <_Z3mapddddd>
    dd08:	0f 90       	pop	r0
    dd0a:	0f 90       	pop	r0
    dd0c:	0f 90       	pop	r0
    dd0e:	0f 90       	pop	r0
        OCR3C=ICR3-vAl;
    dd10:	c0 91 96 00 	lds	r28, 0x0096
    dd14:	d0 91 97 00 	lds	r29, 0x0097
      case 2:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
        OCR3B=ICR3-vAl;
        break;
      case 3:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    dd18:	0e 94 bb 79 	call	0xf376	; 0xf376 <__fixsfsi>
        OCR3C=ICR3-vAl;
    dd1c:	c6 1b       	sub	r28, r22
    dd1e:	d7 0b       	sbc	r29, r23
    dd20:	d0 93 9d 00 	sts	0x009D, r29
    dd24:	c0 93 9c 00 	sts	0x009C, r28
    dd28:	eb c1       	rjmp	.+982    	; 0xe100 <_Z6angle7i+0xfd2>
        break;
      case 6:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    dd2a:	e6 e8       	ldi	r30, 0x86	; 134
    dd2c:	f0 e0       	ldi	r31, 0x00	; 0
    dd2e:	c0 81       	ld	r28, Z
    dd30:	d1 81       	ldd	r29, Z+1	; 0x01
    dd32:	80 80       	ld	r8, Z
    dd34:	91 80       	ldd	r9, Z+1	; 0x01
    dd36:	00 d0       	rcall	.+0      	; 0xdd38 <_Z6angle7i+0xc0a>
    dd38:	0f 92       	push	r0
    dd3a:	4d b6       	in	r4, 0x3d	; 61
    dd3c:	5e b6       	in	r5, 0x3e	; 62
    dd3e:	08 94       	sec
    dd40:	41 1c       	adc	r4, r1
    dd42:	51 1c       	adc	r5, r1
    dd44:	88 27       	eor	r24, r24
    dd46:	77 fd       	sbrc	r23, 7
    dd48:	80 95       	com	r24
    dd4a:	98 2f       	mov	r25, r24
    dd4c:	0e 94 ee 79 	call	0xf3dc	; 0xf3dc <__floatsisf>
    dd50:	7b 01       	movw	r14, r22
    dd52:	8c 01       	movw	r16, r24
    dd54:	ce 01       	movw	r24, r28
    dd56:	68 e2       	ldi	r22, 0x28	; 40
    dd58:	70 e0       	ldi	r23, 0x00	; 0
    dd5a:	0e 94 05 7b 	call	0xf60a	; 0xf60a <__udivmodhi4>
    dd5e:	80 e0       	ldi	r24, 0x00	; 0
    dd60:	90 e0       	ldi	r25, 0x00	; 0
    dd62:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    dd66:	5b 01       	movw	r10, r22
    dd68:	6c 01       	movw	r12, r24
    dd6a:	96 94       	lsr	r9
    dd6c:	87 94       	ror	r8
    dd6e:	96 94       	lsr	r9
    dd70:	87 94       	ror	r8
    dd72:	96 94       	lsr	r9
    dd74:	87 94       	ror	r8
    dd76:	b4 01       	movw	r22, r8
    dd78:	80 e0       	ldi	r24, 0x00	; 0
    dd7a:	90 e0       	ldi	r25, 0x00	; 0
    dd7c:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    dd80:	f2 01       	movw	r30, r4
    dd82:	60 83       	st	Z, r22
    dd84:	71 83       	std	Z+1, r23	; 0x01
    dd86:	82 83       	std	Z+2, r24	; 0x02
    dd88:	93 83       	std	Z+3, r25	; 0x03
    dd8a:	c8 01       	movw	r24, r16
    dd8c:	b7 01       	movw	r22, r14
    dd8e:	20 e0       	ldi	r18, 0x00	; 0
    dd90:	30 e0       	ldi	r19, 0x00	; 0
    dd92:	a9 01       	movw	r20, r18
    dd94:	0f 2e       	mov	r0, r31
    dd96:	f0 e0       	ldi	r31, 0x00	; 0
    dd98:	ef 2e       	mov	r14, r31
    dd9a:	f0 e0       	ldi	r31, 0x00	; 0
    dd9c:	ff 2e       	mov	r15, r31
    dd9e:	f4 e3       	ldi	r31, 0x34	; 52
    dda0:	0f 2f       	mov	r16, r31
    dda2:	f3 e4       	ldi	r31, 0x43	; 67
    dda4:	1f 2f       	mov	r17, r31
    dda6:	f0 2d       	mov	r31, r0
    dda8:	0e 94 a0 08 	call	0x1140	; 0x1140 <_Z3mapddddd>
    ddac:	0f 90       	pop	r0
    ddae:	0f 90       	pop	r0
    ddb0:	0f 90       	pop	r0
    ddb2:	0f 90       	pop	r0
        OCR4A=ICR4-vAl;
    ddb4:	c0 91 a6 00 	lds	r28, 0x00A6
    ddb8:	d0 91 a7 00 	lds	r29, 0x00A7
      case 3:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
        OCR3C=ICR3-vAl;
        break;
      case 6:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    ddbc:	0e 94 bb 79 	call	0xf376	; 0xf376 <__fixsfsi>
        OCR4A=ICR4-vAl;
    ddc0:	c6 1b       	sub	r28, r22
    ddc2:	d7 0b       	sbc	r29, r23
    ddc4:	d0 93 a9 00 	sts	0x00A9, r29
    ddc8:	c0 93 a8 00 	sts	0x00A8, r28
    ddcc:	99 c1       	rjmp	.+818    	; 0xe100 <_Z6angle7i+0xfd2>
        break;
      case 7:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    ddce:	e6 e8       	ldi	r30, 0x86	; 134
    ddd0:	f0 e0       	ldi	r31, 0x00	; 0
    ddd2:	c0 81       	ld	r28, Z
    ddd4:	d1 81       	ldd	r29, Z+1	; 0x01
    ddd6:	80 80       	ld	r8, Z
    ddd8:	91 80       	ldd	r9, Z+1	; 0x01
    ddda:	00 d0       	rcall	.+0      	; 0xdddc <_Z6angle7i+0xcae>
    dddc:	0f 92       	push	r0
    ddde:	4d b6       	in	r4, 0x3d	; 61
    dde0:	5e b6       	in	r5, 0x3e	; 62
    dde2:	08 94       	sec
    dde4:	41 1c       	adc	r4, r1
    dde6:	51 1c       	adc	r5, r1
    dde8:	88 27       	eor	r24, r24
    ddea:	77 fd       	sbrc	r23, 7
    ddec:	80 95       	com	r24
    ddee:	98 2f       	mov	r25, r24
    ddf0:	0e 94 ee 79 	call	0xf3dc	; 0xf3dc <__floatsisf>
    ddf4:	7b 01       	movw	r14, r22
    ddf6:	8c 01       	movw	r16, r24
    ddf8:	ce 01       	movw	r24, r28
    ddfa:	68 e2       	ldi	r22, 0x28	; 40
    ddfc:	70 e0       	ldi	r23, 0x00	; 0
    ddfe:	0e 94 05 7b 	call	0xf60a	; 0xf60a <__udivmodhi4>
    de02:	80 e0       	ldi	r24, 0x00	; 0
    de04:	90 e0       	ldi	r25, 0x00	; 0
    de06:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    de0a:	5b 01       	movw	r10, r22
    de0c:	6c 01       	movw	r12, r24
    de0e:	96 94       	lsr	r9
    de10:	87 94       	ror	r8
    de12:	96 94       	lsr	r9
    de14:	87 94       	ror	r8
    de16:	96 94       	lsr	r9
    de18:	87 94       	ror	r8
    de1a:	b4 01       	movw	r22, r8
    de1c:	80 e0       	ldi	r24, 0x00	; 0
    de1e:	90 e0       	ldi	r25, 0x00	; 0
    de20:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    de24:	f2 01       	movw	r30, r4
    de26:	60 83       	st	Z, r22
    de28:	71 83       	std	Z+1, r23	; 0x01
    de2a:	82 83       	std	Z+2, r24	; 0x02
    de2c:	93 83       	std	Z+3, r25	; 0x03
    de2e:	c8 01       	movw	r24, r16
    de30:	b7 01       	movw	r22, r14
    de32:	20 e0       	ldi	r18, 0x00	; 0
    de34:	30 e0       	ldi	r19, 0x00	; 0
    de36:	a9 01       	movw	r20, r18
    de38:	0f 2e       	mov	r0, r31
    de3a:	f0 e0       	ldi	r31, 0x00	; 0
    de3c:	ef 2e       	mov	r14, r31
    de3e:	f0 e0       	ldi	r31, 0x00	; 0
    de40:	ff 2e       	mov	r15, r31
    de42:	f4 e3       	ldi	r31, 0x34	; 52
    de44:	0f 2f       	mov	r16, r31
    de46:	f3 e4       	ldi	r31, 0x43	; 67
    de48:	1f 2f       	mov	r17, r31
    de4a:	f0 2d       	mov	r31, r0
    de4c:	0e 94 a0 08 	call	0x1140	; 0x1140 <_Z3mapddddd>
    de50:	0f 90       	pop	r0
    de52:	0f 90       	pop	r0
    de54:	0f 90       	pop	r0
    de56:	0f 90       	pop	r0
        OCR4B=ICR4-vAl;
    de58:	c0 91 a6 00 	lds	r28, 0x00A6
    de5c:	d0 91 a7 00 	lds	r29, 0x00A7
      case 6:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
        OCR4A=ICR4-vAl;
        break;
      case 7:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    de60:	0e 94 bb 79 	call	0xf376	; 0xf376 <__fixsfsi>
        OCR4B=ICR4-vAl;
    de64:	c6 1b       	sub	r28, r22
    de66:	d7 0b       	sbc	r29, r23
    de68:	d0 93 ab 00 	sts	0x00AB, r29
    de6c:	c0 93 aa 00 	sts	0x00AA, r28
    de70:	47 c1       	rjmp	.+654    	; 0xe100 <_Z6angle7i+0xfd2>
        break; 
      case 8:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    de72:	e6 e8       	ldi	r30, 0x86	; 134
    de74:	f0 e0       	ldi	r31, 0x00	; 0
    de76:	c0 81       	ld	r28, Z
    de78:	d1 81       	ldd	r29, Z+1	; 0x01
    de7a:	80 80       	ld	r8, Z
    de7c:	91 80       	ldd	r9, Z+1	; 0x01
    de7e:	00 d0       	rcall	.+0      	; 0xde80 <_Z6angle7i+0xd52>
    de80:	0f 92       	push	r0
    de82:	4d b6       	in	r4, 0x3d	; 61
    de84:	5e b6       	in	r5, 0x3e	; 62
    de86:	08 94       	sec
    de88:	41 1c       	adc	r4, r1
    de8a:	51 1c       	adc	r5, r1
    de8c:	88 27       	eor	r24, r24
    de8e:	77 fd       	sbrc	r23, 7
    de90:	80 95       	com	r24
    de92:	98 2f       	mov	r25, r24
    de94:	0e 94 ee 79 	call	0xf3dc	; 0xf3dc <__floatsisf>
    de98:	7b 01       	movw	r14, r22
    de9a:	8c 01       	movw	r16, r24
    de9c:	ce 01       	movw	r24, r28
    de9e:	68 e2       	ldi	r22, 0x28	; 40
    dea0:	70 e0       	ldi	r23, 0x00	; 0
    dea2:	0e 94 05 7b 	call	0xf60a	; 0xf60a <__udivmodhi4>
    dea6:	80 e0       	ldi	r24, 0x00	; 0
    dea8:	90 e0       	ldi	r25, 0x00	; 0
    deaa:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    deae:	5b 01       	movw	r10, r22
    deb0:	6c 01       	movw	r12, r24
    deb2:	96 94       	lsr	r9
    deb4:	87 94       	ror	r8
    deb6:	96 94       	lsr	r9
    deb8:	87 94       	ror	r8
    deba:	96 94       	lsr	r9
    debc:	87 94       	ror	r8
    debe:	b4 01       	movw	r22, r8
    dec0:	80 e0       	ldi	r24, 0x00	; 0
    dec2:	90 e0       	ldi	r25, 0x00	; 0
    dec4:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    dec8:	f2 01       	movw	r30, r4
    deca:	60 83       	st	Z, r22
    decc:	71 83       	std	Z+1, r23	; 0x01
    dece:	82 83       	std	Z+2, r24	; 0x02
    ded0:	93 83       	std	Z+3, r25	; 0x03
    ded2:	c8 01       	movw	r24, r16
    ded4:	b7 01       	movw	r22, r14
    ded6:	20 e0       	ldi	r18, 0x00	; 0
    ded8:	30 e0       	ldi	r19, 0x00	; 0
    deda:	a9 01       	movw	r20, r18
    dedc:	0f 2e       	mov	r0, r31
    dede:	f0 e0       	ldi	r31, 0x00	; 0
    dee0:	ef 2e       	mov	r14, r31
    dee2:	f0 e0       	ldi	r31, 0x00	; 0
    dee4:	ff 2e       	mov	r15, r31
    dee6:	f4 e3       	ldi	r31, 0x34	; 52
    dee8:	0f 2f       	mov	r16, r31
    deea:	f3 e4       	ldi	r31, 0x43	; 67
    deec:	1f 2f       	mov	r17, r31
    deee:	f0 2d       	mov	r31, r0
    def0:	0e 94 a0 08 	call	0x1140	; 0x1140 <_Z3mapddddd>
    def4:	0f 90       	pop	r0
    def6:	0f 90       	pop	r0
    def8:	0f 90       	pop	r0
    defa:	0f 90       	pop	r0
        OCR4C=ICR4-vAl;
    defc:	c0 91 a6 00 	lds	r28, 0x00A6
    df00:	d0 91 a7 00 	lds	r29, 0x00A7
      case 7:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
        OCR4B=ICR4-vAl;
        break; 
      case 8:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    df04:	0e 94 bb 79 	call	0xf376	; 0xf376 <__fixsfsi>
        OCR4C=ICR4-vAl;
    df08:	c6 1b       	sub	r28, r22
    df0a:	d7 0b       	sbc	r29, r23
    df0c:	d0 93 ad 00 	sts	0x00AD, r29
    df10:	c0 93 ac 00 	sts	0x00AC, r28
    df14:	f5 c0       	rjmp	.+490    	; 0xe100 <_Z6angle7i+0xfd2>
        break;
      case 46:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    df16:	e6 e8       	ldi	r30, 0x86	; 134
    df18:	f0 e0       	ldi	r31, 0x00	; 0
    df1a:	c0 81       	ld	r28, Z
    df1c:	d1 81       	ldd	r29, Z+1	; 0x01
    df1e:	80 80       	ld	r8, Z
    df20:	91 80       	ldd	r9, Z+1	; 0x01
    df22:	00 d0       	rcall	.+0      	; 0xdf24 <_Z6angle7i+0xdf6>
    df24:	0f 92       	push	r0
    df26:	4d b6       	in	r4, 0x3d	; 61
    df28:	5e b6       	in	r5, 0x3e	; 62
    df2a:	08 94       	sec
    df2c:	41 1c       	adc	r4, r1
    df2e:	51 1c       	adc	r5, r1
    df30:	88 27       	eor	r24, r24
    df32:	77 fd       	sbrc	r23, 7
    df34:	80 95       	com	r24
    df36:	98 2f       	mov	r25, r24
    df38:	0e 94 ee 79 	call	0xf3dc	; 0xf3dc <__floatsisf>
    df3c:	7b 01       	movw	r14, r22
    df3e:	8c 01       	movw	r16, r24
    df40:	ce 01       	movw	r24, r28
    df42:	68 e2       	ldi	r22, 0x28	; 40
    df44:	70 e0       	ldi	r23, 0x00	; 0
    df46:	0e 94 05 7b 	call	0xf60a	; 0xf60a <__udivmodhi4>
    df4a:	80 e0       	ldi	r24, 0x00	; 0
    df4c:	90 e0       	ldi	r25, 0x00	; 0
    df4e:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    df52:	5b 01       	movw	r10, r22
    df54:	6c 01       	movw	r12, r24
    df56:	96 94       	lsr	r9
    df58:	87 94       	ror	r8
    df5a:	96 94       	lsr	r9
    df5c:	87 94       	ror	r8
    df5e:	96 94       	lsr	r9
    df60:	87 94       	ror	r8
    df62:	b4 01       	movw	r22, r8
    df64:	80 e0       	ldi	r24, 0x00	; 0
    df66:	90 e0       	ldi	r25, 0x00	; 0
    df68:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    df6c:	f2 01       	movw	r30, r4
    df6e:	60 83       	st	Z, r22
    df70:	71 83       	std	Z+1, r23	; 0x01
    df72:	82 83       	std	Z+2, r24	; 0x02
    df74:	93 83       	std	Z+3, r25	; 0x03
    df76:	c8 01       	movw	r24, r16
    df78:	b7 01       	movw	r22, r14
    df7a:	20 e0       	ldi	r18, 0x00	; 0
    df7c:	30 e0       	ldi	r19, 0x00	; 0
    df7e:	a9 01       	movw	r20, r18
    df80:	0f 2e       	mov	r0, r31
    df82:	f0 e0       	ldi	r31, 0x00	; 0
    df84:	ef 2e       	mov	r14, r31
    df86:	f0 e0       	ldi	r31, 0x00	; 0
    df88:	ff 2e       	mov	r15, r31
    df8a:	f4 e3       	ldi	r31, 0x34	; 52
    df8c:	0f 2f       	mov	r16, r31
    df8e:	f3 e4       	ldi	r31, 0x43	; 67
    df90:	1f 2f       	mov	r17, r31
    df92:	f0 2d       	mov	r31, r0
    df94:	0e 94 a0 08 	call	0x1140	; 0x1140 <_Z3mapddddd>
    df98:	0f 90       	pop	r0
    df9a:	0f 90       	pop	r0
    df9c:	0f 90       	pop	r0
    df9e:	0f 90       	pop	r0
        OCR5A=ICR5-vAl;
    dfa0:	c0 91 26 01 	lds	r28, 0x0126
    dfa4:	d0 91 27 01 	lds	r29, 0x0127
      case 8:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
        OCR4C=ICR4-vAl;
        break;
      case 46:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    dfa8:	0e 94 bb 79 	call	0xf376	; 0xf376 <__fixsfsi>
        OCR5A=ICR5-vAl;
    dfac:	c6 1b       	sub	r28, r22
    dfae:	d7 0b       	sbc	r29, r23
    dfb0:	d0 93 29 01 	sts	0x0129, r29
    dfb4:	c0 93 28 01 	sts	0x0128, r28
    dfb8:	a3 c0       	rjmp	.+326    	; 0xe100 <_Z6angle7i+0xfd2>
        break;
      case 45:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    dfba:	e6 e8       	ldi	r30, 0x86	; 134
    dfbc:	f0 e0       	ldi	r31, 0x00	; 0
    dfbe:	c0 81       	ld	r28, Z
    dfc0:	d1 81       	ldd	r29, Z+1	; 0x01
    dfc2:	80 80       	ld	r8, Z
    dfc4:	91 80       	ldd	r9, Z+1	; 0x01
    dfc6:	00 d0       	rcall	.+0      	; 0xdfc8 <_Z6angle7i+0xe9a>
    dfc8:	0f 92       	push	r0
    dfca:	4d b6       	in	r4, 0x3d	; 61
    dfcc:	5e b6       	in	r5, 0x3e	; 62
    dfce:	08 94       	sec
    dfd0:	41 1c       	adc	r4, r1
    dfd2:	51 1c       	adc	r5, r1
    dfd4:	88 27       	eor	r24, r24
    dfd6:	77 fd       	sbrc	r23, 7
    dfd8:	80 95       	com	r24
    dfda:	98 2f       	mov	r25, r24
    dfdc:	0e 94 ee 79 	call	0xf3dc	; 0xf3dc <__floatsisf>
    dfe0:	7b 01       	movw	r14, r22
    dfe2:	8c 01       	movw	r16, r24
    dfe4:	ce 01       	movw	r24, r28
    dfe6:	68 e2       	ldi	r22, 0x28	; 40
    dfe8:	70 e0       	ldi	r23, 0x00	; 0
    dfea:	0e 94 05 7b 	call	0xf60a	; 0xf60a <__udivmodhi4>
    dfee:	80 e0       	ldi	r24, 0x00	; 0
    dff0:	90 e0       	ldi	r25, 0x00	; 0
    dff2:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    dff6:	5b 01       	movw	r10, r22
    dff8:	6c 01       	movw	r12, r24
    dffa:	96 94       	lsr	r9
    dffc:	87 94       	ror	r8
    dffe:	96 94       	lsr	r9
    e000:	87 94       	ror	r8
    e002:	96 94       	lsr	r9
    e004:	87 94       	ror	r8
    e006:	b4 01       	movw	r22, r8
    e008:	80 e0       	ldi	r24, 0x00	; 0
    e00a:	90 e0       	ldi	r25, 0x00	; 0
    e00c:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    e010:	f2 01       	movw	r30, r4
    e012:	60 83       	st	Z, r22
    e014:	71 83       	std	Z+1, r23	; 0x01
    e016:	82 83       	std	Z+2, r24	; 0x02
    e018:	93 83       	std	Z+3, r25	; 0x03
    e01a:	c8 01       	movw	r24, r16
    e01c:	b7 01       	movw	r22, r14
    e01e:	20 e0       	ldi	r18, 0x00	; 0
    e020:	30 e0       	ldi	r19, 0x00	; 0
    e022:	a9 01       	movw	r20, r18
    e024:	0f 2e       	mov	r0, r31
    e026:	f0 e0       	ldi	r31, 0x00	; 0
    e028:	ef 2e       	mov	r14, r31
    e02a:	f0 e0       	ldi	r31, 0x00	; 0
    e02c:	ff 2e       	mov	r15, r31
    e02e:	f4 e3       	ldi	r31, 0x34	; 52
    e030:	0f 2f       	mov	r16, r31
    e032:	f3 e4       	ldi	r31, 0x43	; 67
    e034:	1f 2f       	mov	r17, r31
    e036:	f0 2d       	mov	r31, r0
    e038:	0e 94 a0 08 	call	0x1140	; 0x1140 <_Z3mapddddd>
    e03c:	0f 90       	pop	r0
    e03e:	0f 90       	pop	r0
    e040:	0f 90       	pop	r0
    e042:	0f 90       	pop	r0
        OCR5B=ICR5-vAl;
    e044:	c0 91 26 01 	lds	r28, 0x0126
    e048:	d0 91 27 01 	lds	r29, 0x0127
      case 46:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
        OCR5A=ICR5-vAl;
        break;
      case 45:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    e04c:	0e 94 bb 79 	call	0xf376	; 0xf376 <__fixsfsi>
        OCR5B=ICR5-vAl;
    e050:	c6 1b       	sub	r28, r22
    e052:	d7 0b       	sbc	r29, r23
    e054:	d0 93 2b 01 	sts	0x012B, r29
    e058:	c0 93 2a 01 	sts	0x012A, r28
    e05c:	51 c0       	rjmp	.+162    	; 0xe100 <_Z6angle7i+0xfd2>
        break;
      case 44:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    e05e:	e6 e8       	ldi	r30, 0x86	; 134
    e060:	f0 e0       	ldi	r31, 0x00	; 0
    e062:	c0 81       	ld	r28, Z
    e064:	d1 81       	ldd	r29, Z+1	; 0x01
    e066:	80 80       	ld	r8, Z
    e068:	91 80       	ldd	r9, Z+1	; 0x01
    e06a:	00 d0       	rcall	.+0      	; 0xe06c <_Z6angle7i+0xf3e>
    e06c:	0f 92       	push	r0
    e06e:	4d b6       	in	r4, 0x3d	; 61
    e070:	5e b6       	in	r5, 0x3e	; 62
    e072:	08 94       	sec
    e074:	41 1c       	adc	r4, r1
    e076:	51 1c       	adc	r5, r1
    e078:	88 27       	eor	r24, r24
    e07a:	77 fd       	sbrc	r23, 7
    e07c:	80 95       	com	r24
    e07e:	98 2f       	mov	r25, r24
    e080:	0e 94 ee 79 	call	0xf3dc	; 0xf3dc <__floatsisf>
    e084:	7b 01       	movw	r14, r22
    e086:	8c 01       	movw	r16, r24
    e088:	ce 01       	movw	r24, r28
    e08a:	68 e2       	ldi	r22, 0x28	; 40
    e08c:	70 e0       	ldi	r23, 0x00	; 0
    e08e:	0e 94 05 7b 	call	0xf60a	; 0xf60a <__udivmodhi4>
    e092:	80 e0       	ldi	r24, 0x00	; 0
    e094:	90 e0       	ldi	r25, 0x00	; 0
    e096:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    e09a:	5b 01       	movw	r10, r22
    e09c:	6c 01       	movw	r12, r24
    e09e:	96 94       	lsr	r9
    e0a0:	87 94       	ror	r8
    e0a2:	96 94       	lsr	r9
    e0a4:	87 94       	ror	r8
    e0a6:	96 94       	lsr	r9
    e0a8:	87 94       	ror	r8
    e0aa:	b4 01       	movw	r22, r8
    e0ac:	80 e0       	ldi	r24, 0x00	; 0
    e0ae:	90 e0       	ldi	r25, 0x00	; 0
    e0b0:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    e0b4:	f2 01       	movw	r30, r4
    e0b6:	60 83       	st	Z, r22
    e0b8:	71 83       	std	Z+1, r23	; 0x01
    e0ba:	82 83       	std	Z+2, r24	; 0x02
    e0bc:	93 83       	std	Z+3, r25	; 0x03
    e0be:	c8 01       	movw	r24, r16
    e0c0:	b7 01       	movw	r22, r14
    e0c2:	20 e0       	ldi	r18, 0x00	; 0
    e0c4:	30 e0       	ldi	r19, 0x00	; 0
    e0c6:	a9 01       	movw	r20, r18
    e0c8:	0f 2e       	mov	r0, r31
    e0ca:	f0 e0       	ldi	r31, 0x00	; 0
    e0cc:	ef 2e       	mov	r14, r31
    e0ce:	f0 e0       	ldi	r31, 0x00	; 0
    e0d0:	ff 2e       	mov	r15, r31
    e0d2:	f4 e3       	ldi	r31, 0x34	; 52
    e0d4:	0f 2f       	mov	r16, r31
    e0d6:	f3 e4       	ldi	r31, 0x43	; 67
    e0d8:	1f 2f       	mov	r17, r31
    e0da:	f0 2d       	mov	r31, r0
    e0dc:	0e 94 a0 08 	call	0x1140	; 0x1140 <_Z3mapddddd>
    e0e0:	0f 90       	pop	r0
    e0e2:	0f 90       	pop	r0
    e0e4:	0f 90       	pop	r0
    e0e6:	0f 90       	pop	r0
        OCR5C=ICR5-vAl;
    e0e8:	c0 91 26 01 	lds	r28, 0x0126
    e0ec:	d0 91 27 01 	lds	r29, 0x0127
      case 45:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
        OCR5B=ICR5-vAl;
        break;
      case 44:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    e0f0:	0e 94 bb 79 	call	0xf376	; 0xf376 <__fixsfsi>
        OCR5C=ICR5-vAl;
    e0f4:	c6 1b       	sub	r28, r22
    e0f6:	d7 0b       	sbc	r29, r23
    e0f8:	d0 93 2d 01 	sts	0x012D, r29
    e0fc:	c0 93 2c 01 	sts	0x012C, r28
		r.write(z);
    e100:	60 91 ce 02 	lds	r22, 0x02CE
    e104:	70 91 cf 02 	lds	r23, 0x02CF
     }
  }

  void write(int vAl)           //PIN=servo pin no. on mega,vAl=angle F_CPU for the servo at pin
  {
    switch(pIn)
    e108:	80 91 d6 02 	lds	r24, 0x02D6
    e10c:	88 30       	cpi	r24, 0x08	; 8
    e10e:	09 f4       	brne	.+2      	; 0xe112 <_Z6angle7i+0xfe4>
    e110:	63 c2       	rjmp	.+1222   	; 0xe5d8 <_Z6angle7i+0x14aa>
    e112:	89 30       	cpi	r24, 0x09	; 9
    e114:	98 f4       	brcc	.+38     	; 0xe13c <_Z6angle7i+0x100e>
    e116:	85 30       	cpi	r24, 0x05	; 5
    e118:	09 f4       	brne	.+2      	; 0xe11c <_Z6angle7i+0xfee>
    e11a:	c4 c0       	rjmp	.+392    	; 0xe2a4 <_Z6angle7i+0x1176>
    e11c:	86 30       	cpi	r24, 0x06	; 6
    e11e:	38 f4       	brcc	.+14     	; 0xe12e <_Z6angle7i+0x1000>
    e120:	82 30       	cpi	r24, 0x02	; 2
    e122:	09 f4       	brne	.+2      	; 0xe126 <_Z6angle7i+0xff8>
    e124:	11 c1       	rjmp	.+546    	; 0xe348 <_Z6angle7i+0x121a>
    e126:	83 30       	cpi	r24, 0x03	; 3
    e128:	09 f0       	breq	.+2      	; 0xe12c <_Z6angle7i+0xffe>
    e12a:	9d c3       	rjmp	.+1850   	; 0xe866 <_Z6angle7i+0x1738>
    e12c:	5f c1       	rjmp	.+702    	; 0xe3ec <_Z6angle7i+0x12be>
    e12e:	86 30       	cpi	r24, 0x06	; 6
    e130:	09 f4       	brne	.+2      	; 0xe134 <_Z6angle7i+0x1006>
    e132:	ae c1       	rjmp	.+860    	; 0xe490 <_Z6angle7i+0x1362>
    e134:	87 30       	cpi	r24, 0x07	; 7
    e136:	09 f0       	breq	.+2      	; 0xe13a <_Z6angle7i+0x100c>
    e138:	96 c3       	rjmp	.+1836   	; 0xe866 <_Z6angle7i+0x1738>
    e13a:	fc c1       	rjmp	.+1016   	; 0xe534 <_Z6angle7i+0x1406>
    e13c:	8c 32       	cpi	r24, 0x2C	; 44
    e13e:	09 f4       	brne	.+2      	; 0xe142 <_Z6angle7i+0x1014>
    e140:	41 c3       	rjmp	.+1666   	; 0xe7c4 <_Z6angle7i+0x1696>
    e142:	8d 32       	cpi	r24, 0x2D	; 45
    e144:	30 f4       	brcc	.+12     	; 0xe152 <_Z6angle7i+0x1024>
    e146:	8b 30       	cpi	r24, 0x0B	; 11
    e148:	59 f0       	breq	.+22     	; 0xe160 <_Z6angle7i+0x1032>
    e14a:	8c 30       	cpi	r24, 0x0C	; 12
    e14c:	09 f0       	breq	.+2      	; 0xe150 <_Z6angle7i+0x1022>
    e14e:	8b c3       	rjmp	.+1814   	; 0xe866 <_Z6angle7i+0x1738>
    e150:	58 c0       	rjmp	.+176    	; 0xe202 <_Z6angle7i+0x10d4>
    e152:	8d 32       	cpi	r24, 0x2D	; 45
    e154:	09 f4       	brne	.+2      	; 0xe158 <_Z6angle7i+0x102a>
    e156:	e4 c2       	rjmp	.+1480   	; 0xe720 <_Z6angle7i+0x15f2>
    e158:	8e 32       	cpi	r24, 0x2E	; 46
    e15a:	09 f0       	breq	.+2      	; 0xe15e <_Z6angle7i+0x1030>
    e15c:	84 c3       	rjmp	.+1800   	; 0xe866 <_Z6angle7i+0x1738>
    e15e:	8e c2       	rjmp	.+1308   	; 0xe67c <_Z6angle7i+0x154e>
    {
     case 11:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    e160:	c6 e8       	ldi	r28, 0x86	; 134
    e162:	d0 e0       	ldi	r29, 0x00	; 0
    e164:	08 81       	ld	r16, Y
    e166:	19 81       	ldd	r17, Y+1	; 0x01
    e168:	e8 80       	ld	r14, Y
    e16a:	f9 80       	ldd	r15, Y+1	; 0x01
    e16c:	00 d0       	rcall	.+0      	; 0xe16e <_Z6angle7i+0x1040>
    e16e:	0f 92       	push	r0
    e170:	8d b6       	in	r8, 0x3d	; 61
    e172:	9e b6       	in	r9, 0x3e	; 62
    e174:	08 94       	sec
    e176:	81 1c       	adc	r8, r1
    e178:	91 1c       	adc	r9, r1
    e17a:	88 27       	eor	r24, r24
    e17c:	77 fd       	sbrc	r23, 7
    e17e:	80 95       	com	r24
    e180:	98 2f       	mov	r25, r24
    e182:	0e 94 ee 79 	call	0xf3dc	; 0xf3dc <__floatsisf>
    e186:	2b 01       	movw	r4, r22
    e188:	3c 01       	movw	r6, r24
    e18a:	c8 01       	movw	r24, r16
    e18c:	68 e2       	ldi	r22, 0x28	; 40
    e18e:	70 e0       	ldi	r23, 0x00	; 0
    e190:	0e 94 05 7b 	call	0xf60a	; 0xf60a <__udivmodhi4>
    e194:	80 e0       	ldi	r24, 0x00	; 0
    e196:	90 e0       	ldi	r25, 0x00	; 0
    e198:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    e19c:	5b 01       	movw	r10, r22
    e19e:	6c 01       	movw	r12, r24
    e1a0:	f6 94       	lsr	r15
    e1a2:	e7 94       	ror	r14
    e1a4:	f6 94       	lsr	r15
    e1a6:	e7 94       	ror	r14
    e1a8:	f6 94       	lsr	r15
    e1aa:	e7 94       	ror	r14
    e1ac:	b7 01       	movw	r22, r14
    e1ae:	80 e0       	ldi	r24, 0x00	; 0
    e1b0:	90 e0       	ldi	r25, 0x00	; 0
    e1b2:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    e1b6:	f4 01       	movw	r30, r8
    e1b8:	60 83       	st	Z, r22
    e1ba:	71 83       	std	Z+1, r23	; 0x01
    e1bc:	82 83       	std	Z+2, r24	; 0x02
    e1be:	93 83       	std	Z+3, r25	; 0x03
    e1c0:	c3 01       	movw	r24, r6
    e1c2:	b2 01       	movw	r22, r4
    e1c4:	20 e0       	ldi	r18, 0x00	; 0
    e1c6:	30 e0       	ldi	r19, 0x00	; 0
    e1c8:	a9 01       	movw	r20, r18
    e1ca:	0f 2e       	mov	r0, r31
    e1cc:	f0 e0       	ldi	r31, 0x00	; 0
    e1ce:	ef 2e       	mov	r14, r31
    e1d0:	f0 e0       	ldi	r31, 0x00	; 0
    e1d2:	ff 2e       	mov	r15, r31
    e1d4:	f4 e3       	ldi	r31, 0x34	; 52
    e1d6:	0f 2f       	mov	r16, r31
    e1d8:	f3 e4       	ldi	r31, 0x43	; 67
    e1da:	1f 2f       	mov	r17, r31
    e1dc:	f0 2d       	mov	r31, r0
    e1de:	0e 94 a0 08 	call	0x1140	; 0x1140 <_Z3mapddddd>
    e1e2:	0f 90       	pop	r0
    e1e4:	0f 90       	pop	r0
    e1e6:	0f 90       	pop	r0
    e1e8:	0f 90       	pop	r0
        OCR1A=ICR1-vAl;
    e1ea:	09 90       	ld	r0, Y+
    e1ec:	d8 81       	ld	r29, Y
    e1ee:	c0 2d       	mov	r28, r0
  void write(int vAl)           //PIN=servo pin no. on mega,vAl=angle F_CPU for the servo at pin
  {
    switch(pIn)
    {
     case 11:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    e1f0:	0e 94 bb 79 	call	0xf376	; 0xf376 <__fixsfsi>
        OCR1A=ICR1-vAl;
    e1f4:	c6 1b       	sub	r28, r22
    e1f6:	d7 0b       	sbc	r29, r23
    e1f8:	d0 93 89 00 	sts	0x0089, r29
    e1fc:	c0 93 88 00 	sts	0x0088, r28
    e200:	32 c3       	rjmp	.+1636   	; 0xe866 <_Z6angle7i+0x1738>
        break;
      case 12:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    e202:	c6 e8       	ldi	r28, 0x86	; 134
    e204:	d0 e0       	ldi	r29, 0x00	; 0
    e206:	08 81       	ld	r16, Y
    e208:	19 81       	ldd	r17, Y+1	; 0x01
    e20a:	e8 80       	ld	r14, Y
    e20c:	f9 80       	ldd	r15, Y+1	; 0x01
    e20e:	00 d0       	rcall	.+0      	; 0xe210 <_Z6angle7i+0x10e2>
    e210:	0f 92       	push	r0
    e212:	8d b6       	in	r8, 0x3d	; 61
    e214:	9e b6       	in	r9, 0x3e	; 62
    e216:	08 94       	sec
    e218:	81 1c       	adc	r8, r1
    e21a:	91 1c       	adc	r9, r1
    e21c:	88 27       	eor	r24, r24
    e21e:	77 fd       	sbrc	r23, 7
    e220:	80 95       	com	r24
    e222:	98 2f       	mov	r25, r24
    e224:	0e 94 ee 79 	call	0xf3dc	; 0xf3dc <__floatsisf>
    e228:	2b 01       	movw	r4, r22
    e22a:	3c 01       	movw	r6, r24
    e22c:	c8 01       	movw	r24, r16
    e22e:	68 e2       	ldi	r22, 0x28	; 40
    e230:	70 e0       	ldi	r23, 0x00	; 0
    e232:	0e 94 05 7b 	call	0xf60a	; 0xf60a <__udivmodhi4>
    e236:	80 e0       	ldi	r24, 0x00	; 0
    e238:	90 e0       	ldi	r25, 0x00	; 0
    e23a:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    e23e:	5b 01       	movw	r10, r22
    e240:	6c 01       	movw	r12, r24
    e242:	f6 94       	lsr	r15
    e244:	e7 94       	ror	r14
    e246:	f6 94       	lsr	r15
    e248:	e7 94       	ror	r14
    e24a:	f6 94       	lsr	r15
    e24c:	e7 94       	ror	r14
    e24e:	b7 01       	movw	r22, r14
    e250:	80 e0       	ldi	r24, 0x00	; 0
    e252:	90 e0       	ldi	r25, 0x00	; 0
    e254:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    e258:	f4 01       	movw	r30, r8
    e25a:	60 83       	st	Z, r22
    e25c:	71 83       	std	Z+1, r23	; 0x01
    e25e:	82 83       	std	Z+2, r24	; 0x02
    e260:	93 83       	std	Z+3, r25	; 0x03
    e262:	c3 01       	movw	r24, r6
    e264:	b2 01       	movw	r22, r4
    e266:	20 e0       	ldi	r18, 0x00	; 0
    e268:	30 e0       	ldi	r19, 0x00	; 0
    e26a:	a9 01       	movw	r20, r18
    e26c:	0f 2e       	mov	r0, r31
    e26e:	f0 e0       	ldi	r31, 0x00	; 0
    e270:	ef 2e       	mov	r14, r31
    e272:	f0 e0       	ldi	r31, 0x00	; 0
    e274:	ff 2e       	mov	r15, r31
    e276:	f4 e3       	ldi	r31, 0x34	; 52
    e278:	0f 2f       	mov	r16, r31
    e27a:	f3 e4       	ldi	r31, 0x43	; 67
    e27c:	1f 2f       	mov	r17, r31
    e27e:	f0 2d       	mov	r31, r0
    e280:	0e 94 a0 08 	call	0x1140	; 0x1140 <_Z3mapddddd>
    e284:	0f 90       	pop	r0
    e286:	0f 90       	pop	r0
    e288:	0f 90       	pop	r0
    e28a:	0f 90       	pop	r0
        OCR1B=ICR1-vAl;
    e28c:	09 90       	ld	r0, Y+
    e28e:	d8 81       	ld	r29, Y
    e290:	c0 2d       	mov	r28, r0
     case 11:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
        OCR1A=ICR1-vAl;
        break;
      case 12:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    e292:	0e 94 bb 79 	call	0xf376	; 0xf376 <__fixsfsi>
        OCR1B=ICR1-vAl;
    e296:	c6 1b       	sub	r28, r22
    e298:	d7 0b       	sbc	r29, r23
    e29a:	d0 93 8b 00 	sts	0x008B, r29
    e29e:	c0 93 8a 00 	sts	0x008A, r28
    e2a2:	e1 c2       	rjmp	.+1474   	; 0xe866 <_Z6angle7i+0x1738>
        break;
      case 5:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    e2a4:	e6 e8       	ldi	r30, 0x86	; 134
    e2a6:	f0 e0       	ldi	r31, 0x00	; 0
    e2a8:	c0 81       	ld	r28, Z
    e2aa:	d1 81       	ldd	r29, Z+1	; 0x01
    e2ac:	80 80       	ld	r8, Z
    e2ae:	91 80       	ldd	r9, Z+1	; 0x01
    e2b0:	00 d0       	rcall	.+0      	; 0xe2b2 <_Z6angle7i+0x1184>
    e2b2:	0f 92       	push	r0
    e2b4:	4d b6       	in	r4, 0x3d	; 61
    e2b6:	5e b6       	in	r5, 0x3e	; 62
    e2b8:	08 94       	sec
    e2ba:	41 1c       	adc	r4, r1
    e2bc:	51 1c       	adc	r5, r1
    e2be:	88 27       	eor	r24, r24
    e2c0:	77 fd       	sbrc	r23, 7
    e2c2:	80 95       	com	r24
    e2c4:	98 2f       	mov	r25, r24
    e2c6:	0e 94 ee 79 	call	0xf3dc	; 0xf3dc <__floatsisf>
    e2ca:	7b 01       	movw	r14, r22
    e2cc:	8c 01       	movw	r16, r24
    e2ce:	ce 01       	movw	r24, r28
    e2d0:	68 e2       	ldi	r22, 0x28	; 40
    e2d2:	70 e0       	ldi	r23, 0x00	; 0
    e2d4:	0e 94 05 7b 	call	0xf60a	; 0xf60a <__udivmodhi4>
    e2d8:	80 e0       	ldi	r24, 0x00	; 0
    e2da:	90 e0       	ldi	r25, 0x00	; 0
    e2dc:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    e2e0:	5b 01       	movw	r10, r22
    e2e2:	6c 01       	movw	r12, r24
    e2e4:	96 94       	lsr	r9
    e2e6:	87 94       	ror	r8
    e2e8:	96 94       	lsr	r9
    e2ea:	87 94       	ror	r8
    e2ec:	96 94       	lsr	r9
    e2ee:	87 94       	ror	r8
    e2f0:	b4 01       	movw	r22, r8
    e2f2:	80 e0       	ldi	r24, 0x00	; 0
    e2f4:	90 e0       	ldi	r25, 0x00	; 0
    e2f6:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    e2fa:	f2 01       	movw	r30, r4
    e2fc:	60 83       	st	Z, r22
    e2fe:	71 83       	std	Z+1, r23	; 0x01
    e300:	82 83       	std	Z+2, r24	; 0x02
    e302:	93 83       	std	Z+3, r25	; 0x03
    e304:	c8 01       	movw	r24, r16
    e306:	b7 01       	movw	r22, r14
    e308:	20 e0       	ldi	r18, 0x00	; 0
    e30a:	30 e0       	ldi	r19, 0x00	; 0
    e30c:	a9 01       	movw	r20, r18
    e30e:	0f 2e       	mov	r0, r31
    e310:	f0 e0       	ldi	r31, 0x00	; 0
    e312:	ef 2e       	mov	r14, r31
    e314:	f0 e0       	ldi	r31, 0x00	; 0
    e316:	ff 2e       	mov	r15, r31
    e318:	f4 e3       	ldi	r31, 0x34	; 52
    e31a:	0f 2f       	mov	r16, r31
    e31c:	f3 e4       	ldi	r31, 0x43	; 67
    e31e:	1f 2f       	mov	r17, r31
    e320:	f0 2d       	mov	r31, r0
    e322:	0e 94 a0 08 	call	0x1140	; 0x1140 <_Z3mapddddd>
    e326:	0f 90       	pop	r0
    e328:	0f 90       	pop	r0
    e32a:	0f 90       	pop	r0
    e32c:	0f 90       	pop	r0
        OCR3A=ICR3-vAl;
    e32e:	c0 91 96 00 	lds	r28, 0x0096
    e332:	d0 91 97 00 	lds	r29, 0x0097
      case 12:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
        OCR1B=ICR1-vAl;
        break;
      case 5:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    e336:	0e 94 bb 79 	call	0xf376	; 0xf376 <__fixsfsi>
        OCR3A=ICR3-vAl;
    e33a:	c6 1b       	sub	r28, r22
    e33c:	d7 0b       	sbc	r29, r23
    e33e:	d0 93 99 00 	sts	0x0099, r29
    e342:	c0 93 98 00 	sts	0x0098, r28
    e346:	8f c2       	rjmp	.+1310   	; 0xe866 <_Z6angle7i+0x1738>
        break;
      case 2:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    e348:	e6 e8       	ldi	r30, 0x86	; 134
    e34a:	f0 e0       	ldi	r31, 0x00	; 0
    e34c:	c0 81       	ld	r28, Z
    e34e:	d1 81       	ldd	r29, Z+1	; 0x01
    e350:	80 80       	ld	r8, Z
    e352:	91 80       	ldd	r9, Z+1	; 0x01
    e354:	00 d0       	rcall	.+0      	; 0xe356 <_Z6angle7i+0x1228>
    e356:	0f 92       	push	r0
    e358:	4d b6       	in	r4, 0x3d	; 61
    e35a:	5e b6       	in	r5, 0x3e	; 62
    e35c:	08 94       	sec
    e35e:	41 1c       	adc	r4, r1
    e360:	51 1c       	adc	r5, r1
    e362:	88 27       	eor	r24, r24
    e364:	77 fd       	sbrc	r23, 7
    e366:	80 95       	com	r24
    e368:	98 2f       	mov	r25, r24
    e36a:	0e 94 ee 79 	call	0xf3dc	; 0xf3dc <__floatsisf>
    e36e:	7b 01       	movw	r14, r22
    e370:	8c 01       	movw	r16, r24
    e372:	ce 01       	movw	r24, r28
    e374:	68 e2       	ldi	r22, 0x28	; 40
    e376:	70 e0       	ldi	r23, 0x00	; 0
    e378:	0e 94 05 7b 	call	0xf60a	; 0xf60a <__udivmodhi4>
    e37c:	80 e0       	ldi	r24, 0x00	; 0
    e37e:	90 e0       	ldi	r25, 0x00	; 0
    e380:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    e384:	5b 01       	movw	r10, r22
    e386:	6c 01       	movw	r12, r24
    e388:	96 94       	lsr	r9
    e38a:	87 94       	ror	r8
    e38c:	96 94       	lsr	r9
    e38e:	87 94       	ror	r8
    e390:	96 94       	lsr	r9
    e392:	87 94       	ror	r8
    e394:	b4 01       	movw	r22, r8
    e396:	80 e0       	ldi	r24, 0x00	; 0
    e398:	90 e0       	ldi	r25, 0x00	; 0
    e39a:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    e39e:	f2 01       	movw	r30, r4
    e3a0:	60 83       	st	Z, r22
    e3a2:	71 83       	std	Z+1, r23	; 0x01
    e3a4:	82 83       	std	Z+2, r24	; 0x02
    e3a6:	93 83       	std	Z+3, r25	; 0x03
    e3a8:	c8 01       	movw	r24, r16
    e3aa:	b7 01       	movw	r22, r14
    e3ac:	20 e0       	ldi	r18, 0x00	; 0
    e3ae:	30 e0       	ldi	r19, 0x00	; 0
    e3b0:	a9 01       	movw	r20, r18
    e3b2:	0f 2e       	mov	r0, r31
    e3b4:	f0 e0       	ldi	r31, 0x00	; 0
    e3b6:	ef 2e       	mov	r14, r31
    e3b8:	f0 e0       	ldi	r31, 0x00	; 0
    e3ba:	ff 2e       	mov	r15, r31
    e3bc:	f4 e3       	ldi	r31, 0x34	; 52
    e3be:	0f 2f       	mov	r16, r31
    e3c0:	f3 e4       	ldi	r31, 0x43	; 67
    e3c2:	1f 2f       	mov	r17, r31
    e3c4:	f0 2d       	mov	r31, r0
    e3c6:	0e 94 a0 08 	call	0x1140	; 0x1140 <_Z3mapddddd>
    e3ca:	0f 90       	pop	r0
    e3cc:	0f 90       	pop	r0
    e3ce:	0f 90       	pop	r0
    e3d0:	0f 90       	pop	r0
        OCR3B=ICR3-vAl;
    e3d2:	c0 91 96 00 	lds	r28, 0x0096
    e3d6:	d0 91 97 00 	lds	r29, 0x0097
      case 5:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
        OCR3A=ICR3-vAl;
        break;
      case 2:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    e3da:	0e 94 bb 79 	call	0xf376	; 0xf376 <__fixsfsi>
        OCR3B=ICR3-vAl;
    e3de:	c6 1b       	sub	r28, r22
    e3e0:	d7 0b       	sbc	r29, r23
    e3e2:	d0 93 9b 00 	sts	0x009B, r29
    e3e6:	c0 93 9a 00 	sts	0x009A, r28
    e3ea:	3d c2       	rjmp	.+1146   	; 0xe866 <_Z6angle7i+0x1738>
        break;
      case 3:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    e3ec:	e6 e8       	ldi	r30, 0x86	; 134
    e3ee:	f0 e0       	ldi	r31, 0x00	; 0
    e3f0:	c0 81       	ld	r28, Z
    e3f2:	d1 81       	ldd	r29, Z+1	; 0x01
    e3f4:	80 80       	ld	r8, Z
    e3f6:	91 80       	ldd	r9, Z+1	; 0x01
    e3f8:	00 d0       	rcall	.+0      	; 0xe3fa <_Z6angle7i+0x12cc>
    e3fa:	0f 92       	push	r0
    e3fc:	4d b6       	in	r4, 0x3d	; 61
    e3fe:	5e b6       	in	r5, 0x3e	; 62
    e400:	08 94       	sec
    e402:	41 1c       	adc	r4, r1
    e404:	51 1c       	adc	r5, r1
    e406:	88 27       	eor	r24, r24
    e408:	77 fd       	sbrc	r23, 7
    e40a:	80 95       	com	r24
    e40c:	98 2f       	mov	r25, r24
    e40e:	0e 94 ee 79 	call	0xf3dc	; 0xf3dc <__floatsisf>
    e412:	7b 01       	movw	r14, r22
    e414:	8c 01       	movw	r16, r24
    e416:	ce 01       	movw	r24, r28
    e418:	68 e2       	ldi	r22, 0x28	; 40
    e41a:	70 e0       	ldi	r23, 0x00	; 0
    e41c:	0e 94 05 7b 	call	0xf60a	; 0xf60a <__udivmodhi4>
    e420:	80 e0       	ldi	r24, 0x00	; 0
    e422:	90 e0       	ldi	r25, 0x00	; 0
    e424:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    e428:	5b 01       	movw	r10, r22
    e42a:	6c 01       	movw	r12, r24
    e42c:	96 94       	lsr	r9
    e42e:	87 94       	ror	r8
    e430:	96 94       	lsr	r9
    e432:	87 94       	ror	r8
    e434:	96 94       	lsr	r9
    e436:	87 94       	ror	r8
    e438:	b4 01       	movw	r22, r8
    e43a:	80 e0       	ldi	r24, 0x00	; 0
    e43c:	90 e0       	ldi	r25, 0x00	; 0
    e43e:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    e442:	f2 01       	movw	r30, r4
    e444:	60 83       	st	Z, r22
    e446:	71 83       	std	Z+1, r23	; 0x01
    e448:	82 83       	std	Z+2, r24	; 0x02
    e44a:	93 83       	std	Z+3, r25	; 0x03
    e44c:	c8 01       	movw	r24, r16
    e44e:	b7 01       	movw	r22, r14
    e450:	20 e0       	ldi	r18, 0x00	; 0
    e452:	30 e0       	ldi	r19, 0x00	; 0
    e454:	a9 01       	movw	r20, r18
    e456:	0f 2e       	mov	r0, r31
    e458:	f0 e0       	ldi	r31, 0x00	; 0
    e45a:	ef 2e       	mov	r14, r31
    e45c:	f0 e0       	ldi	r31, 0x00	; 0
    e45e:	ff 2e       	mov	r15, r31
    e460:	f4 e3       	ldi	r31, 0x34	; 52
    e462:	0f 2f       	mov	r16, r31
    e464:	f3 e4       	ldi	r31, 0x43	; 67
    e466:	1f 2f       	mov	r17, r31
    e468:	f0 2d       	mov	r31, r0
    e46a:	0e 94 a0 08 	call	0x1140	; 0x1140 <_Z3mapddddd>
    e46e:	0f 90       	pop	r0
    e470:	0f 90       	pop	r0
    e472:	0f 90       	pop	r0
    e474:	0f 90       	pop	r0
        OCR3C=ICR3-vAl;
    e476:	c0 91 96 00 	lds	r28, 0x0096
    e47a:	d0 91 97 00 	lds	r29, 0x0097
      case 2:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
        OCR3B=ICR3-vAl;
        break;
      case 3:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    e47e:	0e 94 bb 79 	call	0xf376	; 0xf376 <__fixsfsi>
        OCR3C=ICR3-vAl;
    e482:	c6 1b       	sub	r28, r22
    e484:	d7 0b       	sbc	r29, r23
    e486:	d0 93 9d 00 	sts	0x009D, r29
    e48a:	c0 93 9c 00 	sts	0x009C, r28
    e48e:	eb c1       	rjmp	.+982    	; 0xe866 <_Z6angle7i+0x1738>
        break;
      case 6:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    e490:	e6 e8       	ldi	r30, 0x86	; 134
    e492:	f0 e0       	ldi	r31, 0x00	; 0
    e494:	c0 81       	ld	r28, Z
    e496:	d1 81       	ldd	r29, Z+1	; 0x01
    e498:	80 80       	ld	r8, Z
    e49a:	91 80       	ldd	r9, Z+1	; 0x01
    e49c:	00 d0       	rcall	.+0      	; 0xe49e <_Z6angle7i+0x1370>
    e49e:	0f 92       	push	r0
    e4a0:	4d b6       	in	r4, 0x3d	; 61
    e4a2:	5e b6       	in	r5, 0x3e	; 62
    e4a4:	08 94       	sec
    e4a6:	41 1c       	adc	r4, r1
    e4a8:	51 1c       	adc	r5, r1
    e4aa:	88 27       	eor	r24, r24
    e4ac:	77 fd       	sbrc	r23, 7
    e4ae:	80 95       	com	r24
    e4b0:	98 2f       	mov	r25, r24
    e4b2:	0e 94 ee 79 	call	0xf3dc	; 0xf3dc <__floatsisf>
    e4b6:	7b 01       	movw	r14, r22
    e4b8:	8c 01       	movw	r16, r24
    e4ba:	ce 01       	movw	r24, r28
    e4bc:	68 e2       	ldi	r22, 0x28	; 40
    e4be:	70 e0       	ldi	r23, 0x00	; 0
    e4c0:	0e 94 05 7b 	call	0xf60a	; 0xf60a <__udivmodhi4>
    e4c4:	80 e0       	ldi	r24, 0x00	; 0
    e4c6:	90 e0       	ldi	r25, 0x00	; 0
    e4c8:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    e4cc:	5b 01       	movw	r10, r22
    e4ce:	6c 01       	movw	r12, r24
    e4d0:	96 94       	lsr	r9
    e4d2:	87 94       	ror	r8
    e4d4:	96 94       	lsr	r9
    e4d6:	87 94       	ror	r8
    e4d8:	96 94       	lsr	r9
    e4da:	87 94       	ror	r8
    e4dc:	b4 01       	movw	r22, r8
    e4de:	80 e0       	ldi	r24, 0x00	; 0
    e4e0:	90 e0       	ldi	r25, 0x00	; 0
    e4e2:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    e4e6:	f2 01       	movw	r30, r4
    e4e8:	60 83       	st	Z, r22
    e4ea:	71 83       	std	Z+1, r23	; 0x01
    e4ec:	82 83       	std	Z+2, r24	; 0x02
    e4ee:	93 83       	std	Z+3, r25	; 0x03
    e4f0:	c8 01       	movw	r24, r16
    e4f2:	b7 01       	movw	r22, r14
    e4f4:	20 e0       	ldi	r18, 0x00	; 0
    e4f6:	30 e0       	ldi	r19, 0x00	; 0
    e4f8:	a9 01       	movw	r20, r18
    e4fa:	0f 2e       	mov	r0, r31
    e4fc:	f0 e0       	ldi	r31, 0x00	; 0
    e4fe:	ef 2e       	mov	r14, r31
    e500:	f0 e0       	ldi	r31, 0x00	; 0
    e502:	ff 2e       	mov	r15, r31
    e504:	f4 e3       	ldi	r31, 0x34	; 52
    e506:	0f 2f       	mov	r16, r31
    e508:	f3 e4       	ldi	r31, 0x43	; 67
    e50a:	1f 2f       	mov	r17, r31
    e50c:	f0 2d       	mov	r31, r0
    e50e:	0e 94 a0 08 	call	0x1140	; 0x1140 <_Z3mapddddd>
    e512:	0f 90       	pop	r0
    e514:	0f 90       	pop	r0
    e516:	0f 90       	pop	r0
    e518:	0f 90       	pop	r0
        OCR4A=ICR4-vAl;
    e51a:	c0 91 a6 00 	lds	r28, 0x00A6
    e51e:	d0 91 a7 00 	lds	r29, 0x00A7
      case 3:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
        OCR3C=ICR3-vAl;
        break;
      case 6:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    e522:	0e 94 bb 79 	call	0xf376	; 0xf376 <__fixsfsi>
        OCR4A=ICR4-vAl;
    e526:	c6 1b       	sub	r28, r22
    e528:	d7 0b       	sbc	r29, r23
    e52a:	d0 93 a9 00 	sts	0x00A9, r29
    e52e:	c0 93 a8 00 	sts	0x00A8, r28
    e532:	99 c1       	rjmp	.+818    	; 0xe866 <_Z6angle7i+0x1738>
        break;
      case 7:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    e534:	e6 e8       	ldi	r30, 0x86	; 134
    e536:	f0 e0       	ldi	r31, 0x00	; 0
    e538:	c0 81       	ld	r28, Z
    e53a:	d1 81       	ldd	r29, Z+1	; 0x01
    e53c:	80 80       	ld	r8, Z
    e53e:	91 80       	ldd	r9, Z+1	; 0x01
    e540:	00 d0       	rcall	.+0      	; 0xe542 <_Z6angle7i+0x1414>
    e542:	0f 92       	push	r0
    e544:	4d b6       	in	r4, 0x3d	; 61
    e546:	5e b6       	in	r5, 0x3e	; 62
    e548:	08 94       	sec
    e54a:	41 1c       	adc	r4, r1
    e54c:	51 1c       	adc	r5, r1
    e54e:	88 27       	eor	r24, r24
    e550:	77 fd       	sbrc	r23, 7
    e552:	80 95       	com	r24
    e554:	98 2f       	mov	r25, r24
    e556:	0e 94 ee 79 	call	0xf3dc	; 0xf3dc <__floatsisf>
    e55a:	7b 01       	movw	r14, r22
    e55c:	8c 01       	movw	r16, r24
    e55e:	ce 01       	movw	r24, r28
    e560:	68 e2       	ldi	r22, 0x28	; 40
    e562:	70 e0       	ldi	r23, 0x00	; 0
    e564:	0e 94 05 7b 	call	0xf60a	; 0xf60a <__udivmodhi4>
    e568:	80 e0       	ldi	r24, 0x00	; 0
    e56a:	90 e0       	ldi	r25, 0x00	; 0
    e56c:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    e570:	5b 01       	movw	r10, r22
    e572:	6c 01       	movw	r12, r24
    e574:	96 94       	lsr	r9
    e576:	87 94       	ror	r8
    e578:	96 94       	lsr	r9
    e57a:	87 94       	ror	r8
    e57c:	96 94       	lsr	r9
    e57e:	87 94       	ror	r8
    e580:	b4 01       	movw	r22, r8
    e582:	80 e0       	ldi	r24, 0x00	; 0
    e584:	90 e0       	ldi	r25, 0x00	; 0
    e586:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    e58a:	f2 01       	movw	r30, r4
    e58c:	60 83       	st	Z, r22
    e58e:	71 83       	std	Z+1, r23	; 0x01
    e590:	82 83       	std	Z+2, r24	; 0x02
    e592:	93 83       	std	Z+3, r25	; 0x03
    e594:	c8 01       	movw	r24, r16
    e596:	b7 01       	movw	r22, r14
    e598:	20 e0       	ldi	r18, 0x00	; 0
    e59a:	30 e0       	ldi	r19, 0x00	; 0
    e59c:	a9 01       	movw	r20, r18
    e59e:	0f 2e       	mov	r0, r31
    e5a0:	f0 e0       	ldi	r31, 0x00	; 0
    e5a2:	ef 2e       	mov	r14, r31
    e5a4:	f0 e0       	ldi	r31, 0x00	; 0
    e5a6:	ff 2e       	mov	r15, r31
    e5a8:	f4 e3       	ldi	r31, 0x34	; 52
    e5aa:	0f 2f       	mov	r16, r31
    e5ac:	f3 e4       	ldi	r31, 0x43	; 67
    e5ae:	1f 2f       	mov	r17, r31
    e5b0:	f0 2d       	mov	r31, r0
    e5b2:	0e 94 a0 08 	call	0x1140	; 0x1140 <_Z3mapddddd>
    e5b6:	0f 90       	pop	r0
    e5b8:	0f 90       	pop	r0
    e5ba:	0f 90       	pop	r0
    e5bc:	0f 90       	pop	r0
        OCR4B=ICR4-vAl;
    e5be:	c0 91 a6 00 	lds	r28, 0x00A6
    e5c2:	d0 91 a7 00 	lds	r29, 0x00A7
      case 6:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
        OCR4A=ICR4-vAl;
        break;
      case 7:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    e5c6:	0e 94 bb 79 	call	0xf376	; 0xf376 <__fixsfsi>
        OCR4B=ICR4-vAl;
    e5ca:	c6 1b       	sub	r28, r22
    e5cc:	d7 0b       	sbc	r29, r23
    e5ce:	d0 93 ab 00 	sts	0x00AB, r29
    e5d2:	c0 93 aa 00 	sts	0x00AA, r28
    e5d6:	47 c1       	rjmp	.+654    	; 0xe866 <_Z6angle7i+0x1738>
        break; 
      case 8:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    e5d8:	e6 e8       	ldi	r30, 0x86	; 134
    e5da:	f0 e0       	ldi	r31, 0x00	; 0
    e5dc:	c0 81       	ld	r28, Z
    e5de:	d1 81       	ldd	r29, Z+1	; 0x01
    e5e0:	80 80       	ld	r8, Z
    e5e2:	91 80       	ldd	r9, Z+1	; 0x01
    e5e4:	00 d0       	rcall	.+0      	; 0xe5e6 <_Z6angle7i+0x14b8>
    e5e6:	0f 92       	push	r0
    e5e8:	4d b6       	in	r4, 0x3d	; 61
    e5ea:	5e b6       	in	r5, 0x3e	; 62
    e5ec:	08 94       	sec
    e5ee:	41 1c       	adc	r4, r1
    e5f0:	51 1c       	adc	r5, r1
    e5f2:	88 27       	eor	r24, r24
    e5f4:	77 fd       	sbrc	r23, 7
    e5f6:	80 95       	com	r24
    e5f8:	98 2f       	mov	r25, r24
    e5fa:	0e 94 ee 79 	call	0xf3dc	; 0xf3dc <__floatsisf>
    e5fe:	7b 01       	movw	r14, r22
    e600:	8c 01       	movw	r16, r24
    e602:	ce 01       	movw	r24, r28
    e604:	68 e2       	ldi	r22, 0x28	; 40
    e606:	70 e0       	ldi	r23, 0x00	; 0
    e608:	0e 94 05 7b 	call	0xf60a	; 0xf60a <__udivmodhi4>
    e60c:	80 e0       	ldi	r24, 0x00	; 0
    e60e:	90 e0       	ldi	r25, 0x00	; 0
    e610:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    e614:	5b 01       	movw	r10, r22
    e616:	6c 01       	movw	r12, r24
    e618:	96 94       	lsr	r9
    e61a:	87 94       	ror	r8
    e61c:	96 94       	lsr	r9
    e61e:	87 94       	ror	r8
    e620:	96 94       	lsr	r9
    e622:	87 94       	ror	r8
    e624:	b4 01       	movw	r22, r8
    e626:	80 e0       	ldi	r24, 0x00	; 0
    e628:	90 e0       	ldi	r25, 0x00	; 0
    e62a:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    e62e:	f2 01       	movw	r30, r4
    e630:	60 83       	st	Z, r22
    e632:	71 83       	std	Z+1, r23	; 0x01
    e634:	82 83       	std	Z+2, r24	; 0x02
    e636:	93 83       	std	Z+3, r25	; 0x03
    e638:	c8 01       	movw	r24, r16
    e63a:	b7 01       	movw	r22, r14
    e63c:	20 e0       	ldi	r18, 0x00	; 0
    e63e:	30 e0       	ldi	r19, 0x00	; 0
    e640:	a9 01       	movw	r20, r18
    e642:	0f 2e       	mov	r0, r31
    e644:	f0 e0       	ldi	r31, 0x00	; 0
    e646:	ef 2e       	mov	r14, r31
    e648:	f0 e0       	ldi	r31, 0x00	; 0
    e64a:	ff 2e       	mov	r15, r31
    e64c:	f4 e3       	ldi	r31, 0x34	; 52
    e64e:	0f 2f       	mov	r16, r31
    e650:	f3 e4       	ldi	r31, 0x43	; 67
    e652:	1f 2f       	mov	r17, r31
    e654:	f0 2d       	mov	r31, r0
    e656:	0e 94 a0 08 	call	0x1140	; 0x1140 <_Z3mapddddd>
    e65a:	0f 90       	pop	r0
    e65c:	0f 90       	pop	r0
    e65e:	0f 90       	pop	r0
    e660:	0f 90       	pop	r0
        OCR4C=ICR4-vAl;
    e662:	c0 91 a6 00 	lds	r28, 0x00A6
    e666:	d0 91 a7 00 	lds	r29, 0x00A7
      case 7:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
        OCR4B=ICR4-vAl;
        break; 
      case 8:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    e66a:	0e 94 bb 79 	call	0xf376	; 0xf376 <__fixsfsi>
        OCR4C=ICR4-vAl;
    e66e:	c6 1b       	sub	r28, r22
    e670:	d7 0b       	sbc	r29, r23
    e672:	d0 93 ad 00 	sts	0x00AD, r29
    e676:	c0 93 ac 00 	sts	0x00AC, r28
    e67a:	f5 c0       	rjmp	.+490    	; 0xe866 <_Z6angle7i+0x1738>
        break;
      case 46:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    e67c:	e6 e8       	ldi	r30, 0x86	; 134
    e67e:	f0 e0       	ldi	r31, 0x00	; 0
    e680:	c0 81       	ld	r28, Z
    e682:	d1 81       	ldd	r29, Z+1	; 0x01
    e684:	80 80       	ld	r8, Z
    e686:	91 80       	ldd	r9, Z+1	; 0x01
    e688:	00 d0       	rcall	.+0      	; 0xe68a <_Z6angle7i+0x155c>
    e68a:	0f 92       	push	r0
    e68c:	4d b6       	in	r4, 0x3d	; 61
    e68e:	5e b6       	in	r5, 0x3e	; 62
    e690:	08 94       	sec
    e692:	41 1c       	adc	r4, r1
    e694:	51 1c       	adc	r5, r1
    e696:	88 27       	eor	r24, r24
    e698:	77 fd       	sbrc	r23, 7
    e69a:	80 95       	com	r24
    e69c:	98 2f       	mov	r25, r24
    e69e:	0e 94 ee 79 	call	0xf3dc	; 0xf3dc <__floatsisf>
    e6a2:	7b 01       	movw	r14, r22
    e6a4:	8c 01       	movw	r16, r24
    e6a6:	ce 01       	movw	r24, r28
    e6a8:	68 e2       	ldi	r22, 0x28	; 40
    e6aa:	70 e0       	ldi	r23, 0x00	; 0
    e6ac:	0e 94 05 7b 	call	0xf60a	; 0xf60a <__udivmodhi4>
    e6b0:	80 e0       	ldi	r24, 0x00	; 0
    e6b2:	90 e0       	ldi	r25, 0x00	; 0
    e6b4:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    e6b8:	5b 01       	movw	r10, r22
    e6ba:	6c 01       	movw	r12, r24
    e6bc:	96 94       	lsr	r9
    e6be:	87 94       	ror	r8
    e6c0:	96 94       	lsr	r9
    e6c2:	87 94       	ror	r8
    e6c4:	96 94       	lsr	r9
    e6c6:	87 94       	ror	r8
    e6c8:	b4 01       	movw	r22, r8
    e6ca:	80 e0       	ldi	r24, 0x00	; 0
    e6cc:	90 e0       	ldi	r25, 0x00	; 0
    e6ce:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    e6d2:	f2 01       	movw	r30, r4
    e6d4:	60 83       	st	Z, r22
    e6d6:	71 83       	std	Z+1, r23	; 0x01
    e6d8:	82 83       	std	Z+2, r24	; 0x02
    e6da:	93 83       	std	Z+3, r25	; 0x03
    e6dc:	c8 01       	movw	r24, r16
    e6de:	b7 01       	movw	r22, r14
    e6e0:	20 e0       	ldi	r18, 0x00	; 0
    e6e2:	30 e0       	ldi	r19, 0x00	; 0
    e6e4:	a9 01       	movw	r20, r18
    e6e6:	0f 2e       	mov	r0, r31
    e6e8:	f0 e0       	ldi	r31, 0x00	; 0
    e6ea:	ef 2e       	mov	r14, r31
    e6ec:	f0 e0       	ldi	r31, 0x00	; 0
    e6ee:	ff 2e       	mov	r15, r31
    e6f0:	f4 e3       	ldi	r31, 0x34	; 52
    e6f2:	0f 2f       	mov	r16, r31
    e6f4:	f3 e4       	ldi	r31, 0x43	; 67
    e6f6:	1f 2f       	mov	r17, r31
    e6f8:	f0 2d       	mov	r31, r0
    e6fa:	0e 94 a0 08 	call	0x1140	; 0x1140 <_Z3mapddddd>
    e6fe:	0f 90       	pop	r0
    e700:	0f 90       	pop	r0
    e702:	0f 90       	pop	r0
    e704:	0f 90       	pop	r0
        OCR5A=ICR5-vAl;
    e706:	c0 91 26 01 	lds	r28, 0x0126
    e70a:	d0 91 27 01 	lds	r29, 0x0127
      case 8:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
        OCR4C=ICR4-vAl;
        break;
      case 46:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    e70e:	0e 94 bb 79 	call	0xf376	; 0xf376 <__fixsfsi>
        OCR5A=ICR5-vAl;
    e712:	c6 1b       	sub	r28, r22
    e714:	d7 0b       	sbc	r29, r23
    e716:	d0 93 29 01 	sts	0x0129, r29
    e71a:	c0 93 28 01 	sts	0x0128, r28
    e71e:	a3 c0       	rjmp	.+326    	; 0xe866 <_Z6angle7i+0x1738>
        break;
      case 45:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    e720:	e6 e8       	ldi	r30, 0x86	; 134
    e722:	f0 e0       	ldi	r31, 0x00	; 0
    e724:	c0 81       	ld	r28, Z
    e726:	d1 81       	ldd	r29, Z+1	; 0x01
    e728:	80 80       	ld	r8, Z
    e72a:	91 80       	ldd	r9, Z+1	; 0x01
    e72c:	00 d0       	rcall	.+0      	; 0xe72e <_Z6angle7i+0x1600>
    e72e:	0f 92       	push	r0
    e730:	4d b6       	in	r4, 0x3d	; 61
    e732:	5e b6       	in	r5, 0x3e	; 62
    e734:	08 94       	sec
    e736:	41 1c       	adc	r4, r1
    e738:	51 1c       	adc	r5, r1
    e73a:	88 27       	eor	r24, r24
    e73c:	77 fd       	sbrc	r23, 7
    e73e:	80 95       	com	r24
    e740:	98 2f       	mov	r25, r24
    e742:	0e 94 ee 79 	call	0xf3dc	; 0xf3dc <__floatsisf>
    e746:	7b 01       	movw	r14, r22
    e748:	8c 01       	movw	r16, r24
    e74a:	ce 01       	movw	r24, r28
    e74c:	68 e2       	ldi	r22, 0x28	; 40
    e74e:	70 e0       	ldi	r23, 0x00	; 0
    e750:	0e 94 05 7b 	call	0xf60a	; 0xf60a <__udivmodhi4>
    e754:	80 e0       	ldi	r24, 0x00	; 0
    e756:	90 e0       	ldi	r25, 0x00	; 0
    e758:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    e75c:	5b 01       	movw	r10, r22
    e75e:	6c 01       	movw	r12, r24
    e760:	96 94       	lsr	r9
    e762:	87 94       	ror	r8
    e764:	96 94       	lsr	r9
    e766:	87 94       	ror	r8
    e768:	96 94       	lsr	r9
    e76a:	87 94       	ror	r8
    e76c:	b4 01       	movw	r22, r8
    e76e:	80 e0       	ldi	r24, 0x00	; 0
    e770:	90 e0       	ldi	r25, 0x00	; 0
    e772:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    e776:	f2 01       	movw	r30, r4
    e778:	60 83       	st	Z, r22
    e77a:	71 83       	std	Z+1, r23	; 0x01
    e77c:	82 83       	std	Z+2, r24	; 0x02
    e77e:	93 83       	std	Z+3, r25	; 0x03
    e780:	c8 01       	movw	r24, r16
    e782:	b7 01       	movw	r22, r14
    e784:	20 e0       	ldi	r18, 0x00	; 0
    e786:	30 e0       	ldi	r19, 0x00	; 0
    e788:	a9 01       	movw	r20, r18
    e78a:	0f 2e       	mov	r0, r31
    e78c:	f0 e0       	ldi	r31, 0x00	; 0
    e78e:	ef 2e       	mov	r14, r31
    e790:	f0 e0       	ldi	r31, 0x00	; 0
    e792:	ff 2e       	mov	r15, r31
    e794:	f4 e3       	ldi	r31, 0x34	; 52
    e796:	0f 2f       	mov	r16, r31
    e798:	f3 e4       	ldi	r31, 0x43	; 67
    e79a:	1f 2f       	mov	r17, r31
    e79c:	f0 2d       	mov	r31, r0
    e79e:	0e 94 a0 08 	call	0x1140	; 0x1140 <_Z3mapddddd>
    e7a2:	0f 90       	pop	r0
    e7a4:	0f 90       	pop	r0
    e7a6:	0f 90       	pop	r0
    e7a8:	0f 90       	pop	r0
        OCR5B=ICR5-vAl;
    e7aa:	c0 91 26 01 	lds	r28, 0x0126
    e7ae:	d0 91 27 01 	lds	r29, 0x0127
      case 46:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
        OCR5A=ICR5-vAl;
        break;
      case 45:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    e7b2:	0e 94 bb 79 	call	0xf376	; 0xf376 <__fixsfsi>
        OCR5B=ICR5-vAl;
    e7b6:	c6 1b       	sub	r28, r22
    e7b8:	d7 0b       	sbc	r29, r23
    e7ba:	d0 93 2b 01 	sts	0x012B, r29
    e7be:	c0 93 2a 01 	sts	0x012A, r28
    e7c2:	51 c0       	rjmp	.+162    	; 0xe866 <_Z6angle7i+0x1738>
        break;
      case 44:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    e7c4:	e6 e8       	ldi	r30, 0x86	; 134
    e7c6:	f0 e0       	ldi	r31, 0x00	; 0
    e7c8:	c0 81       	ld	r28, Z
    e7ca:	d1 81       	ldd	r29, Z+1	; 0x01
    e7cc:	80 80       	ld	r8, Z
    e7ce:	91 80       	ldd	r9, Z+1	; 0x01
    e7d0:	00 d0       	rcall	.+0      	; 0xe7d2 <_Z6angle7i+0x16a4>
    e7d2:	0f 92       	push	r0
    e7d4:	4d b6       	in	r4, 0x3d	; 61
    e7d6:	5e b6       	in	r5, 0x3e	; 62
    e7d8:	08 94       	sec
    e7da:	41 1c       	adc	r4, r1
    e7dc:	51 1c       	adc	r5, r1
    e7de:	88 27       	eor	r24, r24
    e7e0:	77 fd       	sbrc	r23, 7
    e7e2:	80 95       	com	r24
    e7e4:	98 2f       	mov	r25, r24
    e7e6:	0e 94 ee 79 	call	0xf3dc	; 0xf3dc <__floatsisf>
    e7ea:	7b 01       	movw	r14, r22
    e7ec:	8c 01       	movw	r16, r24
    e7ee:	ce 01       	movw	r24, r28
    e7f0:	68 e2       	ldi	r22, 0x28	; 40
    e7f2:	70 e0       	ldi	r23, 0x00	; 0
    e7f4:	0e 94 05 7b 	call	0xf60a	; 0xf60a <__udivmodhi4>
    e7f8:	80 e0       	ldi	r24, 0x00	; 0
    e7fa:	90 e0       	ldi	r25, 0x00	; 0
    e7fc:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    e800:	5b 01       	movw	r10, r22
    e802:	6c 01       	movw	r12, r24
    e804:	96 94       	lsr	r9
    e806:	87 94       	ror	r8
    e808:	96 94       	lsr	r9
    e80a:	87 94       	ror	r8
    e80c:	96 94       	lsr	r9
    e80e:	87 94       	ror	r8
    e810:	b4 01       	movw	r22, r8
    e812:	80 e0       	ldi	r24, 0x00	; 0
    e814:	90 e0       	ldi	r25, 0x00	; 0
    e816:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    e81a:	f2 01       	movw	r30, r4
    e81c:	60 83       	st	Z, r22
    e81e:	71 83       	std	Z+1, r23	; 0x01
    e820:	82 83       	std	Z+2, r24	; 0x02
    e822:	93 83       	std	Z+3, r25	; 0x03
    e824:	c8 01       	movw	r24, r16
    e826:	b7 01       	movw	r22, r14
    e828:	20 e0       	ldi	r18, 0x00	; 0
    e82a:	30 e0       	ldi	r19, 0x00	; 0
    e82c:	a9 01       	movw	r20, r18
    e82e:	0f 2e       	mov	r0, r31
    e830:	f0 e0       	ldi	r31, 0x00	; 0
    e832:	ef 2e       	mov	r14, r31
    e834:	f0 e0       	ldi	r31, 0x00	; 0
    e836:	ff 2e       	mov	r15, r31
    e838:	f4 e3       	ldi	r31, 0x34	; 52
    e83a:	0f 2f       	mov	r16, r31
    e83c:	f3 e4       	ldi	r31, 0x43	; 67
    e83e:	1f 2f       	mov	r17, r31
    e840:	f0 2d       	mov	r31, r0
    e842:	0e 94 a0 08 	call	0x1140	; 0x1140 <_Z3mapddddd>
    e846:	0f 90       	pop	r0
    e848:	0f 90       	pop	r0
    e84a:	0f 90       	pop	r0
    e84c:	0f 90       	pop	r0
        OCR5C=ICR5-vAl;
    e84e:	c0 91 26 01 	lds	r28, 0x0126
    e852:	d0 91 27 01 	lds	r29, 0x0127
      case 45:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
        OCR5B=ICR5-vAl;
        break;
      case 44:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    e856:	0e 94 bb 79 	call	0xf376	; 0xf376 <__fixsfsi>
        OCR5C=ICR5-vAl;
    e85a:	c6 1b       	sub	r28, r22
    e85c:	d7 0b       	sbc	r29, r23
    e85e:	d0 93 2d 01 	sts	0x012D, r29
    e862:	c0 93 2c 01 	sts	0x012C, r28
		s.write(w);
    e866:	60 91 d0 02 	lds	r22, 0x02D0
    e86a:	70 91 d1 02 	lds	r23, 0x02D1
     }
  }

  void write(int vAl)           //PIN=servo pin no. on mega,vAl=angle F_CPU for the servo at pin
  {
    switch(pIn)
    e86e:	80 91 d7 02 	lds	r24, 0x02D7
    e872:	88 30       	cpi	r24, 0x08	; 8
    e874:	09 f4       	brne	.+2      	; 0xe878 <_Z6angle7i+0x174a>
    e876:	63 c2       	rjmp	.+1222   	; 0xed3e <_Z6angle7i+0x1c10>
    e878:	89 30       	cpi	r24, 0x09	; 9
    e87a:	98 f4       	brcc	.+38     	; 0xe8a2 <_Z6angle7i+0x1774>
    e87c:	85 30       	cpi	r24, 0x05	; 5
    e87e:	09 f4       	brne	.+2      	; 0xe882 <_Z6angle7i+0x1754>
    e880:	c4 c0       	rjmp	.+392    	; 0xea0a <_Z6angle7i+0x18dc>
    e882:	86 30       	cpi	r24, 0x06	; 6
    e884:	38 f4       	brcc	.+14     	; 0xe894 <_Z6angle7i+0x1766>
    e886:	82 30       	cpi	r24, 0x02	; 2
    e888:	09 f4       	brne	.+2      	; 0xe88c <_Z6angle7i+0x175e>
    e88a:	11 c1       	rjmp	.+546    	; 0xeaae <_Z6angle7i+0x1980>
    e88c:	83 30       	cpi	r24, 0x03	; 3
    e88e:	09 f0       	breq	.+2      	; 0xe892 <_Z6angle7i+0x1764>
    e890:	9d c3       	rjmp	.+1850   	; 0xefcc <_Z6angle7i+0x1e9e>
    e892:	5f c1       	rjmp	.+702    	; 0xeb52 <_Z6angle7i+0x1a24>
    e894:	86 30       	cpi	r24, 0x06	; 6
    e896:	09 f4       	brne	.+2      	; 0xe89a <_Z6angle7i+0x176c>
    e898:	ae c1       	rjmp	.+860    	; 0xebf6 <_Z6angle7i+0x1ac8>
    e89a:	87 30       	cpi	r24, 0x07	; 7
    e89c:	09 f0       	breq	.+2      	; 0xe8a0 <_Z6angle7i+0x1772>
    e89e:	96 c3       	rjmp	.+1836   	; 0xefcc <_Z6angle7i+0x1e9e>
    e8a0:	fc c1       	rjmp	.+1016   	; 0xec9a <_Z6angle7i+0x1b6c>
    e8a2:	8c 32       	cpi	r24, 0x2C	; 44
    e8a4:	09 f4       	brne	.+2      	; 0xe8a8 <_Z6angle7i+0x177a>
    e8a6:	41 c3       	rjmp	.+1666   	; 0xef2a <_Z6angle7i+0x1dfc>
    e8a8:	8d 32       	cpi	r24, 0x2D	; 45
    e8aa:	30 f4       	brcc	.+12     	; 0xe8b8 <_Z6angle7i+0x178a>
    e8ac:	8b 30       	cpi	r24, 0x0B	; 11
    e8ae:	59 f0       	breq	.+22     	; 0xe8c6 <_Z6angle7i+0x1798>
    e8b0:	8c 30       	cpi	r24, 0x0C	; 12
    e8b2:	09 f0       	breq	.+2      	; 0xe8b6 <_Z6angle7i+0x1788>
    e8b4:	8b c3       	rjmp	.+1814   	; 0xefcc <_Z6angle7i+0x1e9e>
    e8b6:	58 c0       	rjmp	.+176    	; 0xe968 <_Z6angle7i+0x183a>
    e8b8:	8d 32       	cpi	r24, 0x2D	; 45
    e8ba:	09 f4       	brne	.+2      	; 0xe8be <_Z6angle7i+0x1790>
    e8bc:	e4 c2       	rjmp	.+1480   	; 0xee86 <_Z6angle7i+0x1d58>
    e8be:	8e 32       	cpi	r24, 0x2E	; 46
    e8c0:	09 f0       	breq	.+2      	; 0xe8c4 <_Z6angle7i+0x1796>
    e8c2:	84 c3       	rjmp	.+1800   	; 0xefcc <_Z6angle7i+0x1e9e>
    e8c4:	8e c2       	rjmp	.+1308   	; 0xede2 <_Z6angle7i+0x1cb4>
    {
     case 11:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    e8c6:	c6 e8       	ldi	r28, 0x86	; 134
    e8c8:	d0 e0       	ldi	r29, 0x00	; 0
    e8ca:	08 81       	ld	r16, Y
    e8cc:	19 81       	ldd	r17, Y+1	; 0x01
    e8ce:	e8 80       	ld	r14, Y
    e8d0:	f9 80       	ldd	r15, Y+1	; 0x01
    e8d2:	00 d0       	rcall	.+0      	; 0xe8d4 <_Z6angle7i+0x17a6>
    e8d4:	0f 92       	push	r0
    e8d6:	8d b6       	in	r8, 0x3d	; 61
    e8d8:	9e b6       	in	r9, 0x3e	; 62
    e8da:	08 94       	sec
    e8dc:	81 1c       	adc	r8, r1
    e8de:	91 1c       	adc	r9, r1
    e8e0:	88 27       	eor	r24, r24
    e8e2:	77 fd       	sbrc	r23, 7
    e8e4:	80 95       	com	r24
    e8e6:	98 2f       	mov	r25, r24
    e8e8:	0e 94 ee 79 	call	0xf3dc	; 0xf3dc <__floatsisf>
    e8ec:	2b 01       	movw	r4, r22
    e8ee:	3c 01       	movw	r6, r24
    e8f0:	c8 01       	movw	r24, r16
    e8f2:	68 e2       	ldi	r22, 0x28	; 40
    e8f4:	70 e0       	ldi	r23, 0x00	; 0
    e8f6:	0e 94 05 7b 	call	0xf60a	; 0xf60a <__udivmodhi4>
    e8fa:	80 e0       	ldi	r24, 0x00	; 0
    e8fc:	90 e0       	ldi	r25, 0x00	; 0
    e8fe:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    e902:	5b 01       	movw	r10, r22
    e904:	6c 01       	movw	r12, r24
    e906:	f6 94       	lsr	r15
    e908:	e7 94       	ror	r14
    e90a:	f6 94       	lsr	r15
    e90c:	e7 94       	ror	r14
    e90e:	f6 94       	lsr	r15
    e910:	e7 94       	ror	r14
    e912:	b7 01       	movw	r22, r14
    e914:	80 e0       	ldi	r24, 0x00	; 0
    e916:	90 e0       	ldi	r25, 0x00	; 0
    e918:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    e91c:	f4 01       	movw	r30, r8
    e91e:	60 83       	st	Z, r22
    e920:	71 83       	std	Z+1, r23	; 0x01
    e922:	82 83       	std	Z+2, r24	; 0x02
    e924:	93 83       	std	Z+3, r25	; 0x03
    e926:	c3 01       	movw	r24, r6
    e928:	b2 01       	movw	r22, r4
    e92a:	20 e0       	ldi	r18, 0x00	; 0
    e92c:	30 e0       	ldi	r19, 0x00	; 0
    e92e:	a9 01       	movw	r20, r18
    e930:	0f 2e       	mov	r0, r31
    e932:	f0 e0       	ldi	r31, 0x00	; 0
    e934:	ef 2e       	mov	r14, r31
    e936:	f0 e0       	ldi	r31, 0x00	; 0
    e938:	ff 2e       	mov	r15, r31
    e93a:	f4 e3       	ldi	r31, 0x34	; 52
    e93c:	0f 2f       	mov	r16, r31
    e93e:	f3 e4       	ldi	r31, 0x43	; 67
    e940:	1f 2f       	mov	r17, r31
    e942:	f0 2d       	mov	r31, r0
    e944:	0e 94 a0 08 	call	0x1140	; 0x1140 <_Z3mapddddd>
    e948:	0f 90       	pop	r0
    e94a:	0f 90       	pop	r0
    e94c:	0f 90       	pop	r0
    e94e:	0f 90       	pop	r0
        OCR1A=ICR1-vAl;
    e950:	09 90       	ld	r0, Y+
    e952:	d8 81       	ld	r29, Y
    e954:	c0 2d       	mov	r28, r0
  void write(int vAl)           //PIN=servo pin no. on mega,vAl=angle F_CPU for the servo at pin
  {
    switch(pIn)
    {
     case 11:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    e956:	0e 94 bb 79 	call	0xf376	; 0xf376 <__fixsfsi>
        OCR1A=ICR1-vAl;
    e95a:	c6 1b       	sub	r28, r22
    e95c:	d7 0b       	sbc	r29, r23
    e95e:	d0 93 89 00 	sts	0x0089, r29
    e962:	c0 93 88 00 	sts	0x0088, r28
    e966:	32 c3       	rjmp	.+1636   	; 0xefcc <_Z6angle7i+0x1e9e>
        break;
      case 12:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    e968:	c6 e8       	ldi	r28, 0x86	; 134
    e96a:	d0 e0       	ldi	r29, 0x00	; 0
    e96c:	08 81       	ld	r16, Y
    e96e:	19 81       	ldd	r17, Y+1	; 0x01
    e970:	e8 80       	ld	r14, Y
    e972:	f9 80       	ldd	r15, Y+1	; 0x01
    e974:	00 d0       	rcall	.+0      	; 0xe976 <_Z6angle7i+0x1848>
    e976:	0f 92       	push	r0
    e978:	8d b6       	in	r8, 0x3d	; 61
    e97a:	9e b6       	in	r9, 0x3e	; 62
    e97c:	08 94       	sec
    e97e:	81 1c       	adc	r8, r1
    e980:	91 1c       	adc	r9, r1
    e982:	88 27       	eor	r24, r24
    e984:	77 fd       	sbrc	r23, 7
    e986:	80 95       	com	r24
    e988:	98 2f       	mov	r25, r24
    e98a:	0e 94 ee 79 	call	0xf3dc	; 0xf3dc <__floatsisf>
    e98e:	2b 01       	movw	r4, r22
    e990:	3c 01       	movw	r6, r24
    e992:	c8 01       	movw	r24, r16
    e994:	68 e2       	ldi	r22, 0x28	; 40
    e996:	70 e0       	ldi	r23, 0x00	; 0
    e998:	0e 94 05 7b 	call	0xf60a	; 0xf60a <__udivmodhi4>
    e99c:	80 e0       	ldi	r24, 0x00	; 0
    e99e:	90 e0       	ldi	r25, 0x00	; 0
    e9a0:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    e9a4:	5b 01       	movw	r10, r22
    e9a6:	6c 01       	movw	r12, r24
    e9a8:	f6 94       	lsr	r15
    e9aa:	e7 94       	ror	r14
    e9ac:	f6 94       	lsr	r15
    e9ae:	e7 94       	ror	r14
    e9b0:	f6 94       	lsr	r15
    e9b2:	e7 94       	ror	r14
    e9b4:	b7 01       	movw	r22, r14
    e9b6:	80 e0       	ldi	r24, 0x00	; 0
    e9b8:	90 e0       	ldi	r25, 0x00	; 0
    e9ba:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    e9be:	f4 01       	movw	r30, r8
    e9c0:	60 83       	st	Z, r22
    e9c2:	71 83       	std	Z+1, r23	; 0x01
    e9c4:	82 83       	std	Z+2, r24	; 0x02
    e9c6:	93 83       	std	Z+3, r25	; 0x03
    e9c8:	c3 01       	movw	r24, r6
    e9ca:	b2 01       	movw	r22, r4
    e9cc:	20 e0       	ldi	r18, 0x00	; 0
    e9ce:	30 e0       	ldi	r19, 0x00	; 0
    e9d0:	a9 01       	movw	r20, r18
    e9d2:	0f 2e       	mov	r0, r31
    e9d4:	f0 e0       	ldi	r31, 0x00	; 0
    e9d6:	ef 2e       	mov	r14, r31
    e9d8:	f0 e0       	ldi	r31, 0x00	; 0
    e9da:	ff 2e       	mov	r15, r31
    e9dc:	f4 e3       	ldi	r31, 0x34	; 52
    e9de:	0f 2f       	mov	r16, r31
    e9e0:	f3 e4       	ldi	r31, 0x43	; 67
    e9e2:	1f 2f       	mov	r17, r31
    e9e4:	f0 2d       	mov	r31, r0
    e9e6:	0e 94 a0 08 	call	0x1140	; 0x1140 <_Z3mapddddd>
    e9ea:	0f 90       	pop	r0
    e9ec:	0f 90       	pop	r0
    e9ee:	0f 90       	pop	r0
    e9f0:	0f 90       	pop	r0
        OCR1B=ICR1-vAl;
    e9f2:	09 90       	ld	r0, Y+
    e9f4:	d8 81       	ld	r29, Y
    e9f6:	c0 2d       	mov	r28, r0
     case 11:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
        OCR1A=ICR1-vAl;
        break;
      case 12:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    e9f8:	0e 94 bb 79 	call	0xf376	; 0xf376 <__fixsfsi>
        OCR1B=ICR1-vAl;
    e9fc:	c6 1b       	sub	r28, r22
    e9fe:	d7 0b       	sbc	r29, r23
    ea00:	d0 93 8b 00 	sts	0x008B, r29
    ea04:	c0 93 8a 00 	sts	0x008A, r28
    ea08:	e1 c2       	rjmp	.+1474   	; 0xefcc <_Z6angle7i+0x1e9e>
        break;
      case 5:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    ea0a:	e6 e8       	ldi	r30, 0x86	; 134
    ea0c:	f0 e0       	ldi	r31, 0x00	; 0
    ea0e:	c0 81       	ld	r28, Z
    ea10:	d1 81       	ldd	r29, Z+1	; 0x01
    ea12:	80 80       	ld	r8, Z
    ea14:	91 80       	ldd	r9, Z+1	; 0x01
    ea16:	00 d0       	rcall	.+0      	; 0xea18 <_Z6angle7i+0x18ea>
    ea18:	0f 92       	push	r0
    ea1a:	4d b6       	in	r4, 0x3d	; 61
    ea1c:	5e b6       	in	r5, 0x3e	; 62
    ea1e:	08 94       	sec
    ea20:	41 1c       	adc	r4, r1
    ea22:	51 1c       	adc	r5, r1
    ea24:	88 27       	eor	r24, r24
    ea26:	77 fd       	sbrc	r23, 7
    ea28:	80 95       	com	r24
    ea2a:	98 2f       	mov	r25, r24
    ea2c:	0e 94 ee 79 	call	0xf3dc	; 0xf3dc <__floatsisf>
    ea30:	7b 01       	movw	r14, r22
    ea32:	8c 01       	movw	r16, r24
    ea34:	ce 01       	movw	r24, r28
    ea36:	68 e2       	ldi	r22, 0x28	; 40
    ea38:	70 e0       	ldi	r23, 0x00	; 0
    ea3a:	0e 94 05 7b 	call	0xf60a	; 0xf60a <__udivmodhi4>
    ea3e:	80 e0       	ldi	r24, 0x00	; 0
    ea40:	90 e0       	ldi	r25, 0x00	; 0
    ea42:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    ea46:	5b 01       	movw	r10, r22
    ea48:	6c 01       	movw	r12, r24
    ea4a:	96 94       	lsr	r9
    ea4c:	87 94       	ror	r8
    ea4e:	96 94       	lsr	r9
    ea50:	87 94       	ror	r8
    ea52:	96 94       	lsr	r9
    ea54:	87 94       	ror	r8
    ea56:	b4 01       	movw	r22, r8
    ea58:	80 e0       	ldi	r24, 0x00	; 0
    ea5a:	90 e0       	ldi	r25, 0x00	; 0
    ea5c:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    ea60:	f2 01       	movw	r30, r4
    ea62:	60 83       	st	Z, r22
    ea64:	71 83       	std	Z+1, r23	; 0x01
    ea66:	82 83       	std	Z+2, r24	; 0x02
    ea68:	93 83       	std	Z+3, r25	; 0x03
    ea6a:	c8 01       	movw	r24, r16
    ea6c:	b7 01       	movw	r22, r14
    ea6e:	20 e0       	ldi	r18, 0x00	; 0
    ea70:	30 e0       	ldi	r19, 0x00	; 0
    ea72:	a9 01       	movw	r20, r18
    ea74:	0f 2e       	mov	r0, r31
    ea76:	f0 e0       	ldi	r31, 0x00	; 0
    ea78:	ef 2e       	mov	r14, r31
    ea7a:	f0 e0       	ldi	r31, 0x00	; 0
    ea7c:	ff 2e       	mov	r15, r31
    ea7e:	f4 e3       	ldi	r31, 0x34	; 52
    ea80:	0f 2f       	mov	r16, r31
    ea82:	f3 e4       	ldi	r31, 0x43	; 67
    ea84:	1f 2f       	mov	r17, r31
    ea86:	f0 2d       	mov	r31, r0
    ea88:	0e 94 a0 08 	call	0x1140	; 0x1140 <_Z3mapddddd>
    ea8c:	0f 90       	pop	r0
    ea8e:	0f 90       	pop	r0
    ea90:	0f 90       	pop	r0
    ea92:	0f 90       	pop	r0
        OCR3A=ICR3-vAl;
    ea94:	c0 91 96 00 	lds	r28, 0x0096
    ea98:	d0 91 97 00 	lds	r29, 0x0097
      case 12:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
        OCR1B=ICR1-vAl;
        break;
      case 5:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    ea9c:	0e 94 bb 79 	call	0xf376	; 0xf376 <__fixsfsi>
        OCR3A=ICR3-vAl;
    eaa0:	c6 1b       	sub	r28, r22
    eaa2:	d7 0b       	sbc	r29, r23
    eaa4:	d0 93 99 00 	sts	0x0099, r29
    eaa8:	c0 93 98 00 	sts	0x0098, r28
    eaac:	8f c2       	rjmp	.+1310   	; 0xefcc <_Z6angle7i+0x1e9e>
        break;
      case 2:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    eaae:	e6 e8       	ldi	r30, 0x86	; 134
    eab0:	f0 e0       	ldi	r31, 0x00	; 0
    eab2:	c0 81       	ld	r28, Z
    eab4:	d1 81       	ldd	r29, Z+1	; 0x01
    eab6:	80 80       	ld	r8, Z
    eab8:	91 80       	ldd	r9, Z+1	; 0x01
    eaba:	00 d0       	rcall	.+0      	; 0xeabc <_Z6angle7i+0x198e>
    eabc:	0f 92       	push	r0
    eabe:	4d b6       	in	r4, 0x3d	; 61
    eac0:	5e b6       	in	r5, 0x3e	; 62
    eac2:	08 94       	sec
    eac4:	41 1c       	adc	r4, r1
    eac6:	51 1c       	adc	r5, r1
    eac8:	88 27       	eor	r24, r24
    eaca:	77 fd       	sbrc	r23, 7
    eacc:	80 95       	com	r24
    eace:	98 2f       	mov	r25, r24
    ead0:	0e 94 ee 79 	call	0xf3dc	; 0xf3dc <__floatsisf>
    ead4:	7b 01       	movw	r14, r22
    ead6:	8c 01       	movw	r16, r24
    ead8:	ce 01       	movw	r24, r28
    eada:	68 e2       	ldi	r22, 0x28	; 40
    eadc:	70 e0       	ldi	r23, 0x00	; 0
    eade:	0e 94 05 7b 	call	0xf60a	; 0xf60a <__udivmodhi4>
    eae2:	80 e0       	ldi	r24, 0x00	; 0
    eae4:	90 e0       	ldi	r25, 0x00	; 0
    eae6:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    eaea:	5b 01       	movw	r10, r22
    eaec:	6c 01       	movw	r12, r24
    eaee:	96 94       	lsr	r9
    eaf0:	87 94       	ror	r8
    eaf2:	96 94       	lsr	r9
    eaf4:	87 94       	ror	r8
    eaf6:	96 94       	lsr	r9
    eaf8:	87 94       	ror	r8
    eafa:	b4 01       	movw	r22, r8
    eafc:	80 e0       	ldi	r24, 0x00	; 0
    eafe:	90 e0       	ldi	r25, 0x00	; 0
    eb00:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    eb04:	f2 01       	movw	r30, r4
    eb06:	60 83       	st	Z, r22
    eb08:	71 83       	std	Z+1, r23	; 0x01
    eb0a:	82 83       	std	Z+2, r24	; 0x02
    eb0c:	93 83       	std	Z+3, r25	; 0x03
    eb0e:	c8 01       	movw	r24, r16
    eb10:	b7 01       	movw	r22, r14
    eb12:	20 e0       	ldi	r18, 0x00	; 0
    eb14:	30 e0       	ldi	r19, 0x00	; 0
    eb16:	a9 01       	movw	r20, r18
    eb18:	0f 2e       	mov	r0, r31
    eb1a:	f0 e0       	ldi	r31, 0x00	; 0
    eb1c:	ef 2e       	mov	r14, r31
    eb1e:	f0 e0       	ldi	r31, 0x00	; 0
    eb20:	ff 2e       	mov	r15, r31
    eb22:	f4 e3       	ldi	r31, 0x34	; 52
    eb24:	0f 2f       	mov	r16, r31
    eb26:	f3 e4       	ldi	r31, 0x43	; 67
    eb28:	1f 2f       	mov	r17, r31
    eb2a:	f0 2d       	mov	r31, r0
    eb2c:	0e 94 a0 08 	call	0x1140	; 0x1140 <_Z3mapddddd>
    eb30:	0f 90       	pop	r0
    eb32:	0f 90       	pop	r0
    eb34:	0f 90       	pop	r0
    eb36:	0f 90       	pop	r0
        OCR3B=ICR3-vAl;
    eb38:	c0 91 96 00 	lds	r28, 0x0096
    eb3c:	d0 91 97 00 	lds	r29, 0x0097
      case 5:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
        OCR3A=ICR3-vAl;
        break;
      case 2:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    eb40:	0e 94 bb 79 	call	0xf376	; 0xf376 <__fixsfsi>
        OCR3B=ICR3-vAl;
    eb44:	c6 1b       	sub	r28, r22
    eb46:	d7 0b       	sbc	r29, r23
    eb48:	d0 93 9b 00 	sts	0x009B, r29
    eb4c:	c0 93 9a 00 	sts	0x009A, r28
    eb50:	3d c2       	rjmp	.+1146   	; 0xefcc <_Z6angle7i+0x1e9e>
        break;
      case 3:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    eb52:	e6 e8       	ldi	r30, 0x86	; 134
    eb54:	f0 e0       	ldi	r31, 0x00	; 0
    eb56:	c0 81       	ld	r28, Z
    eb58:	d1 81       	ldd	r29, Z+1	; 0x01
    eb5a:	80 80       	ld	r8, Z
    eb5c:	91 80       	ldd	r9, Z+1	; 0x01
    eb5e:	00 d0       	rcall	.+0      	; 0xeb60 <_Z6angle7i+0x1a32>
    eb60:	0f 92       	push	r0
    eb62:	4d b6       	in	r4, 0x3d	; 61
    eb64:	5e b6       	in	r5, 0x3e	; 62
    eb66:	08 94       	sec
    eb68:	41 1c       	adc	r4, r1
    eb6a:	51 1c       	adc	r5, r1
    eb6c:	88 27       	eor	r24, r24
    eb6e:	77 fd       	sbrc	r23, 7
    eb70:	80 95       	com	r24
    eb72:	98 2f       	mov	r25, r24
    eb74:	0e 94 ee 79 	call	0xf3dc	; 0xf3dc <__floatsisf>
    eb78:	7b 01       	movw	r14, r22
    eb7a:	8c 01       	movw	r16, r24
    eb7c:	ce 01       	movw	r24, r28
    eb7e:	68 e2       	ldi	r22, 0x28	; 40
    eb80:	70 e0       	ldi	r23, 0x00	; 0
    eb82:	0e 94 05 7b 	call	0xf60a	; 0xf60a <__udivmodhi4>
    eb86:	80 e0       	ldi	r24, 0x00	; 0
    eb88:	90 e0       	ldi	r25, 0x00	; 0
    eb8a:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    eb8e:	5b 01       	movw	r10, r22
    eb90:	6c 01       	movw	r12, r24
    eb92:	96 94       	lsr	r9
    eb94:	87 94       	ror	r8
    eb96:	96 94       	lsr	r9
    eb98:	87 94       	ror	r8
    eb9a:	96 94       	lsr	r9
    eb9c:	87 94       	ror	r8
    eb9e:	b4 01       	movw	r22, r8
    eba0:	80 e0       	ldi	r24, 0x00	; 0
    eba2:	90 e0       	ldi	r25, 0x00	; 0
    eba4:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    eba8:	f2 01       	movw	r30, r4
    ebaa:	60 83       	st	Z, r22
    ebac:	71 83       	std	Z+1, r23	; 0x01
    ebae:	82 83       	std	Z+2, r24	; 0x02
    ebb0:	93 83       	std	Z+3, r25	; 0x03
    ebb2:	c8 01       	movw	r24, r16
    ebb4:	b7 01       	movw	r22, r14
    ebb6:	20 e0       	ldi	r18, 0x00	; 0
    ebb8:	30 e0       	ldi	r19, 0x00	; 0
    ebba:	a9 01       	movw	r20, r18
    ebbc:	0f 2e       	mov	r0, r31
    ebbe:	f0 e0       	ldi	r31, 0x00	; 0
    ebc0:	ef 2e       	mov	r14, r31
    ebc2:	f0 e0       	ldi	r31, 0x00	; 0
    ebc4:	ff 2e       	mov	r15, r31
    ebc6:	f4 e3       	ldi	r31, 0x34	; 52
    ebc8:	0f 2f       	mov	r16, r31
    ebca:	f3 e4       	ldi	r31, 0x43	; 67
    ebcc:	1f 2f       	mov	r17, r31
    ebce:	f0 2d       	mov	r31, r0
    ebd0:	0e 94 a0 08 	call	0x1140	; 0x1140 <_Z3mapddddd>
    ebd4:	0f 90       	pop	r0
    ebd6:	0f 90       	pop	r0
    ebd8:	0f 90       	pop	r0
    ebda:	0f 90       	pop	r0
        OCR3C=ICR3-vAl;
    ebdc:	c0 91 96 00 	lds	r28, 0x0096
    ebe0:	d0 91 97 00 	lds	r29, 0x0097
      case 2:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
        OCR3B=ICR3-vAl;
        break;
      case 3:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    ebe4:	0e 94 bb 79 	call	0xf376	; 0xf376 <__fixsfsi>
        OCR3C=ICR3-vAl;
    ebe8:	c6 1b       	sub	r28, r22
    ebea:	d7 0b       	sbc	r29, r23
    ebec:	d0 93 9d 00 	sts	0x009D, r29
    ebf0:	c0 93 9c 00 	sts	0x009C, r28
    ebf4:	eb c1       	rjmp	.+982    	; 0xefcc <_Z6angle7i+0x1e9e>
        break;
      case 6:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    ebf6:	e6 e8       	ldi	r30, 0x86	; 134
    ebf8:	f0 e0       	ldi	r31, 0x00	; 0
    ebfa:	c0 81       	ld	r28, Z
    ebfc:	d1 81       	ldd	r29, Z+1	; 0x01
    ebfe:	80 80       	ld	r8, Z
    ec00:	91 80       	ldd	r9, Z+1	; 0x01
    ec02:	00 d0       	rcall	.+0      	; 0xec04 <_Z6angle7i+0x1ad6>
    ec04:	0f 92       	push	r0
    ec06:	4d b6       	in	r4, 0x3d	; 61
    ec08:	5e b6       	in	r5, 0x3e	; 62
    ec0a:	08 94       	sec
    ec0c:	41 1c       	adc	r4, r1
    ec0e:	51 1c       	adc	r5, r1
    ec10:	88 27       	eor	r24, r24
    ec12:	77 fd       	sbrc	r23, 7
    ec14:	80 95       	com	r24
    ec16:	98 2f       	mov	r25, r24
    ec18:	0e 94 ee 79 	call	0xf3dc	; 0xf3dc <__floatsisf>
    ec1c:	7b 01       	movw	r14, r22
    ec1e:	8c 01       	movw	r16, r24
    ec20:	ce 01       	movw	r24, r28
    ec22:	68 e2       	ldi	r22, 0x28	; 40
    ec24:	70 e0       	ldi	r23, 0x00	; 0
    ec26:	0e 94 05 7b 	call	0xf60a	; 0xf60a <__udivmodhi4>
    ec2a:	80 e0       	ldi	r24, 0x00	; 0
    ec2c:	90 e0       	ldi	r25, 0x00	; 0
    ec2e:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    ec32:	5b 01       	movw	r10, r22
    ec34:	6c 01       	movw	r12, r24
    ec36:	96 94       	lsr	r9
    ec38:	87 94       	ror	r8
    ec3a:	96 94       	lsr	r9
    ec3c:	87 94       	ror	r8
    ec3e:	96 94       	lsr	r9
    ec40:	87 94       	ror	r8
    ec42:	b4 01       	movw	r22, r8
    ec44:	80 e0       	ldi	r24, 0x00	; 0
    ec46:	90 e0       	ldi	r25, 0x00	; 0
    ec48:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    ec4c:	f2 01       	movw	r30, r4
    ec4e:	60 83       	st	Z, r22
    ec50:	71 83       	std	Z+1, r23	; 0x01
    ec52:	82 83       	std	Z+2, r24	; 0x02
    ec54:	93 83       	std	Z+3, r25	; 0x03
    ec56:	c8 01       	movw	r24, r16
    ec58:	b7 01       	movw	r22, r14
    ec5a:	20 e0       	ldi	r18, 0x00	; 0
    ec5c:	30 e0       	ldi	r19, 0x00	; 0
    ec5e:	a9 01       	movw	r20, r18
    ec60:	0f 2e       	mov	r0, r31
    ec62:	f0 e0       	ldi	r31, 0x00	; 0
    ec64:	ef 2e       	mov	r14, r31
    ec66:	f0 e0       	ldi	r31, 0x00	; 0
    ec68:	ff 2e       	mov	r15, r31
    ec6a:	f4 e3       	ldi	r31, 0x34	; 52
    ec6c:	0f 2f       	mov	r16, r31
    ec6e:	f3 e4       	ldi	r31, 0x43	; 67
    ec70:	1f 2f       	mov	r17, r31
    ec72:	f0 2d       	mov	r31, r0
    ec74:	0e 94 a0 08 	call	0x1140	; 0x1140 <_Z3mapddddd>
    ec78:	0f 90       	pop	r0
    ec7a:	0f 90       	pop	r0
    ec7c:	0f 90       	pop	r0
    ec7e:	0f 90       	pop	r0
        OCR4A=ICR4-vAl;
    ec80:	c0 91 a6 00 	lds	r28, 0x00A6
    ec84:	d0 91 a7 00 	lds	r29, 0x00A7
      case 3:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
        OCR3C=ICR3-vAl;
        break;
      case 6:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    ec88:	0e 94 bb 79 	call	0xf376	; 0xf376 <__fixsfsi>
        OCR4A=ICR4-vAl;
    ec8c:	c6 1b       	sub	r28, r22
    ec8e:	d7 0b       	sbc	r29, r23
    ec90:	d0 93 a9 00 	sts	0x00A9, r29
    ec94:	c0 93 a8 00 	sts	0x00A8, r28
    ec98:	99 c1       	rjmp	.+818    	; 0xefcc <_Z6angle7i+0x1e9e>
        break;
      case 7:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    ec9a:	e6 e8       	ldi	r30, 0x86	; 134
    ec9c:	f0 e0       	ldi	r31, 0x00	; 0
    ec9e:	c0 81       	ld	r28, Z
    eca0:	d1 81       	ldd	r29, Z+1	; 0x01
    eca2:	80 80       	ld	r8, Z
    eca4:	91 80       	ldd	r9, Z+1	; 0x01
    eca6:	00 d0       	rcall	.+0      	; 0xeca8 <_Z6angle7i+0x1b7a>
    eca8:	0f 92       	push	r0
    ecaa:	4d b6       	in	r4, 0x3d	; 61
    ecac:	5e b6       	in	r5, 0x3e	; 62
    ecae:	08 94       	sec
    ecb0:	41 1c       	adc	r4, r1
    ecb2:	51 1c       	adc	r5, r1
    ecb4:	88 27       	eor	r24, r24
    ecb6:	77 fd       	sbrc	r23, 7
    ecb8:	80 95       	com	r24
    ecba:	98 2f       	mov	r25, r24
    ecbc:	0e 94 ee 79 	call	0xf3dc	; 0xf3dc <__floatsisf>
    ecc0:	7b 01       	movw	r14, r22
    ecc2:	8c 01       	movw	r16, r24
    ecc4:	ce 01       	movw	r24, r28
    ecc6:	68 e2       	ldi	r22, 0x28	; 40
    ecc8:	70 e0       	ldi	r23, 0x00	; 0
    ecca:	0e 94 05 7b 	call	0xf60a	; 0xf60a <__udivmodhi4>
    ecce:	80 e0       	ldi	r24, 0x00	; 0
    ecd0:	90 e0       	ldi	r25, 0x00	; 0
    ecd2:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    ecd6:	5b 01       	movw	r10, r22
    ecd8:	6c 01       	movw	r12, r24
    ecda:	96 94       	lsr	r9
    ecdc:	87 94       	ror	r8
    ecde:	96 94       	lsr	r9
    ece0:	87 94       	ror	r8
    ece2:	96 94       	lsr	r9
    ece4:	87 94       	ror	r8
    ece6:	b4 01       	movw	r22, r8
    ece8:	80 e0       	ldi	r24, 0x00	; 0
    ecea:	90 e0       	ldi	r25, 0x00	; 0
    ecec:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    ecf0:	f2 01       	movw	r30, r4
    ecf2:	60 83       	st	Z, r22
    ecf4:	71 83       	std	Z+1, r23	; 0x01
    ecf6:	82 83       	std	Z+2, r24	; 0x02
    ecf8:	93 83       	std	Z+3, r25	; 0x03
    ecfa:	c8 01       	movw	r24, r16
    ecfc:	b7 01       	movw	r22, r14
    ecfe:	20 e0       	ldi	r18, 0x00	; 0
    ed00:	30 e0       	ldi	r19, 0x00	; 0
    ed02:	a9 01       	movw	r20, r18
    ed04:	0f 2e       	mov	r0, r31
    ed06:	f0 e0       	ldi	r31, 0x00	; 0
    ed08:	ef 2e       	mov	r14, r31
    ed0a:	f0 e0       	ldi	r31, 0x00	; 0
    ed0c:	ff 2e       	mov	r15, r31
    ed0e:	f4 e3       	ldi	r31, 0x34	; 52
    ed10:	0f 2f       	mov	r16, r31
    ed12:	f3 e4       	ldi	r31, 0x43	; 67
    ed14:	1f 2f       	mov	r17, r31
    ed16:	f0 2d       	mov	r31, r0
    ed18:	0e 94 a0 08 	call	0x1140	; 0x1140 <_Z3mapddddd>
    ed1c:	0f 90       	pop	r0
    ed1e:	0f 90       	pop	r0
    ed20:	0f 90       	pop	r0
    ed22:	0f 90       	pop	r0
        OCR4B=ICR4-vAl;
    ed24:	c0 91 a6 00 	lds	r28, 0x00A6
    ed28:	d0 91 a7 00 	lds	r29, 0x00A7
      case 6:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
        OCR4A=ICR4-vAl;
        break;
      case 7:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    ed2c:	0e 94 bb 79 	call	0xf376	; 0xf376 <__fixsfsi>
        OCR4B=ICR4-vAl;
    ed30:	c6 1b       	sub	r28, r22
    ed32:	d7 0b       	sbc	r29, r23
    ed34:	d0 93 ab 00 	sts	0x00AB, r29
    ed38:	c0 93 aa 00 	sts	0x00AA, r28
    ed3c:	47 c1       	rjmp	.+654    	; 0xefcc <_Z6angle7i+0x1e9e>
        break; 
      case 8:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    ed3e:	e6 e8       	ldi	r30, 0x86	; 134
    ed40:	f0 e0       	ldi	r31, 0x00	; 0
    ed42:	c0 81       	ld	r28, Z
    ed44:	d1 81       	ldd	r29, Z+1	; 0x01
    ed46:	80 80       	ld	r8, Z
    ed48:	91 80       	ldd	r9, Z+1	; 0x01
    ed4a:	00 d0       	rcall	.+0      	; 0xed4c <_Z6angle7i+0x1c1e>
    ed4c:	0f 92       	push	r0
    ed4e:	4d b6       	in	r4, 0x3d	; 61
    ed50:	5e b6       	in	r5, 0x3e	; 62
    ed52:	08 94       	sec
    ed54:	41 1c       	adc	r4, r1
    ed56:	51 1c       	adc	r5, r1
    ed58:	88 27       	eor	r24, r24
    ed5a:	77 fd       	sbrc	r23, 7
    ed5c:	80 95       	com	r24
    ed5e:	98 2f       	mov	r25, r24
    ed60:	0e 94 ee 79 	call	0xf3dc	; 0xf3dc <__floatsisf>
    ed64:	7b 01       	movw	r14, r22
    ed66:	8c 01       	movw	r16, r24
    ed68:	ce 01       	movw	r24, r28
    ed6a:	68 e2       	ldi	r22, 0x28	; 40
    ed6c:	70 e0       	ldi	r23, 0x00	; 0
    ed6e:	0e 94 05 7b 	call	0xf60a	; 0xf60a <__udivmodhi4>
    ed72:	80 e0       	ldi	r24, 0x00	; 0
    ed74:	90 e0       	ldi	r25, 0x00	; 0
    ed76:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    ed7a:	5b 01       	movw	r10, r22
    ed7c:	6c 01       	movw	r12, r24
    ed7e:	96 94       	lsr	r9
    ed80:	87 94       	ror	r8
    ed82:	96 94       	lsr	r9
    ed84:	87 94       	ror	r8
    ed86:	96 94       	lsr	r9
    ed88:	87 94       	ror	r8
    ed8a:	b4 01       	movw	r22, r8
    ed8c:	80 e0       	ldi	r24, 0x00	; 0
    ed8e:	90 e0       	ldi	r25, 0x00	; 0
    ed90:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    ed94:	f2 01       	movw	r30, r4
    ed96:	60 83       	st	Z, r22
    ed98:	71 83       	std	Z+1, r23	; 0x01
    ed9a:	82 83       	std	Z+2, r24	; 0x02
    ed9c:	93 83       	std	Z+3, r25	; 0x03
    ed9e:	c8 01       	movw	r24, r16
    eda0:	b7 01       	movw	r22, r14
    eda2:	20 e0       	ldi	r18, 0x00	; 0
    eda4:	30 e0       	ldi	r19, 0x00	; 0
    eda6:	a9 01       	movw	r20, r18
    eda8:	0f 2e       	mov	r0, r31
    edaa:	f0 e0       	ldi	r31, 0x00	; 0
    edac:	ef 2e       	mov	r14, r31
    edae:	f0 e0       	ldi	r31, 0x00	; 0
    edb0:	ff 2e       	mov	r15, r31
    edb2:	f4 e3       	ldi	r31, 0x34	; 52
    edb4:	0f 2f       	mov	r16, r31
    edb6:	f3 e4       	ldi	r31, 0x43	; 67
    edb8:	1f 2f       	mov	r17, r31
    edba:	f0 2d       	mov	r31, r0
    edbc:	0e 94 a0 08 	call	0x1140	; 0x1140 <_Z3mapddddd>
    edc0:	0f 90       	pop	r0
    edc2:	0f 90       	pop	r0
    edc4:	0f 90       	pop	r0
    edc6:	0f 90       	pop	r0
        OCR4C=ICR4-vAl;
    edc8:	c0 91 a6 00 	lds	r28, 0x00A6
    edcc:	d0 91 a7 00 	lds	r29, 0x00A7
      case 7:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
        OCR4B=ICR4-vAl;
        break; 
      case 8:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    edd0:	0e 94 bb 79 	call	0xf376	; 0xf376 <__fixsfsi>
        OCR4C=ICR4-vAl;
    edd4:	c6 1b       	sub	r28, r22
    edd6:	d7 0b       	sbc	r29, r23
    edd8:	d0 93 ad 00 	sts	0x00AD, r29
    eddc:	c0 93 ac 00 	sts	0x00AC, r28
    ede0:	f5 c0       	rjmp	.+490    	; 0xefcc <_Z6angle7i+0x1e9e>
        break;
      case 46:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    ede2:	e6 e8       	ldi	r30, 0x86	; 134
    ede4:	f0 e0       	ldi	r31, 0x00	; 0
    ede6:	c0 81       	ld	r28, Z
    ede8:	d1 81       	ldd	r29, Z+1	; 0x01
    edea:	80 80       	ld	r8, Z
    edec:	91 80       	ldd	r9, Z+1	; 0x01
    edee:	00 d0       	rcall	.+0      	; 0xedf0 <_Z6angle7i+0x1cc2>
    edf0:	0f 92       	push	r0
    edf2:	4d b6       	in	r4, 0x3d	; 61
    edf4:	5e b6       	in	r5, 0x3e	; 62
    edf6:	08 94       	sec
    edf8:	41 1c       	adc	r4, r1
    edfa:	51 1c       	adc	r5, r1
    edfc:	88 27       	eor	r24, r24
    edfe:	77 fd       	sbrc	r23, 7
    ee00:	80 95       	com	r24
    ee02:	98 2f       	mov	r25, r24
    ee04:	0e 94 ee 79 	call	0xf3dc	; 0xf3dc <__floatsisf>
    ee08:	7b 01       	movw	r14, r22
    ee0a:	8c 01       	movw	r16, r24
    ee0c:	ce 01       	movw	r24, r28
    ee0e:	68 e2       	ldi	r22, 0x28	; 40
    ee10:	70 e0       	ldi	r23, 0x00	; 0
    ee12:	0e 94 05 7b 	call	0xf60a	; 0xf60a <__udivmodhi4>
    ee16:	80 e0       	ldi	r24, 0x00	; 0
    ee18:	90 e0       	ldi	r25, 0x00	; 0
    ee1a:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    ee1e:	5b 01       	movw	r10, r22
    ee20:	6c 01       	movw	r12, r24
    ee22:	96 94       	lsr	r9
    ee24:	87 94       	ror	r8
    ee26:	96 94       	lsr	r9
    ee28:	87 94       	ror	r8
    ee2a:	96 94       	lsr	r9
    ee2c:	87 94       	ror	r8
    ee2e:	b4 01       	movw	r22, r8
    ee30:	80 e0       	ldi	r24, 0x00	; 0
    ee32:	90 e0       	ldi	r25, 0x00	; 0
    ee34:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    ee38:	f2 01       	movw	r30, r4
    ee3a:	60 83       	st	Z, r22
    ee3c:	71 83       	std	Z+1, r23	; 0x01
    ee3e:	82 83       	std	Z+2, r24	; 0x02
    ee40:	93 83       	std	Z+3, r25	; 0x03
    ee42:	c8 01       	movw	r24, r16
    ee44:	b7 01       	movw	r22, r14
    ee46:	20 e0       	ldi	r18, 0x00	; 0
    ee48:	30 e0       	ldi	r19, 0x00	; 0
    ee4a:	a9 01       	movw	r20, r18
    ee4c:	0f 2e       	mov	r0, r31
    ee4e:	f0 e0       	ldi	r31, 0x00	; 0
    ee50:	ef 2e       	mov	r14, r31
    ee52:	f0 e0       	ldi	r31, 0x00	; 0
    ee54:	ff 2e       	mov	r15, r31
    ee56:	f4 e3       	ldi	r31, 0x34	; 52
    ee58:	0f 2f       	mov	r16, r31
    ee5a:	f3 e4       	ldi	r31, 0x43	; 67
    ee5c:	1f 2f       	mov	r17, r31
    ee5e:	f0 2d       	mov	r31, r0
    ee60:	0e 94 a0 08 	call	0x1140	; 0x1140 <_Z3mapddddd>
    ee64:	0f 90       	pop	r0
    ee66:	0f 90       	pop	r0
    ee68:	0f 90       	pop	r0
    ee6a:	0f 90       	pop	r0
        OCR5A=ICR5-vAl;
    ee6c:	c0 91 26 01 	lds	r28, 0x0126
    ee70:	d0 91 27 01 	lds	r29, 0x0127
      case 8:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
        OCR4C=ICR4-vAl;
        break;
      case 46:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    ee74:	0e 94 bb 79 	call	0xf376	; 0xf376 <__fixsfsi>
        OCR5A=ICR5-vAl;
    ee78:	c6 1b       	sub	r28, r22
    ee7a:	d7 0b       	sbc	r29, r23
    ee7c:	d0 93 29 01 	sts	0x0129, r29
    ee80:	c0 93 28 01 	sts	0x0128, r28
    ee84:	a3 c0       	rjmp	.+326    	; 0xefcc <_Z6angle7i+0x1e9e>
        break;
      case 45:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    ee86:	e6 e8       	ldi	r30, 0x86	; 134
    ee88:	f0 e0       	ldi	r31, 0x00	; 0
    ee8a:	c0 81       	ld	r28, Z
    ee8c:	d1 81       	ldd	r29, Z+1	; 0x01
    ee8e:	80 80       	ld	r8, Z
    ee90:	91 80       	ldd	r9, Z+1	; 0x01
    ee92:	00 d0       	rcall	.+0      	; 0xee94 <_Z6angle7i+0x1d66>
    ee94:	0f 92       	push	r0
    ee96:	4d b6       	in	r4, 0x3d	; 61
    ee98:	5e b6       	in	r5, 0x3e	; 62
    ee9a:	08 94       	sec
    ee9c:	41 1c       	adc	r4, r1
    ee9e:	51 1c       	adc	r5, r1
    eea0:	88 27       	eor	r24, r24
    eea2:	77 fd       	sbrc	r23, 7
    eea4:	80 95       	com	r24
    eea6:	98 2f       	mov	r25, r24
    eea8:	0e 94 ee 79 	call	0xf3dc	; 0xf3dc <__floatsisf>
    eeac:	7b 01       	movw	r14, r22
    eeae:	8c 01       	movw	r16, r24
    eeb0:	ce 01       	movw	r24, r28
    eeb2:	68 e2       	ldi	r22, 0x28	; 40
    eeb4:	70 e0       	ldi	r23, 0x00	; 0
    eeb6:	0e 94 05 7b 	call	0xf60a	; 0xf60a <__udivmodhi4>
    eeba:	80 e0       	ldi	r24, 0x00	; 0
    eebc:	90 e0       	ldi	r25, 0x00	; 0
    eebe:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    eec2:	5b 01       	movw	r10, r22
    eec4:	6c 01       	movw	r12, r24
    eec6:	96 94       	lsr	r9
    eec8:	87 94       	ror	r8
    eeca:	96 94       	lsr	r9
    eecc:	87 94       	ror	r8
    eece:	96 94       	lsr	r9
    eed0:	87 94       	ror	r8
    eed2:	b4 01       	movw	r22, r8
    eed4:	80 e0       	ldi	r24, 0x00	; 0
    eed6:	90 e0       	ldi	r25, 0x00	; 0
    eed8:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    eedc:	f2 01       	movw	r30, r4
    eede:	60 83       	st	Z, r22
    eee0:	71 83       	std	Z+1, r23	; 0x01
    eee2:	82 83       	std	Z+2, r24	; 0x02
    eee4:	93 83       	std	Z+3, r25	; 0x03
    eee6:	c8 01       	movw	r24, r16
    eee8:	b7 01       	movw	r22, r14
    eeea:	20 e0       	ldi	r18, 0x00	; 0
    eeec:	30 e0       	ldi	r19, 0x00	; 0
    eeee:	a9 01       	movw	r20, r18
    eef0:	0f 2e       	mov	r0, r31
    eef2:	f0 e0       	ldi	r31, 0x00	; 0
    eef4:	ef 2e       	mov	r14, r31
    eef6:	f0 e0       	ldi	r31, 0x00	; 0
    eef8:	ff 2e       	mov	r15, r31
    eefa:	f4 e3       	ldi	r31, 0x34	; 52
    eefc:	0f 2f       	mov	r16, r31
    eefe:	f3 e4       	ldi	r31, 0x43	; 67
    ef00:	1f 2f       	mov	r17, r31
    ef02:	f0 2d       	mov	r31, r0
    ef04:	0e 94 a0 08 	call	0x1140	; 0x1140 <_Z3mapddddd>
    ef08:	0f 90       	pop	r0
    ef0a:	0f 90       	pop	r0
    ef0c:	0f 90       	pop	r0
    ef0e:	0f 90       	pop	r0
        OCR5B=ICR5-vAl;
    ef10:	c0 91 26 01 	lds	r28, 0x0126
    ef14:	d0 91 27 01 	lds	r29, 0x0127
      case 46:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
        OCR5A=ICR5-vAl;
        break;
      case 45:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    ef18:	0e 94 bb 79 	call	0xf376	; 0xf376 <__fixsfsi>
        OCR5B=ICR5-vAl;
    ef1c:	c6 1b       	sub	r28, r22
    ef1e:	d7 0b       	sbc	r29, r23
    ef20:	d0 93 2b 01 	sts	0x012B, r29
    ef24:	c0 93 2a 01 	sts	0x012A, r28
    ef28:	51 c0       	rjmp	.+162    	; 0xefcc <_Z6angle7i+0x1e9e>
        break;
      case 44:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    ef2a:	e6 e8       	ldi	r30, 0x86	; 134
    ef2c:	f0 e0       	ldi	r31, 0x00	; 0
    ef2e:	c0 81       	ld	r28, Z
    ef30:	d1 81       	ldd	r29, Z+1	; 0x01
    ef32:	80 80       	ld	r8, Z
    ef34:	91 80       	ldd	r9, Z+1	; 0x01
    ef36:	00 d0       	rcall	.+0      	; 0xef38 <_Z6angle7i+0x1e0a>
    ef38:	0f 92       	push	r0
    ef3a:	4d b6       	in	r4, 0x3d	; 61
    ef3c:	5e b6       	in	r5, 0x3e	; 62
    ef3e:	08 94       	sec
    ef40:	41 1c       	adc	r4, r1
    ef42:	51 1c       	adc	r5, r1
    ef44:	88 27       	eor	r24, r24
    ef46:	77 fd       	sbrc	r23, 7
    ef48:	80 95       	com	r24
    ef4a:	98 2f       	mov	r25, r24
    ef4c:	0e 94 ee 79 	call	0xf3dc	; 0xf3dc <__floatsisf>
    ef50:	7b 01       	movw	r14, r22
    ef52:	8c 01       	movw	r16, r24
    ef54:	ce 01       	movw	r24, r28
    ef56:	68 e2       	ldi	r22, 0x28	; 40
    ef58:	70 e0       	ldi	r23, 0x00	; 0
    ef5a:	0e 94 05 7b 	call	0xf60a	; 0xf60a <__udivmodhi4>
    ef5e:	80 e0       	ldi	r24, 0x00	; 0
    ef60:	90 e0       	ldi	r25, 0x00	; 0
    ef62:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    ef66:	5b 01       	movw	r10, r22
    ef68:	6c 01       	movw	r12, r24
    ef6a:	96 94       	lsr	r9
    ef6c:	87 94       	ror	r8
    ef6e:	96 94       	lsr	r9
    ef70:	87 94       	ror	r8
    ef72:	96 94       	lsr	r9
    ef74:	87 94       	ror	r8
    ef76:	b4 01       	movw	r22, r8
    ef78:	80 e0       	ldi	r24, 0x00	; 0
    ef7a:	90 e0       	ldi	r25, 0x00	; 0
    ef7c:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__floatunsisf>
    ef80:	f2 01       	movw	r30, r4
    ef82:	60 83       	st	Z, r22
    ef84:	71 83       	std	Z+1, r23	; 0x01
    ef86:	82 83       	std	Z+2, r24	; 0x02
    ef88:	93 83       	std	Z+3, r25	; 0x03
    ef8a:	c8 01       	movw	r24, r16
    ef8c:	b7 01       	movw	r22, r14
    ef8e:	20 e0       	ldi	r18, 0x00	; 0
    ef90:	30 e0       	ldi	r19, 0x00	; 0
    ef92:	a9 01       	movw	r20, r18
    ef94:	0f 2e       	mov	r0, r31
    ef96:	f0 e0       	ldi	r31, 0x00	; 0
    ef98:	ef 2e       	mov	r14, r31
    ef9a:	f0 e0       	ldi	r31, 0x00	; 0
    ef9c:	ff 2e       	mov	r15, r31
    ef9e:	f4 e3       	ldi	r31, 0x34	; 52
    efa0:	0f 2f       	mov	r16, r31
    efa2:	f3 e4       	ldi	r31, 0x43	; 67
    efa4:	1f 2f       	mov	r17, r31
    efa6:	f0 2d       	mov	r31, r0
    efa8:	0e 94 a0 08 	call	0x1140	; 0x1140 <_Z3mapddddd>
    efac:	0f 90       	pop	r0
    efae:	0f 90       	pop	r0
    efb0:	0f 90       	pop	r0
    efb2:	0f 90       	pop	r0
        OCR5C=ICR5-vAl;
    efb4:	c0 91 26 01 	lds	r28, 0x0126
    efb8:	d0 91 27 01 	lds	r29, 0x0127
      case 45:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
        OCR5B=ICR5-vAl;
        break;
      case 44:
        vAl=map(vAl,0,180,ICR1/40,ICR1/8);
    efbc:	0e 94 bb 79 	call	0xf376	; 0xf376 <__fixsfsi>
        OCR5C=ICR5-vAl;
    efc0:	c6 1b       	sub	r28, r22
    efc2:	d7 0b       	sbc	r29, r23
    efc4:	d0 93 2d 01 	sts	0x012D, r29
    efc8:	c0 93 2c 01 	sts	0x012C, r28
		
	}
    efcc:	df 91       	pop	r29
    efce:	cf 91       	pop	r28
    efd0:	1f 91       	pop	r17
    efd2:	0f 91       	pop	r16
    efd4:	ff 90       	pop	r15
    efd6:	ef 90       	pop	r14
    efd8:	df 90       	pop	r13
    efda:	cf 90       	pop	r12
    efdc:	bf 90       	pop	r11
    efde:	af 90       	pop	r10
    efe0:	9f 90       	pop	r9
    efe2:	8f 90       	pop	r8
    efe4:	7f 90       	pop	r7
    efe6:	6f 90       	pop	r6
    efe8:	5f 90       	pop	r5
    efea:	4f 90       	pop	r4
    efec:	3f 90       	pop	r3
    efee:	2f 90       	pop	r2
    eff0:	08 95       	ret

0000eff2 <_Z5setupv>:




void setup(){
    eff2:	cf 93       	push	r28
    eff4:	df 93       	push	r29
        pinMode(echo,0);
    eff6:	83 e0       	ldi	r24, 0x03	; 3
    eff8:	60 e0       	ldi	r22, 0x00	; 0
    effa:	0e 94 95 00 	call	0x12a	; 0x12a <_Z7pinModehh>
 		pinMode(trig,1);
    effe:	86 e1       	ldi	r24, 0x16	; 22
    f000:	61 e0       	ldi	r22, 0x01	; 1
    f002:	0e 94 95 00 	call	0x12a	; 0x12a <_Z7pinModehh>
class Servo{
public:
  uint8_t pIn;
  void attach(uint8_t nUm)       //F_CPU=clock frequency and num=pin no.to be attached
  {
    pIn=nUm;
    f006:	8b e0       	ldi	r24, 0x0B	; 11
    f008:	80 93 d4 02 	sts	0x02D4, r24
    switch(pIn)
    {
     case 11 :                            //OC1A
        DDRB|=(1<<PB5); // PORTB as OUTPUT
    f00c:	25 9a       	sbi	0x04, 5	; 4
        TCCR1A|=(1<<WGM11)|(1<<COM1A1)|(1<<COM1A0);  //SETTING PRESCALAR AS 64 
    f00e:	a0 e8       	ldi	r26, 0x80	; 128
    f010:	b0 e0       	ldi	r27, 0x00	; 0
    f012:	8c 91       	ld	r24, X
    f014:	82 6c       	ori	r24, 0xC2	; 194
    f016:	8c 93       	st	X, r24
        TCCR1B|=(1<<WGM12)|(1<<WGM13)|(1<<CS10)|(1<<CS11); //FAST PWM MODE
    f018:	e1 e8       	ldi	r30, 0x81	; 129
    f01a:	f0 e0       	ldi	r31, 0x00	; 0
    f01c:	80 81       	ld	r24, Z
    f01e:	8b 61       	ori	r24, 0x1B	; 27
    f020:	80 83       	st	Z, r24
        ICR1=312.5*F_CPU-1;                    //generating 20msec pulse (pwm method)
    f022:	c6 e8       	ldi	r28, 0x86	; 134
    f024:	d0 e0       	ldi	r29, 0x00	; 0
    f026:	8f ef       	ldi	r24, 0xFF	; 255
    f028:	9f ef       	ldi	r25, 0xFF	; 255
    f02a:	99 83       	std	Y+1, r25	; 0x01
    f02c:	88 83       	st	Y, r24
class Servo{
public:
  uint8_t pIn;
  void attach(uint8_t nUm)       //F_CPU=clock frequency and num=pin no.to be attached
  {
    pIn=nUm;
    f02e:	2c e0       	ldi	r18, 0x0C	; 12
    f030:	20 93 d5 02 	sts	0x02D5, r18
        TCCR1B|=(1<<WGM12)|(1<<WGM13)|(1<<CS10)|(1<<CS11); //FAST PWM MODE
        ICR1=312.5*F_CPU-1;                    //generating 20msec pulse (pwm method)
        break; 

     case 12 :                            //OC1B
        DDRB|=(1<<PB6); // PORTB as OUTPUT
    f034:	26 9a       	sbi	0x04, 6	; 4
        TCCR1A|=(1<<WGM11)|(1<<COM1B1)|(1<<COM1B0);  //SETTING PRESCALAR AS 64 
    f036:	3c 91       	ld	r19, X
    f038:	32 63       	ori	r19, 0x32	; 50
    f03a:	3c 93       	st	X, r19
        TCCR1B|=(1<<WGM12)|(1<<WGM13)|(1<<CS10)|(1<<CS11); //FAST PWM MODE
    f03c:	30 81       	ld	r19, Z
    f03e:	3b 61       	ori	r19, 0x1B	; 27
    f040:	30 83       	st	Z, r19
        ICR1=312.5*F_CPU-1;                    //generating 20msec pulse (pwm method)
    f042:	99 83       	std	Y+1, r25	; 0x01
    f044:	88 83       	st	Y, r24
class Servo{
public:
  uint8_t pIn;
  void attach(uint8_t nUm)       //F_CPU=clock frequency and num=pin no.to be attached
  {
    pIn=nUm;
    f046:	35 e0       	ldi	r19, 0x05	; 5
    f048:	30 93 d6 02 	sts	0x02D6, r19
        TCCR1B|=(1<<WGM12)|(1<<WGM13)|(1<<CS10)|(1<<CS11); //FAST PWM MODE
        ICR1=312.5*F_CPU-1;                    //generating 20msec pulse (pwm method)
        break;

      case 5 :                            //OC3A
        DDRE|=(1<<PE3); // PORTB as OUTPUT
    f04c:	6b 9a       	sbi	0x0d, 3	; 13
        TCCR3A|=(1<<WGM31)|(1<<COM3A1)|(1<<COM3A0);  //SETTING PRESCALAR AS 64 
    f04e:	a0 e9       	ldi	r26, 0x90	; 144
    f050:	b0 e0       	ldi	r27, 0x00	; 0
    f052:	3c 91       	ld	r19, X
    f054:	32 6c       	ori	r19, 0xC2	; 194
    f056:	3c 93       	st	X, r19
        TCCR3B|=(1<<WGM12)|(1<<WGM13)|(1<<CS30)|(1<<CS31); //FAST PWM MODE
    f058:	e1 e9       	ldi	r30, 0x91	; 145
    f05a:	f0 e0       	ldi	r31, 0x00	; 0
    f05c:	30 81       	ld	r19, Z
    f05e:	3b 61       	ori	r19, 0x1B	; 27
    f060:	30 83       	st	Z, r19
        ICR3=312.5*F_CPU-1;                    //generating 20msec pulse (pwm method)
    f062:	c6 e9       	ldi	r28, 0x96	; 150
    f064:	d0 e0       	ldi	r29, 0x00	; 0
    f066:	99 83       	std	Y+1, r25	; 0x01
    f068:	88 83       	st	Y, r24
class Servo{
public:
  uint8_t pIn;
  void attach(uint8_t nUm)       //F_CPU=clock frequency and num=pin no.to be attached
  {
    pIn=nUm;
    f06a:	33 e0       	ldi	r19, 0x03	; 3
    f06c:	30 93 d7 02 	sts	0x02D7, r19
        TCCR3B|=(1<<WGM32)|(1<<WGM33)|(1<<CS30)|(1<<CS31); //FAST PWM MODE
        ICR3=312.5*F_CPU-1;                    //generating 20msec pulse (pwm method)
        break;
     
      case 3 :                            //OC3C
        DDRE|=(1<<PE5); // PORTB as OUTPUT
    f070:	6d 9a       	sbi	0x0d, 5	; 13
        TCCR3A|=(1<<WGM31)|(1<<COM3C1)|(1<<COM3C0);  //SETTING PRESCALAR AS 64 
    f072:	3c 91       	ld	r19, X
    f074:	3e 60       	ori	r19, 0x0E	; 14
    f076:	3c 93       	st	X, r19
        TCCR3B|=(1<<WGM32)|(1<<WGM33)|(1<<CS30)|(1<<CS31); //FAST PWM MODE
    f078:	30 81       	ld	r19, Z
    f07a:	3b 61       	ori	r19, 0x1B	; 27
    f07c:	30 83       	st	Z, r19
        ICR3=312.5*F_CPU-1;                    //generating 20msec pulse (pwm method)
    f07e:	99 83       	std	Y+1, r25	; 0x01
    f080:	88 83       	st	Y, r24
{
	public:
	void begin( unsigned int BAUD){
		/*Set baud rate */int uBrr;
		uBrr=(F_CPU/16UL/BAUD-1);
		UBRR0H = (unsigned char)(uBrr>>8);
    f082:	10 92 c5 00 	sts	0x00C5, r1
		UBRR0L = (unsigned char)uBrr;
    f086:	20 93 c4 00 	sts	0x00C4, r18
		/*Enable receiver and transmitter */
		UCSR0B = (1<<RXEN0)|(1<<TXEN0);
    f08a:	88 e1       	ldi	r24, 0x18	; 24
    f08c:	80 93 c1 00 	sts	0x00C1, r24
	}
	/* Set frame format: 8data, 2stop bit */
	void write( unsigned char dAta ){
		/* Wait for empty transmit buffer */
		while ((UCSR0A & (1<<UDRE0))==0);
    f090:	e0 ec       	ldi	r30, 0xC0	; 192
    f092:	f0 e0       	ldi	r31, 0x00	; 0
    f094:	80 81       	ld	r24, Z
    f096:	85 ff       	sbrs	r24, 5
    f098:	fd cf       	rjmp	.-6      	; 0xf094 <_Z5setupv+0xa2>
		/* Put data into buffer, sends the data */
		UDR0 = dAta;
    f09a:	81 e0       	ldi	r24, 0x01	; 1
    f09c:	80 93 c6 00 	sts	0x00C6, r24
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
    f0a0:	87 ea       	ldi	r24, 0xA7	; 167
    f0a2:	91 e6       	ldi	r25, 0x61	; 97
    f0a4:	01 97       	sbiw	r24, 0x01	; 1
    f0a6:	f1 f7       	brne	.-4      	; 0xf0a4 <_Z5setupv+0xb2>
    f0a8:	00 c0       	rjmp	.+0      	; 0xf0aa <_Z5setupv+0xb8>
    f0aa:	00 00       	nop
		q.attach(12);
		r.attach(5);
		s.attach(3);
		Serial.begin(4800);
		Serial.write(1);
}
    f0ac:	df 91       	pop	r29
    f0ae:	cf 91       	pop	r28
    f0b0:	08 95       	ret

0000f0b2 <_Z4loopv>:
	   void loop()
	   {
		   
	    
		
		digitalWrite(trig,LOW);
    f0b2:	86 e1       	ldi	r24, 0x16	; 22
    f0b4:	60 e0       	ldi	r22, 0x00	; 0
    f0b6:	0e 94 08 02 	call	0x410	; 0x410 <_Z12digitalWritehh>
		delayMicroseconds(2);
    f0ba:	62 e0       	ldi	r22, 0x02	; 2
    f0bc:	70 e0       	ldi	r23, 0x00	; 0
    f0be:	80 e0       	ldi	r24, 0x00	; 0
    f0c0:	90 e0       	ldi	r25, 0x00	; 0
    f0c2:	0e 94 89 08 	call	0x1112	; 0x1112 <_Z17delayMicrosecondsm>
		digitalWrite(trig,HIGH);
    f0c6:	86 e1       	ldi	r24, 0x16	; 22
    f0c8:	61 e0       	ldi	r22, 0x01	; 1
    f0ca:	0e 94 08 02 	call	0x410	; 0x410 <_Z12digitalWritehh>
		delayMicroseconds(10);
    f0ce:	6a e0       	ldi	r22, 0x0A	; 10
    f0d0:	70 e0       	ldi	r23, 0x00	; 0
    f0d2:	80 e0       	ldi	r24, 0x00	; 0
    f0d4:	90 e0       	ldi	r25, 0x00	; 0
    f0d6:	0e 94 89 08 	call	0x1112	; 0x1112 <_Z17delayMicrosecondsm>
		digitalWrite(trig,LOW);
    f0da:	86 e1       	ldi	r24, 0x16	; 22
    f0dc:	60 e0       	ldi	r22, 0x00	; 0
    f0de:	0e 94 08 02 	call	0x410	; 0x410 <_Z12digitalWritehh>
		UCSR0B = (1<<RXEN0)|(1<<TXEN0);
	}
	/* Set frame format: 8data, 2stop bit */
	void write( unsigned char dAta ){
		/* Wait for empty transmit buffer */
		while ((UCSR0A & (1<<UDRE0))==0);
    f0e2:	e0 ec       	ldi	r30, 0xC0	; 192
    f0e4:	f0 e0       	ldi	r31, 0x00	; 0
    f0e6:	80 81       	ld	r24, Z
    f0e8:	85 ff       	sbrs	r24, 5
    f0ea:	fd cf       	rjmp	.-6      	; 0xf0e6 <_Z4loopv+0x34>
		/* Put data into buffer, sends the data */
		UDR0 = dAta;
    f0ec:	82 e0       	ldi	r24, 0x02	; 2
    f0ee:	80 93 c6 00 	sts	0x00C6, r24
    f0f2:	87 ea       	ldi	r24, 0xA7	; 167
    f0f4:	91 e6       	ldi	r25, 0x61	; 97
    f0f6:	01 97       	sbiw	r24, 0x01	; 1
    f0f8:	f1 f7       	brne	.-4      	; 0xf0f6 <_Z4loopv+0x44>
    f0fa:	00 c0       	rjmp	.+0      	; 0xf0fc <_Z4loopv+0x4a>
    f0fc:	00 00       	nop
		
		//Distance is calculated in cm using US sensor
		int dur,distance;
		//dur=pulseIn(echo,HIGH);
		Serial.write(2);
		distance=0.034*dur/2;
    f0fe:	60 e0       	ldi	r22, 0x00	; 0
    f100:	70 e0       	ldi	r23, 0x00	; 0
    f102:	cb 01       	movw	r24, r22
    f104:	0e 94 ee 79 	call	0xf3dc	; 0xf3dc <__floatsisf>
    f108:	26 e9       	ldi	r18, 0x96	; 150
    f10a:	33 e4       	ldi	r19, 0x43	; 67
    f10c:	4b e0       	ldi	r20, 0x0B	; 11
    f10e:	5d e3       	ldi	r21, 0x3D	; 61
    f110:	0e 94 a2 7a 	call	0xf544	; 0xf544 <__mulsf3>
    f114:	20 e0       	ldi	r18, 0x00	; 0
    f116:	30 e0       	ldi	r19, 0x00	; 0
    f118:	40 e0       	ldi	r20, 0x00	; 0
    f11a:	5f e3       	ldi	r21, 0x3F	; 63
    f11c:	0e 94 a2 7a 	call	0xf544	; 0xf544 <__mulsf3>
    f120:	0e 94 bb 79 	call	0xf376	; 0xf376 <__fixsfsi>
		dist=distance*100; // Distance is converted in mm and stored in 'val' variable
    f124:	24 e6       	ldi	r18, 0x64	; 100
    f126:	30 e0       	ldi	r19, 0x00	; 0
    f128:	62 9f       	mul	r22, r18
    f12a:	c0 01       	movw	r24, r0
    f12c:	63 9f       	mul	r22, r19
    f12e:	90 0d       	add	r25, r0
    f130:	72 9f       	mul	r23, r18
    f132:	90 0d       	add	r25, r0
    f134:	11 24       	eor	r1, r1
    f136:	90 93 d3 02 	sts	0x02D3, r25
    f13a:	80 93 d2 02 	sts	0x02D2, r24
		//According to the distance,we will decide in which quarter of the sine wave we should enter.
		
		if((500<=dist)&&(dist<=1250))
    f13e:	9c 01       	movw	r18, r24
    f140:	24 5f       	subi	r18, 0xF4	; 244
    f142:	31 40       	sbci	r19, 0x01	; 1
    f144:	42 e0       	ldi	r20, 0x02	; 2
    f146:	2f 3e       	cpi	r18, 0xEF	; 239
    f148:	34 07       	cpc	r19, r20
    f14a:	18 f4       	brcc	.+6      	; 0xf152 <_Z4loopv+0xa0>
		{
			angle4(dist);
    f14c:	0e 94 39 3a 	call	0x7472	; 0x7472 <_Z6angle4i>
    f150:	08 95       	ret
			
			
		}
		else if((1250<dist)&&(dist<=2000))
    f152:	9c 01       	movw	r18, r24
    f154:	23 5e       	subi	r18, 0xE3	; 227
    f156:	34 40       	sbci	r19, 0x04	; 4
    f158:	42 e0       	ldi	r20, 0x02	; 2
    f15a:	2e 3e       	cpi	r18, 0xEE	; 238
    f15c:	34 07       	cpc	r19, r20
    f15e:	18 f4       	brcc	.+6      	; 0xf166 <_Z4loopv+0xb4>
		{
			angle1(dist);
    f160:	0e 94 cd 0b 	call	0x179a	; 0x179a <_Z6angle1i>
    f164:	08 95       	ret
		}
		else if((2000<dist)&&(dist<=2750))
    f166:	9c 01       	movw	r18, r24
    f168:	21 5d       	subi	r18, 0xD1	; 209
    f16a:	37 40       	sbci	r19, 0x07	; 7
    f16c:	42 e0       	ldi	r20, 0x02	; 2
    f16e:	2e 3e       	cpi	r18, 0xEE	; 238
    f170:	34 07       	cpc	r19, r20
    f172:	18 f4       	brcc	.+6      	; 0xf17a <_Z4loopv+0xc8>
		{
			angle2(dist);
    f174:	0e 94 4b 1b 	call	0x3696	; 0x3696 <_Z6angle2i>
    f178:	08 95       	ret
		}
		else if((2750<dist)&&(dist<=3500))
    f17a:	9c 01       	movw	r18, r24
    f17c:	2f 5b       	subi	r18, 0xBF	; 191
    f17e:	3a 40       	sbci	r19, 0x0A	; 10
    f180:	42 e0       	ldi	r20, 0x02	; 2
    f182:	2e 3e       	cpi	r18, 0xEE	; 238
    f184:	34 07       	cpc	r19, r20
    f186:	18 f4       	brcc	.+6      	; 0xf18e <_Z4loopv+0xdc>
		{
			angle3(dist);
    f188:	0e 94 c1 2a 	call	0x5582	; 0x5582 <_Z6angle3i>
    f18c:	08 95       	ret
		}
		else if((3500<dist)&&(dist<=4250))
    f18e:	9c 01       	movw	r18, r24
    f190:	2d 5a       	subi	r18, 0xAD	; 173
    f192:	3d 40       	sbci	r19, 0x0D	; 13
    f194:	42 e0       	ldi	r20, 0x02	; 2
    f196:	2e 3e       	cpi	r18, 0xEE	; 238
    f198:	34 07       	cpc	r19, r20
    f19a:	18 f4       	brcc	.+6      	; 0xf1a2 <_Z4loopv+0xf0>
		{
			angle5(dist);
    f19c:	0e 94 a9 49 	call	0x9352	; 0x9352 <_Z6angle5i>
    f1a0:	08 95       	ret
		}
		else if((4250<dist)&&(dist<=5000))
    f1a2:	9c 01       	movw	r18, r24
    f1a4:	2b 59       	subi	r18, 0x9B	; 155
    f1a6:	30 41       	sbci	r19, 0x10	; 16
    f1a8:	42 e0       	ldi	r20, 0x02	; 2
    f1aa:	2e 3e       	cpi	r18, 0xEE	; 238
    f1ac:	34 07       	cpc	r19, r20
    f1ae:	18 f4       	brcc	.+6      	; 0xf1b6 <_Z4loopv+0x104>
		{
			angle6(dist);
    f1b0:	0e 94 19 59 	call	0xb232	; 0xb232 <_Z6angle6i>
    f1b4:	08 95       	ret
			
		}
		else if((5000<dist)&&(dist<=5750))
    f1b6:	9c 01       	movw	r18, r24
    f1b8:	29 58       	subi	r18, 0x89	; 137
    f1ba:	33 41       	sbci	r19, 0x13	; 19
    f1bc:	42 e0       	ldi	r20, 0x02	; 2
    f1be:	2e 3e       	cpi	r18, 0xEE	; 238
    f1c0:	34 07       	cpc	r19, r20
    f1c2:	10 f4       	brcc	.+4      	; 0xf1c8 <_Z4loopv+0x116>
		{
			angle7(dist);
    f1c4:	0e 94 97 68 	call	0xd12e	; 0xd12e <_Z6angle7i>
    f1c8:	08 95       	ret

0000f1ca <main>:
Serial Serial;
Serial1 Serial1;
Serial2 Serial2;
Serial3 Serial3;
int main(){
	setup();
    f1ca:	0e 94 f9 77 	call	0xeff2	; 0xeff2 <_Z5setupv>
	while(1){
		loop();
    f1ce:	0e 94 59 78 	call	0xf0b2	; 0xf0b2 <_Z4loopv>
    f1d2:	fd cf       	rjmp	.-6      	; 0xf1ce <main+0x4>

0000f1d4 <__subsf3>:
    f1d4:	50 58       	subi	r21, 0x80	; 128

0000f1d6 <__addsf3>:
    f1d6:	bb 27       	eor	r27, r27
    f1d8:	aa 27       	eor	r26, r26
    f1da:	0e d0       	rcall	.+28     	; 0xf1f8 <__addsf3x>
    f1dc:	75 c1       	rjmp	.+746    	; 0xf4c8 <__fp_round>
    f1de:	66 d1       	rcall	.+716    	; 0xf4ac <__fp_pscA>
    f1e0:	30 f0       	brcs	.+12     	; 0xf1ee <__addsf3+0x18>
    f1e2:	6b d1       	rcall	.+726    	; 0xf4ba <__fp_pscB>
    f1e4:	20 f0       	brcs	.+8      	; 0xf1ee <__addsf3+0x18>
    f1e6:	31 f4       	brne	.+12     	; 0xf1f4 <__addsf3+0x1e>
    f1e8:	9f 3f       	cpi	r25, 0xFF	; 255
    f1ea:	11 f4       	brne	.+4      	; 0xf1f0 <__addsf3+0x1a>
    f1ec:	1e f4       	brtc	.+6      	; 0xf1f4 <__addsf3+0x1e>
    f1ee:	5b c1       	rjmp	.+694    	; 0xf4a6 <__fp_nan>
    f1f0:	0e f4       	brtc	.+2      	; 0xf1f4 <__addsf3+0x1e>
    f1f2:	e0 95       	com	r30
    f1f4:	e7 fb       	bst	r30, 7
    f1f6:	51 c1       	rjmp	.+674    	; 0xf49a <__fp_inf>

0000f1f8 <__addsf3x>:
    f1f8:	e9 2f       	mov	r30, r25
    f1fa:	77 d1       	rcall	.+750    	; 0xf4ea <__fp_split3>
    f1fc:	80 f3       	brcs	.-32     	; 0xf1de <__addsf3+0x8>
    f1fe:	ba 17       	cp	r27, r26
    f200:	62 07       	cpc	r22, r18
    f202:	73 07       	cpc	r23, r19
    f204:	84 07       	cpc	r24, r20
    f206:	95 07       	cpc	r25, r21
    f208:	18 f0       	brcs	.+6      	; 0xf210 <__addsf3x+0x18>
    f20a:	71 f4       	brne	.+28     	; 0xf228 <__addsf3x+0x30>
    f20c:	9e f5       	brtc	.+102    	; 0xf274 <__addsf3x+0x7c>
    f20e:	8f c1       	rjmp	.+798    	; 0xf52e <__fp_zero>
    f210:	0e f4       	brtc	.+2      	; 0xf214 <__addsf3x+0x1c>
    f212:	e0 95       	com	r30
    f214:	0b 2e       	mov	r0, r27
    f216:	ba 2f       	mov	r27, r26
    f218:	a0 2d       	mov	r26, r0
    f21a:	0b 01       	movw	r0, r22
    f21c:	b9 01       	movw	r22, r18
    f21e:	90 01       	movw	r18, r0
    f220:	0c 01       	movw	r0, r24
    f222:	ca 01       	movw	r24, r20
    f224:	a0 01       	movw	r20, r0
    f226:	11 24       	eor	r1, r1
    f228:	ff 27       	eor	r31, r31
    f22a:	59 1b       	sub	r21, r25
    f22c:	99 f0       	breq	.+38     	; 0xf254 <__addsf3x+0x5c>
    f22e:	59 3f       	cpi	r21, 0xF9	; 249
    f230:	50 f4       	brcc	.+20     	; 0xf246 <__addsf3x+0x4e>
    f232:	50 3e       	cpi	r21, 0xE0	; 224
    f234:	68 f1       	brcs	.+90     	; 0xf290 <__addsf3x+0x98>
    f236:	1a 16       	cp	r1, r26
    f238:	f0 40       	sbci	r31, 0x00	; 0
    f23a:	a2 2f       	mov	r26, r18
    f23c:	23 2f       	mov	r18, r19
    f23e:	34 2f       	mov	r19, r20
    f240:	44 27       	eor	r20, r20
    f242:	58 5f       	subi	r21, 0xF8	; 248
    f244:	f3 cf       	rjmp	.-26     	; 0xf22c <__addsf3x+0x34>
    f246:	46 95       	lsr	r20
    f248:	37 95       	ror	r19
    f24a:	27 95       	ror	r18
    f24c:	a7 95       	ror	r26
    f24e:	f0 40       	sbci	r31, 0x00	; 0
    f250:	53 95       	inc	r21
    f252:	c9 f7       	brne	.-14     	; 0xf246 <__addsf3x+0x4e>
    f254:	7e f4       	brtc	.+30     	; 0xf274 <__addsf3x+0x7c>
    f256:	1f 16       	cp	r1, r31
    f258:	ba 0b       	sbc	r27, r26
    f25a:	62 0b       	sbc	r22, r18
    f25c:	73 0b       	sbc	r23, r19
    f25e:	84 0b       	sbc	r24, r20
    f260:	ba f0       	brmi	.+46     	; 0xf290 <__addsf3x+0x98>
    f262:	91 50       	subi	r25, 0x01	; 1
    f264:	a1 f0       	breq	.+40     	; 0xf28e <__addsf3x+0x96>
    f266:	ff 0f       	add	r31, r31
    f268:	bb 1f       	adc	r27, r27
    f26a:	66 1f       	adc	r22, r22
    f26c:	77 1f       	adc	r23, r23
    f26e:	88 1f       	adc	r24, r24
    f270:	c2 f7       	brpl	.-16     	; 0xf262 <__addsf3x+0x6a>
    f272:	0e c0       	rjmp	.+28     	; 0xf290 <__addsf3x+0x98>
    f274:	ba 0f       	add	r27, r26
    f276:	62 1f       	adc	r22, r18
    f278:	73 1f       	adc	r23, r19
    f27a:	84 1f       	adc	r24, r20
    f27c:	48 f4       	brcc	.+18     	; 0xf290 <__addsf3x+0x98>
    f27e:	87 95       	ror	r24
    f280:	77 95       	ror	r23
    f282:	67 95       	ror	r22
    f284:	b7 95       	ror	r27
    f286:	f7 95       	ror	r31
    f288:	9e 3f       	cpi	r25, 0xFE	; 254
    f28a:	08 f0       	brcs	.+2      	; 0xf28e <__addsf3x+0x96>
    f28c:	b3 cf       	rjmp	.-154    	; 0xf1f4 <__addsf3+0x1e>
    f28e:	93 95       	inc	r25
    f290:	88 0f       	add	r24, r24
    f292:	08 f0       	brcs	.+2      	; 0xf296 <__addsf3x+0x9e>
    f294:	99 27       	eor	r25, r25
    f296:	ee 0f       	add	r30, r30
    f298:	97 95       	ror	r25
    f29a:	87 95       	ror	r24
    f29c:	08 95       	ret

0000f29e <__cmpsf2>:
    f29e:	d9 d0       	rcall	.+434    	; 0xf452 <__fp_cmp>
    f2a0:	08 f4       	brcc	.+2      	; 0xf2a4 <__cmpsf2+0x6>
    f2a2:	81 e0       	ldi	r24, 0x01	; 1
    f2a4:	08 95       	ret

0000f2a6 <__divsf3>:
    f2a6:	0c d0       	rcall	.+24     	; 0xf2c0 <__divsf3x>
    f2a8:	0f c1       	rjmp	.+542    	; 0xf4c8 <__fp_round>
    f2aa:	07 d1       	rcall	.+526    	; 0xf4ba <__fp_pscB>
    f2ac:	40 f0       	brcs	.+16     	; 0xf2be <__divsf3+0x18>
    f2ae:	fe d0       	rcall	.+508    	; 0xf4ac <__fp_pscA>
    f2b0:	30 f0       	brcs	.+12     	; 0xf2be <__divsf3+0x18>
    f2b2:	21 f4       	brne	.+8      	; 0xf2bc <__divsf3+0x16>
    f2b4:	5f 3f       	cpi	r21, 0xFF	; 255
    f2b6:	19 f0       	breq	.+6      	; 0xf2be <__divsf3+0x18>
    f2b8:	f0 c0       	rjmp	.+480    	; 0xf49a <__fp_inf>
    f2ba:	51 11       	cpse	r21, r1
    f2bc:	39 c1       	rjmp	.+626    	; 0xf530 <__fp_szero>
    f2be:	f3 c0       	rjmp	.+486    	; 0xf4a6 <__fp_nan>

0000f2c0 <__divsf3x>:
    f2c0:	14 d1       	rcall	.+552    	; 0xf4ea <__fp_split3>
    f2c2:	98 f3       	brcs	.-26     	; 0xf2aa <__divsf3+0x4>

0000f2c4 <__divsf3_pse>:
    f2c4:	99 23       	and	r25, r25
    f2c6:	c9 f3       	breq	.-14     	; 0xf2ba <__divsf3+0x14>
    f2c8:	55 23       	and	r21, r21
    f2ca:	b1 f3       	breq	.-20     	; 0xf2b8 <__divsf3+0x12>
    f2cc:	95 1b       	sub	r25, r21
    f2ce:	55 0b       	sbc	r21, r21
    f2d0:	bb 27       	eor	r27, r27
    f2d2:	aa 27       	eor	r26, r26
    f2d4:	62 17       	cp	r22, r18
    f2d6:	73 07       	cpc	r23, r19
    f2d8:	84 07       	cpc	r24, r20
    f2da:	38 f0       	brcs	.+14     	; 0xf2ea <__divsf3_pse+0x26>
    f2dc:	9f 5f       	subi	r25, 0xFF	; 255
    f2de:	5f 4f       	sbci	r21, 0xFF	; 255
    f2e0:	22 0f       	add	r18, r18
    f2e2:	33 1f       	adc	r19, r19
    f2e4:	44 1f       	adc	r20, r20
    f2e6:	aa 1f       	adc	r26, r26
    f2e8:	a9 f3       	breq	.-22     	; 0xf2d4 <__divsf3_pse+0x10>
    f2ea:	33 d0       	rcall	.+102    	; 0xf352 <__divsf3_pse+0x8e>
    f2ec:	0e 2e       	mov	r0, r30
    f2ee:	3a f0       	brmi	.+14     	; 0xf2fe <__divsf3_pse+0x3a>
    f2f0:	e0 e8       	ldi	r30, 0x80	; 128
    f2f2:	30 d0       	rcall	.+96     	; 0xf354 <__divsf3_pse+0x90>
    f2f4:	91 50       	subi	r25, 0x01	; 1
    f2f6:	50 40       	sbci	r21, 0x00	; 0
    f2f8:	e6 95       	lsr	r30
    f2fa:	00 1c       	adc	r0, r0
    f2fc:	ca f7       	brpl	.-14     	; 0xf2f0 <__divsf3_pse+0x2c>
    f2fe:	29 d0       	rcall	.+82     	; 0xf352 <__divsf3_pse+0x8e>
    f300:	fe 2f       	mov	r31, r30
    f302:	27 d0       	rcall	.+78     	; 0xf352 <__divsf3_pse+0x8e>
    f304:	66 0f       	add	r22, r22
    f306:	77 1f       	adc	r23, r23
    f308:	88 1f       	adc	r24, r24
    f30a:	bb 1f       	adc	r27, r27
    f30c:	26 17       	cp	r18, r22
    f30e:	37 07       	cpc	r19, r23
    f310:	48 07       	cpc	r20, r24
    f312:	ab 07       	cpc	r26, r27
    f314:	b0 e8       	ldi	r27, 0x80	; 128
    f316:	09 f0       	breq	.+2      	; 0xf31a <__divsf3_pse+0x56>
    f318:	bb 0b       	sbc	r27, r27
    f31a:	80 2d       	mov	r24, r0
    f31c:	bf 01       	movw	r22, r30
    f31e:	ff 27       	eor	r31, r31
    f320:	93 58       	subi	r25, 0x83	; 131
    f322:	5f 4f       	sbci	r21, 0xFF	; 255
    f324:	2a f0       	brmi	.+10     	; 0xf330 <__divsf3_pse+0x6c>
    f326:	9e 3f       	cpi	r25, 0xFE	; 254
    f328:	51 05       	cpc	r21, r1
    f32a:	68 f0       	brcs	.+26     	; 0xf346 <__divsf3_pse+0x82>
    f32c:	b6 c0       	rjmp	.+364    	; 0xf49a <__fp_inf>
    f32e:	00 c1       	rjmp	.+512    	; 0xf530 <__fp_szero>
    f330:	5f 3f       	cpi	r21, 0xFF	; 255
    f332:	ec f3       	brlt	.-6      	; 0xf32e <__divsf3_pse+0x6a>
    f334:	98 3e       	cpi	r25, 0xE8	; 232
    f336:	dc f3       	brlt	.-10     	; 0xf32e <__divsf3_pse+0x6a>
    f338:	86 95       	lsr	r24
    f33a:	77 95       	ror	r23
    f33c:	67 95       	ror	r22
    f33e:	b7 95       	ror	r27
    f340:	f7 95       	ror	r31
    f342:	9f 5f       	subi	r25, 0xFF	; 255
    f344:	c9 f7       	brne	.-14     	; 0xf338 <__divsf3_pse+0x74>
    f346:	88 0f       	add	r24, r24
    f348:	91 1d       	adc	r25, r1
    f34a:	96 95       	lsr	r25
    f34c:	87 95       	ror	r24
    f34e:	97 f9       	bld	r25, 7
    f350:	08 95       	ret
    f352:	e1 e0       	ldi	r30, 0x01	; 1
    f354:	66 0f       	add	r22, r22
    f356:	77 1f       	adc	r23, r23
    f358:	88 1f       	adc	r24, r24
    f35a:	bb 1f       	adc	r27, r27
    f35c:	62 17       	cp	r22, r18
    f35e:	73 07       	cpc	r23, r19
    f360:	84 07       	cpc	r24, r20
    f362:	ba 07       	cpc	r27, r26
    f364:	20 f0       	brcs	.+8      	; 0xf36e <__divsf3_pse+0xaa>
    f366:	62 1b       	sub	r22, r18
    f368:	73 0b       	sbc	r23, r19
    f36a:	84 0b       	sbc	r24, r20
    f36c:	ba 0b       	sbc	r27, r26
    f36e:	ee 1f       	adc	r30, r30
    f370:	88 f7       	brcc	.-30     	; 0xf354 <__divsf3_pse+0x90>
    f372:	e0 95       	com	r30
    f374:	08 95       	ret

0000f376 <__fixsfsi>:
    f376:	04 d0       	rcall	.+8      	; 0xf380 <__fixunssfsi>
    f378:	68 94       	set
    f37a:	b1 11       	cpse	r27, r1
    f37c:	d9 c0       	rjmp	.+434    	; 0xf530 <__fp_szero>
    f37e:	08 95       	ret

0000f380 <__fixunssfsi>:
    f380:	bc d0       	rcall	.+376    	; 0xf4fa <__fp_splitA>
    f382:	88 f0       	brcs	.+34     	; 0xf3a6 <__fixunssfsi+0x26>
    f384:	9f 57       	subi	r25, 0x7F	; 127
    f386:	90 f0       	brcs	.+36     	; 0xf3ac <__fixunssfsi+0x2c>
    f388:	b9 2f       	mov	r27, r25
    f38a:	99 27       	eor	r25, r25
    f38c:	b7 51       	subi	r27, 0x17	; 23
    f38e:	a0 f0       	brcs	.+40     	; 0xf3b8 <__fixunssfsi+0x38>
    f390:	d1 f0       	breq	.+52     	; 0xf3c6 <__fixunssfsi+0x46>
    f392:	66 0f       	add	r22, r22
    f394:	77 1f       	adc	r23, r23
    f396:	88 1f       	adc	r24, r24
    f398:	99 1f       	adc	r25, r25
    f39a:	1a f0       	brmi	.+6      	; 0xf3a2 <__fixunssfsi+0x22>
    f39c:	ba 95       	dec	r27
    f39e:	c9 f7       	brne	.-14     	; 0xf392 <__fixunssfsi+0x12>
    f3a0:	12 c0       	rjmp	.+36     	; 0xf3c6 <__fixunssfsi+0x46>
    f3a2:	b1 30       	cpi	r27, 0x01	; 1
    f3a4:	81 f0       	breq	.+32     	; 0xf3c6 <__fixunssfsi+0x46>
    f3a6:	c3 d0       	rcall	.+390    	; 0xf52e <__fp_zero>
    f3a8:	b1 e0       	ldi	r27, 0x01	; 1
    f3aa:	08 95       	ret
    f3ac:	c0 c0       	rjmp	.+384    	; 0xf52e <__fp_zero>
    f3ae:	67 2f       	mov	r22, r23
    f3b0:	78 2f       	mov	r23, r24
    f3b2:	88 27       	eor	r24, r24
    f3b4:	b8 5f       	subi	r27, 0xF8	; 248
    f3b6:	39 f0       	breq	.+14     	; 0xf3c6 <__fixunssfsi+0x46>
    f3b8:	b9 3f       	cpi	r27, 0xF9	; 249
    f3ba:	cc f3       	brlt	.-14     	; 0xf3ae <__fixunssfsi+0x2e>
    f3bc:	86 95       	lsr	r24
    f3be:	77 95       	ror	r23
    f3c0:	67 95       	ror	r22
    f3c2:	b3 95       	inc	r27
    f3c4:	d9 f7       	brne	.-10     	; 0xf3bc <__fixunssfsi+0x3c>
    f3c6:	3e f4       	brtc	.+14     	; 0xf3d6 <__fixunssfsi+0x56>
    f3c8:	90 95       	com	r25
    f3ca:	80 95       	com	r24
    f3cc:	70 95       	com	r23
    f3ce:	61 95       	neg	r22
    f3d0:	7f 4f       	sbci	r23, 0xFF	; 255
    f3d2:	8f 4f       	sbci	r24, 0xFF	; 255
    f3d4:	9f 4f       	sbci	r25, 0xFF	; 255
    f3d6:	08 95       	ret

0000f3d8 <__floatunsisf>:
    f3d8:	e8 94       	clt
    f3da:	09 c0       	rjmp	.+18     	; 0xf3ee <__floatsisf+0x12>

0000f3dc <__floatsisf>:
    f3dc:	97 fb       	bst	r25, 7
    f3de:	3e f4       	brtc	.+14     	; 0xf3ee <__floatsisf+0x12>
    f3e0:	90 95       	com	r25
    f3e2:	80 95       	com	r24
    f3e4:	70 95       	com	r23
    f3e6:	61 95       	neg	r22
    f3e8:	7f 4f       	sbci	r23, 0xFF	; 255
    f3ea:	8f 4f       	sbci	r24, 0xFF	; 255
    f3ec:	9f 4f       	sbci	r25, 0xFF	; 255
    f3ee:	99 23       	and	r25, r25
    f3f0:	a9 f0       	breq	.+42     	; 0xf41c <__floatsisf+0x40>
    f3f2:	f9 2f       	mov	r31, r25
    f3f4:	96 e9       	ldi	r25, 0x96	; 150
    f3f6:	bb 27       	eor	r27, r27
    f3f8:	93 95       	inc	r25
    f3fa:	f6 95       	lsr	r31
    f3fc:	87 95       	ror	r24
    f3fe:	77 95       	ror	r23
    f400:	67 95       	ror	r22
    f402:	b7 95       	ror	r27
    f404:	f1 11       	cpse	r31, r1
    f406:	f8 cf       	rjmp	.-16     	; 0xf3f8 <__floatsisf+0x1c>
    f408:	fa f4       	brpl	.+62     	; 0xf448 <__floatsisf+0x6c>
    f40a:	bb 0f       	add	r27, r27
    f40c:	11 f4       	brne	.+4      	; 0xf412 <__floatsisf+0x36>
    f40e:	60 ff       	sbrs	r22, 0
    f410:	1b c0       	rjmp	.+54     	; 0xf448 <__floatsisf+0x6c>
    f412:	6f 5f       	subi	r22, 0xFF	; 255
    f414:	7f 4f       	sbci	r23, 0xFF	; 255
    f416:	8f 4f       	sbci	r24, 0xFF	; 255
    f418:	9f 4f       	sbci	r25, 0xFF	; 255
    f41a:	16 c0       	rjmp	.+44     	; 0xf448 <__floatsisf+0x6c>
    f41c:	88 23       	and	r24, r24
    f41e:	11 f0       	breq	.+4      	; 0xf424 <__floatsisf+0x48>
    f420:	96 e9       	ldi	r25, 0x96	; 150
    f422:	11 c0       	rjmp	.+34     	; 0xf446 <__floatsisf+0x6a>
    f424:	77 23       	and	r23, r23
    f426:	21 f0       	breq	.+8      	; 0xf430 <__floatsisf+0x54>
    f428:	9e e8       	ldi	r25, 0x8E	; 142
    f42a:	87 2f       	mov	r24, r23
    f42c:	76 2f       	mov	r23, r22
    f42e:	05 c0       	rjmp	.+10     	; 0xf43a <__floatsisf+0x5e>
    f430:	66 23       	and	r22, r22
    f432:	71 f0       	breq	.+28     	; 0xf450 <__floatsisf+0x74>
    f434:	96 e8       	ldi	r25, 0x86	; 134
    f436:	86 2f       	mov	r24, r22
    f438:	70 e0       	ldi	r23, 0x00	; 0
    f43a:	60 e0       	ldi	r22, 0x00	; 0
    f43c:	2a f0       	brmi	.+10     	; 0xf448 <__floatsisf+0x6c>
    f43e:	9a 95       	dec	r25
    f440:	66 0f       	add	r22, r22
    f442:	77 1f       	adc	r23, r23
    f444:	88 1f       	adc	r24, r24
    f446:	da f7       	brpl	.-10     	; 0xf43e <__floatsisf+0x62>
    f448:	88 0f       	add	r24, r24
    f44a:	96 95       	lsr	r25
    f44c:	87 95       	ror	r24
    f44e:	97 f9       	bld	r25, 7
    f450:	08 95       	ret

0000f452 <__fp_cmp>:
    f452:	99 0f       	add	r25, r25
    f454:	00 08       	sbc	r0, r0
    f456:	55 0f       	add	r21, r21
    f458:	aa 0b       	sbc	r26, r26
    f45a:	e0 e8       	ldi	r30, 0x80	; 128
    f45c:	fe ef       	ldi	r31, 0xFE	; 254
    f45e:	16 16       	cp	r1, r22
    f460:	17 06       	cpc	r1, r23
    f462:	e8 07       	cpc	r30, r24
    f464:	f9 07       	cpc	r31, r25
    f466:	c0 f0       	brcs	.+48     	; 0xf498 <__fp_cmp+0x46>
    f468:	12 16       	cp	r1, r18
    f46a:	13 06       	cpc	r1, r19
    f46c:	e4 07       	cpc	r30, r20
    f46e:	f5 07       	cpc	r31, r21
    f470:	98 f0       	brcs	.+38     	; 0xf498 <__fp_cmp+0x46>
    f472:	62 1b       	sub	r22, r18
    f474:	73 0b       	sbc	r23, r19
    f476:	84 0b       	sbc	r24, r20
    f478:	95 0b       	sbc	r25, r21
    f47a:	39 f4       	brne	.+14     	; 0xf48a <__fp_cmp+0x38>
    f47c:	0a 26       	eor	r0, r26
    f47e:	61 f0       	breq	.+24     	; 0xf498 <__fp_cmp+0x46>
    f480:	23 2b       	or	r18, r19
    f482:	24 2b       	or	r18, r20
    f484:	25 2b       	or	r18, r21
    f486:	21 f4       	brne	.+8      	; 0xf490 <__fp_cmp+0x3e>
    f488:	08 95       	ret
    f48a:	0a 26       	eor	r0, r26
    f48c:	09 f4       	brne	.+2      	; 0xf490 <__fp_cmp+0x3e>
    f48e:	a1 40       	sbci	r26, 0x01	; 1
    f490:	a6 95       	lsr	r26
    f492:	8f ef       	ldi	r24, 0xFF	; 255
    f494:	81 1d       	adc	r24, r1
    f496:	81 1d       	adc	r24, r1
    f498:	08 95       	ret

0000f49a <__fp_inf>:
    f49a:	97 f9       	bld	r25, 7
    f49c:	9f 67       	ori	r25, 0x7F	; 127
    f49e:	80 e8       	ldi	r24, 0x80	; 128
    f4a0:	70 e0       	ldi	r23, 0x00	; 0
    f4a2:	60 e0       	ldi	r22, 0x00	; 0
    f4a4:	08 95       	ret

0000f4a6 <__fp_nan>:
    f4a6:	9f ef       	ldi	r25, 0xFF	; 255
    f4a8:	80 ec       	ldi	r24, 0xC0	; 192
    f4aa:	08 95       	ret

0000f4ac <__fp_pscA>:
    f4ac:	00 24       	eor	r0, r0
    f4ae:	0a 94       	dec	r0
    f4b0:	16 16       	cp	r1, r22
    f4b2:	17 06       	cpc	r1, r23
    f4b4:	18 06       	cpc	r1, r24
    f4b6:	09 06       	cpc	r0, r25
    f4b8:	08 95       	ret

0000f4ba <__fp_pscB>:
    f4ba:	00 24       	eor	r0, r0
    f4bc:	0a 94       	dec	r0
    f4be:	12 16       	cp	r1, r18
    f4c0:	13 06       	cpc	r1, r19
    f4c2:	14 06       	cpc	r1, r20
    f4c4:	05 06       	cpc	r0, r21
    f4c6:	08 95       	ret

0000f4c8 <__fp_round>:
    f4c8:	09 2e       	mov	r0, r25
    f4ca:	03 94       	inc	r0
    f4cc:	00 0c       	add	r0, r0
    f4ce:	11 f4       	brne	.+4      	; 0xf4d4 <__fp_round+0xc>
    f4d0:	88 23       	and	r24, r24
    f4d2:	52 f0       	brmi	.+20     	; 0xf4e8 <__fp_round+0x20>
    f4d4:	bb 0f       	add	r27, r27
    f4d6:	40 f4       	brcc	.+16     	; 0xf4e8 <__fp_round+0x20>
    f4d8:	bf 2b       	or	r27, r31
    f4da:	11 f4       	brne	.+4      	; 0xf4e0 <__fp_round+0x18>
    f4dc:	60 ff       	sbrs	r22, 0
    f4de:	04 c0       	rjmp	.+8      	; 0xf4e8 <__fp_round+0x20>
    f4e0:	6f 5f       	subi	r22, 0xFF	; 255
    f4e2:	7f 4f       	sbci	r23, 0xFF	; 255
    f4e4:	8f 4f       	sbci	r24, 0xFF	; 255
    f4e6:	9f 4f       	sbci	r25, 0xFF	; 255
    f4e8:	08 95       	ret

0000f4ea <__fp_split3>:
    f4ea:	57 fd       	sbrc	r21, 7
    f4ec:	90 58       	subi	r25, 0x80	; 128
    f4ee:	44 0f       	add	r20, r20
    f4f0:	55 1f       	adc	r21, r21
    f4f2:	59 f0       	breq	.+22     	; 0xf50a <__fp_splitA+0x10>
    f4f4:	5f 3f       	cpi	r21, 0xFF	; 255
    f4f6:	71 f0       	breq	.+28     	; 0xf514 <__fp_splitA+0x1a>
    f4f8:	47 95       	ror	r20

0000f4fa <__fp_splitA>:
    f4fa:	88 0f       	add	r24, r24
    f4fc:	97 fb       	bst	r25, 7
    f4fe:	99 1f       	adc	r25, r25
    f500:	61 f0       	breq	.+24     	; 0xf51a <__fp_splitA+0x20>
    f502:	9f 3f       	cpi	r25, 0xFF	; 255
    f504:	79 f0       	breq	.+30     	; 0xf524 <__fp_splitA+0x2a>
    f506:	87 95       	ror	r24
    f508:	08 95       	ret
    f50a:	12 16       	cp	r1, r18
    f50c:	13 06       	cpc	r1, r19
    f50e:	14 06       	cpc	r1, r20
    f510:	55 1f       	adc	r21, r21
    f512:	f2 cf       	rjmp	.-28     	; 0xf4f8 <__fp_split3+0xe>
    f514:	46 95       	lsr	r20
    f516:	f1 df       	rcall	.-30     	; 0xf4fa <__fp_splitA>
    f518:	08 c0       	rjmp	.+16     	; 0xf52a <__fp_splitA+0x30>
    f51a:	16 16       	cp	r1, r22
    f51c:	17 06       	cpc	r1, r23
    f51e:	18 06       	cpc	r1, r24
    f520:	99 1f       	adc	r25, r25
    f522:	f1 cf       	rjmp	.-30     	; 0xf506 <__fp_splitA+0xc>
    f524:	86 95       	lsr	r24
    f526:	71 05       	cpc	r23, r1
    f528:	61 05       	cpc	r22, r1
    f52a:	08 94       	sec
    f52c:	08 95       	ret

0000f52e <__fp_zero>:
    f52e:	e8 94       	clt

0000f530 <__fp_szero>:
    f530:	bb 27       	eor	r27, r27
    f532:	66 27       	eor	r22, r22
    f534:	77 27       	eor	r23, r23
    f536:	cb 01       	movw	r24, r22
    f538:	97 f9       	bld	r25, 7
    f53a:	08 95       	ret

0000f53c <__gesf2>:
    f53c:	8a df       	rcall	.-236    	; 0xf452 <__fp_cmp>
    f53e:	08 f4       	brcc	.+2      	; 0xf542 <__gesf2+0x6>
    f540:	8f ef       	ldi	r24, 0xFF	; 255
    f542:	08 95       	ret

0000f544 <__mulsf3>:
    f544:	0b d0       	rcall	.+22     	; 0xf55c <__mulsf3x>
    f546:	c0 cf       	rjmp	.-128    	; 0xf4c8 <__fp_round>
    f548:	b1 df       	rcall	.-158    	; 0xf4ac <__fp_pscA>
    f54a:	28 f0       	brcs	.+10     	; 0xf556 <__mulsf3+0x12>
    f54c:	b6 df       	rcall	.-148    	; 0xf4ba <__fp_pscB>
    f54e:	18 f0       	brcs	.+6      	; 0xf556 <__mulsf3+0x12>
    f550:	95 23       	and	r25, r21
    f552:	09 f0       	breq	.+2      	; 0xf556 <__mulsf3+0x12>
    f554:	a2 cf       	rjmp	.-188    	; 0xf49a <__fp_inf>
    f556:	a7 cf       	rjmp	.-178    	; 0xf4a6 <__fp_nan>
    f558:	11 24       	eor	r1, r1
    f55a:	ea cf       	rjmp	.-44     	; 0xf530 <__fp_szero>

0000f55c <__mulsf3x>:
    f55c:	c6 df       	rcall	.-116    	; 0xf4ea <__fp_split3>
    f55e:	a0 f3       	brcs	.-24     	; 0xf548 <__mulsf3+0x4>

0000f560 <__mulsf3_pse>:
    f560:	95 9f       	mul	r25, r21
    f562:	d1 f3       	breq	.-12     	; 0xf558 <__mulsf3+0x14>
    f564:	95 0f       	add	r25, r21
    f566:	50 e0       	ldi	r21, 0x00	; 0
    f568:	55 1f       	adc	r21, r21
    f56a:	62 9f       	mul	r22, r18
    f56c:	f0 01       	movw	r30, r0
    f56e:	72 9f       	mul	r23, r18
    f570:	bb 27       	eor	r27, r27
    f572:	f0 0d       	add	r31, r0
    f574:	b1 1d       	adc	r27, r1
    f576:	63 9f       	mul	r22, r19
    f578:	aa 27       	eor	r26, r26
    f57a:	f0 0d       	add	r31, r0
    f57c:	b1 1d       	adc	r27, r1
    f57e:	aa 1f       	adc	r26, r26
    f580:	64 9f       	mul	r22, r20
    f582:	66 27       	eor	r22, r22
    f584:	b0 0d       	add	r27, r0
    f586:	a1 1d       	adc	r26, r1
    f588:	66 1f       	adc	r22, r22
    f58a:	82 9f       	mul	r24, r18
    f58c:	22 27       	eor	r18, r18
    f58e:	b0 0d       	add	r27, r0
    f590:	a1 1d       	adc	r26, r1
    f592:	62 1f       	adc	r22, r18
    f594:	73 9f       	mul	r23, r19
    f596:	b0 0d       	add	r27, r0
    f598:	a1 1d       	adc	r26, r1
    f59a:	62 1f       	adc	r22, r18
    f59c:	83 9f       	mul	r24, r19
    f59e:	a0 0d       	add	r26, r0
    f5a0:	61 1d       	adc	r22, r1
    f5a2:	22 1f       	adc	r18, r18
    f5a4:	74 9f       	mul	r23, r20
    f5a6:	33 27       	eor	r19, r19
    f5a8:	a0 0d       	add	r26, r0
    f5aa:	61 1d       	adc	r22, r1
    f5ac:	23 1f       	adc	r18, r19
    f5ae:	84 9f       	mul	r24, r20
    f5b0:	60 0d       	add	r22, r0
    f5b2:	21 1d       	adc	r18, r1
    f5b4:	82 2f       	mov	r24, r18
    f5b6:	76 2f       	mov	r23, r22
    f5b8:	6a 2f       	mov	r22, r26
    f5ba:	11 24       	eor	r1, r1
    f5bc:	9f 57       	subi	r25, 0x7F	; 127
    f5be:	50 40       	sbci	r21, 0x00	; 0
    f5c0:	8a f0       	brmi	.+34     	; 0xf5e4 <__mulsf3_pse+0x84>
    f5c2:	e1 f0       	breq	.+56     	; 0xf5fc <__mulsf3_pse+0x9c>
    f5c4:	88 23       	and	r24, r24
    f5c6:	4a f0       	brmi	.+18     	; 0xf5da <__mulsf3_pse+0x7a>
    f5c8:	ee 0f       	add	r30, r30
    f5ca:	ff 1f       	adc	r31, r31
    f5cc:	bb 1f       	adc	r27, r27
    f5ce:	66 1f       	adc	r22, r22
    f5d0:	77 1f       	adc	r23, r23
    f5d2:	88 1f       	adc	r24, r24
    f5d4:	91 50       	subi	r25, 0x01	; 1
    f5d6:	50 40       	sbci	r21, 0x00	; 0
    f5d8:	a9 f7       	brne	.-22     	; 0xf5c4 <__mulsf3_pse+0x64>
    f5da:	9e 3f       	cpi	r25, 0xFE	; 254
    f5dc:	51 05       	cpc	r21, r1
    f5de:	70 f0       	brcs	.+28     	; 0xf5fc <__mulsf3_pse+0x9c>
    f5e0:	5c cf       	rjmp	.-328    	; 0xf49a <__fp_inf>
    f5e2:	a6 cf       	rjmp	.-180    	; 0xf530 <__fp_szero>
    f5e4:	5f 3f       	cpi	r21, 0xFF	; 255
    f5e6:	ec f3       	brlt	.-6      	; 0xf5e2 <__mulsf3_pse+0x82>
    f5e8:	98 3e       	cpi	r25, 0xE8	; 232
    f5ea:	dc f3       	brlt	.-10     	; 0xf5e2 <__mulsf3_pse+0x82>
    f5ec:	86 95       	lsr	r24
    f5ee:	77 95       	ror	r23
    f5f0:	67 95       	ror	r22
    f5f2:	b7 95       	ror	r27
    f5f4:	f7 95       	ror	r31
    f5f6:	e7 95       	ror	r30
    f5f8:	9f 5f       	subi	r25, 0xFF	; 255
    f5fa:	c1 f7       	brne	.-16     	; 0xf5ec <__mulsf3_pse+0x8c>
    f5fc:	fe 2b       	or	r31, r30
    f5fe:	88 0f       	add	r24, r24
    f600:	91 1d       	adc	r25, r1
    f602:	96 95       	lsr	r25
    f604:	87 95       	ror	r24
    f606:	97 f9       	bld	r25, 7
    f608:	08 95       	ret

0000f60a <__udivmodhi4>:
    f60a:	aa 1b       	sub	r26, r26
    f60c:	bb 1b       	sub	r27, r27
    f60e:	51 e1       	ldi	r21, 0x11	; 17
    f610:	07 c0       	rjmp	.+14     	; 0xf620 <__udivmodhi4_ep>

0000f612 <__udivmodhi4_loop>:
    f612:	aa 1f       	adc	r26, r26
    f614:	bb 1f       	adc	r27, r27
    f616:	a6 17       	cp	r26, r22
    f618:	b7 07       	cpc	r27, r23
    f61a:	10 f0       	brcs	.+4      	; 0xf620 <__udivmodhi4_ep>
    f61c:	a6 1b       	sub	r26, r22
    f61e:	b7 0b       	sbc	r27, r23

0000f620 <__udivmodhi4_ep>:
    f620:	88 1f       	adc	r24, r24
    f622:	99 1f       	adc	r25, r25
    f624:	5a 95       	dec	r21
    f626:	a9 f7       	brne	.-22     	; 0xf612 <__udivmodhi4_loop>
    f628:	80 95       	com	r24
    f62a:	90 95       	com	r25
    f62c:	bc 01       	movw	r22, r24
    f62e:	cd 01       	movw	r24, r26
    f630:	08 95       	ret

0000f632 <__divmodhi4>:
    f632:	97 fb       	bst	r25, 7
    f634:	09 2e       	mov	r0, r25
    f636:	07 26       	eor	r0, r23
    f638:	0a d0       	rcall	.+20     	; 0xf64e <__divmodhi4_neg1>
    f63a:	77 fd       	sbrc	r23, 7
    f63c:	04 d0       	rcall	.+8      	; 0xf646 <__divmodhi4_neg2>
    f63e:	e5 df       	rcall	.-54     	; 0xf60a <__udivmodhi4>
    f640:	06 d0       	rcall	.+12     	; 0xf64e <__divmodhi4_neg1>
    f642:	00 20       	and	r0, r0
    f644:	1a f4       	brpl	.+6      	; 0xf64c <__divmodhi4_exit>

0000f646 <__divmodhi4_neg2>:
    f646:	70 95       	com	r23
    f648:	61 95       	neg	r22
    f64a:	7f 4f       	sbci	r23, 0xFF	; 255

0000f64c <__divmodhi4_exit>:
    f64c:	08 95       	ret

0000f64e <__divmodhi4_neg1>:
    f64e:	f6 f7       	brtc	.-4      	; 0xf64c <__divmodhi4_exit>
    f650:	90 95       	com	r25
    f652:	81 95       	neg	r24
    f654:	9f 4f       	sbci	r25, 0xFF	; 255
    f656:	08 95       	ret

0000f658 <_exit>:
    f658:	f8 94       	cli

0000f65a <__stop_program>:
    f65a:	ff cf       	rjmp	.-2      	; 0xf65a <__stop_program>
